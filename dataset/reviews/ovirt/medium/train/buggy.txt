public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { TYPE_1 . ValidationResult VAR_1 = METHOD_2 ( storageDomain ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { return VAR_1 ; } TYPE_2 VAR_2 = VAR_3 . METHOD_4 ( ) ; TYPE_2 VAR_4 = storageDomain . METHOD_5 ( ) ; if ( ( ! ( VAR_2 . equals ( VAR_5 ) ) ) || ( ! ( VAR_4 . equals ( VAR_5 ) ) ) ) { return new TYPE_1 . ValidationResult ( VAR_6 ) ; } return VAR_7 ; } 
private void METHOD_1 ( ) { java.lang.Integer VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; java.lang.Integer VAR_2 = METHOD_2 ( ) . METHOD_4 ( ) ; if ( ( VAR_1 != null ) && ( VAR_2 != null ) ) { METHOD_5 ( ( VAR_1 + VAR_2 ) ) ; } else { METHOD_5 ( null ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( obj == null ) { return false ; } if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( byte [ ] VAR_1 ) { if ( TYPE_1 . METHOD_2 ( ) ) { try { TYPE_1 . METHOD_3 ( ( STRING_1 + ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ) ) ; } catch ( TYPE_3 VAR_2 ) { } } final TYPE_4 client = this ; METHOD_5 ( new TYPE_5 < TYPE_6 > ( ) { public TYPE_6 METHOD_6 ( ) throws TYPE_3 { client . METHOD_7 ( ) ; return null ; } } ) ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 VAR_2 ) throws TYPE_3 { TYPE_4 VAR_3 = this . client . METHOD_2 ( ) ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , VAR_2 , new TYPE_6 ( VAR_3 ) , TYPE_7 . METHOD_3 ( VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) ) , this . client ) ; this . VAR_5 . METHOD_6 ( VAR_1 , VAR_4 ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) . METHOD_2 ( ) ) != null ) { return ; } getWindow ( ) . METHOD_3 ( null ) ; TYPE_1 . METHOD_4 ( this , new java.util.ArrayList < java.lang.Object > ( TYPE_2 . METHOD_5 ( new java.lang.Object [ ] { STRING_1 } ) ) ) . METHOD_6 ( ) ; } 
public TYPE_1 . VdcQueryReturnValue runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) ) ; TYPE_1 . VdcQueryReturnValue returnValue = METHOD_5 ( ) . runQuery ( VAR_1 , VAR_2 ) ; returnValue . METHOD_6 ( TYPE_3 . METHOD_7 ( returnValue . getReturnValue ( ) ) ) ; return returnValue ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { assert VAR_1 != null : STRING_1 ; if ( ( ( VAR_2 ) == null ) || ( ! ( VAR_2 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ) ) ) { VAR_2 = VAR_1 ; METHOD_3 ( ) ; } } 
private TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 , TYPE_2 . VdcBllMessages VAR_4 ) { boolean VAR_5 = ( VAR_2 != null ) && ( VAR_3 != null ) ; java.lang.String [ ] VAR_6 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; return TYPE_3 . METHOD_3 ( VAR_4 , VAR_6 ) . when ( ( VAR_5 && ( METHOD_4 ( VAR_2 , VAR_3 ) ) ) ) ; } 
protected boolean METHOD_1 ( ) { java.util.Map < TYPE_1 . DiskImage , org.ovirt.engine.core.compat.Guid > map = new java.util.HashMap < > ( ) ; for ( TYPE_2 parameters : TYPE_3 . getParameters ( ) . METHOD_2 ( ) ) { TYPE_1 . DiskImage diskImage = METHOD_3 ( parameters . METHOD_4 ( ) ) ; map . put ( diskImage , diskImage . METHOD_5 ( ) . get ( 0 ) ) ; } return validate ( TYPE_4 . METHOD_1 ( map , TYPE_3 . METHOD_6 ( ) . METHOD_7 ( ) , TYPE_3 . METHOD_8 ( ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 , null , null ) ; VAR_1 . METHOD_4 ( network . getId ( ) ) ; METHOD_5 ( true , true , false , TYPE_2 . METHOD_6 ( VAR_3 , TYPE_3 . METHOD_7 ( VAR_4 , network . getName ( ) ) ) , network , VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( METHOD_3 ( ) . METHOD_4 ( ) ? ( METHOD_3 ( ) . getEntity ( ) ) == null ? null : ( ( java.lang.String ) ( METHOD_3 ( ) . getEntity ( ) ) ) . METHOD_5 ( ) : METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( VAR_2 ) . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( VAR_1 ) ) . thenReturn ( METHOD_4 ( VAR_5 ) ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; java.lang.String VAR_3 = VAR_1 . getName ( ) ; TYPE_3 . EngineMessage VAR_4 = VAR_5 ; return TYPE_4 . METHOD_2 ( VAR_1 . getName ( ) , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.VDS value ) { if ( ( super . getEntity ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_1 = super . getEntity ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = value . getId ( ) ; if ( VAR_2 . equals ( VAR_3 ) ) { setEntity ( value , false ) ; METHOD_1 ( ) ; return ; } } super . setEntity ( value ) ; } 
private void METHOD_1 ( TYPE_1 . AuditLogType VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) . getId ( ) ) ; java.lang.String VAR_4 = ( VAR_2 == null ) ? TYPE_3 . METHOD_4 ( ) . name ( ) : VAR_2 ; VAR_3 . METHOD_5 ( STRING_1 , VAR_4 ) ; TYPE_4 . METHOD_6 ( VAR_3 , VAR_1 , VAR_5 ) ; } 
private TYPE_1 METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( INT_1 , INT_1 , VAR_3 ) ; if ( ! ( TYPE_3 . METHOD_4 ( VAR_2 , STRING_3 , VAR_1 ) ) ) { TYPE_4 . METHOD_5 ( STRING_4 ) ; } return VAR_1 ; } catch ( TYPE_5 VAR_4 ) { TYPE_4 . METHOD_5 ( ( STRING_5 + ( VAR_4 . METHOD_6 ( ) ) ) ) ; return null ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_1 , TYPE_3 > VAR_2 ) { new TYPE_4 ( VAR_2 , new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( new TYPE_8 ( ) . METHOD_2 ( ) , new TYPE_9 ( new TYPE_10 ( ) , new TYPE_11 ( ) . METHOD_2 ( ) ) . METHOD_2 ( ) ) ) . METHOD_3 ( VAR_1 , getModel ( ) ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > command , TYPE_2 . VdcBllMessages VAR_2 ) { java.util.List < java.lang.String > VAR_3 = command . getReturnValue ( ) . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( STRING_1 , TYPE_5 . METHOD_5 ( VAR_1 ) , VAR_2 . name ( ) , VAR_3 ) , VAR_3 . METHOD_6 ( VAR_2 . name ( ) ) ) ; return VAR_3 ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM VAR_1 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_2 , VAR_4 ) , TYPE_2 . METHOD_5 ( VAR_3 , VAR_5 ) ) ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return null ; } switch ( METHOD_2 ( ) . METHOD_3 ( ) ) { case VM : return METHOD_4 ( ) ; case VAR_1 : return METHOD_5 ( ) ; default : log . METHOD_6 ( STRING_1 , METHOD_2 ( ) . METHOD_3 ( ) ) ; return null ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 . DiskImage disk ) { TYPE_1 parameters = new TYPE_1 ( VAR_1 , disk ) ; parameters . METHOD_2 ( METHOD_3 ( ) ) ; parameters . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; parameters . METHOD_6 ( TYPE_3 . getParameters ( ) ) ; parameters . METHOD_7 ( false ) ; return parameters ; } 
public static boolean METHOD_1 ( TYPE_1 storageDomain ) { boolean VAR_1 = ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_3 ) ) ; boolean VAR_4 = TYPE_2 . METHOD_3 ( storageDomain ) ; return VAR_1 && VAR_4 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 . METHOD_3 ( VAR_2 class , TYPE_3 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , true ) ; } if ( VAR_1 . METHOD_6 ( ) ) { for ( TYPE_4 VAR_3 : VAR_1 . METHOD_7 ( ) ) { VAR_4 . METHOD_1 ( VAR_3 ) ; } } } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . network VAR_1 = dao . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; dao . METHOD_4 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities . network VAR_3 = dao . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_5 ( VAR_3 ) ; TYPE_1 . assertEquals ( VAR_1 , VAR_3 ) ; } 
public final java.lang.Object METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) { if ( VAR_1 == null ) { return null ; } TYPE_1 VAR_4 = METHOD_2 ( VAR_1 ) ; java.lang.Object value = null ; if ( VAR_4 != null ) { if ( VAR_3 ) { METHOD_3 ( VAR_4 ) ; } value = VAR_5 . get ( VAR_2 ) ; } return value ; } 
private void METHOD_1 ( java.lang.String ... VAR_1 ) { for ( java.lang.String VAR_2 : VAR_1 ) { if ( TYPE_1 . isEmpty ( METHOD_2 ( VAR_2 , true ) ) ) { throw new TYPE_2 ( java.lang.String . METHOD_3 ( ( ( VAR_3 ) + STRING_1 ) , VAR_2 ) ) ; } } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( vds , new TYPE_2 ( ) ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_1 ) . METHOD_7 ( TYPE_3 . any ( ) , TYPE_3 . any ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ( ( VAR_1 . size ( ) ) == 2 ) ) ; TYPE_2 . METHOD_4 ( VAR_1 . METHOD_5 ( VAR_3 ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( METHOD_1 ( ) , true ) ; VAR_4 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_4 . METHOD_2 ( STRING_2 , VAR_2 ) ; VAR_4 . METHOD_2 ( STRING_3 , VAR_3 ) ; return VAR_4 . toString ( ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; if ( VAR_2 == null ) { METHOD_2 ( VAR_5 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , TYPE_1 . METHOD_4 ( ) ) ; } VAR_6 . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( 2 ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( VAR_3 class ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_5 class ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_5 . get ( VAR_1 . METHOD_5 ( ) ) ) . thenReturn ( VAR_6 ) ; TYPE_2 . METHOD_6 ( command ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; getModel ( ) . METHOD_4 ( ) . setEntity ( METHOD_5 ( VAR_1 . METHOD_6 ( ) , TYPE_2 . getName ( ) ) ) ; getModel ( ) . METHOD_7 ( ) . setEntity ( METHOD_5 ( VAR_1 . METHOD_6 ( ) , TYPE_3 . getName ( ) ) ) ; METHOD_8 ( ) ; } METHOD_9 ( VAR_1 ) ; } 
public static TYPE_1 map ( java.lang.String VAR_1 , TYPE_1 template ) { TYPE_1 entity = ( template != null ) ? template : new TYPE_1 ( ) ; TYPE_2 VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 ) ; TYPE_3 result = null ; switch ( VAR_2 ) { case VAR_3 : result = VAR_4 ; break ; case VAR_5 : result = VAR_6 ; break ; case VAR_7 : default : result = VAR_8 ; break ; } entity . METHOD_2 ( result ) ; return entity ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( java.util.List < TYPE_1 . DiskImage > VAR_1 ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_2 ( getVm ( ) . METHOD_3 ( ) , VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_3 . getInstance ( ) . METHOD_4 ( getParameters ( ) . getStoragePoolId ( ) , VAR_2 , METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( VAR_2 ) ; return storageDomain ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( cmd . getVm ( ) ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( TYPE_2 . any ( VAR_3 . VM class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( cmd ) . getStoragePoolId ( ) ; METHOD_7 ( VAR_5 ) ; METHOD_8 ( ) ; } 
protected TYPE_1 . StorageDomain METHOD_1 ( TYPE_1 . StorageDomain model , TYPE_2 entity ) { if ( TYPE_3 . equals ( entity . METHOD_2 ( ) ) ) { model . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_1 ) ) ; } else { model . METHOD_3 ( null ) ; } return super . METHOD_1 ( model , entity ) ; } 
protected boolean METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , boolean VAR_2 , TYPE_1 . DiskImage diskImage , TYPE_2 VAR_3 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_4 ) { if ( VAR_1 . METHOD_2 ( VAR_4 ) ) { return false ; } return super . METHOD_1 ( VAR_1 , VAR_2 , diskImage , VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 . METHOD_3 ( ) ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_1 . getValue ( ) ) ; java.util.List < TYPE_3 > result = dao . METHOD_6 ( VAR_1 . getValue ( ) ) ; TYPE_2 . METHOD_5 ( result ) ; TYPE_2 . METHOD_7 ( result . isEmpty ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( VAR_2 , VAR_3 ) ; VAR_1 . put ( VAR_4 , TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ; return new TYPE_1 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) , VAR_5 , TYPE_4 . getName ( ) , STRING_1 , 0 , VAR_1 , true , true , false , STRING_1 , null , null , null ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 < TYPE_3 > > VAR_2 ) { java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList < TYPE_3 > ( VAR_1 . METHOD_2 ( ) ) ; java.util.List < TYPE_3 > VAR_4 = VAR_3 ; for ( TYPE_2 < TYPE_3 > VAR_5 : VAR_2 ) { VAR_4 = TYPE_4 . METHOD_3 ( VAR_4 , VAR_5 ) ; } return ! ( VAR_4 . isEmpty ( ) ) ; } 
private TYPE_1 < ? > METHOD_1 ( ) { TYPE_1 < ? > VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class , org.mockito.Mockito . METHOD_3 ( ) . METHOD_4 ( params ) . METHOD_5 ( VAR_3 ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_6 ( ) ; VAR_1 . METHOD_7 ( ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( new TYPE_1 ( ) { public void METHOD_8 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_2 ( ) ; } } ) ; METHOD_9 ( ) . METHOD_10 ( ) . METHOD_7 ( new TYPE_1 ( ) { public void METHOD_8 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_11 ( new TYPE_4 ( VAR_2 ) ) ; } } ) ; } 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; case VAR_4 : return METHOD_3 ( ) . METHOD_6 ( ) ; case VAR_5 : return METHOD_3 ( ) . METHOD_7 ( ) ; case VAR_6 : return METHOD_3 ( ) . METHOD_8 ( ) ; default : return METHOD_3 ( ) . METHOD_6 ( ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid id = VAR_1 . METHOD_2 ( ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( id ) ) { id = org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( id ) ; } TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( STRING_1 , VAR_2 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) ) ; METHOD_2 ( VAR_5 , VAR_6 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_7 [ 0 ] } , METHOD_4 ( ) , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( false , VAR_2 ) ; TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; cmd . METHOD_7 ( ) ; TYPE_1 . assertEquals ( VAR_3 , cmd . METHOD_8 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( result ) ) ; if ( VAR_1 != null ) { TYPE_1 VAR_2 = new TYPE_1 ( vm . getStoragePoolId ( ) , VAR_3 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_2 , VAR_5 ) ; } else { ( ( TYPE_2 ) ( model ) ) . METHOD_1 ( null ) ; } } 
protected void METHOD_1 ( ) { try { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , METHOD_3 ( ) ) ; if ( VAR_1 . getSucceeded ( ) ) { METHOD_4 ( ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , VAR_3 ) ; TYPE_2 . METHOD_7 ( true ) ; } else { VAR_4 . error ( STRING_1 ) ; METHOD_8 ( VAR_5 ) ; } } catch ( TYPE_3 e ) { VAR_4 . error ( STRING_1 , e ) ; METHOD_8 ( VAR_5 ) ; } } 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = METHOD_4 ( ) ; if ( VAR_2 == null ) { return false ; } TYPE_3 < TYPE_1 > VAR_3 = METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; if ( ! ( VAR_3 . METHOD_7 ( VAR_1 ) ) ) { return false ; } return true ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 ) { int VAR_2 = TYPE_1 . instance ( ) . METHOD_2 ( 2 , INT_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( VAR_2 ) ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { VAR_3 . add ( METHOD_3 ( ( STRING_1 + i ) , VAR_1 . getName ( ) , null , null ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . METHOD_6 ( METHOD_7 ( false ) ) ; METHOD_8 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_9 ( VAR_5 ) ; } } 
private void METHOD_1 ( int VAR_1 , boolean VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 ) ; java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( STRING_1 ) ; TYPE_1 . METHOD_3 ( VAR_4 . METHOD_4 ( VAR_5 ) ) . METHOD_5 ( VAR_3 ) . METHOD_6 ( ) ; METHOD_7 ( VAR_2 ) ; } 
private int METHOD_1 ( TYPE_1 node , TYPE_2 VAR_1 , java.lang.String resource ) { if ( ( ( node . METHOD_2 ( resource , VAR_2 ) ) != null ) && ( ! ( TYPE_3 . isEmpty ( node . METHOD_2 ( resource , VAR_2 ) . VAR_3 ) ) ) ) { return java.lang.Integer . valueOf ( node . METHOD_2 ( resource , VAR_2 ) . VAR_3 ) ; } return - 1 ; } 
public TYPE_1 add ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_2 class , VAR_1 ) ; TYPE_3 parameters = new TYPE_3 ( ) ; parameters . METHOD_2 ( map ( VAR_1 ) ) ; parameters . METHOD_3 ( METHOD_4 ( VAR_3 ) ) ; parameters . METHOD_5 ( VAR_4 ) ; return METHOD_6 ( VAR_5 , parameters , new TYPE_4 ( VAR_1 . getName ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; parameters . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_6 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( command ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . AddVmCommand < TYPE_2 > cmd = METHOD_3 ( METHOD_4 ( 1 , 1 ) ) ; cmd . getParameters ( ) . getVm ( ) . METHOD_5 ( STRING_1 ) ; TYPE_3 . METHOD_6 ( STRING_2 , cmd . METHOD_7 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 result ) { TYPE_4 VAR_2 = TYPE_5 . METHOD_2 ( VAR_1 , result . METHOD_3 ( ) , VAR_3 . Collections < java.lang.String > METHOD_4 ( ) , VAR_4 . METHOD_5 ( ) ) ; TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; VAR_5 . METHOD_8 ( VAR_2 . METHOD_9 ( ) ) ; return VAR_5 ; } 
public void METHOD_1 ( ) { try { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } catch ( TYPE_1 VAR_2 ) { VAR_3 . error ( STRING_1 , VAR_1 . METHOD_6 ( ) , VAR_2 ) ; VAR_3 . METHOD_7 ( STRING_2 , VAR_2 ) ; } finally { METHOD_8 ( ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , java.util.Map < TYPE_2 < TYPE_1 , java.lang.String > , java.lang.Object > VAR_2 ) { TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , version ) ; java.lang.Object value = VAR_4 < java.lang.Object > getValue ( TYPE_3 . valueOf ( VAR_1 . toString ( ) ) , version ) ; VAR_2 . put ( VAR_3 , value ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 0 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; VAR_1 . METHOD_8 ( ) ; TYPE_1 . VM response = resource . get ( ) ; METHOD_9 ( response , 0 ) ; METHOD_10 ( response ) ; } 
private static void METHOD_1 ( TYPE_1 vm , int VAR_1 ) { for ( int VAR_2 = 1 ; VAR_2 <= VAR_1 ; VAR_2 ++ ) { TYPE_2 . METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vm . getId ( ) ) , VAR_3 , VAR_4 , TYPE_2 . METHOD_4 ( ) , true , false , null ) ; } } 
protected TYPE_1 . Disk getEntity ( int VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage entity = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; entity . setId ( VAR_2 [ VAR_1 ] ) ; entity . METHOD_1 ( VAR_3 ) ; entity . METHOD_2 ( VAR_4 ) ; entity . METHOD_3 ( VAR_5 ) ; entity . METHOD_4 ( VAR_6 ) ; entity . METHOD_5 ( false ) ; entity . METHOD_6 ( false ) ; entity . METHOD_7 ( false ) ; entity . METHOD_8 ( VAR_7 ) ; return TYPE_2 . METHOD_9 ( entity ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( METHOD_2 ( ) ) ; boolean VAR_2 = ! ( VAR_1 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; dao . METHOD_8 ( VAR_1 ) ; dao . get ( METHOD_2 ( ) ) ; TYPE_4 . assertEquals ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } 
private static org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( STRING_1 ) ; VAR_2 . METHOD_5 ( 1 ) ; vm . METHOD_6 ( VAR_2 ) ; vm . METHOD_7 ( VAR_1 ) ; vm . METHOD_8 ( false ) ; return vm ; } 
private void METHOD_1 ( ) { boolean VAR_1 = ( VAR_2 ) && ( METHOD_2 ( ) ) ; METHOD_3 ( ) . METHOD_4 ( ( VAR_1 && ( ! ( VAR_3 ) ) ? org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_5 ( ) : null ) ) ; METHOD_3 ( ) . setIsChangable ( ( VAR_1 && ( VAR_3 ) ) ) ; METHOD_6 ( ) . setIsChangable ( VAR_1 ) ; METHOD_7 ( ) . setIsChangable ( VAR_1 ) ; METHOD_8 ( ) . setIsChangable ( VAR_2 ) ; } 
public synchronized void METHOD_1 ( TYPE_1 . StorageDomain storageDomain ) { VAR_1 . METHOD_2 ( STRING_1 , storageDomain . getId ( ) ) ; if ( ! ( VAR_2 . METHOD_3 ( storageDomain . getId ( ) ) ) ) { VAR_2 . put ( storageDomain . getId ( ) , storageDomain ) ; } METHOD_4 ( storageDomain ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_3 , VAR_4 , java.lang.Boolean . FALSE } , true , true ) ) ; TYPE_1 . Disk disk = resource . METHOD_5 ( METHOD_6 ( ) ) ; METHOD_7 ( disk ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_2 ( ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_5 ( TYPE_1 . any ( ) , TYPE_1 . METHOD_6 ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; cmd . METHOD_10 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 0 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , java.lang.Boolean . FALSE } , true , true ) ; METHOD_8 ( VAR_4 . METHOD_9 ( VAR_3 [ 0 ] . toString ( ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { for ( TYPE_1 item : ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) { return item ; } } return null ; } } ; TYPE_2 VAR_2 = new TYPE_2 ( ( STRING_1 + VAR_1 ) , VAR_3 . VDS ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , VAR_2 , aQuery ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 ) ; model . METHOD_2 ( model , VAR_3 , VAR_2 , null ) ; METHOD_3 ( ) ; } 
public boolean validate ( boolean VAR_1 ) { boolean VAR_2 ; if ( METHOD_1 ( ) . getEntity ( ) ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; VAR_2 = METHOD_2 ( ) . METHOD_4 ( ) ; } else { VAR_2 = false ; } boolean VAR_3 = ( ! VAR_1 ) || ( VAR_4 . validate ( ) ) ; return VAR_2 && VAR_3 ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . network network = ( ( org.ovirt.engine.core.common.businessentities . network ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; boolean VAR_1 = ( ( METHOD_3 ( ) ) && ( network != null ) ) && ( ! ( network . getId ( ) . equals ( VAR_2 ) ) ) ; METHOD_4 ( ) . setIsChangable ( VAR_1 ) ; METHOD_5 ( ) . setIsChangable ( VAR_1 ) ; METHOD_6 ( ) . setIsChangable ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( ( ( TYPE_3 . getStoragePoolId ( ) ) == null ? null : TYPE_3 . getStoragePoolId ( ) . getValue ( ) ) , VAR_1 . StoragePool , TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = ( ( java.util.List < TYPE_2 > ) ( VAR_1 ) ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_2 . get ( 0 ) , VAR_2 . get ( ( ( VAR_2 . size ( ) ) - 1 ) ) ) ; } 
public TYPE_1 METHOD_1 ( final org.ovirt.engine.core.compat.Guid id ) { return METHOD_2 ( new TYPE_2 < TYPE_1 > ( ) { public TYPE_1 METHOD_3 ( ) { TYPE_3 VAR_1 = VAR_2 . METHOD_4 ( id . toString ( ) ) ; TYPE_4 VAR_3 = TYPE_4 . METHOD_5 ( VAR_1 . getStatus ( ) ) ; return TYPE_5 . METHOD_6 ( VAR_3 ) ; } } ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter < TYPE_1 > ( ) { public TYPE_1 Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( ( TYPE_1 ) ( source ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; java.util.ArrayList < java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( STRING_1 , ( ( VAR_3 . size ( ) ) == 0 ) ) ; } 
protected void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 . DiskImage disk : METHOD_2 ( ) ) { VAR_1 . add ( TYPE_3 . METHOD_3 ( disk ) ) ; } METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , TYPE_3 { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( new TYPE_4 ( this . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( STRING_1 ) . METHOD_6 ( ) . METHOD_7 ( ) ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_8 ( STRING_2 ) ) . thenReturn ( null ) ; VAR_2 . METHOD_9 ( VAR_3 , VAR_4 ) ; org.mockito.Mockito . METHOD_10 ( VAR_4 ) . METHOD_11 ( VAR_5 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) != null ) && ( ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) instanceof TYPE_3 ) ) { return TYPE_4 . METHOD_4 ( new TYPE_1 ( VAR_1 . Disk , ( ( TYPE_3 ) ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) . METHOD_5 ( ) , TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ) ; } return null ; } 
protected TYPE_1 METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 = new org.ovirt.engine.core.common.businessentities.VmTemplate ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; final TYPE_1 VAR_2 = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) ; return VAR_2 ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS host = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( host == null ) { host = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; } METHOD_3 ( host , null , false , null , true ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( VAR_1 == null ) { throw new TYPE_2 ( ) ; } TYPE_1 VAR_2 = new TYPE_3 ( VAR_3 ) . METHOD_2 ( ) . get ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_2 ; } TYPE_1 VAR_4 = METHOD_3 ( VAR_1 ) ; if ( ( VAR_4 != null ) && ( ! ( METHOD_4 ( VAR_4 . getId ( ) ) ) ) ) { return VAR_4 ; } throw new TYPE_2 ( ( STRING_1 + VAR_1 ) ) ; } 
private boolean METHOD_1 ( java.util.Map < java.lang.Boolean , java.util.List < org.ovirt.engine.core.common.businessentities.VM > > VAR_1 ) { if ( ( VAR_1 . get ( java.lang.Boolean . TRUE ) ) != null ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 . get ( java.lang.Boolean . TRUE ) ) { if ( ( vm . getStatus ( ) ) != ( VAR_2 ) ) { return false ; } } } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , ( ! ( iface . METHOD_5 ( ) ) ) , iface . METHOD_6 ( ) , iface . METHOD_7 ( ) , METHOD_8 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( sender ) ) ; java.lang.String VAR_2 = ( ( TYPE_4 ) ( args ) ) . VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { METHOD_2 ( ) . METHOD_3 ( model . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( null , null ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_2 = METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( VAR_2 ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( VAR_1 ) ) . thenReturn ( VAR_1 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( VAR_3 [ 1 ] ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_6 class ) , TYPE_1 . any ( VAR_7 class ) , TYPE_1 . METHOD_9 ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { final java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; if ( VAR_3 . isEmpty ( ) ) { return true ; } if ( VAR_2 ) { METHOD_3 ( ) . METHOD_1 ( VAR_1 . getId ( ) ) ; } return METHOD_4 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_2 ( true ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( ) ; VAR_2 . METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; VAR_2 . METHOD_3 ( ( ( VAR_6 ) + STRING_2 ) ) ; VAR_7 . METHOD_8 ( VAR_8 ) ; VAR_7 . METHOD_6 ( VAR_5 . METHOD_9 ( ) ) ; } 
private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ) { return false ; } for ( TYPE_1 VAR_2 : VAR_1 ) { for ( TYPE_2 < org.ovirt.engine.core.compat.Guid , TYPE_2 < java.lang.Boolean , java.lang.Integer > > VAR_3 : VAR_2 . METHOD_2 ( ) ) { if ( ( ( VAR_3 . METHOD_3 ( ) ) != null ) && ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { return true ; } } } return false ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms ) { METHOD_2 ( ) ; java.util.List < org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > > VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { VAR_1 . add ( new org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > ( vm ) ) ; } VAR_2 . setItems ( VAR_1 ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( VAR_5 . getModel ( ) , null ) ; } 
public boolean METHOD_1 ( ) { return ( ( ( getEntity ( ) . getStatus ( ) ) == ( VAR_1 ) ) || ( ( getEntity ( ) . getStatus ( ) ) == ( VAR_2 ) ) ) && ( TYPE_1 . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , int VAR_2 , int VAR_3 , java.lang.String VAR_4 ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 , 0 , ( - VAR_2 ) , ( - VAR_3 ) , 0 , 0 ) ; METHOD_4 ( VAR_1 ) . METHOD_5 ( java.lang.Boolean . TRUE ) ; if ( VAR_5 . METHOD_6 ( ) ) { VAR_5 . METHOD_7 ( STRING_1 , VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } 
private void METHOD_1 ( ) { TYPE_1 < TYPE_2 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? METHOD_2 ( ) : new java.util.ArrayList ( ) ; METHOD_3 ( ) . METHOD_4 ( ( ( ( VAR_1 . size ( ) ) == 1 ) && ( ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( VAR_2 ) ) >= 0 ) ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; if ( ( METHOD_3 ( ) ) == ( VAR_1 ) ) { if ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; } METHOD_9 ( ) ; } TYPE_1 . METHOD_10 ( true ) ; } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = ( ( TYPE_3 < TYPE_2 > ) ( event . METHOD_2 ( ) ) ) . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ( ( java.lang.Boolean ) ( VAR_1 . METHOD_5 ( ) . getEntity ( ) ) ) , constants . METHOD_6 ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) || ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) ) || ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_3 ) ) ) { return VAR_2 ; } else { return VAR_3 ; } } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . get ( TYPE_2 . getVm ( ) . getId ( ) ) ; return VAR_1 == null ? true : METHOD_3 ( VAR_2 , java.lang.String . METHOD_4 ( STRING_1 , VAR_1 . getName ( ) ) ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = METHOD_2 ( ) ; return ( ( ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ) && ( validate ( validator . METHOD_7 ( ) ) ) ; } 
private static TYPE_1 METHOD_1 ( java.util.Map < TYPE_1 , TYPE_2 > VAR_1 ) { if ( VAR_1 != null ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { return VAR_3 ; } if ( VAR_1 . METHOD_2 ( VAR_4 ) ) { return VAR_5 ; } } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; METHOD_2 ( VAR_1 ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_5 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_5 VAR_6 ) { METHOD_8 ( VAR_6 , VAR_7 , VAR_1 ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( null ) ; final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . getStoragePoolId ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( TYPE_1 constants ) { this . constants = constants ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( null ) ; TYPE_2 . getModel ( ) . METHOD_5 ( ) . METHOD_6 ( new TYPE_3 < TYPE_4 > ( ) { public void METHOD_7 ( TYPE_5 < ? extends TYPE_4 > VAR_1 , java.lang.Object sender , TYPE_4 args ) { VAR_2 . METHOD_8 ( getModel ( ) . METHOD_9 ( ) . getEntity ( ) ) ; } } ) ; } 
protected boolean validate ( ) { TYPE_1 returnValue = TYPE_2 . METHOD_1 ( VAR_1 , METHOD_2 ( ) , TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) , true ) ; TYPE_3 . getReturnValue ( ) . METHOD_5 ( returnValue . METHOD_6 ( ) ) ; return returnValue . METHOD_7 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . network VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { return ( VAR_1 . METHOD_2 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_2 ( ) ) ) && ( VAR_1 . METHOD_4 ( ) . equals ( getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } return false ; } 
protected java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > METHOD_1 ( ) { java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > VAR_1 = new TYPE_2 < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_1 > ( ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { VAR_1 . put ( getEntity ( i ) , new TYPE_1 ( ) ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { return ( TYPE_2 . getParameters ( ) ) != null ? ! ( TYPE_2 . getParameters ( ) . METHOD_1 ( ) . equals ( TYPE_3 ) ) ? TYPE_2 . getParameters ( ) . METHOD_1 ( ) : super . METHOD_1 ( ) : super . METHOD_1 ( ) ; } 
public void METHOD_1 ( java.util.ArrayList parameters ) { super . METHOD_1 ( parameters ) ; if ( ! ( ( parameters . get ( INT_1 ) ) instanceof java.lang.Boolean ) ) { throw new TYPE_1 ( ) ; } VAR_1 = ( ( java.lang.Boolean ) ( parameters . get ( INT_1 ) ) ) ; if ( ! ( ( parameters . get ( INT_2 ) ) instanceof org.ovirt.engine.core.compat.Guid ) ) { throw new TYPE_1 ( ) ; } VAR_2 = ( ( org.ovirt.engine.core.compat.Guid ) ( parameters . get ( INT_2 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , false ) ; METHOD_3 ( false ) ; METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( ( ( VAR_1 . METHOD_6 ( ) ) == null ) ) ; TYPE_2 . METHOD_5 ( ( ( VAR_1 . METHOD_7 ( ) ) != null ) ) ; VAR_2 . METHOD_8 ( ) ; TYPE_3 . METHOD_9 ( VAR_2 . METHOD_10 ( ) ) ; } 
public synchronized void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; java.util.List < TYPE_2 > list = TYPE_3 . METHOD_5 ( VAR_3 . METHOD_6 ( ) , new TYPE_4 < TYPE_2 > ( ) { public boolean METHOD_7 ( TYPE_2 a ) { return a . METHOD_8 ( ) . equals ( VAR_1 . getId ( ) ) ; } } ) ; for ( TYPE_2 VAR_4 : list ) { VAR_4 . METHOD_9 ( ) ; } } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.DiskImage image : getParameters ( ) . METHOD_2 ( ) ) { if ( getParameters ( ) . METHOD_3 ( ) ) { METHOD_4 ( image ) ; METHOD_5 ( image , METHOD_6 ( ) . METHOD_7 ( ) ) ; } else { VAR_1 . put ( image . getId ( ) , image ) ; } } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; TYPE_2 params = new TYPE_2 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , params , aQuery ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . METHOD_2 ( ( ( java.lang.String ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; final TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . setId ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_4 ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_5 ) ) . thenReturn ( null ) ; return VAR_1 ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage , TYPE_1 VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storage = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storage . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; storage . METHOD_3 ( VAR_1 ) ; diskImage . METHOD_4 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_5 ( storage . getId ( ) ) ) ) ; return storage ; } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { TYPE_1 . ValidationResult result = super . METHOD_1 ( value ) ; if ( ! ( result . METHOD_2 ( ) ) ) { result . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; } return result ; } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; if ( VAR_2 ) { METHOD_5 ( ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; } catch ( TYPE_1 e ) { if ( ! ( TYPE_2 . METHOD_6 ( ) ) ) { VAR_1 . error ( java.lang.String . METHOD_7 ( STRING_3 , e . METHOD_8 ( ) ) , e ) ; } } } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 , java.lang.String VAR_4 , boolean VAR_5 ) { return TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_1 , vmId ) , VAR_6 , VAR_7 , VAR_8 , VAR_2 , VAR_3 , VAR_4 , null , VAR_5 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { if ( ( storageDomain . METHOD_2 ( ) ) == null ) { return false ; } org.ovirt.engine.core.compat.Guid VAR_1 = storageDomain . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = storageDomain . METHOD_2 ( ) . getValue ( ) ; return ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . get ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) != null ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( ) ; VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( source ) ) ; if ( ( VAR_1 . size ( ) ) > 0 ) { return true ; } return false ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 storageDomain = new TYPE_1 ( ) ; storageDomain . setId ( VAR_1 ) ; storageDomain . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( storageDomain ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ) . thenReturn ( storageDomain ) ; return storageDomain ; } 
public java.util.List < TYPE_1 > METHOD_1 ( final java.lang.String VAR_1 ) { return TYPE_2 . METHOD_2 ( METHOD_3 ( ) , new TYPE_3 < TYPE_1 > ( ) { public boolean METHOD_4 ( TYPE_1 a ) { return a . METHOD_5 ( ) . equals ( VAR_1 ) ; } } ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( new TYPE_1 ( VAR_1 , VAR_2 ) ) ; java.util.List < TYPE_2 > VAR_3 = dao . METHOD_3 ( VAR_1 ) ; for ( TYPE_2 VAR_4 : VAR_3 ) { TYPE_3 . METHOD_4 ( VAR_4 . METHOD_5 ( ) , VAR_2 ) ; } TYPE_3 . METHOD_6 ( VAR_3 ) ; TYPE_3 . METHOD_7 ( VAR_3 . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > VAR_1 = METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( null ) ; TYPE_3 . VdcQueryReturnValue returnValue = VAR_1 . METHOD_4 ( ) ; org.ovirt.engine.core.common.businessentities.VM VAR_4 = returnValue . getReturnValue ( ) ; TYPE_4 . METHOD_5 ( STRING_1 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , null ) ; TYPE_1 VAR_2 = METHOD_2 ( STRING_2 , null ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_3 , STRING_4 , STRING_5 , VAR_4 , null , null , TYPE_4 . METHOD_5 ( VAR_1 , VAR_2 ) ) , null ) ) ; METHOD_6 ( VAR_5 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 , null , null ) ; VAR_1 . METHOD_4 ( network . getId ( ) ) ; METHOD_5 ( true , false , false , TYPE_2 . METHOD_6 ( ) , network , VAR_1 ) ; } 
private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( 0 ) ; METHOD_3 ( METHOD_4 ( VAR_4 , VAR_5 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , VAR_1 , VAR_2 ) ) ; try { resource . METHOD_5 ( TYPE_1 . getModel ( 0 , false ) ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_6 ) { METHOD_7 ( VAR_6 , VAR_3 ) ; } } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 < java.util.List < java.lang.String > > METHOD_3 ( VAR_3 , vds . METHOD_4 ( ) . getValue ( ) ) , vds . METHOD_5 ( ) . METHOD_6 ( STRING_1 ) ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { METHOD_7 ( vds , VAR_1 ) ; return true ; } return false ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 status ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain i : VAR_1 ) { if ( ( i . METHOD_2 ( ) ) == status ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 model = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_3 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; model . METHOD_2 ( model , VAR_3 , null ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } 
protected java.lang.Object runQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_1 ( VAR_2 , VAR_3 ) ; TYPE_1 . VdcQueryReturnValue result = VAR_4 . RunQuery ( VAR_1 , VAR_2 ) ; return result . getSucceeded ( ) ? result . getReturnValue ( ) : null ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) { return true ; } if ( ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) ) ) { return false ; } TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return vm . equals ( VAR_2 . vm ) ; } 
protected void METHOD_1 ( ) { final int VAR_1 = VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ; int VAR_4 = TYPE_1 . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) , 0 ) ; java.util.List < TYPE_3 > VAR_5 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( ( VAR_4 * VAR_1 ) , VAR_1 ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( VAR_5 ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , java.util.List < TYPE_1 . DiskImage > VAR_1 ) { for ( TYPE_1 . DiskImage disk : VAR_1 ) { disk . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_3 ( storageDomain . getId ( ) ) ) ) ; } TYPE_3 . METHOD_4 ( storageDomain . METHOD_5 ( ) , VAR_1 . get ( 0 ) ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; int VAR_2 = 0 ; for ( java.lang.String name : object . METHOD_1 ( ) ) { VAR_1 . append ( name ) ; if ( VAR_2 < ( ( object . METHOD_1 ( ) . size ( ) ) - 1 ) ) { VAR_1 . append ( STRING_1 ) ; } } return VAR_1 . toString ( ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat . Version version , java.lang.String VAR_1 , java.lang.String value ) { TYPE_1 VAR_2 = VAR_3 . get ( version ) . get ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_5 . get ( version ) . get ( VAR_1 ) ; return ( ( VAR_2 != null ) && ( VAR_2 . METHOD_2 ( value ) . METHOD_3 ( ) ) ) || ( ( VAR_4 != null ) && ( VAR_4 . METHOD_2 ( value ) . METHOD_3 ( ) ) ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 model = TYPE_2 . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) , getEntity ( ) . getStoragePoolId ( ) , getEntity ( ) . METHOD_4 ( ) , ( ( java.util.ArrayList < TYPE_3 > ) ( METHOD_5 ( ) ) ) , this ) ; METHOD_6 ( model ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : INT_1 ; } } ; TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) , aQuery ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getName ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; assertEquals ( VAR_3 [ 0 ] . toString ( ) , model . METHOD_3 ( ) . getId ( ) ) ; METHOD_4 ( model ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_1 ) . METHOD_2 ( TYPE_1 . any ( VAR_2 . VM class ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( vm ) , false , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( 0 , 1 ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_9 ( model ) ; METHOD_10 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_11 ( VAR_3 ) ; } } 
private void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( new java.util.ArrayList < TYPE_3 > ( ) , vmId ) ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( INT_1 ) ; METHOD_3 ( ) ; METHOD_4 ( 2 ) ; METHOD_5 ( 2 ) ; METHOD_6 ( 2 ) ; METHOD_7 ( METHOD_8 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , VAR_4 [ 1 ] } , true , true ) ) ; TYPE_1 nic = resource . METHOD_9 ( METHOD_10 ( false ) ) ; METHOD_11 ( nic ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( VAR_6 ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_4 ( ) ) . thenReturn ( VAR_2 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) ) { VAR_3 = VAR_4 < java.lang.Integer > METHOD_3 ( VAR_1 . METHOD_2 ( ) , VAR_5 ) ; } else { VAR_3 = VAR_1 . METHOD_4 ( ) ; } VAR_6 = VAR_4 < java.lang.Integer > METHOD_3 ( VAR_1 . METHOD_5 ( ) , VAR_5 ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object model ) { TYPE_2 < ? extends TYPE_3 > VAR_2 = ( ( TYPE_2 < ? extends TYPE_3 > ) ( VAR_1 . METHOD_2 ( ) [ 0 ] ) ) ; try { VAR_1 . METHOD_3 ( model , TYPE_4 . METHOD_1 ( VAR_2 ) ) ; } catch ( java.lang.Exception e ) { } } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( new TYPE_2 ( STRING_1 ) . METHOD_2 ( ) , STRING_2 ) ; TYPE_1 . assertEquals ( new TYPE_2 ( STRING_3 ) . METHOD_2 ( ) , STRING_4 ) ; TYPE_1 . assertEquals ( new TYPE_2 ( STRING_5 ) . METHOD_2 ( ) , STRING_6 ) ; TYPE_1 . assertEquals ( new TYPE_2 ( STRING_7 , STRING_8 , true ) . METHOD_2 ( ) , STRING_9 ) ; TYPE_1 . assertEquals ( new TYPE_2 ( STRING_7 , STRING_10 , false ) . METHOD_2 ( ) , STRING_9 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 [ ] VAR_1 = new TYPE_2 [ 0 ] ; java.lang.Object [ ] args = new java.lang.Object [ 0 ] ; java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ; VAR_5 = METHOD_3 ( ) . METHOD_4 ( this , STRING_1 , VAR_1 , args , VAR_2 , VAR_6 ) ; return this ; } 
private java.util.List < java.lang.String > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_1 . size ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : VAR_1 ) { VAR_2 . add ( vds . getName ( ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 < TYPE_3 > . VAR_1 item = ( ( TYPE_2 < TYPE_3 > . VAR_1 ) ( event . METHOD_2 ( ) ) ) ; this . METHOD_3 ( item . getValue ( ) , true ) ; if ( this . VAR_2 ) { event . METHOD_4 ( ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { TYPE_2 < TYPE_1 > VAR_3 = ( ( VAR_4 ) == null ) ? VAR_5 : TYPE_3 . METHOD_2 ( VAR_4 , VAR_6 ) ; TYPE_4 . METHOD_3 ( VAR_2 , VAR_3 ) ; } return VAR_2 ; } 
public TYPE_1 get ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_2 : VAR_3 . list ( ) . METHOD_1 ( ) ) { if ( VAR_4 . equals ( VAR_2 . getId ( ) ) ) { return VAR_2 ; } VAR_1 . add ( VAR_2 . getId ( ) ) ; } throw new TYPE_2 ( TYPE_3 . status ( VAR_5 ) . METHOD_2 ( ) ) ; } 
protected boolean METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; return ( ( ( TYPE_2 . METHOD_3 ( ) ) != null ) && ( validate ( VAR_1 . METHOD_4 ( TYPE_2 . METHOD_3 ( ) ) ) ) ) && ( validate ( VAR_1 . METHOD_5 ( TYPE_2 . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_2 ( ) ; METHOD_3 ( vm . METHOD_4 ( ) , VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; TYPE_3 . METHOD_6 ( validator . METHOD_7 ( vm , VAR_2 ) , TYPE_4 . METHOD_8 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.VM ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) . METHOD_2 ( ) , aQuery ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 ; if ( VAR_1 instanceof TYPE_2 ) { VAR_2 = ( ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) + STRING_1 ) + ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; } else { VAR_2 = ( ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_5 ( ) ) ; } org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_2 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( returnValue ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( model ) ) ; VAR_2 . METHOD_3 ( ) . setEntity ( VAR_1 ) ; } } , METHOD_4 ( ) ) , getVm ( ) . getId ( ) ) ; } 
protected TYPE_1 . ValidationResult METHOD_1 ( ) { java.lang.Boolean VAR_1 = VAR_2 < java.lang.Boolean > METHOD_2 ( VAR_3 ) ; return ( TYPE_2 . getInstance ( ) . METHOD_3 ( METHOD_4 ( ) ) ) && ( ! VAR_1 ) ? new TYPE_1 . ValidationResult ( VAR_4 ) : VAR_5 ; } 
protected boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) || ( TYPE_1 . METHOD_3 ( ) ) ) { return true ; } return validate ( TYPE_2 . METHOD_1 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . getVdsGroup ( ) . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; java.util.List < TYPE_3 > VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_4 . METHOD_3 ( VAR_2 , org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , STRING_1 , VAR_1 ) ; TYPE_5 . METHOD_5 ( STRING_2 , VAR_2 . isEmpty ( ) ) ; } catch ( java.lang.Exception e ) { e . METHOD_6 ( ) ; } } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . instance ( ) . METHOD_2 ( INT_1 ) ; org.mockito.Mockito.when ( METHOD_3 ( ) . METHOD_4 ( ) ) . thenReturn ( VAR_1 ) ; boolean result = TYPE_1 . instance ( ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( result ) . when ( METHOD_6 ( ) ) . METHOD_7 ( ) ; METHOD_6 ( ) . METHOD_8 ( ) ; TYPE_2 . assertEquals ( STRING_1 , result , METHOD_6 ( ) . METHOD_9 ( ) . getReturnValue ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 returnValue = result . getReturnValue ( ) ; if ( ( returnValue != null ) && ( returnValue . getSucceeded ( ) ) ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) == null ? ( ( org.ovirt.engine.core.compat.Guid ) ( returnValue . METHOD_3 ( ) ) ) : VAR_2 ) , ( ( TYPE_3 < TYPE_4 > ) ( VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) ; } else { VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 , this ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) . setItems ( TYPE_4 . METHOD_4 ( getEntity ( ) ) ) ; VAR_2 . METHOD_3 ( ) . setSelectedItem ( getEntity ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 type ) { TYPE_3 VAR_1 = type . METHOD_2 ( ) ; TYPE_1 VAR_2 = METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_3 . List class ) ; VAR_2 . METHOD_5 ( ( ( STRING_1 + ( VAR_2 . METHOD_6 ( ) ) ) + STRING_2 ) ) ; return VAR_2 ; } 
public boolean METHOD_1 ( TYPE_1 < TYPE_2 , ? > column ) { if ( ! ( METHOD_2 ( column ) ) ) { return false ; } boolean VAR_1 = true ; if ( VAR_2 . METHOD_3 ( column ) ) { VAR_1 = VAR_2 . get ( column ) ; } if ( VAR_1 && ( VAR_3 . METHOD_3 ( column ) ) ) { VAR_1 = VAR_3 . get ( column ) ; } VAR_1 = VAR_1 && ( ( METHOD_4 ( column ) ) == null ) ; return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , boolean VAR_2 ) { TYPE_1 . VdcActionParametersBase VAR_3 = METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_3 ( METHOD_4 ( ) , VAR_3 . METHOD_4 ( ) , METHOD_5 ( ) , getParameters ( ) , VAR_4 , VAR_2 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; if ( ( vm . METHOD_3 ( ) ) == ( VAR_1 ) ) { TYPE_1 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 , new TYPE_2 ( vmId , VAR_3 ) ) ; } else { VAR_4 . METHOD_6 ( STRING_1 , vm . METHOD_7 ( ) , vm . METHOD_3 ( ) ) ; } } 
public int METHOD_1 ( TYPE_1 . Network VAR_1 , TYPE_1 . Network VAR_2 ) { if ( VAR_1 . getId ( ) . equals ( VAR_2 . getId ( ) ) ) { return 0 ; } else { return VAR_1 . getId ( ) . toString ( ) . METHOD_2 ( VAR_2 . getId ( ) . toString ( ) ) ; } } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . VdcQueryReturnValue returnValue = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_4 ( TYPE_3 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) , VAR_3 , VAR_1 . METHOD_6 ( ) ) ) ; return returnValue . getReturnValue ( ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; } 
protected void METHOD_1 ( TYPE_1 ... VAR_1 ) { TYPE_2 VAR_2 = org.mockito.Mockito.when ( VAR_3 . METHOD_2 ( TYPE_3 . any ( VAR_4 class ) , TYPE_3 . any ( VAR_5 class ) , TYPE_3 . any ( VAR_6 class ) , TYPE_3 . METHOD_3 ( ) ) ) ; for ( TYPE_1 command : VAR_1 ) { VAR_2 = VAR_2 . thenReturn ( command ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 resource = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( ) ; VAR_1 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
private TYPE_1 METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VDS host , final boolean VAR_1 ) throws TYPE_2 { final TYPE_1 VAR_2 = new TYPE_1 ( host , VAR_1 ) ; java.lang.String VAR_3 = TYPE_3 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; if ( TYPE_4 . isEmpty ( VAR_3 ) ) { VAR_3 = TYPE_5 . METHOD_4 ( host ) ; } VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , true ) ) ) ; METHOD_4 ( command ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( true ) ; METHOD_10 ( true ) ; METHOD_11 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_2 ( ) ; vm . METHOD_3 ( 2 ) ; METHOD_4 ( vm . METHOD_5 ( ) , VAR_1 ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_6 ( VAR_1 ) ; TYPE_3 . METHOD_7 ( validator . METHOD_8 ( vm , VAR_2 ) , TYPE_4 . METHOD_9 ( VAR_3 ) ) ; } 
protected void METHOD_1 ( boolean VAR_1 ) { try { TYPE_1 VAR_2 = VAR_3 class . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_4 = org.mockito.Mockito . METHOD_3 ( VAR_5 class ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( ) ) . thenReturn ( VAR_1 ) ; METHOD_5 ( VAR_2 , VAR_4 ) ; } catch ( java.lang.Exception e ) { e . METHOD_6 ( ) ; } } 
boolean METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 , final java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 ) { for ( final TYPE_1 VAR_3 : VAR_1 ) { boolean VAR_4 = false ; for ( final org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_5 : VAR_2 ) { if ( TYPE_2 . equals ( VAR_3 . METHOD_2 ( ) , VAR_5 . METHOD_2 ( ) ) ) { VAR_4 = true ; break ; } } if ( ! VAR_4 ) { VAR_6 . METHOD_3 ( STRING_1 ) ; return false ; } } return true ; } 
static void METHOD_1 ( ) { TYPE_1 . AuditLogType [ ] VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( ( VAR_1 . length ) != ( VAR_2 . size ( ) ) ) { for ( TYPE_1 . AuditLogType value : VAR_1 ) { if ( ! ( VAR_2 . METHOD_3 ( value ) ) ) { VAR_3 . METHOD_4 ( STRING_1 , value . toString ( ) ) ; } } } } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain a : VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_2 ( METHOD_3 ( ) ) ) { VAR_1 . add ( new TYPE_2 ( a . getId ( ) , getEntity ( ) . getId ( ) ) ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_3 , VAR_1 ) ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) { { add ( METHOD_2 ( VAR_2 . METHOD_3 ( ) , true ) ) ; add ( METHOD_2 ( VAR_2 . METHOD_4 ( ) , true ) ) ; add ( METHOD_2 ( VAR_2 . METHOD_5 ( ) , true ) ) ; } } ; METHOD_6 ( VAR_1 , VAR_3 ) ; } 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_2 . get ( ) ; } else if ( VAR_1 == ( getModel ( ) . METHOD_3 ( ) ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { if ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) { METHOD_3 ( VAR_1 ) ; } else { METHOD_4 ( ) ; METHOD_5 ( ) ; } } METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != null ) { TYPE_2 . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; } else if ( ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) != null ) { TYPE_3 . METHOD_6 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_7 ( true ) ; } 
private void METHOD_1 ( TYPE_1 constants , TYPE_2 VAR_1 ) { VAR_2 . METHOD_2 ( constants . METHOD_3 ( ) ) ; VAR_3 . METHOD_2 ( constants . METHOD_4 ( ) ) ; VAR_4 . METHOD_2 ( constants . METHOD_5 ( ) ) ; VAR_5 . METHOD_2 ( constants . METHOD_6 ( ) ) ; VAR_6 . METHOD_7 ( constants . METHOD_8 ( ) ) ; VAR_7 . METHOD_7 ( constants . METHOD_9 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < TYPE_2 > list = ( ( java.util.ArrayList < TYPE_2 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; TYPE_4 . METHOD_1 ( list , new TYPE_5 ( ) ) ; VAR_1 . setItems ( list ) ; } 
public synchronized void METHOD_1 ( final org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; java.util.List < TYPE_1 > list = TYPE_2 . METHOD_5 ( VAR_3 . METHOD_6 ( ) , new TYPE_3 < TYPE_1 > ( ) { public boolean METHOD_7 ( TYPE_1 a ) { return a . METHOD_8 ( ) . equals ( VAR_1 . getId ( ) ) ; } } ) ; for ( TYPE_1 VAR_4 : list ) { VAR_4 . METHOD_9 ( ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_2 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_8 ( cmd . getReturnValue ( ) . METHOD_9 ( ) . METHOD_10 ( TYPE_4 . name ( ) ) ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , java.util.Map < java.lang.String , java.lang.Object > parameters , java.util.List < java.lang.String > VAR_1 ) { VAR_2 . error ( ( ( STRING_1 + ( getName ( ) ) ) + STRING_2 ) ) ; return hosts ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = STRING_1 ; final java.lang.String value = VAR_3 ; VAR_1 . METHOD_2 ( VAR_2 , value ) ; final java.lang.String VAR_4 = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_3 . assertEquals ( value , VAR_4 ) ; final java.util.Map < java.lang.String , java.lang.String > VAR_5 = VAR_1 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ) ; final java.lang.String VAR_6 = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_3 . assertEquals ( STRING_2 , VAR_6 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) . METHOD_2 ( ) , aQuery ) ; } 
public void validate ( ) { VAR_1 . METHOD_1 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( 0 , METHOD_2 ( ) . getEntity ( ) ) } ) ; VAR_2 . validate ( ) ; METHOD_3 ( ( ( VAR_2 . METHOD_4 ( ) ) && ( VAR_1 . METHOD_4 ( ) ) ) ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( VAR_1 ) ; if ( VAR_2 != null ) { TYPE_3 < ? > VAR_3 = TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) . get ( new org.ovirt.engine.core.compat.Guid ( VAR_2 . METHOD_5 ( ) ) ) ; return TYPE_4 . getInstance ( ) . METHOD_6 ( VAR_3 ) ; } return null ; } 
protected TYPE_1 . ValidationResult METHOD_1 ( ) { java.lang.Boolean VAR_1 = VAR_2 < java.lang.Boolean > METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; if ( VAR_1 || ( ! ( VAR_4 . METHOD_3 ( TYPE_3 . getParameters ( ) . METHOD_4 ( ) ) ) ) ) { return VAR_5 ; } else { return new TYPE_1 . ValidationResult ( VAR_6 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; TYPE_1 VAR_4 = VAR_5 . METHOD_5 ( ) . get ( VAR_1 . METHOD_6 ( ) ) ; TYPE_2 . METHOD_7 ( VAR_4 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_4 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; dao . METHOD_3 ( VAR_1 ) ; dao . METHOD_4 ( VAR_3 ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > result = dao . METHOD_5 ( VAR_2 ) ; boolean VAR_4 = false ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : result ) { VAR_4 |= iface . getName ( ) . equals ( VAR_1 . getName ( ) ) ; } TYPE_1 . METHOD_6 ( VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { return new TYPE_3 ( VAR_2 . AuditLogSeverity class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) { return new TYPE_4 ( VAR_3 class ) ; } else { return null ; } } 
public TYPE_1 getValue ( TYPE_2 value ) { if ( ( ( value != null ) && ( ( value . METHOD_1 ( ) ) != null ) ) && ( ! ( value . METHOD_1 ( ) . isEmpty ( ) ) ) ) { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } return null ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = resource . METHOD_2 ( ) . METHOD_2 ( ) . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( VAR_5 ) ; VAR_1 . METHOD_7 ( VAR_6 ) ; VAR_1 . METHOD_8 ( VAR_7 ) ; } 
protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( METHOD_4 ( VAR_4 , VAR_5 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 [ 0 ] } , VAR_1 , VAR_2 ) ) ; try { VAR_7 . METHOD_5 ( VAR_6 [ 0 ] . toString ( ) ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_8 ) { METHOD_7 ( VAR_8 , VAR_3 ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ) . thenReturn ( new java.util.ArrayList < > ( ) ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_3 = METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( STRING_2 ) ; TYPE_2 VAR_4 = METHOD_6 ( TYPE_3 . METHOD_7 ( ) , VAR_3 ) ; VAR_4 . METHOD_8 ( ) ; org.mockito.Mockito . METHOD_9 ( VAR_1 ) . METHOD_2 ( TYPE_1 . any ( VAR_5 . Guid class ) ) ; org.mockito.Mockito . METHOD_10 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; VAR_2 . METHOD_2 ( hosts ) ; } 
public void storageDomain ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_1 ( VAR_2 ) ; final TYPE_2 VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_3 ) ; } 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 VAR_2 , java.lang.Object sender , TYPE_5 args ) { METHOD_6 ( ) ; } } ) ; METHOD_7 ( VAR_1 ) ; VAR_3 . METHOD_8 ( ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_3 : VAR_1 ) { if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_2 . METHOD_3 ( VAR_3 . getName ( ) ) ) ) { list . add ( VAR_3 . getName ( ) ) ; } } return list ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.lang.Object returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; java.util.List < TYPE_2 > VAR_2 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_4 . add ( VAR_3 ) ; VAR_5 . put ( VAR_3 . METHOD_1 ( ) , new TYPE_2 ( VAR_3 ) ) ; } METHOD_2 ( ) ; } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 { TYPE_6 VAR_3 = new TYPE_7 ( VAR_1 ) ; TYPE_1 VAR_4 = TYPE_1 . getInstance ( STRING_1 ) ; VAR_4 . METHOD_2 ( VAR_3 , VAR_2 . METHOD_3 ( ) ) ; return VAR_4 ; } 
protected void METHOD_1 ( ) { if ( ( getModel ( ) . METHOD_2 ( ) ) == null ) { return ; } org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; getModel ( ) . METHOD_3 ( ) . METHOD_4 ( getModel ( ) . METHOD_5 ( ) . get ( cluster . METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_3 ) ) { if ( ( VAR_4 . getModel ( ) . METHOD_2 ( ) ) != null ) { if ( ( METHOD_3 ( ) . getTable ( ) ) != null ) { METHOD_3 ( ) . getTable ( ) . METHOD_4 ( VAR_5 ) ; } } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( VAR_1 ) ) . thenReturn ( VAR_3 ) ; boolean VAR_5 = command . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( VAR_5 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { org.ovirt.engine.core.common.businessentities . network network = METHOD_2 ( model ) ; model . METHOD_3 ( ) . setId ( network . getId ( ) . toString ( ) ) ; model . METHOD_3 ( ) . METHOD_4 ( null ) ; return model ; } 
public static java.lang.String METHOD_1 ( java.lang.String source ) throws TYPE_1 { if ( ( source == null ) || ( ( source . METHOD_2 ( ) . length ( ) ) == 0 ) ) { return source ; } else { TYPE_2 VAR_1 = TYPE_2 . getInstance ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ; return new java.lang.String ( VAR_1 . METHOD_6 ( new TYPE_4 ( ) . METHOD_7 ( source ) ) , TYPE_5 . METHOD_8 ( STRING_2 ) ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; java.util.List < TYPE_1 > VAR_4 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_5 = VAR_1 ; VAR_4 . add ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_4 ) ; boolean VAR_7 = command . METHOD_5 ( VAR_1 ) ; TYPE_2 . METHOD_6 ( VAR_7 ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < java.lang.Integer , java.lang.String > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; TYPE_2 . getInstance ( ) . METHOD_2 ( new TYPE_3 ( VAR_3 ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_4 ( VAR_5 ) , VAR_1 ) ; } 
void METHOD_1 ( ) { TYPE_1 . VdcQueryReturnValue returnValue = new TYPE_1 . VdcQueryReturnValue ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . RunQuery ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_3 . METHOD_5 ( VAR_4 class ) ) ) . thenReturn ( returnValue ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . Disk object ) { if ( ( object . METHOD_2 ( ) ) == null ) { return TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } else { java.lang.String status = TYPE_4 . getInstance ( ) . METHOD_5 ( object . METHOD_2 ( ) ) ; return TYPE_3 . METHOD_6 ( status ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 [ VAR_4 ] . toString ( ) ) ; METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( STRING_1 , null , false ) ; METHOD_6 ( VAR_1 . get ( ) , VAR_4 ) ; } 
public boolean METHOD_1 ( TYPE_1 model ) { boolean VAR_1 = ( ( model . METHOD_2 ( ) ) instanceof TYPE_2 ) && ( METHOD_3 ( ) ) ; boolean VAR_2 = model . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; boolean VAR_3 = ( model . METHOD_4 ( ) . METHOD_7 ( ) ) != null ; return ( VAR_1 && VAR_2 ) && VAR_3 ; } 
protected void METHOD_1 ( ) { if ( VAR_1 < java.lang.Boolean > METHOD_2 ( VAR_2 ) ) { VAR_3 . METHOD_3 ( STRING_1 ) ; } if ( METHOD_4 ( ) ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_4 = METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( VAR_4 ) ; METHOD_12 ( ) ; if ( ! ( TYPE_1 . METHOD_13 ( VAR_5 . METHOD_14 ( ) ) ) ) { METHOD_15 ( ) ; } METHOD_16 ( ) ; } } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( params . METHOD_2 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( params . METHOD_2 ( ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_1 VAR_2 = METHOD_8 ( METHOD_9 ( nic ) ) ; METHOD_10 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , false ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_2 ( VAR_1 , null ) ) ; org.mockito.Mockito.doReturn ( validator ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_5 ( ) ; } 
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > source , TYPE_3 < ? super TYPE_1 > VAR_1 , TYPE_1 VAR_2 ) { for ( TYPE_1 item : source ) { if ( VAR_1 . METHOD_2 ( item ) ) { return item ; } } return VAR_2 ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( disk . getId ( ) , TYPE_3 . METHOD_2 ( ) ) , VAR_1 , TYPE_4 . getName ( ) , STRING_1 , 0 , null , true , TYPE_3 . getParameters ( ) . METHOD_3 ( ) , TYPE_3 . getParameters ( ) . METHOD_4 ( ) , STRING_1 , null , TYPE_3 . getParameters ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.queries.IdQueryParameters params = METHOD_2 ( ) ; org.mockito.Mockito.when ( params . getId ( ) ) . thenReturn ( VAR_1 ) ; TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > VAR_2 = METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; java.util.List < TYPE_2 . DiskImage > VAR_3 = VAR_2 . METHOD_5 ( ) . getReturnValue ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_3 . size ( ) , 2 ) ; TYPE_3 . assertEquals ( STRING_2 , VAR_3 . get ( 0 ) . METHOD_6 ( ) , VAR_4 ) ; } 
private TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; TYPE_1 user = null ; if ( ! ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ) { user = TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_1 ) ; } return user ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { TYPE_2 result = METHOD_2 ( VAR_4 , new TYPE_3 ( VAR_1 . getId ( ) , VAR_2 , VAR_3 , null , false , true ) ) ; return result . getSucceeded ( ) ? ( ( TYPE_1 ) ( result . getReturnValue ( ) ) ) : null ; } 
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getVm ( ) . METHOD_4 ( ) ) ; getVm ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( VAR_2 , new TYPE_1 ( METHOD_7 ( ) , getVm ( ) . METHOD_4 ( ) ) ) ; METHOD_2 ( ) . METHOD_8 ( ) ; return null ; } 
public TYPE_1 METHOD_1 ( ) { diskImage . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; diskImage . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; diskImage . METHOD_4 ( VAR_1 ) ; diskImage . METHOD_5 ( VAR_1 ) ; diskImage . METHOD_6 ( METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( diskImage , getVm ( ) ) ; TYPE_2 . METHOD_9 ( diskImage ) ; return null ; } 
protected void METHOD_1 ( ) { result = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) . toString ( ) ) ; TYPE_1 . METHOD_5 ( ) ; java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( result . METHOD_6 ( ) . length ) ; for ( java.lang.String id : result . METHOD_6 ( ) ) { VAR_1 . add ( new org.ovirt.engine.core.compat.Guid ( id ) ) ; } METHOD_7 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( command . METHOD_6 ( ) ) ; TYPE_1 . METHOD_7 ( command . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_2 . toString ( ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.HashMap < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > map = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( map . get ( true ) ) ; setItems ( VAR_2 ) ; } 
private java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String ... VAR_1 ) { java.util.ArrayList < java.lang.String > list = new java.util.ArrayList < > ( VAR_1 . length ) ; for ( java.lang.String e : VAR_1 ) { e = e . METHOD_2 ( ) ; if ( ( e . length ( ) ) > 0 ) { list . add ( e ) ; } } return list ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; VAR_2 . METHOD_2 ( VAR_2 , VAR_3 , ( returnValue == null ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( null , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) , ( ( METHOD_4 ( ) ) + STRING_1 ) ) ; } 
private java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . getSucceeded ( ) ) ) { return null ; } java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > result = ( ( java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > ) ( VAR_1 . getReturnValue ( ) ) ) ; return result ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; TYPE_3 . METHOD_6 ( command . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; org.mockito.Mockito . METHOD_9 ( VAR_2 ) . METHOD_10 ( ) ; org.mockito.Mockito . METHOD_9 ( VAR_2 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . Disk ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 id , TYPE_3 type , TYPE_4 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 , boolean VAR_3 , java.lang.Boolean VAR_4 , java.lang.String VAR_5 , java.util.Map < java.lang.String , java.lang.String > VAR_6 ) { TYPE_1 VAR_7 = TYPE_5 . METHOD_1 ( id , type , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; if ( TYPE_6 . METHOD_2 ( VAR_5 ) ) { VAR_7 . METHOD_3 ( VAR_5 ) ; } return VAR_7 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < TYPE_2 > list = ( ( java.util.ArrayList < TYPE_2 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; VAR_2 . setItems ( list ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , null ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_8 ( VAR_5 . METHOD_9 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_9 ( ) . getStatus ( ) ) ; } } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { boolean VAR_1 = ( VAR_2 ) && ( ! ( VAR_3 ) ) ; if ( VAR_1 ) { VAR_4 . METHOD_2 ( VAR_5 , STRING_1 ) ; } VAR_6 . METHOD_3 ( VAR_7 , VAR_1 ) ; return null ; } 
public java.lang.Boolean METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , new TYPE_2 ( METHOD_4 ( ) , getParameters ( ) . METHOD_5 ( ) ) ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network VAR_2 : METHOD_6 ( ) ) { TYPE_3 . METHOD_7 ( METHOD_8 ( ) , VAR_2 ) ; } return java.lang.Boolean . TRUE ; } 
private void METHOD_1 ( ) { if ( ( context . METHOD_2 ( ) ) == null ) { java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > VAR_1 = METHOD_3 ( ) ; if ( VAR_1 != null ) { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 , null ) ; METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; context . METHOD_6 ( VAR_2 ) ; log . METHOD_7 ( STRING_1 , VAR_2 ) ; } } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( TYPE_4 . getInstance ( ) . METHOD_7 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( vm ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_3 ( vm ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( ) ) . when ( VAR_3 ) . get ( TYPE_2 . any ( VAR_4 class ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_6 ( ) ; } 
private static TYPE_1 METHOD_1 ( int VAR_1 , int VAR_2 , TYPE_2 VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; return VAR_4 ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_1 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( ! VAR_1 ) { addCanDoActionMessage ( VAR_2 ) ; if ( log . METHOD_5 ( ) ) { log . METHOD_6 ( STRING_1 ) ; } } else { VAR_1 = TYPE_1 . METHOD_7 ( ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( STRING_2 , VAR_1 ) ; VAR_1 . METHOD_6 ( VAR_4 ) ; TYPE_1 VAR_5 = VAR_3 . METHOD_4 ( ) . get ( VAR_1 . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( VAR_5 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_5 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > vms = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VM > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return vms ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_2 ( ( STRING_1 + VAR_1 ) , VAR_4 . VM ) , aQuery ) ; } 
protected void METHOD_1 ( TYPE_1 iface , boolean VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( iface . METHOD_3 ( ) ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_5 . add ( iface , TYPE_4 . getInstance ( ) , false ) ) ; METHOD_4 ( iface , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( INT_1 , false , VAR_1 , INT_1 , true ) ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( true , VAR_2 ) ) . when ( VAR_3 ) . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ; TYPE_2 . METHOD_5 ( cmd , VAR_5 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS host = context . host ; if ( ( host . METHOD_2 ( ) ) != null ) { TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void METHOD_4 ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_2 ) ( returnValue ) ) ; METHOD_5 ( ) ; } } , VAR_2 ) , host . METHOD_2 ( ) ) ; } else { METHOD_5 ( ) ; } } 
protected boolean METHOD_1 ( TYPE_1 status , TYPE_2 . VdcBllMessages VAR_1 ) { boolean returnValue = false ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = TYPE_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) { returnValue = ( VAR_2 . METHOD_3 ( ) ) != status ; if ( ( ! returnValue ) && ( ! ( TYPE_3 . getReturnValue ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 . name ( ) ) ) ) ) { addCanDoActionMessage ( VAR_1 ) ; } } return returnValue ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( METHOD_2 ( ) ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_2 ) ) . when ( VAR_1 ) . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( STRING_1 ) . when ( METHOD_2 ( ) ) . METHOD_6 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( ) ) . when ( VAR_5 ) . METHOD_8 ( TYPE_1 . any ( VAR_6 . Guid class ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_4 . METHOD_2 ( VAR_2 . METHOD_4 ( ) ) ; VAR_5 . METHOD_2 ( VAR_2 . METHOD_5 ( ) ) ; VAR_6 . METHOD_2 ( VAR_2 . METHOD_5 ( ) ) ; VAR_7 . METHOD_2 ( VAR_2 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 model = ( ( TYPE_2 ) ( VAR_1 . getWindow ( ) ) ) ; model . setEntity ( returnValue ) ; org.ovirt.engine.ui.uicommonweb.UICommand tempVar = new org.ovirt.engine.ui.uicommonweb.UICommand ( STRING_1 , VAR_1 ) ; tempVar . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; tempVar . METHOD_3 ( true ) ; tempVar . METHOD_4 ( true ) ; model . METHOD_5 ( ) . add ( tempVar ) ; } 
protected void METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; METHOD_3 ( ) . setIsChangable ( VAR_1 ) ; METHOD_4 ( ) . setIsChangable ( VAR_1 ) ; METHOD_5 ( ) . setIsChangable ( ( ! VAR_1 ) ) ; METHOD_6 ( ) . setIsChangable ( ( ! VAR_1 ) ) ; if ( VAR_1 ) { METHOD_5 ( ) . setEntity ( true ) ; METHOD_6 ( ) . setEntity ( false ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_4 ( ) , STRING_1 ) ; dao . METHOD_5 ( VAR_2 , VAR_3 , STRING_2 ) ; TYPE_1 VAR_4 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_4 ) ; TYPE_2 . assertEquals ( VAR_4 . METHOD_4 ( ) , STRING_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_7 ( VAR_2 ) ; } } 
java.util.List < TYPE_1 < java.lang.Object , org.ovirt.engine.core.common.businessentities.VM > > METHOD_1 ( java.util.List < TYPE_1 < java.lang.Object , org.ovirt.engine.core.common.businessentities.VM > > VAR_1 ) { return TYPE_2 . METHOD_2 ( new java.util.ArrayList ( TYPE_3 . METHOD_3 ( VAR_1 , new TYPE_4 < TYPE_1 < java.lang.Object , org.ovirt.engine.core.common.businessentities.VM > > ( ) { public boolean METHOD_4 ( TYPE_5 < java.lang.Object , org.ovirt.engine.core.common.businessentities.VM > VAR_2 ) { return ( VAR_2 . METHOD_5 ( ) ) != null ; } } ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 VAR_3 = new TYPE_3 ( VAR_4 ) ; METHOD_4 ( VAR_3 ) ; VAR_5 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_6 ) { METHOD_8 ( VAR_6 , VAR_7 , VAR_3 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_3 VAR_4 = new TYPE_4 ( VAR_5 ) ; METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; try { TYPE_2 . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_7 ) { METHOD_7 ( VAR_7 , VAR_8 , VAR_4 ) ; } finally { VAR_2 . METHOD_8 ( ) ; } } 
private void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { if ( ( METHOD_2 ( ) ) && VAR_2 ) { org.ovirt.engine.core.common.businessentities.VDS VAR_3 = null ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( host . getId ( ) . equals ( VAR_1 ) ) { VAR_3 = host ; } } hosts . METHOD_3 ( VAR_3 ) ; } } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_2 ) ) { METHOD_4 ( ) ; } else if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_3 ) ) { METHOD_5 ( ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response , java.lang.String VAR_2 ) throws java.lang.Exception { if ( TYPE_3 . METHOD_2 ( VAR_2 ) . METHOD_3 ( STRING_1 ) ) { TYPE_4 . METHOD_4 ( VAR_1 , response , VAR_2 ) ; } else { TYPE_4 . METHOD_5 ( VAR_1 , response , VAR_2 ) ; } } 
public static void METHOD_1 ( TYPE_1 . DiskImage image ) { TYPE_2 . METHOD_1 ( image , image . METHOD_2 ( ) , new TYPE_3 ( image . METHOD_3 ( ) , image . METHOD_4 ( ) . get ( 0 ) , image . METHOD_5 ( ) , image . METHOD_6 ( ) ) ) ; } 
protected int METHOD_1 ( ) { try { return ( getModel ( ) . METHOD_2 ( ) . getEntity ( ) ) != null ? java.lang.Integer . METHOD_3 ( getModel ( ) . METHOD_2 ( ) . getEntity ( ) . toString ( ) ) : 0 ; } catch ( TYPE_1 e ) { return 0 ; } } 
public static java.lang.String METHOD_1 ( java.lang.String user , java.lang.String VAR_1 ) throws TYPE_1 { VAR_2 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_3 = null ; if ( user != null ) { VAR_3 = ( ( VAR_1 + STRING_2 ) + user ) + STRING_3 ; } else { VAR_3 = VAR_1 + STRING_3 ; } return new java.lang.String ( VAR_4 . METHOD_3 ( VAR_3 ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 , TYPE_1 . METHOD_8 ( ) , TYPE_1 . getParameters ( ) . METHOD_9 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { VAR_2 = new TYPE_3 ( VAR_3 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) { VAR_2 = new TYPE_3 ( VAR_4 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_3 ) ) { VAR_2 = new TYPE_3 ( VAR_5 class ) ; } return VAR_2 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; TYPE_1 parameters = new TYPE_1 ( VAR_1 , null , null , false ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , parameters , aQuery ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) . getValue ( ) ) ) ) ; if ( METHOD_4 ( ) . METHOD_5 ( ) ) { METHOD_4 ( ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; METHOD_4 ( ) . setIsChangable ( ( VAR_2 && ( METHOD_8 ( ) ) ) ) ; } } 
private TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; VAR_1 . METHOD_7 ( VAR_7 ) ; VAR_1 . METHOD_8 ( VAR_8 ) ; VAR_1 . METHOD_9 ( VAR_9 ) ; VAR_1 . METHOD_10 ( VAR_10 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = VAR_2 . get ( STRING_1 ) ; VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_5 ( STRING_2 ) ; VAR_4 . METHOD_6 ( VAR_5 ) ; VAR_6 = dao . get ( new TYPE_2 ( STRING_3 , VAR_3 . METHOD_7 ( ) ) ) ; VAR_7 = new TYPE_3 ( VAR_8 , VAR_3 . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 version , TYPE_2 [ ] VAR_1 ) { if ( TYPE_3 . METHOD_2 ( version , VAR_2 ) ) { version . METHOD_3 ( new TYPE_4 ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { version . METHOD_4 ( ) . METHOD_5 ( ) . add ( VAR_3 . value ( ) ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; VAR_2 . METHOD_4 ( ) ; for ( int i = 0 ; i < INT_1 ; i ++ ) { java.lang.String VAR_3 = TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; TYPE_4 . assertEquals ( STRING_4 , STRING_3 , VAR_3 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 . DiskImage > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 , final java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > VAR_3 = TYPE_1 . METHOD_2 ( VAR_2 ) ; final TYPE_2 < org.ovirt.engine.core.common.businessentities.network.Network > VAR_4 = METHOD_3 ( VAR_1 , VAR_3 ) ; METHOD_4 ( host , VAR_4 , VAR_1 ) ; METHOD_5 ( host , VAR_3 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( TYPE_1 action : TYPE_1 . METHOD_4 ( ) ) { resource . id = java.lang.Integer . toString ( action . getId ( ) ) ; METHOD_5 ( resource . get ( ) , action ) ; } resource . id = STRING_1 ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.VmTemplate template ) { TYPE_2 VAR_1 = METHOD_2 ( VAR_2 . VmTemplate class , VAR_3 class ) . map ( template , null ) ; org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_4 class , VAR_2 . VM class ) . map ( model , new org.ovirt.engine.core.common.businessentities.VM ( VAR_1 , new TYPE_3 ( ) , new TYPE_4 ( ) ) ) ; return vm ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; METHOD_2 ( VAR_1 ) ; TYPE_3 VAR_3 = METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_5 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_6 ) { METHOD_8 ( VAR_6 , VAR_7 , VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface entity = METHOD_2 ( ) ; TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 = ( ( TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ) ( resource . METHOD_3 ( ) ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) , entity ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( sender ) ) ; if ( STRING_1 . equals ( ( ( TYPE_4 ) ( args ) ) . VAR_2 ) ) { VAR_3 . METHOD_2 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( model . METHOD_5 ( ) . METHOD_6 ( ) . size ( ) ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { METHOD_2 ( resource , VAR_1 ) ; org.ovirt.engine.core.common.businessentities . Network network = METHOD_3 ( resource ) ; if ( network != null ) { resource . METHOD_4 ( ) . METHOD_5 ( network . METHOD_6 ( ) ) ; resource . METHOD_4 ( ) . setId ( null ) ; } return METHOD_7 ( resource , VAR_2 , VAR_3 , VAR_4 ) ; } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ; model . METHOD_6 ( TYPE_2 . METHOD_3 ( VAR_4 class ) ) ; model . METHOD_7 ( null ) ; return model ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) != 0 ) { VAR_1 = VAR_2 < java.lang.Boolean > METHOD_4 ( VAR_3 , TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ) . getValue ( ) ) ; if ( ! VAR_1 ) { addCanDoActionMessage ( VAR_4 ) ; } } return VAR_1 ; } 
static void METHOD_1 ( TYPE_1 . Disk model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; assertEquals ( TYPE_2 . toString ( ) , model . getVm ( ) . getId ( ) ) ; METHOD_2 ( model . METHOD_4 ( ) ) ; METHOD_2 ( ( ! ( model . METHOD_5 ( ) ) ) ) ; METHOD_2 ( model . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = METHOD_2 ( ) ; java.lang.Integer VAR_1 = METHOD_3 ( ) . getSelectedItem ( ) ; if ( ( cluster == null ) || ( VAR_1 == null ) ) { return ; } METHOD_1 ( VAR_1 , cluster . METHOD_4 ( ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( int size ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int i = 0 ; i < size ; ++ i ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; diskImage . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_1 . add ( diskImage ) ; } return VAR_1 ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_1 ) ) ; TYPE_2 storage = ( ( TYPE_2 ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ) ) ; VAR_3 . METHOD_2 ( storage . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( this , VAR_4 ) ; } 
protected void METHOD_1 ( ) { result = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) . toString ( ) ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_2 < TYPE_3 , org.ovirt.engine.core.compat.Guid > VAR_1 = TYPE_1 . METHOD_6 ( VAR_2 ) ; VAR_1 . METHOD_7 ( ) . setId ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; METHOD_8 ( VAR_1 ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 < TYPE_2 > entity ) { java.util.List < java.lang.String > result = new java.util.ArrayList ( ( entity != null ? entity . size ( ) : 0 ) ) ; if ( entity != null ) { for ( TYPE_2 source : entity ) { TYPE_3 VAR_1 = TYPE_4 . map ( source , null ) ; result . add ( VAR_1 . name ( ) ) ; } } return result ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 ( ) ) ; METHOD_3 ( VAR_1 ) ; setItems ( model . value ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . EngineMessage VAR_1 = VAR_2 ; org.mockito.Mockito.doReturn ( new TYPE_2 . ValidationResult ( VAR_1 ) ) . when ( VAR_3 ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) , TYPE_3 . any ( ) ) ; TYPE_4 . METHOD_5 ( command , VAR_1 ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 object ) { java.lang.Integer VAR_1 = TYPE_2 . METHOD_2 ( object ) ; if ( ( VAR_1 != null ) && ( VAR_1 >= INT_1 ) ) { return METHOD_3 ( ) . METHOD_4 ( ) ; } if ( ( VAR_1 != null ) && ( VAR_1 < 0 ) ) { return METHOD_3 ( ) . METHOD_5 ( ) ; } return VAR_1 != null ? VAR_1 + STRING_1 : STRING_2 ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 . VdcQueryType VAR_2 = VAR_3 ; java.lang.Object result = VAR_4 . runQuery ( VAR_2 , VAR_5 , VAR_1 ) ; TYPE_2 . assertEquals ( result , VAR_6 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_4 ( VAR_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_2 ( VAR_7 ) . runQuery ( VAR_2 , VAR_5 ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; if ( VAR_1 != null ) { for ( TYPE_1 iface : VAR_1 ) { TYPE_3 . getInstance ( ) . METHOD_5 ( iface . METHOD_6 ( ) ) ; } } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) != null ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getEntity ( ) ) ) ; setItems ( VAR_1 . METHOD_2 ( ) ) ; } else { setItems ( null ) ; } METHOD_3 ( ( ( TYPE_1 ) ( getEntity ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( STRING_1 ) ; VAR_2 . METHOD_7 ( STRING_2 ) ; VAR_2 . METHOD_8 ( VAR_3 ) ; VAR_4 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_3 ) ) ; } 
public static void METHOD_1 ( TYPE_1 resource , TYPE_2 model , TYPE_3 entity ) { model . METHOD_2 ( new TYPE_4 ( ) ) ; TYPE_5 VAR_1 = new TYPE_5 ( model ) ; java.util.List < TYPE_6 > VAR_2 = VAR_1 . METHOD_3 ( entity ) ; for ( TYPE_6 VAR_3 : VAR_2 ) { TYPE_7 . METHOD_4 ( resource . METHOD_5 ( ) , VAR_3 , VAR_1 . METHOD_6 ( ) ) ; } model . METHOD_3 ( ) . METHOD_3 ( ) . METHOD_7 ( VAR_2 ) ; } 
public boolean METHOD_1 ( TYPE_1 < ? > args , TYPE_2 VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( args , VAR_3 , new TYPE_3 < TYPE_4 > ( ) { public void METHOD_4 ( TYPE_4 result ) { VAR_4 this . VAR_5 = result ; VAR_4 this . VAR_6 = VAR_3 ; } } , VAR_1 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = METHOD_3 ( true ) ; int i = new TYPE_1 ( ) . METHOD_4 ( VAR_3 . length ) ; VAR_2 . METHOD_5 ( VAR_4 [ i ] ) ; VAR_2 . setId ( VAR_5 ) ; cmd . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( cmd . validate ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_3 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_4 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_5 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_6 class ) . METHOD_3 ( VAR_2 class ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; java.util.List < java.lang.String > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; TYPE_4 . METHOD_4 ( STRING_2 , VAR_2 . METHOD_5 ( STRING_2 ) ) ; TYPE_4 . METHOD_4 ( STRING_3 , ( ! ( VAR_2 . METHOD_5 ( STRING_3 ) ) ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; if ( vm != null ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_2 , new TYPE_2 ( vm . getId ( ) , VAR_1 . getId ( ) ) , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_4 result ) { } } , null ) ; } } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm == null ) { return ; } TYPE_2 VAR_1 = ( ( TYPE_2 ) ( model ) ) ; VAR_1 . METHOD_2 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } } 
public void METHOD_1 ( ) { if ( ( client ) != null ) { try { client . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_1 ) , null , null , null ) ; } catch ( java.lang.Exception e ) { } try { client . METHOD_4 ( ) ; } catch ( java.lang.Exception e ) { } client = null ; } if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_5 ( ) ; VAR_2 = null ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_3 . VdcQueryReturnValue VAR_2 = ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) ; TYPE_4 VAR_3 = VAR_2 . getReturnValue ( ) ; if ( VAR_3 != null ) { METHOD_3 ( VAR_3 ) ; } } } ) , VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) ) ; } 
public void METHOD_1 ( TYPE_1 type ) { this . type = type ; METHOD_2 ( ) . METHOD_1 ( VAR_1 ) ; for ( TYPE_1 VAR_2 : type . METHOD_3 ( ) . METHOD_4 ( ) ) { METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; } VAR_4 . METHOD_6 ( VAR_5 ) ; } 
private void METHOD_1 ( long VAR_1 ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != VAR_1 ) { TYPE_1 . getParameters ( ) . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) , true ) ; } } 
protected void METHOD_1 ( TYPE_1 status ) { org.mockito.Mockito.when ( cmd . METHOD_2 ( ) ) . thenReturn ( cluster ) ; org.mockito.Mockito.doReturn ( vds ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( status ) . when ( vds ) . getStatus ( ) ; METHOD_4 ( true ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_5 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( ( ( ( VAR_1 ) != null ) && ( VAR_1 . equals ( VAR_2 ) ) ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = new java.util.ArrayList < > ( ) ; TYPE_1 . DiskImage diskImage = new TYPE_1 . DiskImage ( ) ; diskImage . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ) ) ; VAR_1 . add ( diskImage ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_6 ( vmId ) ) . thenReturn ( VAR_1 ) ; } 
protected static int METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; int VAR_3 = 0 ; if ( VAR_2 != null ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_2 ) { if ( ( vm . METHOD_4 ( ) ) && ( TYPE_2 . METHOD_5 ( vm . getId ( ) ) ) ) ++ VAR_3 ; } } return VAR_3 ; } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; for ( org.ovirt.engine.core.compat . Version item : METHOD_2 ( ) . METHOD_3 ( ) ) { if ( TYPE_1 . METHOD_4 ( item , getEntity ( ) . METHOD_5 ( ) ) ) { METHOD_2 ( ) . setSelectedItem ( item ) ; break ; } } } } 
public TYPE_1 add ( TYPE_2 . Disk disk ) { METHOD_1 ( VAR_1 . Disk class , disk ) ; if ( disk . METHOD_2 ( ) ) { return TYPE_1 . METHOD_3 ( METHOD_4 ( disk ) ) . entity ( METHOD_5 ( METHOD_6 ( disk . getId ( ) ) ) ) . METHOD_7 ( ) ; } else { METHOD_8 ( disk ) ; return METHOD_9 ( VAR_2 , METHOD_10 ( map ( disk ) , disk ) , METHOD_11 ( disk . getName ( ) ) ) ; } } 
public TYPE_1 getValue ( TYPE_2 item ) { java.lang.String VAR_1 = TYPE_3 . METHOD_1 ( ) . get ( VAR_2 . METHOD_2 ( item ) ) ; TYPE_4 resource = TYPE_5 . METHOD_3 ( ) . METHOD_4 ( ( VAR_1 + STRING_1 ) ) ; if ( ! ( resource instanceof TYPE_1 ) ) { resource = TYPE_5 . METHOD_3 ( ) . METHOD_5 ( ) ; } return ( ( TYPE_1 ) ( resource ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; if ( vm != null ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_2 , new TYPE_2 ( vm . getId ( ) , VAR_1 . getId ( ) ) , new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { } } , null ) ; } } 
protected java.lang.String METHOD_1 ( ) { if ( VAR_1 ) { return VAR_2 ; } if ( ( METHOD_2 ( ) ) == ( VAR_3 ) ) { return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } if ( ! ( TYPE_2 . METHOD_5 ( TYPE_1 . getVm ( ) . METHOD_6 ( ) , TYPE_1 . getVm ( ) . METHOD_7 ( ) ) ) ) { return VAR_2 ; } return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } 
protected void METHOD_1 ( int VAR_1 , int VAR_2 ) throws java.lang.Exception { TYPE_1 VAR_3 = new TYPE_1 ( ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { METHOD_2 ( VAR_4 , VAR_5 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 [ VAR_2 ] } , VAR_3 ) ; } } 
private java.lang.String METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) ) ) { return METHOD_3 ( ) . METHOD_4 ( ) ; } if ( ! ( TYPE_1 . METHOD_2 ( METHOD_3 ( ) . METHOD_5 ( ) ) ) ) { return METHOD_3 ( ) . METHOD_5 ( ) ; } java.lang.String VAR_1 = METHOD_6 ( VAR_2 ) ; if ( TYPE_1 . METHOD_2 ( VAR_1 ) ) { return VAR_1 ; } return null ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { METHOD_2 ( TYPE_1 . getVm ( ) . getStoragePoolId ( ) ) ; METHOD_3 ( ) ; VAR_1 = VAR_2 . METHOD_4 ( TYPE_1 . getVm ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } } 
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) && ( METHOD_4 ( ) . METHOD_3 ( STRING_2 ) ) ) { if ( METHOD_5 ( ) . METHOD_3 ( STRING_3 ) ) { METHOD_6 ( ) ; } else if ( METHOD_5 ( ) . METHOD_3 ( STRING_4 ) ) { METHOD_7 ( ) ; } } } 
protected TYPE_1 . Disk getEntity ( int VAR_1 ) { TYPE_2 . DiskImage entity = new TYPE_2 . DiskImage ( ) ; entity . setId ( VAR_2 [ VAR_1 ] ) ; entity . METHOD_1 ( VAR_3 ) ; entity . METHOD_2 ( VAR_4 ) ; entity . METHOD_3 ( VAR_5 ) ; entity . METHOD_4 ( VAR_6 ) ; entity . METHOD_5 ( false ) ; entity . METHOD_6 ( false ) ; entity . METHOD_7 ( VAR_7 ) ; return TYPE_3 . METHOD_8 ( entity ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; java.util.List < TYPE_1 > VAR_2 = dao . METHOD_3 ( VAR_3 ) ; TYPE_2 . METHOD_4 ( ( ( VAR_2 . size ( ) ) == 1 ) ) ; TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( VAR_4 ) ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_6 ( VAR_5 ) ) ; } 
public static java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk ) throws TYPE_1 { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new TYPE_2 < > ( ) ; VAR_1 . put ( VAR_2 , disk . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_3 , ( ( disk . METHOD_3 ( ) ) != null ? disk . METHOD_3 ( ) : STRING_1 ) ) ; return TYPE_3 . METHOD_4 ( VAR_1 , false ) ; } 
private void METHOD_1 ( TYPE_1 < TYPE_2 . ValidationResult > VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network ... VAR_2 ) { java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList ( VAR_2 . length ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 ) { VAR_3 . add ( METHOD_2 ( STRING_1 , network ) ) ; } TYPE_4 validator = new TYPE_4 ( VAR_3 , VAR_4 ) ; TYPE_5 . METHOD_3 ( validator . METHOD_4 ( ) , VAR_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( ( ! ( vds . getId ( ) . equals ( VAR_1 . getId ( ) ) ) ) && ( vds . METHOD_2 ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ) ) && ( ( vds . METHOD_3 ( ) ) == ( VAR_2 ) ) ; } 
private void METHOD_1 ( TYPE_1 < TYPE_2 . ValidationResult > VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms ) { TYPE_3 VAR_2 = org.mockito.Mockito . METHOD_2 ( VAR_3 class ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_4 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( vms ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_4 ( ) ) . thenReturn ( VAR_2 ) ; TYPE_5 . METHOD_5 ( validator . METHOD_6 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , true ) ; METHOD_3 ( STRING_1 ) ; command . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 2 ) ) . log ( TYPE_1 . any ( VAR_3 class ) , TYPE_1 . any ( VAR_4 . AuditLogType class ) ) ; } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 model , TYPE_3 entity ) { TYPE_4 parameters = new TYPE_4 ( ) ; parameters . METHOD_1 ( TYPE_5 . map ( TYPE_6 . METHOD_2 ( model . METHOD_3 ( ) ) ) ) ; parameters . METHOD_4 ( TYPE_5 . map ( TYPE_7 . METHOD_2 ( model . getModel ( ) ) ) ) ; parameters . setId ( VAR_1 ) ; parameters . METHOD_5 ( false ) ; return parameters ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( METHOD_3 ( ) . getId ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ) . thenReturn ( VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( ) ; TYPE_1 result = METHOD_4 ( ) . METHOD_6 ( ) . getReturnValue ( ) ; TYPE_2 . METHOD_7 ( result ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . network result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; dao . METHOD_4 ( result . getId ( ) ) ; result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_5 ( result ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ! ( ( ( TYPE_3 ) ( VAR_2 . getReturnValue ( ) ) ) . METHOD_2 ( ) ) ) { TYPE_4 . METHOD_3 ( false ) ; VAR_3 . METHOD_4 ( STRING_1 , TYPE_4 . getParameters ( ) . METHOD_5 ( ) . name ( ) . METHOD_6 ( ) ) ; throw new TYPE_5 ( VAR_4 ) ; } else { METHOD_7 ( VAR_1 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { TYPE_3 . METHOD_3 ( new TYPE_4 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) , VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) , true , true , null ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; params = METHOD_2 ( ) ; org.mockito.Mockito.when ( METHOD_3 ( ) . METHOD_4 ( ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( params . METHOD_5 ( ) ) . thenReturn ( VAR_2 ) ; VAR_3 = METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; java.util.List < java.lang.String > error = VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 ) ) ; TYPE_4 . METHOD_4 ( STRING_1 , ( ( error . size ( ) ) == 1 ) ) ; TYPE_4 . assertEquals ( STRING_2 , STRING_3 , error . get ( 0 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) ; nic . METHOD_6 ( VAR_2 ) ; METHOD_7 ( VAR_1 ) ; METHOD_8 ( nic ) ; nic . METHOD_6 ( VAR_3 ) ; TYPE_1 VAR_4 = METHOD_9 ( METHOD_10 ( nic ) ) ; METHOD_11 ( VAR_4 , VAR_5 , VAR_1 . getName ( ) ) ; } 
private static TYPE_1 . DiskImage METHOD_1 ( int size ) { TYPE_1 . DiskImage diskImage = new TYPE_1 . DiskImage ( ) ; diskImage . METHOD_2 ( size ) ; diskImage . METHOD_3 ( size ) ; diskImage . setId ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; diskImage . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; diskImage . METHOD_6 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_7 ( VAR_1 ) ) ) ; return diskImage ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_2 obj ) { TYPE_1 map = METHOD_2 ( obj . getId ( ) ) . addValue ( STRING_1 , METHOD_3 ( ) ) . addValue ( STRING_2 , obj . getName ( ) ) . addValue ( STRING_3 , obj . METHOD_4 ( ) ) . addValue ( STRING_4 , obj . getStoragePoolId ( ) ) ; return map ; } 
protected void METHOD_1 ( ) { if ( ( ( TYPE_1 . getStoragePoolId ( ) ) == null ) || ( TYPE_2 . equals ( TYPE_1 . getStoragePoolId ( ) ) ) ) { METHOD_2 ( ( ( ( TYPE_1 . METHOD_3 ( ) ) != null ) && ( ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) != null ) ? TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) . getValue ( ) : VAR_1 ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 parameters ) { switch ( parameters . METHOD_2 ( ) ) { case VAR_1 : case VAR_2 : TYPE_3 < ? > command = TYPE_4 . METHOD_3 ( parameters . METHOD_2 ( ) , parameters ) ; command . METHOD_4 ( ) ; return command . METHOD_5 ( ) ; default : return METHOD_6 ( VAR_3 ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( returnValue ) ) ; model . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; model . METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getParameters ( ) . METHOD_2 ( ) ) ; return ( ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) && ( validate ( VAR_1 . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; TYPE_3 . assertEquals ( VAR_1 , TYPE_2 . METHOD_2 ( STRING_1 ) ) ; TYPE_3 . assertEquals ( STRING_1 , TYPE_2 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = VAR_2 . METHOD_2 ( new java.util.ArrayList < > ( ) , vm , null , org.mockito.Mockito . METHOD_3 ( VAR_3 class ) ) ; TYPE_1 . METHOD_4 ( VAR_1 , TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ) ; TYPE_1 . METHOD_4 ( METHOD_7 ( ) , TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ) ; } 
protected void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; switch ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) { case VAR_2 : VAR_1 . METHOD_4 ( ) ; break ; case VAR_3 : VAR_1 . METHOD_5 ( ) ; break ; default : break ; } } catch ( java.lang.Exception e ) { VAR_4 . error ( ( STRING_1 + ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) ) ) , e ) ; } TYPE_2 . METHOD_6 ( ) . METHOD_7 ( true ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < java.lang.Integer , java.lang.String > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; TYPE_2 . METHOD_2 ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_3 , VAR_4 [ 1 ] , INT_1 } , true , true ) ) ; METHOD_5 ( resource . METHOD_6 ( getModel ( ) ) , 0 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ; int VAR_1 = getModel ( ) . METHOD_3 ( ) . getSelectedItem ( ) ; if ( template != null ) { METHOD_4 ( template . getId ( ) , VAR_1 ) ; } } 
private void METHOD_1 ( ) { if ( ( getParameters ( ) . METHOD_2 ( ) ) != null ) { java.util.List < TYPE_1 . DiskImage > VAR_1 = TYPE_2 . METHOD_3 ( METHOD_4 ( ) , getParameters ( ) . METHOD_2 ( ) ) ; for ( TYPE_1 . DiskImage diskImage : VAR_1 ) { TYPE_3 . METHOD_5 ( ) . METHOD_6 ( diskImage . METHOD_7 ( ) , VAR_2 ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( INT_1 , null ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . size ( ) ) == 2 ) ) ; for ( java.lang.String VAR_2 : TYPE_3 . METHOD_4 ( STRING_1 ) ) { TYPE_2 . METHOD_3 ( VAR_1 . METHOD_5 ( VAR_2 ) ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_2 ( ) ) . when ( command ) . METHOD_3 ( parameters . METHOD_4 ( ) . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , command . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( STRING_2 , command . getReturnValue ( ) . METHOD_9 ( ) . METHOD_10 ( TYPE_3 . toString ( ) ) ) ; } 
static org.ovirt.engine.core.common.businessentities.VDSGroup METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup entity , int VAR_1 ) { TYPE_1 . METHOD_2 ( entity . getId ( ) ) . METHOD_3 ( VAR_2 [ VAR_1 ] ) . METHOD_4 ( ) ; TYPE_1 . METHOD_2 ( entity . METHOD_5 ( ) ) . METHOD_3 ( VAR_3 [ VAR_1 ] ) . METHOD_4 ( ) ; TYPE_1 . METHOD_2 ( entity . METHOD_6 ( ) ) . METHOD_3 ( VAR_4 [ VAR_1 ] ) . METHOD_4 ( ) ; return entity ; } 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . DiskImage > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? VAR_2 . Linq < TYPE_1 . DiskImage > METHOD_3 ( METHOD_2 ( ) ) : new java.util.ArrayList < TYPE_1 . DiskImage > ( ) ; METHOD_4 ( ) . METHOD_5 ( ( ( ( VAR_1 . size ( ) ) > 0 ) && ( ( getEntity ( ) . getStatus ( ) ) == ( VAR_3 ) ) ) ) ; } 
static void METHOD_1 ( TYPE_1 . Disk model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_4 ( model . METHOD_5 ( ) ) ; METHOD_4 ( ( ! ( model . METHOD_6 ( ) ) ) ) ; METHOD_4 ( model . METHOD_7 ( ) ) ; assertEquals ( model . METHOD_8 ( ) . getId ( ) , TYPE_2 . toString ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; java.lang.String name = VAR_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( name . equals ( VAR_2 . METHOD_6 ( VAR_3 , VAR_4 ) ) ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.String > result = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; for ( TYPE_1 VAR_1 : this . VAR_2 ) { java.lang.String status = VAR_1 . METHOD_2 ( STRING_1 ) . toString ( ) ; java.lang.String id = VAR_1 . METHOD_2 ( STRING_2 ) . toString ( ) ; result . put ( id , status ) ; } return result ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( TYPE_1 . getInstance ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( ) . when ( VAR_1 ) . METHOD_7 ( TYPE_2 . any ( VAR_4 class ) ) ; VAR_1 . METHOD_8 ( ) ; } 
private void METHOD_1 ( ) { int VAR_1 = VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( STRING_1 , VAR_1 ) ; TYPE_1 . METHOD_4 ( ( VAR_1 * INT_1 ) ) ; TYPE_2 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_5 , new TYPE_3 ( TYPE_4 . METHOD_7 ( ) , VAR_6 ) ) ; } 
private java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { TYPE_1 < java.lang.String > VAR_1 = METHOD_2 ( vm ) ; java.lang.String VAR_2 ; int i = 0 ; do { i ++ ; VAR_2 = TYPE_2 . METHOD_3 ( vm . getName ( ) , java.lang.Integer . toString ( ( ( vm . METHOD_4 ( ) ) + i ) ) ) ; } while ( VAR_1 . METHOD_5 ( VAR_2 ) ) ; return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { boolean returnValue = ( ( java.lang.Boolean ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( returnValue ) { command . METHOD_2 ( ) ; } else { METHOD_3 ( command ) ; } } 
void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 ) , TYPE_2 . any ( VAR_5 class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_2 ) . getSucceeded ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( VAR_2 ) . getReturnValue ( ) ; } 
protected void METHOD_1 ( TYPE_1 section ) { VAR_1 . setId ( new org.ovirt.engine.core.compat.Guid ( TYPE_2 . get ( STRING_1 ) . getValue ( ) ) ) ; TYPE_1 node = section . METHOD_2 ( STRING_2 ) ; if ( node != null ) { if ( TYPE_3 . equals ( java.lang.String.valueOf ( VAR_2 ) ) ) { TYPE_3 = java.lang.String.valueOf ( VAR_3 ) ; } VAR_1 . METHOD_3 ( VAR_4 . METHOD_4 ( TYPE_3 ) ) ; } } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm == null ) { return ; } TYPE_2 VAR_1 = ( ( TYPE_2 ) ( model ) ) ; VAR_1 . METHOD_2 ( vm ) ; VAR_1 . METHOD_3 ( ) ; } } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != null ) && ( ( VAR_1 ) == ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) ) { return ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) . METHOD_1 ( ) ; } return null ; } 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( VAR_2 ) ; TYPE_2 command = new TYPE_2 ( params ) ; java.util.HashMap < java.lang.String , java.lang.Object > VAR_3 = command . METHOD_1 ( ) ; TYPE_3 . METHOD_4 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_3 . get ( STRING_2 ) ) ; TYPE_3 . assertEquals ( STRING_3 , VAR_3 . get ( STRING_4 ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
public static java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { VAR_1 . add ( TYPE_1 . METHOD_2 ( i ) ) ; } VAR_1 . add ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . add ( TYPE_1 . METHOD_4 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_2 ) ) { METHOD_6 ( ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; TYPE_3 params = new TYPE_3 ( ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , params , aQuery ) ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 < java.lang.Boolean > ( new TYPE_2 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ) ; VAR_3 = new TYPE_1 < org.ovirt.engine.core.compat . Version > ( new TYPE_3 < org.ovirt.engine.core.compat . Version > ( ) { public java.lang.String METHOD_4 ( org.ovirt.engine.core.compat . Version object ) { return object . getValue ( ) ; } } ) ; VAR_4 = new TYPE_1 < TYPE_4 > ( new TYPE_5 ( ) ) ; VAR_5 = new TYPE_1 ( new TYPE_6 < TYPE_7 > ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; if ( VAR_1 ) { METHOD_4 ( ) ; } TYPE_2 . METHOD_5 ( getVm ( ) . METHOD_6 ( ) , getParameters ( ) . METHOD_7 ( ) ) ; TYPE_3 . METHOD_8 ( getVm ( ) . getId ( ) ) ; if ( getParameters ( ) . METHOD_7 ( ) ) { getParameters ( ) . METHOD_9 ( getVm ( ) ) ; METHOD_10 ( getVm ( ) . getId ( ) ) ; } return null ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_3 , java.lang.Boolean . FALSE ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.util.ArrayList < TYPE_1 . VdcQueryType > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcQueryType > ( ) ; VAR_1 . add ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; java.util.ArrayList < TYPE_3 > VAR_5 = new java.util.ArrayList < TYPE_3 > ( TYPE_4 . METHOD_3 ( new TYPE_3 [ ] { VAR_3 } ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_1 , VAR_5 , this , getModel ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_1 < ? > VAR_2 ) { for ( TYPE_2 network : ( ( TYPE_3 ) ( VAR_1 ) ) . METHOD_2 ( ) ) { if ( TYPE_4 . METHOD_1 ( network , null ) ) { return true ; } } return false ; } 
public void METHOD_1 ( ) { VAR_1 = cmd . getParameters ( ) . METHOD_2 ( ) ; cmd . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 . getId ( ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_6 ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true , VAR_1 ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_1 , VAR_2 ) ) . when ( VAR_3 ) . METHOD_4 ( VAR_1 ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_4 = TYPE_3 . METHOD_5 ( VAR_5 , VAR_6 ) ; TYPE_4 . METHOD_6 ( STRING_1 , VAR_7 . METHOD_7 ( cluster , VAR_4 ) . isEmpty ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 . Disk > VAR_1 = ( ( java.util.ArrayList < TYPE_1 . Disk > ) ( returnValue ) ) ; METHOD_1 ( ) . METHOD_2 ( ) ; for ( TYPE_1 . Disk disk : VAR_1 ) { if ( ( disk . METHOD_3 ( ) ) == ( VAR_2 ) ) { continue ; } TYPE_1 . DiskImage diskImage = ( ( TYPE_1 . DiskImage ) ( disk ) ) ; METHOD_1 ( ) . add ( diskImage ) ; } } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_2 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; VAR_3 = new java.util.HashMap < > ( ) ; for ( TYPE_1 cluster : VAR_2 ) { if ( ( cluster . METHOD_1 ( ) ) && ( ( cluster . METHOD_2 ( ) ) != null ) ) { METHOD_3 ( cluster . getStoragePoolId ( ) , cluster . METHOD_2 ( ) ) ; } } } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) >= 1 ) ) && ( VAR_1 . METHOD_2 ( STRING_1 ) ) ) && ( VAR_1 . METHOD_3 ( STRING_2 ) ) ) { return VAR_1 . METHOD_4 ( 1 , ( ( VAR_1 . length ( ) ) - 2 ) ) ; } return VAR_1 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { if ( ( VAR_1 . isEmpty ( ) ) && ( ( ( VAR_2 ) == null ) || ( ! ( VAR_2 . METHOD_2 ( ) ) ) ) ) { METHOD_3 ( ) . METHOD_4 ( VAR_3 ) ; } else { METHOD_3 ( ) . METHOD_4 ( ( ( VAR_3 ) | ( VAR_4 ) ) ) ; } } 
private static boolean METHOD_1 ( TYPE_1 < ? > [ ] VAR_1 , TYPE_1 < ? > [ ] VAR_2 ) { if ( ( VAR_1 . length ) != ( VAR_2 . length ) ) { return false ; } for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { if ( ! ( VAR_2 [ i ] . METHOD_2 ( VAR_1 [ i ] ) ) ) { return false ; } } return true ; } 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; parameters . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ; command . METHOD_7 ( ) ; org.mockito.Mockito . METHOD_8 ( command , org.mockito.Mockito . METHOD_9 ( ) ) . METHOD_10 ( ) ; } 
public boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; boolean VAR_1 = ( vm != null ) && ( ( ( ( vm . getStatus ( ) ) == ( VAR_2 ) ) || ( ( ( vm . getStatus ( ) ) == ( VAR_3 ) ) | ( ( vm . getStatus ( ) ) == ( VAR_4 ) ) ) ) || ( ( vm . getStatus ( ) ) == ( VAR_5 ) ) ) ; return ( VAR_6 ) && VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 parameters ) throws TYPE_4 { TYPE_1 returnValue = METHOD_2 ( ) . METHOD_3 ( VAR_1 , parameters ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { throw new TYPE_4 ( returnValue . METHOD_4 ( ) . METHOD_5 ( ) , returnValue . METHOD_4 ( ) . METHOD_6 ( ) ) ; } return returnValue ; } 
public void METHOD_1 ( ) { TYPE_1 dao = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.doReturn ( dao ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_4 ( VAR_3 ) ; TYPE_2 . METHOD_5 ( VAR_2 . METHOD_6 ( vm , new java.util.ArrayList < > ( ) , null ) , false , VAR_4 ) ; } 
private void METHOD_1 ( TYPE_1 version , TYPE_2 [ ] VAR_1 ) { if ( TYPE_3 . METHOD_2 ( version , VAR_2 ) ) { version . METHOD_3 ( new TYPE_4 ( ) ) ; for ( TYPE_2 type : VAR_1 ) { version . METHOD_4 ( ) . METHOD_4 ( ) . add ( type . value ( ) ) ; } } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , null , VAR_1 , VAR_2 ) , null ) ) ; METHOD_4 ( ) ; METHOD_5 ( false , VAR_3 , VAR_4 ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_5 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_3 . any ( VAR_6 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_10 ( ) , VAR_7 ) ; } 
protected TYPE_1 . Network METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid id , java.lang.String name ) { for ( TYPE_1 . Network entity : METHOD_2 ( VAR_2 . Network class , VAR_3 , new TYPE_2 ( VAR_1 ) ) ) { if ( ( ( id != null ) && ( id . equals ( entity . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( entity . METHOD_3 ( ) ) ) ) ) { return entity ; } } return null ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { if ( ( storageDomain . getStoragePoolId ( ) ) == null ) { return false ; } org.ovirt.engine.core.compat.Guid VAR_1 = storageDomain . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = storageDomain . getStoragePoolId ( ) . getValue ( ) ; return ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) != null ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { if ( returnValue != null ) { VAR_1 = ( ( java.lang.String ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } else { VAR_1 = VAR_2 ; } TYPE_2 VAR_3 = ( ( TYPE_2 ) ( model ) ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_3 , VAR_4 ) ; } 
private void METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . getInstance ( ) . METHOD_2 ( METHOD_3 ( ) . getId ( ) ) ; if ( VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_4 ( STRING_1 , METHOD_5 ( ) ) ; TYPE_3 . log ( VAR_2 , VAR_3 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , false , false , false ) ; METHOD_2 ( 1 , true , true , true ) ; METHOD_3 ( VAR_1 [ 1 ] ) ; METHOD_4 ( METHOD_5 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , true , true ) ) ; METHOD_6 ( resource . METHOD_7 ( getModel ( 0 ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = METHOD_2 ( ) ; TYPE_1 VAR_3 = METHOD_2 ( ) ; METHOD_3 ( VAR_2 , VAR_3 , VAR_1 ) ; VAR_4 . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_5 ) . METHOD_6 ( VAR_2 . METHOD_7 ( ) , VAR_3 . METHOD_7 ( ) , TYPE_2 . METHOD_8 ( VAR_1 ) , true , VAR_4 . METHOD_9 ( ) ) ; } 
private static org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( STRING_1 ) ; vm . METHOD_3 ( VAR_1 ) ; vm . setId ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; vm . METHOD_5 ( STRING_2 ) ; vm . METHOD_6 ( ) . METHOD_7 ( STRING_3 ) ; vm . METHOD_8 ( STRING_4 ) ; vm . METHOD_9 ( INT_1 ) ; vm . METHOD_10 ( false ) ; vm . METHOD_11 ( VAR_2 ) ; TYPE_1 . METHOD_12 ( vm ) ; return vm ; } 
private org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS VAR_2 ) { for ( org.ovirt.engine.core.common.businessentities.VDS VAR_3 : VAR_1 ) { if ( ( ( VAR_3 . METHOD_2 ( ) ) == ( VAR_4 ) ) && ( ! ( VAR_3 . getId ( ) . equals ( VAR_2 . getId ( ) ) ) ) ) { return VAR_3 ; } } return null ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; TYPE_2 VAR_6 = METHOD_4 ( ) ; if ( ( ( VAR_6 . getId ( ) ) == null ) || ( VAR_6 . getId ( ) . isEmpty ( ) ) ) { METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ; } } 
public static TYPE_1 map ( java.lang.String VAR_1 , TYPE_1 template ) { TYPE_1 model = ( template != null ) ? template : new TYPE_1 ( ) ; model . METHOD_1 ( VAR_1 ) ; model . setId ( new TYPE_2 ( VAR_1 . METHOD_2 ( ) , true ) . toString ( ) ) ; return model ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status ) { final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( status , STRING_1 , VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( TYPE_2 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { if ( ( ( ( METHOD_2 ( ) ) != null ) && ( ( METHOD_3 ( ) ) != null ) ) && ( ( METHOD_4 ( ) ) != null ) ) { VAR_1 = ( METHOD_5 ( ) ) - ( METHOD_6 ( ) ) ; VAR_1 = ( ( VAR_1 ) > 0 ) ? VAR_1 : 0 ; } } 
public final java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String [ ] VAR_2 = new java.lang.String [ 0 ] ; if ( VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) { java.util.List < java.lang.String > VAR_4 = VAR_3 . get ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = new java.lang.String [ VAR_4 . size ( ) ] ; VAR_2 = VAR_4 . METHOD_4 ( new java.lang.String [ ] { } ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 class ) ; java.util.List < java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; TYPE_3 . METHOD_4 ( STRING_2 , ( ( VAR_3 . METHOD_5 ( STRING_2 ) ) || ( VAR_3 . METHOD_5 ( STRING_3 ) ) ) ) ; TYPE_3 . METHOD_4 ( STRING_4 , VAR_3 . METHOD_5 ( STRING_4 ) ) ; } 
private void METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_1 ) ) { VAR_2 . METHOD_5 ( STRING_1 , TYPE_1 . METHOD_4 ( ) ) ; TYPE_2 . getInstance ( ) . METHOD_6 ( VAR_3 , new TYPE_3 ( TYPE_1 . METHOD_4 ( ) ) , TYPE_4 . METHOD_7 ( TYPE_1 . METHOD_8 ( ) , TYPE_1 . METHOD_9 ( ) ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito . METHOD_2 ( VAR_1 , org.mockito.Mockito . METHOD_3 ( ) ) . METHOD_4 ( VAR_2 . Frontend class , VAR_3 ) ; org.mockito.Mockito . METHOD_2 ( VAR_4 , org.mockito.Mockito . METHOD_3 ( ) ) . METHOD_4 ( VAR_2 . Frontend class , VAR_3 ) ; TYPE_1 . assertEquals ( STRING_1 , org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( ) , STRING_2 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_4 ( STRING_2 , VAR_1 ) ; METHOD_5 ( nic ) ; TYPE_1 VAR_2 = METHOD_6 ( METHOD_7 ( nic ) ) ; METHOD_8 ( VAR_2 ) ; } 
public static TYPE_1 . DiskImage METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 VAR_1 ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( TYPE_3 . METHOD_3 ( vm ) ) ; image . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ; image . METHOD_6 ( VAR_2 ) ; image . METHOD_7 ( VAR_3 ) ; return image ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 = VAR_2 . get ( iface . METHOD_2 ( ) ) ; if ( VAR_1 == null ) { VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ; VAR_2 . put ( iface . METHOD_2 ( ) , VAR_1 ) ; } VAR_1 . add ( iface ) ; } 
protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < java.lang.String > ( ) ; if ( ( METHOD_2 ( ) ) != null ) { for ( java.lang.Object item : METHOD_2 ( ) ) { TYPE_3 a = ( ( TYPE_3 ) ( item ) ) ; VAR_1 . add ( a . METHOD_3 ( ) ) ; } } return VAR_1 ; } 
private void METHOD_1 ( ) { cluster = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cluster ) . getId ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cluster ) . getStoragePoolId ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( cluster ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( cluster ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . DiskImage diskImage = METHOD_3 ( VAR_1 , VAR_2 ) ; diskImage . METHOD_4 ( true ) ; METHOD_5 ( VAR_3 , org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) , VAR_1 ) ; TYPE_2 . METHOD_7 ( command . validate ( ) ) ; TYPE_2 . METHOD_8 ( command . getReturnValue ( ) . METHOD_9 ( ) . METHOD_10 ( TYPE_3 . toString ( ) ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( INT_1 ) ; vm . setId ( vmId ) ; vm . METHOD_4 ( VAR_2 ) ; vm . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_7 ( ) ; METHOD_8 ( vm ) ; return vm ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = null ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_4 . getId ( ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 , VAR_4 , VAR_5 ) ; TYPE_2 VAR_6 = new TYPE_2 ( ) { public void METHOD_3 ( org.ovirt.engine.core.compat.Guid VAR_7 , TYPE_3 < java.lang.String > VAR_8 ) { TYPE_4 . METHOD_4 ( VAR_7 , VAR_8 ) ; } } ; return METHOD_5 ( VAR_1 , VAR_2 , VAR_6 , VAR_9 , METHOD_6 ( VAR_3 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( STRING_1 , null ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 = METHOD_2 ( STRING_2 , null ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; TYPE_1 VAR_3 = METHOD_4 ( METHOD_5 ( VAR_1 , VAR_1 , VAR_2 , VAR_2 ) ) ; METHOD_6 ( VAR_3 , VAR_4 , VAR_1 . getName ( ) , VAR_2 . getName ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; try { VAR_1 . METHOD_4 ( ) ; resource . METHOD_5 ( new TYPE_1 ( ) ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_7 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } } 
static java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { java.lang.String returnValue = VAR_1 ; if ( VAR_2 != null ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; returnValue = TYPE_2 . METHOD_1 ( VAR_1 , map ) ; } return returnValue ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) , TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_4 ( org.mockito.Mockito . METHOD_5 ( VAR_2 class ) ) ) ; validator = new TYPE_3 ( VAR_1 , VAR_3 , cluster , VAR_4 ) ; TYPE_4 . METHOD_6 ( validator . METHOD_7 ( ) , TYPE_5 . METHOD_8 ( VAR_5 ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { if ( ! ( TYPE_1 . METHOD_2 ( pool ) . isEmpty ( ) ) ) { VAR_1 . METHOD_3 ( ( STRING_1 + STRING_2 ) , pool . getName ( ) , pool . getId ( ) ) ; TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_2 , new TYPE_3 ( pool . getId ( ) , VAR_3 , VAR_4 ) ) ; synchronized ( VAR_5 ) { VAR_5 . METHOD_5 ( pool . getId ( ) ) ; } } } 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : hosts ) { VAR_1 . add ( new TYPE_1 ( vds . getId ( ) , METHOD_2 ( vds , parameters ) ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_5 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; if ( VAR_1 != null ) { METHOD_4 ( TYPE_2 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( METHOD_3 ( ) , METHOD_7 ( ) ) ) ; } } 
private static org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String network , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_1 ) { if ( network . equals ( i . METHOD_2 ( ) ) ) { return i ; } } for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_2 ) { if ( network . equals ( i . METHOD_2 ( ) ) ) { return i ; } } return null ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_1 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 1 ] } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) && ( ! ( METHOD_3 ( VAR_1 , VAR_2 ) ) ) ) { return false ; } METHOD_4 ( TYPE_1 . METHOD_5 ( ) . getStoragePoolId ( ) , TYPE_1 . getVm ( ) . METHOD_6 ( ) ) ; return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; TYPE_1 . StorageDomain model = TYPE_2 . getModel ( 0 ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_8 ( VAR_5 . METHOD_9 ( ) ) ; assertEquals ( VAR_5 . METHOD_9 ( ) . getStatus ( ) , INT_1 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( target ) ) ; VAR_1 . METHOD_3 ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; VAR_1 . METHOD_4 ( ) ; } } ) ) ; } 
public TYPE_1 . VdcQueryReturnValue RunQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) . getId ( ) ) ; return METHOD_5 ( ) . runQuery ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_2 ) ( model ) ) ; java.util.List < TYPE_3 > VAR_3 = ( ( java.util.List < TYPE_3 > ) ( ( ( TYPE_4 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; if ( VAR_3 != null ) { TYPE_5 . METHOD_2 ( VAR_3 , VAR_4 ) ; } METHOD_3 ( true ) ; VAR_2 . setItems ( VAR_3 ) ; METHOD_3 ( false ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; java.util.List < TYPE_1 > VAR_4 = new java.util.ArrayList < > ( ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_4 ) ; boolean VAR_6 = command . METHOD_5 ( VAR_1 ) ; TYPE_2 . METHOD_6 ( VAR_6 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < java.lang.String > ( ( ( java.util.ArrayList < java.lang.String > ) ( source ) ) ) : new java.util.ArrayList < java.lang.String > ( ) ; } } ; TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_2 , tempVar , aQuery ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_1 ) { if ( TYPE_1 . METHOD_2 ( i . METHOD_3 ( ) ) ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; METHOD_2 ( VAR_1 ) ; TYPE_3 VAR_3 = TYPE_4 . METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_5 . METHOD_5 ( ) ; try { TYPE_4 . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_5 VAR_6 ) { METHOD_8 ( VAR_6 , VAR_7 , VAR_1 ) ; } } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_2 ( ) . setIsChangable ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . setIsChangable ( false ) ; } } } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_8 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( new TYPE_3 . ValidationResult ( VAR_4 ) ) ; TYPE_4 . METHOD_9 ( command , VAR_5 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( ) . METHOD_7 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; TYPE_3 . log ( VAR_3 , VAR_6 ) ; return TYPE_4 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_5 , VAR_7 ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( returnValue ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } } ; org.ovirt.engine.core.common.businessentities.VDS vds = getEntity ( ) ; TYPE_1 . getInstance ( ) . METHOD_6 ( VAR_1 , vds . METHOD_7 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( disk . getId ( ) , TYPE_3 . METHOD_2 ( ) ) , VAR_1 , TYPE_4 . getName ( ) , STRING_1 , 0 , null , true , TYPE_3 . getParameters ( ) . METHOD_3 ( ) , TYPE_3 . getParameters ( ) . METHOD_4 ( ) , STRING_1 , null , TYPE_3 . getParameters ( ) . METHOD_5 ( ) , null ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( INT_1 ) ; METHOD_3 ( 0 , 2 ) ; METHOD_4 ( ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( new int [ ] { 0 } ) ; METHOD_7 ( new int [ ] { 0 } ) ; METHOD_8 ( new int [ ] { 0 } ) ; METHOD_9 ( new int [ ] { 0 } ) ; METHOD_10 ( new int [ ] { 0 } ) ; METHOD_5 ( 1 ) ; } 
private TYPE_1 METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 = METHOD_3 ( VAR_2 ) ; TYPE_2 VAR_3 = METHOD_4 ( network , VAR_1 , null ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_3 . getId ( ) ) ) . thenReturn ( VAR_3 ) ; TYPE_1 validator = new TYPE_3 ( ) . METHOD_5 ( new TYPE_4 ( ) . METHOD_6 ( VAR_3 ) ) . METHOD_7 ( network ) . METHOD_8 ( VAR_1 ) . METHOD_9 ( ) ; return validator ; } 
public static boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 a : VAR_1 ) { if ( ( ( ( a . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( ( a . METHOD_3 ( ) ) != null ) ) && ( ( a . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { return true ; } } return false ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_4 = VAR_2 . METHOD_2 ( ) ; if ( ( VAR_3 == null ) || ( VAR_4 == null ) ) { throw new TYPE_2 ( STRING_1 ) ; } return VAR_3 . METHOD_3 ( VAR_4 ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( source ) ) ; return ! ( VAR_2 . isEmpty ( ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_1 , iface ) , aQuery ) ; } 
public java.util.Map METHOD_1 ( java.lang.String VAR_1 ) { final TYPE_1 host = METHOD_2 ( ) ; java.util.Map VAR_2 = METHOD_3 ( ) ; java.util.List VAR_3 = new java.util.ArrayList ( ) ; TYPE_2 . VM vm = host . METHOD_4 ( ) . get ( VAR_1 ) ; if ( vm != null ) { VAR_3 . add ( METHOD_5 ( vm ) ) ; } VAR_2 . put ( STRING_1 , VAR_3 ) ; TYPE_3 . METHOD_6 ( ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = STRING_1 ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( STRING_2 ) ; METHOD_4 ( disk , TYPE_2 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_1 . METHOD_7 ( 0 , INT_1 ) ) ) , TYPE_2 . METHOD_8 ( 1 ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; TYPE_2 . METHOD_1 ( VAR_1 , new TYPE_3 ( ) ) ; model . METHOD_2 ( ) . setItems ( VAR_1 ) ; model . METHOD_2 ( ) . METHOD_3 ( VAR_1 . isEmpty ( ) ) ; model . METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( command . METHOD_2 ( ) . get ( TYPE_1 . any ( VAR_1 . Guid class ) ) ) . thenReturn ( null ) ; org.mockito.Mockito.when ( command . METHOD_3 ( parameters . METHOD_4 ( ) . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( ) ) ; command . METHOD_7 ( ) ; TYPE_3 . METHOD_8 ( command . getReturnValue ( ) . getSucceeded ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_4 ( ) ; java.util.List < TYPE_2 > VAR_1 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_5 ( ) . setItems ( VAR_1 ) ; } } ) ) ; } 
protected void METHOD_1 ( TYPE_1 parameters ) { super . METHOD_2 ( parameters . METHOD_3 ( ) ) ; if ( ( ( METHOD_4 ( ) ) != null ) && ( ( METHOD_4 ( ) . getStoragePoolId ( ) ) != null ) ) { METHOD_5 ( METHOD_4 ( ) . getStoragePoolId ( ) ) ; } } 
public synchronized TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = null ; if ( VAR_2 . METHOD_2 ( id ) ) { return VAR_2 . get ( id ) ; } VAR_1 = ( ( TYPE_1 ) ( METHOD_3 ( VAR_3 class , id ) ) ) ; if ( VAR_1 == null ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( id ) ; } else { VAR_4 . METHOD_4 ( STRING_1 , id ) ; } VAR_2 . put ( id , VAR_1 ) ; return VAR_1 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( ) . METHOD_1 ( VAR_3 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) . setId ( TYPE_4 . METHOD_5 ( VAR_4 , VAR_2 ) ) ; return VAR_3 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_3 , org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) , VAR_1 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_4 = METHOD_6 ( VAR_5 ) ; VAR_4 . METHOD_7 ( VAR_6 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_7 = METHOD_6 ( VAR_8 ) ; VAR_7 . METHOD_7 ( VAR_6 ) ; org.mockito.Mockito.when ( VAR_9 . METHOD_8 ( TYPE_1 . any ( VAR_10 . Guid class ) ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_11 ) ) ; TYPE_3 . METHOD_9 ( command , VAR_12 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { TYPE_1 VAR_1 = super . METHOD_1 ( model ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( TYPE_3 . name ( ) ) ; VAR_2 . METHOD_4 ( null ) ; VAR_2 . METHOD_5 ( null ) ; return VAR_1 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 ) { TYPE_2 VAR_5 = ( VAR_2 == null ) ? TYPE_3 . METHOD_2 ( ) : TYPE_3 . METHOD_3 ( VAR_2 ) ; TYPE_4 . METHOD_4 ( STRING_1 , VAR_1 . getId ( ) , VAR_5 ) ; TYPE_4 . METHOD_4 ( STRING_2 , VAR_1 . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( VAR_3 ) ) ; TYPE_4 . METHOD_4 ( STRING_3 , VAR_1 . METHOD_7 ( ) , TYPE_3 . METHOD_6 ( VAR_4 ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } 
private static TYPE_1 METHOD_1 ( final org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . setId ( new TYPE_2 ( diskImage . METHOD_3 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ) ; return VAR_1 ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 2 ) ; VAR_1 . METHOD_3 ( new TYPE_2 < java.lang.Integer , java.lang.String > ( new java.lang.Integer ( 2 ) , TYPE_3 . toString ( ) ) ) ; VAR_1 . METHOD_4 ( 0 ) ; VAR_1 . METHOD_5 ( 0 ) ; VAR_1 . METHOD_6 ( METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) ) ; return TYPE_4 . METHOD_10 ( VAR_1 ) ; } 
private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) ; VAR_1 . append ( VAR_2 . METHOD_4 ( ) , VAR_2 . METHOD_5 ( ) ) ; if ( TYPE_2 . getInstance ( ) . METHOD_6 ( ) ) { VAR_1 . append ( VAR_2 . METHOD_7 ( ) , VAR_2 . METHOD_8 ( ) ) ; } VAR_1 . append ( VAR_2 . METHOD_9 ( ) , VAR_2 . METHOD_10 ( ) ) ; return VAR_1 . toString ( ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network network ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , network . METHOD_4 ( ) , network . getName ( ) , network . METHOD_5 ( ) , network . METHOD_6 ( ) , false , null ) ; return nic ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . setId ( STRING_1 ) ; METHOD_4 ( 1 , null ) ; METHOD_5 ( 1 , null ) ; METHOD_6 ( 1 , null ) ; METHOD_7 ( VAR_1 ) ; METHOD_8 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_1 } , true , true ) ; VAR_4 . add ( model ) ; } 
public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( getModel ( ) . METHOD_3 ( ) ) ; int VAR_2 = METHOD_4 ( ) ; if ( ( VAR_1 == 0 ) || ( VAR_1 == 0 ) ) { return ; } getModel ( ) . METHOD_5 ( ) . setSelectedItem ( ( VAR_2 / VAR_1 ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ) ; if ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( VAR_2 ) ; } else if ( VAR_3 < java.lang.Boolean > METHOD_5 ( VAR_4 ) ) { VAR_1 . METHOD_4 ( VAR_5 ) ; } org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( ) . METHOD_9 ( VAR_1 ) ; } 
private java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( TYPE_1 < TYPE_2 . Disk > VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > result = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; for ( TYPE_2 . Disk diskImage : VAR_1 ) { result . put ( ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( diskImage ) ) . METHOD_2 ( ) , ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( diskImage ) ) ) ; } return result ; } 
public void METHOD_1 ( ) { METHOD_2 ( 1 , VAR_1 ) ; disk = TYPE_1 . METHOD_3 ( ) ; disk . METHOD_4 ( STRING_1 ) ; validator = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( disk , VAR_2 ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( validator ) . METHOD_6 ( ) ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { if ( ! ( TYPE_2 . METHOD_2 ( getParameters ( ) . getVm ( ) . METHOD_3 ( ) ) ) ) { return TYPE_3 . METHOD_4 ( getParameters ( ) . getVm ( ) . METHOD_3 ( ) , VAR_1 ) ; } return null ; } 
public void METHOD_1 ( TYPE_1 vm ) { super . METHOD_1 ( vm ) ; VAR_1 . METHOD_2 ( false ) ; VAR_2 . METHOD_2 ( false ) ; VAR_3 . METHOD_2 ( false ) ; VAR_4 . METHOD_2 ( true ) ; VAR_5 . METHOD_2 ( false ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final java.lang.String VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_4 ) ; } 
protected void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = TYPE_3 . METHOD_2 ( METHOD_3 ( ) , METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( TYPE_4 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( VAR_3 ) ; VAR_6 . METHOD_5 ( VAR_1 , org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; for ( TYPE_2 iface : VAR_3 ) { METHOD_7 ( iface , VAR_2 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { VAR_1 . converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; TYPE_1 parameters = new TYPE_1 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , parameters , VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.lang.Object [ ] VAR_3 = ( ( java.lang.Object [ ] ) ( VAR_1 ) ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( VAR_3 [ 0 ] ) ) ; TYPE_2 VAR_5 = ( ( TYPE_2 ) ( VAR_3 [ 1 ] ) ) ; boolean VAR_6 = ( ( VAR_5 . METHOD_2 ( ) ) == ( VAR_7 ) ) && ( VAR_2 == null ) ; VAR_4 . METHOD_3 ( VAR_5 , VAR_6 ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { try { return new TYPE_1 ( vds . METHOD_2 ( ) , STRING_1 , true ) ; } catch ( TYPE_2 e ) { VAR_1 . error ( STRING_2 , vds . getId ( ) , vds . getName ( ) , vds . METHOD_2 ( ) , TYPE_3 . METHOD_3 ( e ) ) ; VAR_1 . METHOD_4 ( STRING_3 , e ) ; } return null ; } 
private void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = METHOD_2 ( ) ; TYPE_1 . when ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ) . thenReturn ( VAR_2 ) ; TYPE_1 . when ( VAR_2 . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_1 . when ( VAR_3 . METHOD_4 ( vmId ) ) . thenReturn ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( VAR_2 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_3 ( INT_1 ) ; VAR_3 . METHOD_4 ( 2 ) ; VAR_3 . METHOD_5 ( new TYPE_4 < org.ovirt.engine.core.compat.Guid > ( ) ) ; TYPE_5 . METHOD_6 ( VAR_1 . METHOD_7 ( STRING_1 , VAR_3 ) ) ; TYPE_5 . METHOD_6 ( VAR_1 . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( VAR_4 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( TYPE_3 . METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( cmd . validate ( ) ) ; TYPE_4 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_5 . name ( ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_4 . name ( ) ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) , VAR_2 , VAR_3 , VAR_4 . Collections < java.lang.String , java.lang.Object > METHOD_4 ( VAR_5 , STRING_1 ) , true , true ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = dao . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; dao . METHOD_4 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities . Network VAR_3 = dao . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_5 ( VAR_3 ) ; TYPE_1 . assertEquals ( VAR_1 , VAR_3 ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList ( VAR_1 . size ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_3 . getName ( ) ) ; VAR_4 . setId ( VAR_3 . getId ( ) ) ; VAR_2 . add ( VAR_4 ) ; } return VAR_2 ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , vmId ) , VAR_1 , TYPE_3 . getName ( ) , STRING_1 , 0 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , true , false , STRING_1 , null , null ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final TYPE_2 VAR_2 = new TYPE_3 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; final TYPE_2 VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_4 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public TYPE_1 . VdcQueryReturnValue RunQuery ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 ) { VAR_3 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) ) ; return METHOD_5 ( ) . RunQuery ( VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . DiskImage VAR_1 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( VAR_2 . getParameters ( ) . METHOD_5 ( ) . equals ( VAR_1 . METHOD_6 ( ) . get ( 0 ) ) ) ; TYPE_2 . METHOD_4 ( ( ( VAR_2 . getParameters ( ) . METHOD_7 ( ) ) == ( VAR_1 . METHOD_8 ( ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vds . METHOD_4 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_2 : VAR_1 ) { TYPE_2 . METHOD_5 ( vds . METHOD_4 ( ) , VAR_2 ) ; } return null ; } 
protected TYPE_1 getEntity ( int VAR_1 ) { TYPE_1 entity = new TYPE_1 ( ) ; entity . setId ( VAR_2 [ VAR_1 ] ) ; entity . METHOD_1 ( VAR_3 [ VAR_1 ] ) ; entity . METHOD_2 ( VAR_4 [ VAR_1 ] ) ; entity . METHOD_3 ( new TYPE_2 < java.lang.String > ( TYPE_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( STRING_1 ) ) ) ) ; entity . METHOD_6 ( VAR_5 ) ; return entity ; } 
private boolean METHOD_1 ( TYPE_1 model ) { for ( TYPE_2 a : VAR_1 . Linq < TYPE_2 > METHOD_2 ( METHOD_3 ( ) ) ) { if ( ( a . METHOD_4 ( ) ) == ( VAR_2 ) ) { return true ; } } return false ; } 
protected boolean METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , boolean VAR_2 , TYPE_1 . DiskImage diskImage , TYPE_2 VAR_3 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_4 ) { boolean VAR_5 = METHOD_2 ( diskImage ) ; if ( VAR_5 && ( VAR_1 . METHOD_3 ( VAR_4 ) ) ) { return false ; } return super . METHOD_1 ( VAR_1 , VAR_2 , diskImage , VAR_3 , VAR_4 ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_2 type , TYPE_3 VAR_3 ) { TYPE_4 dao = org.mockito.Mockito . METHOD_2 ( VAR_4 class ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( ) ) . thenReturn ( dao ) ; TYPE_1 VAR_6 = METHOD_4 ( VAR_1 , VAR_2 , type , VAR_3 ) ; org.mockito.Mockito.when ( dao . METHOD_5 ( VAR_1 , VAR_2 ) ) . thenReturn ( VAR_6 ) ; return VAR_6 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { final TYPE_1 . VdcQueryReturnValue VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( ! ( VAR_1 . getSucceeded ( ) ) ) { final TYPE_2 VAR_2 = ( ( TYPE_2 ) ( TYPE_3 . getInstance ( ) . METHOD_1 ( VAR_3 class ) ) ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; return ; } VAR_4 . onSuccess ( model , returnValue ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage disk ) { if ( ! ( disk . METHOD_2 ( ) ) ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( disk . getId ( ) ) ; if ( ! ( vms . isEmpty ( ) ) ) { return vms . get ( 0 ) ; } } return null ; } 
TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 ) ; VAR_1 . METHOD_2 ( STRING_1 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 , STRING_2 ) ; if ( ( VAR_6 ) != null ) { VAR_1 . METHOD_2 ( VAR_7 , VAR_6 ) ; } return VAR_1 ; } 
private void METHOD_1 ( ) { final org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { final TYPE_1 VAR_3 = ( ( TYPE_1 ) ( model ) ) ; VAR_3 . METHOD_3 ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( result ) ) ) ; METHOD_4 ( ) ; } } ; TYPE_2 . getInstance ( ) . METHOD_5 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; final java.lang.String VAR_4 = VAR_1 . METHOD_5 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; iface . METHOD_2 ( TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) ) ; iface . METHOD_4 ( TYPE_1 . instance ( ) . METHOD_5 ( ) ) ; iface . METHOD_6 ( INT_2 ) ; iface . METHOD_7 ( INT_2 ) ; return iface ; } 
private void METHOD_1 ( ) { for ( int i = 0 ; i < ( VAR_1 . length ) ; i ++ ) { org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 [ i ] . toString ( ) ) ) . thenReturn ( TYPE_1 . METHOD_2 ( i ) ) ; } } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 != null ) { org.ovirt.engine.core.compat.Guid VAR_2 = METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities . Network VAR_3 = METHOD_3 ( VAR_2 , null , VAR_1 ) ; if ( VAR_3 != null ) { return VAR_3 . getId ( ) . toString ( ) ; } } return null ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = ( - 1 ) * ( java.lang.Boolean . METHOD_1 ( VAR_1 . METHOD_2 ( ) , VAR_2 . METHOD_2 ( ) ) ) ; if ( VAR_3 != 0 ) { return VAR_3 ; } return VAR_4 . METHOD_1 ( VAR_1 . getName ( ) , VAR_2 . getName ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( ) ; VAR_2 . add ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( validator ) . METHOD_4 ( domain . getId ( ) ) ; TYPE_2 . METHOD_5 ( validator . METHOD_1 ( domain ) ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 ) { try { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( new TYPE_2 ( ) ) ; TYPE_3 . METHOD_3 ( STRING_1 ) . METHOD_4 ( VAR_2 ) ; } catch ( TYPE_4 | TYPE_5 VAR_3 ) { throw new TYPE_6 ( java.lang.String . METHOD_5 ( STRING_2 , VAR_1 , VAR_3 . METHOD_6 ( ) ) , VAR_3 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( command . validate ( ) ) ; org.mockito.Mockito . METHOD_4 ( validator , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_2 . any ( VAR_1 . Boolean class ) , TYPE_2 . any ( VAR_2 class ) ) ; org.mockito.Mockito . METHOD_4 ( validator , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_7 ( TYPE_2 . any ( VAR_1 . Boolean class ) , TYPE_2 . any ( VAR_3 class ) ) ; } 
public void METHOD_1 ( ) { java.lang.String version = METHOD_2 ( ) . toString ( ) ; TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( target ) ) ; VAR_2 = ( ( java.lang.Integer ) ( returnValue ) ) ; VAR_1 . METHOD_4 ( ) ; } } , getModel ( ) . METHOD_5 ( ) ) , version ) ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_1 VAR_1 = new TYPE_1 ( this , getEntity ( ) ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) . setItems ( TYPE_2 . METHOD_4 ( getEntity ( ) ) ) ; VAR_1 . METHOD_3 ( ) . setSelectedItem ( getEntity ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( getModel ( ) . METHOD_2 ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; boolean VAR_1 = ( cluster . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) >= 0 ; getModel ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; getModel ( ) . METHOD_7 ( ) . METHOD_6 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 , this . METHOD_3 ( ) . getName ( ) ) ; TYPE_1 . METHOD_4 ( new TYPE_2 < java.lang.Object > ( ) { public java.lang.Object METHOD_5 ( ) { try { TYPE_3 . getInstance ( ) . METHOD_6 ( getReturnValue ( ) . METHOD_7 ( ) ) ; } catch ( java.lang.Exception e ) { log . METHOD_8 ( STRING_2 , VAR_1 this . METHOD_3 ( ) . getName ( ) ) ; } return null ; } } ) ; } 
public boolean validate ( ) { int VAR_1 = ( TYPE_1 . METHOD_1 ( vm . METHOD_2 ( ) ) ) ? TYPE_1 . METHOD_3 ( ) : TYPE_1 . METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( new TYPE_2 [ ] { new TYPE_3 ( ) , new TYPE_4 ( VAR_1 ) , new TYPE_5 ( ) } ) ; return METHOD_5 ( ) . METHOD_7 ( ) ; } 
private TYPE_1 . Disk METHOD_1 ( java.util.List < TYPE_1 . Disk > VAR_1 ) { for ( TYPE_1 . Disk disk : VAR_1 ) { TYPE_2 VAR_2 = disk . METHOD_2 ( getVm ( ) . getId ( ) ) ; if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( ) ) ) { return disk ; } } return null ; } 
public void METHOD_1 ( ) { TYPE_1 . VM vm = new TYPE_1 . VM ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; vm . METHOD_4 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( ) ; TYPE_1 . VM map = TYPE_4 . map ( vm , null ) ; METHOD_6 ( map . METHOD_7 ( ) . METHOD_8 ( ) ) ; assertEquals ( map . METHOD_7 ( ) . METHOD_8 ( ) , STRING_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( getEntity ( ) . getStoragePoolId ( ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_2 < java.lang.String > ) ( returnValue ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } } ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( ) { public TYPE_3 . Disk METHOD_2 ( org.ovirt.engine.core.compat.Guid VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return inject ( new TYPE_6 < TYPE_3 . Disk , TYPE_3 . Disk > ( VAR_5 , VAR_2 , VAR_4 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( STRING_1 ) ; vm . METHOD_3 ( VAR_1 ) ; java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; TYPE_1 . METHOD_4 ( VAR_3 . METHOD_5 ( vm , VAR_2 ) ) ; TYPE_1 . METHOD_4 ( VAR_2 . isEmpty ( ) ) ; } 
private void METHOD_1 ( java.lang.String action , java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( action ) ) ; if ( ( action . equals ( STRING_1 ) ) || ( action . equals ( STRING_2 ) ) ) { VAR_2 . METHOD_4 ( VAR_1 ) ; } else { VAR_3 . METHOD_5 ( STRING_3 ) ; throw new TYPE_2 ( ( ( ( ( STRING_4 + action ) + CHAR_1 ) + VAR_1 ) + STRING_5 ) ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; TYPE_2 value = new TYPE_2 ( ) ; value . METHOD_3 ( STRING_1 ) ; value . METHOD_4 ( ) . add ( VAR_3 ) ; value . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_3 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( value ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getSelectedItem ( ) ) ) ; org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_3 = new TYPE_2 ( ( ( org.ovirt.engine.core.common.businessentities.VM ) ( result ) ) , VAR_4 this ) ; METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( ) ; } } ; TYPE_3 . METHOD_4 ( VAR_1 , vm . getId ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . VM class ) ) ; command . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( command ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_8 ( 0 ) ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . VM class ) ) ; } 
public TYPE_1 METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities . network > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( getStoragePoolId ( ) . getValue ( ) ) ; for ( final org.ovirt.engine.core.common.businessentities . network VAR_2 : VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_6 ( VAR_2 . getId ( ) ) ; } METHOD_4 ( ) . METHOD_7 ( ) ; return null ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( sender ) ) ; java.lang.String VAR_2 = ( ( TYPE_4 ) ( args ) ) . VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { METHOD_2 ( model ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 . getId ( ) ) ) . thenReturn ( VAR_1 ) ; command . METHOD_4 ( VAR_1 . getId ( ) ) ; TYPE_1 . METHOD_5 ( command . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) . toString ( ) ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_2 < TYPE_3 , TYPE_4 > VAR_2 = METHOD_6 ( VAR_3 ) ; VAR_2 . METHOD_7 ( ) . setId ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; METHOD_8 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { try { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; TYPE_3 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_4 . METHOD_3 ( VAR_1 ) ; TYPE_5 . METHOD_4 ( STRING_1 , VAR_2 ) ; TYPE_5 . METHOD_5 ( STRING_2 , ( ! ( VAR_2 . isEmpty ( ) ) ) ) ; } catch ( java.lang.Exception e ) { e . METHOD_6 ( ) ; } } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; TYPE_2 VAR_1 = new TYPE_2 ( vds ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_2 ) ) ; } 
protected org.ovirt.engine.core.common.businessentities . VdsNetworkInterface map ( TYPE_1 entity , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface template ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = super . map ( entity , template ) ; if ( entity . METHOD_1 ( ) ) { TYPE_2 . Network VAR_1 = METHOD_2 ( entity . METHOD_3 ( ) ) ; iface . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } return iface ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { java.lang.String VAR_3 = new java.lang.Integer ( VAR_1 . METHOD_2 ( ) ) . toString ( ) ; if ( ( ! ( TYPE_2 . isEmpty ( VAR_3 ) ) ) && ( ! ( VAR_3 . equals ( STRING_1 ) ) ) ) { VAR_2 . put ( VAR_4 , VAR_3 ) ; } } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; try { if ( ! ( VAR_4 ) ) { METHOD_5 ( STRING_2 ) ; } for ( java.lang.String VAR_5 : VAR_1 ) { METHOD_6 ( VAR_5 ) ; } } finally { VAR_3 . METHOD_3 ( ) . METHOD_7 ( ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { VAR_2 = new TYPE_3 ( VAR_3 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) { VAR_2 = new TYPE_3 ( VAR_4 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_3 ) ) { VAR_2 = new TYPE_3 ( VAR_5 class ) ; } else { } return VAR_2 ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; java.lang.Integer VAR_1 = getModel ( ) . METHOD_3 ( ) . getSelectedItem ( ) ; if ( ( cluster != null ) && ( VAR_1 != null ) ) { METHOD_1 ( cluster . METHOD_4 ( ) , VAR_1 ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , METHOD_3 ( ) ) ; METHOD_2 ( VAR_6 , VAR_7 class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , METHOD_4 ( ) , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . METHOD_4 ( ) ) { VAR_3 . put ( VAR_2 . getId ( ) , TYPE_2 . METHOD_5 ( VAR_2 , METHOD_6 ( ) ) ) ; } else { VAR_3 . put ( VAR_2 . getId ( ) , new TYPE_2 ( VAR_2 , METHOD_6 ( ) ) ) ; } } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . any ( VAR_2 class ) ) ; TYPE_2 . assertEquals ( VAR_3 , cmd . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( METHOD_6 ( ) , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_7 ( ) , VAR_3 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , java.lang.String VAR_4 , java.lang.String action , TYPE_2 . VdcActionType VAR_5 , java.lang.String VAR_6 ) { TYPE_3 VAR_7 = getSelectedItem ( ) ; if ( VAR_7 == null ) { return ; } METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_8 . METHOD_3 ( ) , VAR_9 . METHOD_4 ( action ) , VAR_1 , VAR_7 . METHOD_5 ( ) , VAR_7 . METHOD_6 ( ) , VAR_7 . METHOD_7 ( ) ) ; METHOD_8 ( VAR_5 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_3 ( null ) ; TYPE_1 parameters = METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_2 VAR_4 = METHOD_5 ( parameters ) ; METHOD_6 ( VAR_1 , VAR_3 ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 , VAR_1 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; } 
private void METHOD_1 ( ) { for ( TYPE_1 . Disk image : METHOD_2 ( ) ) { VAR_1 . put ( image . getId ( ) , ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( image ) ) ) ; } TYPE_2 . getParameters ( ) . METHOD_3 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; model . METHOD_1 ( ( result != null ? ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) : new java.util.ArrayList < TYPE_3 > ( ) ) ) ; } 
private static java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_1 < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 ) { if ( VAR_1 == null ) { return TYPE_2 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( vm . getId ( ) ) , true , false ) ; } else { return TYPE_2 . METHOD_2 ( VAR_1 , true , false ) ; } } 
public boolean METHOD_1 ( ) { TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . METHOD_2 ( INT_1 ) ; getName ( ) . METHOD_3 ( new TYPE_2 [ ] { new TYPE_3 ( ) , tempVar } ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( INT_2 ) ; METHOD_4 ( ) . METHOD_3 ( new TYPE_2 [ ] { new TYPE_3 ( ) , VAR_1 } ) ; return ( getName ( ) . METHOD_5 ( ) ) && ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . String class ) ) ) . thenReturn ( org.mockito.Mockito . METHOD_3 ( VAR_3 . VDS class ) ) ; TYPE_2 . METHOD_4 ( validator . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( VAR_4 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( java.lang.Boolean ) ( source ) ) ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( name ) , aQuery ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . DiskImage disk = METHOD_2 ( ) ; disk . METHOD_3 ( VAR_1 ) ; disk . METHOD_4 ( true ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( disk ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_2 . any ( VAR_5 . Integer class ) , TYPE_2 . any ( VAR_6 . Version class ) ) ) . thenReturn ( new TYPE_3 < > ( VAR_7 ) ) ; METHOD_6 ( false ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 . RunVmCommand < TYPE_2 > VAR_1 ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; TYPE_3 . METHOD_3 ( VAR_1 , VAR_3 ) ; org.mockito.Mockito.when ( VAR_3 . get ( command . getParameters ( ) . METHOD_4 ( ) ) ) . thenReturn ( vm ) ; TYPE_4 . METHOD_5 ( VAR_4 class ) ; return vm ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; for ( TYPE_1 parameters : VAR_1 . getParameters ( ) . METHOD_3 ( ) ) { METHOD_4 ( parameters ) ; TYPE_2 . METHOD_5 ( parameters . METHOD_6 ( ) , VAR_2 ) ; } TYPE_3 . METHOD_7 ( VAR_1 . METHOD_8 ( ) , true ) ; VAR_1 . METHOD_9 ( null ) ; } 
public float METHOD_1 ( float VAR_1 , boolean VAR_2 ) { if ( VAR_1 <= FLOAT_1 ) { throw new TYPE_1 ( STRING_1 ) ; } float VAR_3 = super . METHOD_1 ( ) ; if ( ! VAR_2 ) { while ( VAR_3 == FLOAT_2 ) { VAR_3 = super . METHOD_1 ( ) ; } } return VAR_3 * VAR_1 ; } 
protected void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . getId ( ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( result ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( ( domain . METHOD_4 ( ) ) == ( VAR_2 ) ) { result . METHOD_5 ( domain ) ; } } TYPE_1 . METHOD_6 ( ) . METHOD_7 ( result ) ; } 
private java.lang.String METHOD_1 ( int length ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; for ( int i = 0 ; i < length ; i ++ ) { int VAR_3 = VAR_1 . METHOD_2 ( TYPE_3 . length ( ) ) ; char VAR_4 = TYPE_3 . METHOD_3 ( VAR_3 ) ; VAR_2 . append ( VAR_4 ) ; } return VAR_2 . toString ( ) ; } 
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return ; } TYPE_1 < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( ) { public void METHOD_6 ( TYPE_3 VAR_2 , java.lang.Object sender , TYPE_4 args ) { METHOD_7 ( ) ; } } ) ; if ( ( VAR_1 . getSelectedItem ( ) ) != null ) { METHOD_7 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_1 ( VAR_2 ) ) ; TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ; try { TYPE_3 . METHOD_3 ( new TYPE_4 ( VAR_3 , STRING_1 , VAR_1 . get ( 0 ) ) ) ; } catch ( TYPE_5 VAR_4 ) { return ; } TYPE_6 . METHOD_4 ( STRING_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; org.mockito.Mockito . METHOD_3 ( VAR_2 ) . METHOD_4 ( cluster ) ; org.mockito.Mockito . METHOD_3 ( VAR_3 ) . METHOD_5 ( TYPE_1 . METHOD_6 ( VAR_4 ) , TYPE_1 . any ( VAR_5 class ) ) ; TYPE_2 . METHOD_7 ( VAR_1 . getReturnValue ( ) . getSucceeded ( ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( STRING_1 ) . when ( METHOD_4 ( ) ) . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( ) ) . when ( VAR_5 ) . METHOD_7 ( TYPE_1 . any ( VAR_6 . Guid class ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_2 ) { void METHOD_3 ( ) { } } ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_1 ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , TYPE_2 . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_6 ( ) , TYPE_2 . METHOD_6 ( ) ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { METHOD_1 ( ) ; getModel ( ) . METHOD_2 ( ) . setEntity ( ( ( java.lang.Boolean ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; METHOD_3 ( ) ; if ( VAR_2 ) { METHOD_4 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_2 ) ) . when ( VAR_3 ) . METHOD_5 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_4 ) ) . when ( VAR_3 ) . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( cmd ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( false ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_2 , STRING_2 , STRING_3 , VAR_3 , null , null , TYPE_4 . METHOD_5 ( VAR_1 ) ) , null ) ) ; METHOD_6 ( VAR_4 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( TYPE_1 response ) { TYPE_2 id = response . getId ( ) ; if ( VAR_1 class . METHOD_2 ( id ) ) { this . VAR_2 . METHOD_3 ( response ) ; } TYPE_3 VAR_3 = this . VAR_2 . METHOD_4 ( response . getId ( ) ) ; if ( VAR_3 == null ) { this . log . error ( STRING_1 , response . getId ( ) ) ; return ; } VAR_3 . METHOD_5 ( response ) ; } 
private TYPE_1 METHOD_1 ( final java.lang.String VAR_1 , final TYPE_2 < ? > VAR_2 , final TYPE_3 VAR_3 ) { return new TYPE_1 ( ) { public TYPE_4 METHOD_2 ( ) { TYPE_4 VAR_4 = ( ( TYPE_4 ) ( VAR_5 . METHOD_3 ( VAR_6 ) . METHOD_4 ( VAR_1 ) ) ) ; VAR_4 . METHOD_5 ( VAR_7 , VAR_2 ) ; VAR_4 . METHOD_6 ( ) . METHOD_7 ( TYPE_5 . METHOD_8 ( VAR_3 ) . METHOD_9 ( ) ) ; return VAR_4 ; } } ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 < TYPE_4 > VAR_2 = model . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { TYPE_4 VAR_3 = model . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; METHOD_7 ( TYPE_5 . METHOD_8 ( VAR_3 ) ) ; } } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 VAR_3 , java.lang.String VAR_4 , java.lang.String action , TYPE_2 . VdcActionType VAR_5 , java.lang.String VAR_6 ) { TYPE_3 VAR_7 = getSelectedItem ( ) ; if ( VAR_7 == null ) { return ; } METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_8 . METHOD_3 ( ) , VAR_9 . METHOD_4 ( action ) , VAR_1 , VAR_7 . METHOD_5 ( ) , VAR_7 . METHOD_6 ( ) , VAR_7 . METHOD_7 ( ) , null ) ; METHOD_8 ( VAR_5 ) ; } 
private static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , final boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 VAR_3 : ( ( TYPE_2 < TYPE_1 > ) ( source ) ) ) { if ( ( ! VAR_1 ) || ( VAR_3 . METHOD_2 ( ) ) ) { VAR_2 . add ( VAR_3 . METHOD_3 ( ) ) ; } } return VAR_2 ; } } ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Disk model = new TYPE_1 . Disk ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 , STRING_5 , STRING_6 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( METHOD_3 ( null ) ) ; VAR_2 . add ( VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_2 ( VAR_5 ) ; METHOD_4 ( VAR_4 ) ; VAR_6 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_7 ) { METHOD_8 ( VAR_7 , VAR_8 , VAR_4 ) ; } finally { VAR_2 . METHOD_9 ( ) ; } } 
private < TYPE_1 > TYPE_1 METHOD_1 ( java.lang.Object source , TYPE_2 < TYPE_1 > type , TYPE_3 VAR_1 ) { try { return VAR_1 . METHOD_2 ( source . toString ( ) , type ) ; } catch ( TYPE_4 e ) { throw new TYPE_5 ( e ) ; } catch ( TYPE_6 e ) { throw new TYPE_5 ( e ) ; } catch ( TYPE_7 e ) { throw new TYPE_5 ( e ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 == ( VAR_3 ) ) { return METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } else if ( VAR_2 == ( VAR_4 ) ) { return METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; } else { VAR_5 . error ( STRING_1 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_4 ( ) ) ; } return VAR_6 ; } 
protected void METHOD_1 ( TYPE_1 model ) throws java.lang.Exception { METHOD_2 ( model ) ; assertEquals ( TYPE_2 . METHOD_3 ( VAR_1 , STRING_1 ) , model . getId ( ) ) ; assertEquals ( TYPE_3 . value ( ) , model . getStatus ( ) . METHOD_4 ( ) ) ; METHOD_5 ( model ) ; } 
public void METHOD_1 ( ) { TYPE_1 . VM vm = new TYPE_1 . VM ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; vm . METHOD_4 ( VAR_1 ) ; TYPE_1 . VM map = TYPE_3 . map ( vm , ( ( TYPE_1 . VM ) ( null ) ) ) ; METHOD_5 ( map . METHOD_6 ( ) . METHOD_7 ( ) ) ; assertEquals ( map . METHOD_6 ( ) . METHOD_7 ( ) , STRING_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 0 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , aQuery ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . METHOD_2 ( INT_1 ) ; getName ( ) . METHOD_3 ( new TYPE_2 [ ] { new TYPE_3 ( ) , tempVar , new TYPE_4 ( ) } ) ; return getName ( ) . METHOD_4 ( ) ; } 
private static java.lang.String METHOD_1 ( TYPE_1 . AuditLogType VAR_1 ) { final java.lang.String VAR_2 = VAR_1 . name ( ) ; try { return VAR_3 . getString ( VAR_2 ) ; } catch ( java.lang.Exception e ) { VAR_4 . error ( STRING_1 , VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; return null ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( TYPE_1 . instance ( ) . METHOD_5 ( ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_2 VAR_2 = METHOD_8 ( METHOD_9 ( nic ) ) ; METHOD_10 ( VAR_2 ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == null ) { TYPE_2 VAR_1 = METHOD_3 ( VAR_2 ) ; if ( VAR_1 != null ) { TYPE_1 . getVm ( ) . METHOD_4 ( VAR_1 ) ; } else { TYPE_1 . getVm ( ) . METHOD_4 ( METHOD_3 ( VAR_3 ) ) ; } } } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { if ( ( ( VAR_1 . getId ( ) ) != null ) && ( ! ( VAR_1 . getId ( ) . equals ( STRING_1 ) ) ) ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_3 , new TYPE_2 ( VAR_1 , VAR_2 ) , null , this ) ; } } 
public static TYPE_1 METHOD_1 ( java.lang.String url , java.lang.String VAR_1 , java.util.List < TYPE_2 > params ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( ( VAR_1 + ( VAR_3 ) ) ) ; VAR_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( ( url + ( VAR_4 ) ) , params ) ) ; return VAR_2 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ; TYPE_2 VAR_4 = ( VAR_2 == null ) ? null : METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_6 ) , TYPE_3 . any ( VAR_7 class ) ) ) . thenReturn ( VAR_3 ) . thenReturn ( VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . VDS ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( STRING_1 ) ; VAR_2 . METHOD_5 ( STRING_2 ) ; VAR_2 . METHOD_6 ( STRING_3 ) ; VAR_2 . METHOD_7 ( true ) ; VAR_2 . METHOD_8 ( STRING_4 ) ; VAR_3 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_5 ) ) ; } 
public boolean METHOD_1 ( java.lang.Integer value , TYPE_1 context ) { final java.util.List < java.lang.String > VAR_1 = VAR_2 < java.util.List < java.lang.String > > METHOD_2 ( VAR_3 ) ; if ( ( value == null ) || ( VAR_1 == null ) ) { return false ; } return VAR_1 . METHOD_3 ( value . toString ( ) ) ; } 
public final void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.Object value ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_1 ( ) ; VAR_4 . put ( VAR_5 , VAR_1 ) ; TYPE_1 VAR_6 = VAR_7 . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( VAR_6 != null ) { VAR_3 = VAR_6 ; } } VAR_4 . put ( VAR_2 , value ) ; } 
public void METHOD_1 ( TYPE_1 object ) { VAR_1 . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ) ; VAR_1 . METHOD_1 ( object . METHOD_3 ( ) ) ; VAR_2 . METHOD_1 ( object ) ; METHOD_4 ( object ) ; METHOD_5 ( object ) ; METHOD_6 ( object ) ; METHOD_7 ( object ) ; VAR_3 . METHOD_8 ( false ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_2 id = null ; try { id = new TYPE_2 ( name . METHOD_2 ( STRING_1 ) ) ; } catch ( TYPE_3 e ) { return null ; } return new TYPE_1 ( this , id , name ) ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 . DiskImage diskImage : vm . METHOD_2 ( ) ) { VAR_1 . add ( TYPE_3 . METHOD_3 ( diskImage ) ) ; } getModel ( ) . METHOD_4 ( VAR_1 ) ; getModel ( ) . METHOD_5 ( ) . METHOD_6 ( true ) ; getModel ( ) . METHOD_5 ( ) . METHOD_7 ( true ) ; METHOD_8 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; disk . setId ( VAR_3 ) ; disk . METHOD_3 ( VAR_1 ) ; VAR_4 . add ( disk ) ; VAR_5 . add ( METHOD_4 ( VAR_3 , VAR_2 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.util.Map < java.lang.String , java.lang.String > VAR_4 = new java.util.HashMap < > ( ) ; VAR_4 . put ( STRING_1 , VAR_2 ) ; VAR_4 . put ( STRING_2 , VAR_3 ) ; TYPE_2 tempVar = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , VAR_1 , VAR_4 ) ; tempVar . METHOD_3 ( true ) ; TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_5 , tempVar , TYPE_5 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( STRING_3 ) ; dao . METHOD_5 ( TYPE_2 . METHOD_6 ( new TYPE_1 [ ] { VAR_2 , VAR_1 } ) ) ; TYPE_3 . assertEquals ( VAR_2 , dao . get ( VAR_2 . getId ( ) ) ) ; TYPE_3 . assertEquals ( VAR_1 , dao . get ( VAR_1 . getId ( ) ) ) ; } 
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_3 . put ( VAR_4 , VAR_4 ) ; } METHOD_2 ( ) ; for ( TYPE_1 VAR_1 : VAR_2 ) { METHOD_3 ( ) . put ( VAR_4 , VAR_5 ) ; } for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_6 . put ( VAR_4 , VAR_7 ) ; } METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( ) { void METHOD_3 ( ) { } } ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_1 ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , TYPE_2 . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_1 ) . METHOD_7 ( TYPE_2 . METHOD_6 ( ) , TYPE_2 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { cluster = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; VAR_2 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_3 , cluster . METHOD_3 ( ) . getValue ( ) ) ) ) ; METHOD_4 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( ( source != null ) && ( ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ) ) { return true ; } return false ; } } ; TYPE_1 . METHOD_2 ( aQuery , VAR_1 , 1 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
protected boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return METHOD_3 ( VAR_1 ) ; } if ( ( ( METHOD_2 ( ) . METHOD_4 ( ) ) == null ) || ( ! ( METHOD_2 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ) ) ) { return METHOD_3 ( VAR_2 ) ; } return true ; } 
protected void METHOD_1 ( ) { VAR_1 . add ( VAR_2 , vm . METHOD_2 ( ) . toString ( ) ) ; if ( ( vm . METHOD_2 ( ) ) != ( vm . METHOD_3 ( ) ) ) { METHOD_4 ( vm . METHOD_2 ( ) ) ; } else { METHOD_5 ( vm . getId ( ) ) ; } } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_3 : VAR_2 ) { if ( TYPE_2 . METHOD_6 ( VAR_1 . getName ( ) , VAR_3 . getName ( ) ) ) { return VAR_3 ; } } throw new TYPE_3 ( VAR_4 ) ; } 
private static void METHOD_1 ( TYPE_1 command ) { final TYPE_2 dao = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; final org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; pool . setId ( command . getParameters ( ) . getStoragePoolId ( ) ) ; org.mockito.Mockito.when ( dao . get ( TYPE_3 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( pool ) ; org.mockito.Mockito.doReturn ( dao ) . when ( command ) . METHOD_3 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < TYPE_3 > VAR_2 = new TYPE_4 < > ( ) ; VAR_2 . add ( VAR_3 ) ; for ( TYPE_5 VAR_4 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_2 . add ( VAR_4 . METHOD_4 ( ) ) ; } VAR_1 . METHOD_4 ( ) . setItems ( VAR_2 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( command ) . METHOD_6 ( TYPE_1 . METHOD_7 ( VAR_2 class ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , false ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( true ) ; METHOD_10 ( true ) ; TYPE_3 . METHOD_11 ( command , VAR_3 ) ; } 
private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( TYPE_3 . getParameters ( ) ) ; return VAR_2 ; } 
public TYPE_1 getStoragePoolId ( ) { if ( ( super . getStoragePoolId ( ) ) == null ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_2 . getVm ( ) ; if ( vm != null ) { METHOD_1 ( vm . METHOD_2 ( ) ) ; } } return super . getStoragePoolId ( ) ; } 
protected boolean METHOD_1 ( ) { return ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) . isEmpty ( ) ) == false ) && ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) ) ) == false ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_1 . METHOD_4 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_5 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; dao . METHOD_3 ( VAR_1 ) ; TYPE_1 result = dao . get ( new TYPE_2 ( VAR_1 . METHOD_4 ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_5 ( ) . toString ( ) ) ) ) ; TYPE_3 . METHOD_6 ( result ) ; TYPE_3 . assertEquals ( VAR_1 , result ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat . Version version ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_2 ( version ) , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 result ) { java.util.List < TYPE_2 . VdcQueryReturnValue > VAR_1 = result . METHOD_2 ( ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( VAR_1 . get ( 0 ) . getReturnValue ( ) ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_3 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( VAR_1 . get ( 1 ) . getReturnValue ( ) ) ) ; METHOD_3 ( VAR_2 , true , false ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_2 . METHOD_3 ( ) ) . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_2 . METHOD_4 ( ) ) . addValue ( STRING_3 , null ) . addValue ( STRING_4 , null ) . addValue ( STRING_5 , VAR_2 . METHOD_5 ( ) ) . addValue ( STRING_6 , VAR_2 . METHOD_6 ( ) ) ; return VAR_3 ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; list . add ( new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( ) . get ( 0 ) , ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) . METHOD_5 ( ) ) ) ; return list ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , true ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( true ) ; METHOD_7 ( true ) ; METHOD_8 ( true ) ; TYPE_3 . METHOD_9 ( command , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_1 . METHOD_2 ( ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_3 == null ) { continue ; } for ( TYPE_2 VAR_4 : METHOD_2 ( ) ) { if ( VAR_3 . equals ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { METHOD_5 ( VAR_2 . METHOD_3 ( ) , VAR_4 . METHOD_3 ( ) ) ; break ; } } } } 
protected TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_1 VAR_3 = TYPE_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_4 ) ; if ( ( null != VAR_3 ) && ( ! ( TYPE_4 . METHOD_4 ( VAR_3 ) ) ) ) { VAR_3 = TYPE_4 . METHOD_2 ( METHOD_5 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) , VAR_4 ) ; } return VAR_3 ; } 
public void setEntity ( org.ovirt.engine.core.common.businessentities.VDS value ) { if ( ( super . getEntity ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( super . getEntity ( ) ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_2 = value ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_2 . getId ( ) ; if ( VAR_3 . equals ( VAR_4 ) ) { setEntity ( value , false ) ; METHOD_1 ( ) ; return ; } } super . setEntity ( value ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( VAR_2 ) == null ) ) { VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; if ( ( VAR_2 ) != null ) { VAR_1 = VAR_2 . METHOD_4 ( ) ; } } return VAR_1 ; } 
private void METHOD_1 ( ) { cluster = new TYPE_1 ( ) ; cluster . METHOD_2 ( VAR_1 ) ; cluster . METHOD_3 ( VAR_2 ) ; cluster . METHOD_4 ( VAR_3 ) ; cluster . METHOD_5 ( VAR_4 ) ; cluster . METHOD_6 ( VAR_5 ) ; cluster . METHOD_7 ( VAR_6 ) ; cluster . METHOD_8 ( VAR_7 ) ; cluster . METHOD_9 ( VAR_8 ) ; cluster . METHOD_10 ( VAR_9 ) ; cluster . METHOD_11 ( VAR_10 ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( validate ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ) { return false ; } if ( ! ( validate ( METHOD_4 ( ) . METHOD_5 ( ) ) ) ) { return false ; } return METHOD_6 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; for ( TYPE_2 VAR_2 : METHOD_6 ( VAR_1 . METHOD_7 ( ) , STRING_1 , VAR_1 . METHOD_5 ( ) ) ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_8 ( ) . METHOD_4 ( VAR_2 . METHOD_9 ( ) ) ; } } } 
private static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { final org.ovirt.engine.core.compat.Guid VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 , VAR_1 ) ; if ( ( VAR_2 != null ) && ( VAR_4 != null ) ) { return new TYPE_1 ( VAR_2 , VAR_4 ) ; } return null ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { TYPE_3 VAR_1 = action . METHOD_2 ( ) ; METHOD_3 ( VAR_1 , STRING_1 ) ; return METHOD_1 ( action , VAR_1 . getName ( ) , ( action . METHOD_4 ( ) ? action . METHOD_5 ( ) : false ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 ) { byte [ ] VAR_2 ; try { VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; } catch ( TYPE_1 e ) { throw new TYPE_2 ( STRING_1 , e ) ; } VAR_4 . add ( VAR_5 , VAR_2 ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; TYPE_1 . assertEquals ( result . get ( 0 ) . getId ( ) , VAR_4 . getId ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String value , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = TYPE_4 . get ( ) . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_3 ( value ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_3 VAR_4 = TYPE_4 . get ( ) . METHOD_2 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; } 
public static boolean METHOD_1 ( int value , java.util.ArrayList < java.lang.String > VAR_1 ) { boolean VAR_2 = false ; if ( ( value >= 0 ) && ( value <= ( VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) ) ) { VAR_2 = true ; } else { VAR_1 . add ( TYPE_1 . toString ( ) ) ; VAR_1 . add ( java.lang.String . METHOD_3 ( STRING_1 , VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( METHOD_3 ( null ) ) ; VAR_2 . add ( VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_2 ( VAR_5 ) ; METHOD_4 ( VAR_6 , VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_7 ) ; try { METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_8 ) { METHOD_8 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_9 ( ) ; } } 
private void METHOD_1 ( boolean VAR_1 ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_4 ( ) ) . thenReturn ( VAR_3 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_5 ) ; METHOD_9 ( ) . METHOD_10 ( true ) ; METHOD_9 ( ) . METHOD_11 ( ) ; TYPE_1 . METHOD_12 ( METHOD_9 ( ) , true ) ; METHOD_13 ( METHOD_9 ( ) ) ; } 
protected java.util.Map < TYPE_1 , java.lang.Integer > METHOD_1 ( TYPE_2 < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { java.util.Map < org.ovirt.engine.core.common.businessentities.DiskImage , TYPE_1 > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.common.businessentities.DiskImage , TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities.DiskImage image : VAR_1 ) { TYPE_1 domain = METHOD_2 ( VAR_3 . get ( image . getId ( ) ) ) ; VAR_2 . put ( image , domain ) ; } return TYPE_3 . METHOD_1 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 model = new TYPE_1 ( this , getEntity ( ) . METHOD_2 ( ) , ( ( TYPE_2 ) ( getSelectedItem ( ) ) ) , getEntity ( ) . METHOD_3 ( ) ) ; METHOD_4 ( model ) ; METHOD_5 ( model ) ; } 
public TYPE_1 . VdcBllMessages validate ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_2 VAR_1 , boolean VAR_2 ) { if ( ( ( getVm ( ) . METHOD_1 ( ) ) != ( VAR_3 ) ) && ( ! ( VAR_4 . METHOD_2 ( vds , getVm ( ) ) ) ) ) { VAR_1 . append ( STRING_1 ) ; return VAR_5 ; } return null ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( params . getId ( ) ) . thenReturn ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = new TYPE_1 ( VAR_3 , vds ) ; java.util.List < TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > > VAR_4 = TYPE_2 . METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) . METHOD_8 ( ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_4 , METHOD_7 ( ) . METHOD_9 ( ) . getReturnValue ( ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_1 < ? > VAR_2 ) { if ( ( VAR_1 == null ) && ( VAR_2 == null ) ) { return true ; } if ( ( ( VAR_1 == null ) || ( VAR_2 == null ) ) || ( ( VAR_1 . size ( ) ) != ( VAR_2 . size ( ) ) ) ) { return false ; } return ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( VAR_2 . METHOD_2 ( VAR_1 ) ) ; } 
private boolean METHOD_1 ( java.util.Map < java.lang.String , java.lang.Integer > VAR_1 , java.lang.String VAR_2 ) { boolean returnValue = false ; if ( ! ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) { VAR_1 . put ( VAR_2 , 1 ) ; returnValue = true ; } else if ( METHOD_3 ( ) ) { METHOD_4 ( VAR_1 , VAR_2 ) ; returnValue = true ; } return returnValue ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , ( ! ( iface . METHOD_5 ( ) ) ) , 0 , TYPE_1 . instance ( ) . METHOD_6 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 0 ; } } ; TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) , aQuery ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getParameters ( ) . getStoragePoolId ( ) , getParameters ( ) . METHOD_2 ( ) ) ; TYPE_2 . VdcQueryReturnValue VAR_2 = TYPE_3 . getInstance ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; return VAR_2 . getSucceeded ( ) ? VAR_4 < java.util.List < org.ovirt.engine.core.common.businessentities.VM > > getReturnValue ( ) : null ; } 
public void METHOD_1 ( ) { TYPE_1 value = new TYPE_1 ( ) ; value . METHOD_2 ( false ) ; value . METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_3 . any ( ) , TYPE_3 . any ( ) ) ) . thenReturn ( value ) ; VAR_2 . METHOD_5 ( ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; METHOD_2 ( ( ! VAR_2 ) ) ; } } ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( cluster . getId ( ) ) , VAR_1 ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( true , vmId ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_4 . METHOD_4 ( vmId ) ; VAR_3 . add ( VAR_4 , VAR_2 ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( vmId ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( VAR_4 . getId ( ) ) == null ) { VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } VAR_4 . METHOD_4 ( vmId ) ; VAR_3 . add ( VAR_4 , VAR_2 , false ) ; } } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { return new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , vmId ) , VAR_1 , TYPE_3 . getName ( ) , STRING_1 , 0 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , true , false , STRING_1 , null , null , null ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , java.util.List < TYPE_1 > VAR_1 , boolean VAR_2 ) { TYPE_2 returnValue = VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , new TYPE_3 ( vds . getId ( ) , VAR_1 , VAR_2 ) ) ; return returnValue . getSucceeded ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_2 ( ) ) ; TYPE_1 parameters = METHOD_3 ( ) ; command = org.mockito.Mockito . METHOD_4 ( new TYPE_2 < TYPE_1 > ( parameters ) { public TYPE_3 METHOD_5 ( ) { return VAR_1 ; } } ) ; } 
void METHOD_1 ( ) { VAR_1 . addColumn ( new TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > > ( ) { public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > VAR_2 ) { return METHOD_2 ( VAR_2 ) ; } } , VAR_3 . name ( ) ) ; VAR_4 . addColumn ( new TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > > ( ) { public java.lang.String getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > VAR_2 ) { return METHOD_2 ( VAR_2 ) ; } } , VAR_3 . name ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = METHOD_2 ( ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; try { VAR_2 . add ( model ) ; TYPE_2 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_7 ( VAR_3 , STRING_2 , STRING_3 , METHOD_8 ( ) ) ; } } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ( ( java.lang.Integer ) ( TYPE_2 . getValue ( VAR_2 ) ) ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; if ( ! ( ( VAR_1 . METHOD_5 ( VAR_3 ) ) || ( VAR_1 . equals ( VAR_3 ) ) ) ) { return false ; } else { return true ; } } 
private java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_3 : VAR_1 ) { for ( TYPE_1 storageDomain : VAR_4 ) { if ( VAR_3 . equals ( storageDomain . getId ( ) ) ) { VAR_2 . add ( storageDomain ) ; break ; } } } return VAR_2 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( VAR_2 ) . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_3 ) ; java.util.List < TYPE_1 > VAR_5 = METHOD_3 ( ) . METHOD_4 ( STRING_3 , METHOD_5 ( ) , VAR_4 ) ; return VAR_5 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( VAR_3 [ 1 ] ) ; VAR_4 . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_5 , org.mockito.Mockito . METHOD_6 ( 0 ) ) . METHOD_7 ( TYPE_1 . any ( VAR_6 class ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . setId ( VAR_1 ) ; disk . METHOD_2 ( INT_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( new java.util.ArrayList ( TYPE_2 . METHOD_5 ( VAR_3 ) ) ) ; disk . METHOD_6 ( VAR_4 ) ; disk . METHOD_7 ( TYPE_3 . instance ( ) . METHOD_8 ( INT_2 ) ) ; return disk ; } 
private static java.lang.String METHOD_1 ( java.lang.String source , TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 , TYPE_5 , TYPE_6 , TYPE_7 { java.lang.String result = STRING_1 ; byte [ ] VAR_2 = TYPE_8 . METHOD_2 ( source ) ; TYPE_9 VAR_3 = TYPE_9 . getInstance ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 , VAR_1 ) ; byte [ ] VAR_6 = VAR_3 . METHOD_4 ( VAR_2 ) ; result = new java.lang.String ( VAR_6 , STRING_2 ) ; return result ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_2 ) ) ; java.util.ArrayList < TYPE_3 > VAR_3 = new java.util.ArrayList ( TYPE_2 . METHOD_2 ( new TYPE_3 ( ) , new TYPE_3 ( ) ) ) ; VAR_4 . METHOD_3 ( VAR_1 , VAR_3 ) ; org.mockito.Mockito . METHOD_4 ( VAR_5 , org.mockito.Mockito . METHOD_5 ( 2 ) ) . runQuery ( TYPE_4 . any ( VAR_6 class ) , TYPE_4 . any ( VAR_7 class ) ) ; } 
public static byte [ ] METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = VAR_1 . toString ( ) ; java.lang.String [ ] VAR_3 = VAR_2 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_3 == null ) || ( ( VAR_3 . length ) == 0 ) ) { return null ; } TYPE_2 VAR_4 = new TYPE_2 ( ) ; for ( java.lang.String VAR_5 : VAR_3 ) { TYPE_3 . METHOD_3 ( VAR_5 , VAR_4 ) ; } return VAR_4 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_4 ( STRING_2 , VAR_1 ) ; nic . METHOD_5 ( VAR_2 ) ; METHOD_6 ( nic ) ; nic . METHOD_5 ( VAR_3 ) ; TYPE_1 VAR_4 = METHOD_7 ( METHOD_8 ( nic ) ) ; METHOD_9 ( VAR_4 , VAR_1 ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vm . getId ( ) ) ; java.lang.String VAR_2 = TYPE_2 . METHOD_4 ( VAR_1 ) . toString ( ) . METHOD_5 ( ) ; java.lang.String VAR_3 = vm . METHOD_4 ( ) . toString ( ) . METHOD_5 ( ) ; if ( VAR_3 . equals ( VAR_2 ) ) VAR_4 . add ( VAR_5 , VAR_2 ) ; else VAR_4 . add ( VAR_5 , VAR_3 ) ; } 
private static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , boolean VAR_1 ) { TYPE_1 VAR_2 = iface . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 VAR_3 = iface . METHOD_2 ( ) . METHOD_4 ( ) ; if ( ! VAR_1 ) { VAR_2 = TYPE_2 . METHOD_5 ( VAR_2 ) ; VAR_3 = TYPE_2 . METHOD_5 ( VAR_3 ) ; } if ( VAR_2 == null ) { return VAR_3 ; } else if ( VAR_3 == null ) { return VAR_2 ; } else { return TYPE_3 . METHOD_6 ( VAR_2 , VAR_3 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . METHOD_2 ( ) ) ; TYPE_2 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) . METHOD_8 ( ) , TYPE_1 . METHOD_2 ( ) . getId ( ) , TYPE_1 . getParameters ( ) . METHOD_9 ( ) ) ; TYPE_1 . getReturnValue ( ) . METHOD_10 ( TYPE_1 . METHOD_2 ( ) . getId ( ) ) ; TYPE_1 . METHOD_11 ( true ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( INT_1 ) ; vm . setId ( vmId ) ; vm . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; METHOD_7 ( vm ) ; return vm ; } 
private static TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( 0 ) ; VAR_1 . METHOD_7 ( null ) ; VAR_1 . METHOD_8 ( VAR_3 ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( new java.util.ArrayList < TYPE_3 > ( ) , vmId ) , null ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ! ( VAR_1 . METHOD_2 ( ) . equals ( STRING_1 ) ) ) ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_3 , new TYPE_2 ( VAR_1 , VAR_2 ) , null , this ) ; } } 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = new java.util.ArrayList < > ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( TYPE_1 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_5 ( command ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_1 . METHOD_3 ( ) . getEntity ( ) ; METHOD_4 ( VAR_1 ) ; frontend . METHOD_5 ( VAR_2 , VAR_3 ) ; user . METHOD_6 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) . setEntity ( null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = METHOD_2 ( VAR_1 . METHOD_5 ( ) ) ; VAR_4 = dao . get ( VAR_5 ) ; VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_6 ( STRING_1 ) ; VAR_6 . METHOD_7 ( VAR_4 . METHOD_8 ( ) ) ; VAR_6 . METHOD_9 ( STRING_2 ) ; VAR_6 . METHOD_10 ( new TYPE_2 ( ) ) ; } 
protected TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < java.lang.String > ( ) ; if ( ( METHOD_2 ( ) ) != null ) { for ( TYPE_3 item : METHOD_2 ( ) ) { TYPE_3 a = item ; VAR_1 . add ( a . METHOD_3 ( ) ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 . Network > ( ) ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_6 ( VAR_5 ) ; } } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_1 ) { if ( TYPE_1 . METHOD_2 ( i . METHOD_3 ( ) ) ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( METHOD_2 ( ) . getEntity ( ) , METHOD_3 ( ) . getEntity ( ) , TYPE_2 . METHOD_4 ( METHOD_5 ( ) . getEntity ( ) , METHOD_6 ( ) . getEntity ( ) ) , METHOD_7 ( ) . getEntity ( ) , VAR_1 , ( ( METHOD_8 ( ) . getSelectedItem ( ) ) != null ? METHOD_8 ( ) . getSelectedItem ( ) . getId ( ) : null ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS vds = METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; org.ovirt.engine.core.compat . Version VAR_2 = vds . METHOD_4 ( ) ; log . METHOD_5 ( STRING_1 , VAR_2 , VAR_1 ) ; return ( ( VAR_2 . METHOD_6 ( ) ) == ( VAR_1 . METHOD_6 ( ) ) ) && ( ( VAR_2 . METHOD_7 ( ) ) <= ( VAR_1 . METHOD_7 ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 version ) { version . METHOD_2 ( new TYPE_2 ( ) ) ; if ( TYPE_3 . METHOD_3 ( version , VAR_1 ) ) { METHOD_4 ( version , VAR_2 ) ; } if ( TYPE_3 . METHOD_3 ( version , VAR_3 ) ) { METHOD_4 ( version , VAR_4 , VAR_5 ) ; } if ( TYPE_3 . METHOD_3 ( version , VAR_6 ) ) { METHOD_4 ( version , VAR_7 ) ; } } 
private static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.ArrayList < java.lang.String > VAR_1 ) { boolean VAR_2 = false ; if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vmId ) . size ( ) ) > 0 ) { VAR_2 = true ; if ( VAR_1 != null ) { VAR_1 . add ( TYPE_1 . toString ( ) ) ; } } return VAR_2 ; } 
public boolean METHOD_1 ( ) { boolean result = false ; switch ( vds . getStatus ( ) ) { case VAR_1 : case VAR_2 : case VAR_3 : case VAR_4 : case VAR_5 : result = true ; break ; default : break ; } return result ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_5 . get ( VAR_2 ) ) . thenReturn ( VAR_3 ) ; return VAR_3 ; } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_7 ( ) , STRING_2 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 . METHOD_8 ( ) , VAR_1 , 1 ) ; TYPE_4 . METHOD_9 ( STRING_3 , VAR_3 . METHOD_10 ( ) ) ; TYPE_4 . METHOD_11 ( STRING_4 , VAR_3 . METHOD_12 ( STRING_5 ) ) ; } 
public boolean METHOD_1 ( TYPE_1 iface , java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > VAR_1 ) { java.lang.String VAR_2 = iface . METHOD_2 ( ) ; return ( VAR_1 . METHOD_3 ( VAR_2 ) ) && ( VAR_1 . get ( VAR_2 ) . METHOD_4 ( ) ) ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( org.ovirt.engine.core.compat.Guid TYPE_2 : VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( TYPE_2 . toString ( ) ) ; VAR_2 . add ( VAR_4 ) ; } if ( VAR_1 ) { TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_2 . add ( VAR_5 ) ; } return VAR_2 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( ( source != null ) && ( ( ( ( java.util.List ) ( source ) ) . size ( ) ) > 0 ) ) { return true ; } return false ; } } ; TYPE_1 . METHOD_2 ( aQuery , VAR_1 , 1 ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( VAR_1 , iface ) , aQuery ) ; } 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_2 . get ( ) ; } else if ( VAR_1 . getName ( ) . equals ( STRING_1 ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , TYPE_1 . METHOD_3 ( TYPE_2 . valueOf ( 0 ) ) , TYPE_3 . METHOD_4 ( STRING_1 ) ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_3 = VAR_1 . METHOD_5 ( VAR_4 ) ; TYPE_4 . assertEquals ( STRING_2 , 1 , VAR_3 . size ( ) ) ; TYPE_4 . assertEquals ( STRING_3 , VAR_3 . get ( 0 ) , VAR_2 ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > list = METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) , VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( list , new TYPE_3 ( ) ) ; return list ; } return new java.util.ArrayList < TYPE_1 > ( ) ; } 
private boolean METHOD_1 ( ) { return ( ( ! ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) || ( ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) == null ) ) || ( METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) , TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 type = TYPE_2 . instance ( ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( type ) ; TYPE_3 VAR_1 = org.mockito.Mockito . METHOD_6 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_7 ( VAR_3 , type , VAR_4 , METHOD_4 ( ) . METHOD_8 ( ) ) ) . thenReturn ( VAR_5 ) ; org.mockito.Mockito.when ( METHOD_9 ( ) . METHOD_10 ( ) ) . thenReturn ( VAR_1 ) ; METHOD_11 ( false ) ; } 
protected TYPE_1 . DiskImage METHOD_1 ( ) { if ( ( diskImage ) == null ) { TYPE_1 . Disk disk = METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; if ( ( disk != null ) && ( ( disk . METHOD_4 ( ) ) == ( VAR_1 ) ) ) { diskImage = ( ( TYPE_1 . DiskImage ) ( disk ) ) ; } } return diskImage ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 , INT_1 , INT_1 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , INT_1 , VAR_3 ) ; assertEquals ( STRING_2 , INT_1 , VAR_4 ) ; assertEquals ( STRING_3 , INT_1 , VAR_5 ) ; assertEquals ( STRING_4 , 0 , VAR_6 ) ; assertEquals ( STRING_5 , 0 , VAR_7 ) ; } 
protected boolean METHOD_1 ( TYPE_1 status ) { boolean returnValue = false ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = TYPE_2 . METHOD_2 ( ) ; if ( VAR_1 != null ) { returnValue = ( VAR_1 . METHOD_3 ( ) ) == status ; if ( ( ! returnValue ) && ( ! ( TYPE_2 . getReturnValue ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_3 . toString ( ) ) ) ) ) { addCanDoActionMessage ( TYPE_3 ) ; } } return returnValue ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 . isEmpty ( ) ) ; TYPE_3 VAR_5 = VAR_6 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( VAR_3 ) ; VAR_1 = METHOD_7 ( ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( VAR_1 . isEmpty ( ) ) ; } 
private static java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.lang.String VAR_1 ; if ( TYPE_1 . isEmpty ( vm . METHOD_1 ( ) ) ) { vm . METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( VAR_3 ) ) ; } if ( VAR_4 . METHOD_4 ( vm . METHOD_5 ( ) . METHOD_6 ( ) , null ) ) { VAR_1 = TYPE_2 . METHOD_7 ( vm . METHOD_1 ( ) ) ; } else { VAR_1 = vm . METHOD_1 ( ) ; } return VAR_1 ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . getVm ( ) ; TYPE_2 . METHOD_3 ( vm ) ; METHOD_4 ( vm ) ; if ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) { METHOD_6 ( vm ) ; } else { METHOD_7 ( vm ) ; } TYPE_1 . METHOD_8 ( true ) ; } 
protected java.util.List < TYPE_1 . Network > METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = getEntity ( VAR_1 . VDS class , VAR_2 , new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( METHOD_3 ( ) ) ) , STRING_1 ) ; return getEntity ( VAR_3 . List class , VAR_4 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vds . METHOD_4 ( ) ) , STRING_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > result = new java.util.ArrayList ( VAR_1 ) ; if ( ( ( VAR_2 ) != null ) && ( ( VAR_2 ) instanceof TYPE_2 ) ) { result . METHOD_2 ( ( ( TYPE_2 ) ( VAR_2 ) ) . METHOD_1 ( ) ) ; } result . METHOD_3 ( TYPE_3 . METHOD_4 ( TYPE_4 : : getName ) ) ; return result ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_1 . METHOD_3 ( ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . getId ( ) ; return TYPE_3 . METHOD_4 ( ( VAR_4 == null ? null : VAR_4 . toString ( ) ) , VAR_2 , VAR_3 , VAR_5 , VAR_6 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( METHOD_2 ( ) . getSelectedItem ( ) ) == null ) ? VAR_2 : ( ( TYPE_1 ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; TYPE_2 VAR_3 = ( ( METHOD_3 ( ) . getSelectedItem ( ) ) == null ) ? VAR_4 : ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( METHOD_3 ( ) . getSelectedItem ( ) ) ) . METHOD_4 ( ) ; METHOD_5 ( VAR_1 , VAR_3 ) ; METHOD_6 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_3 ( TYPE_2 . any ( VAR_4 . VdsNetworkInterface class ) , TYPE_3 . METHOD_5 ( ) ) ; } 
private java.util.List < java.lang.String > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 nic : VAR_1 ) { if ( ( ( nic . METHOD_2 ( ) ) && ( nic . METHOD_3 ( ) ) ) && ( nic . METHOD_4 ( ) ) ) { TYPE_2 . Network VAR_3 = METHOD_5 ( nic . METHOD_6 ( ) ) ; VAR_2 . add ( VAR_3 . METHOD_7 ( ) ) ; } } return VAR_2 ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > models ) { for ( TYPE_1 model : models ) { if ( model instanceof TYPE_2 ) { ( ( TYPE_2 ) ( model ) ) . METHOD_2 ( ) . METHOD_3 ( this ) ; } else if ( model instanceof org.ovirt.engine.ui.uicommonweb.models.EntityModel ) { ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel ) ( model ) ) . METHOD_4 ( ) . METHOD_3 ( this ) ; } } } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 params = super . METHOD_1 ( ) ; if ( ( METHOD_2 ( ) . getSelectedItem ( ) ) != null ) { params . METHOD_3 ( ( ( java.lang.String ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ) ; } return params ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( VAR_1 ) ; if ( VAR_4 . METHOD_6 ( ) ) { VAR_5 . METHOD_7 ( VAR_4 . getModel ( ) , null ) ; } } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , TYPE_2 > METHOD_1 ( ) throws java.lang.Exception { TYPE_2 returnValue ; returnValue = METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 . getId ( ) , entity . METHOD_3 ( ) , entity . METHOD_4 ( ) , entity . getName ( ) ) ) ; return new TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , TYPE_2 > ( VAR_2 , returnValue ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( template == null ) { return ; } METHOD_3 ( template , template . getStoragePoolId ( ) ) ; METHOD_4 ( template . METHOD_5 ( ) ) ; METHOD_6 ( template . METHOD_7 ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network network ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( network . getId ( ) ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( METHOD_4 ( VAR_1 , VAR_3 , VAR_3 . METHOD_5 ( ) ) ) { return VAR_3 ; } } return null ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( VAR_1 != null ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 . getValue ( ) ) ; getModel ( ) . METHOD_2 ( ) . setItems ( TYPE_1 . METHOD_3 ( vds ) ) ; } super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_5 = METHOD_5 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( command . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( id ) , aQuery ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = getSelectedItem ( ) ; if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 , this , getEntity ( ) ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) . setItems ( TYPE_4 . METHOD_4 ( getEntity ( ) ) ) ; VAR_2 . METHOD_3 ( ) . setSelectedItem ( getEntity ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; final org.ovirt.engine.core.common.businessentities.VM vm = null ; final org.ovirt.engine.core.compat.Guid VAR_2 = null ; VAR_1 . METHOD_2 ( vds ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_3 = VAR_1 . METHOD_5 ( ) ; TYPE_2 . assertEquals ( vds , VAR_3 ) ; } 
private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain a : VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_2 ( METHOD_3 ( ) ) ) { if ( ( a . METHOD_4 ( ) ) == ( VAR_3 ) ) { VAR_1 . append ( a . METHOD_5 ( ) ) . append ( STRING_1 ) ; } } return VAR_1 . METHOD_6 ( 0 , ( ( VAR_1 . length ( ) ) - 2 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . VdcBllMessages VAR_2 ) { java.util.List < java.lang.String > VAR_3 = VAR_1 . validate ( ) ; TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( STRING_1 , VAR_2 , VAR_3 ) , VAR_3 . METHOD_4 ( VAR_2 . name ( ) ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { if ( VAR_2 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( ) ; } org.ovirt.engine.ui.frontend.Frontend . METHOD_4 ( null ) ; METHOD_5 ( ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( ) ; VAR_3 . METHOD_8 ( ) ; VAR_4 super . METHOD_9 ( ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( new org.ovirt.engine.core.compat . Version ( STRING_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_3 ( ) ; TYPE_1 . when ( VAR_1 . get ( org.mockito.Mockito . any ( VAR_2 . Guid class ) ) ) . thenReturn ( vds ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain a : VAR_2 ) { if ( ( a . METHOD_1 ( ) ) == ( VAR_4 ) ) { VAR_3 . add ( a ) ; } } VAR_1 . METHOD_2 ( VAR_3 ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_2 ) { for ( java.lang.Object object : VAR_3 . METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( object ) ) ; if ( ! ( METHOD_3 ( ( ( template . METHOD_4 ( ) ) + VAR_1 ) , template . METHOD_5 ( ) , VAR_2 ) ) ) { return false ; } } return true ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = ( ( TYPE_3 ) ( args ) ) . VAR_3 ; java.util.List < TYPE_4 > VAR_4 = VAR_5 . get ( VAR_2 ) ; if ( VAR_4 != null ) { for ( TYPE_4 item : VAR_4 ) { item . METHOD_2 ( ) ; } } } 
private java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 status ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; java.lang.String VAR_3 = STRING_1 ; VAR_2 . add ( METHOD_2 ( STRING_2 , VAR_4 , VAR_5 , INT_1 , VAR_3 , METHOD_3 ( 1 ) , status ) ) ; VAR_2 . add ( METHOD_2 ( STRING_3 , VAR_6 , VAR_7 , INT_1 , STRING_4 , METHOD_3 ( 2 ) , status ) ) ; return VAR_2 ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 = TYPE_1 . getVdsGroup ( ) ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) ; } if ( VAR_1 . METHOD_4 ( ) ) { METHOD_5 ( ) ; } TYPE_1 . METHOD_6 ( true ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 model = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_3 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; METHOD_2 ( VAR_3 , model ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . METHOD_4 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > vms = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VM > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return vms ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new TYPE_2 ( ( STRING_1 + VAR_1 ) , VAR_4 . VM ) , aQuery ) ; } 
public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) throws java.lang.Exception { TYPE_3 returnValue = METHOD_2 ( VAR_1 , new TYPE_4 ( VAR_2 . getId ( ) , VAR_3 . METHOD_3 ( ) , VAR_3 . METHOD_4 ( ) , VAR_3 . getName ( ) ) ) ; return new TYPE_1 < TYPE_2 , TYPE_3 > ( VAR_3 , returnValue ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = METHOD_2 ( VAR_2 . METHOD_3 ( ) ) . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_2 . METHOD_4 ( ) ) . addValue ( STRING_3 , null ) . addValue ( STRING_4 , VAR_2 . METHOD_5 ( ) ) . addValue ( STRING_5 , null ) . addValue ( STRING_6 , null ) ; return VAR_3 ; } 
private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) { TYPE_2 tempVar = new TYPE_2 ( TYPE_1 . METHOD_2 ( ) . getId ( ) , TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( ) ) ; tempVar . METHOD_4 ( true ) ; TYPE_3 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 , tempVar ) ; } } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 entity ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_3 VAR_2 = TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; entity . METHOD_5 ( TYPE_4 . map ( VAR_2 , null ) ) ; } if ( VAR_1 . METHOD_6 ( ) ) { java.lang.String VAR_3 = ( STRING_1 . equals ( VAR_1 . getValue ( ) ) ) ? null : VAR_1 . getValue ( ) ; entity . METHOD_7 ( VAR_3 ) ; } } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) { if ( ! ( TYPE_2 . METHOD_3 ( version ) ) ) { return new TYPE_1 . ValidationResult ( VAR_2 , TYPE_3 . METHOD_4 ( ) ) ; } else if ( METHOD_5 ( ) . METHOD_6 ( ) ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } } return VAR_4 ; } 
void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_1 . instance ( ) ; if ( VAR_1 != null ) { final TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_3 . get ( ) . METHOD_3 ( new TYPE_4 ( ) { public void METHOD_4 ( ) { VAR_3 . METHOD_5 ( ) ; METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ; } } ) ; user . METHOD_8 ( true ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.HashMap < org.ovirt.engine.core.common.businessentities.network.Network , TYPE_1 < org.ovirt.engine.core.compat.Guid > > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . add ( VAR_2 ) ; VAR_3 . METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( VAR_4 ) ; VAR_5 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_6 ) { METHOD_8 ( VAR_6 , VAR_7 , new TYPE_2 ( VAR_8 ) ) ; } finally { VAR_1 . METHOD_9 ( ) ; } } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( ) { public java.lang.String METHOD_2 ( TYPE_2 object ) { return object . toString ( ) ; } } ) ; VAR_2 = new TYPE_1 ( new TYPE_4 < TYPE_5 > ( ) ) ; VAR_3 = new TYPE_1 < java.lang.String > ( new TYPE_3 < java.lang.String > ( ) { protected java.lang.String METHOD_2 ( java.lang.String object ) { return object ; } } ) ; } 
public java.lang.Object METHOD_1 ( ) { TYPE_1 pool = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 . getId ( ) ) ; pool . METHOD_3 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_4 ( pool ) ; return null ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; if ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) { TYPE_1 . METHOD_2 ( ) . METHOD_6 ( TYPE_1 . METHOD_7 ( ) , METHOD_8 ( ) . getId ( ) ) ; } TYPE_2 . METHOD_9 ( TYPE_1 . METHOD_7 ( ) , METHOD_8 ( ) ) ; TYPE_1 . METHOD_10 ( true ) ; } 
private boolean METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . METHOD_5 ( ) . equals ( TYPE_2 . getParameters ( ) . METHOD_6 ( ) . METHOD_5 ( ) ) ) { return true ; } } return false ; } 
protected TYPE_1 . ValidationResult METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( VAR_2 . METHOD_2 ( ) ) == null ) ? vm . METHOD_3 ( ) : VAR_2 . METHOD_2 ( ) ? VAR_3 : VAR_4 ; if ( ! ( TYPE_3 . METHOD_4 ( vm . METHOD_5 ( ) , vm . METHOD_6 ( ) , VAR_1 ) ) ) { return new TYPE_1 . ValidationResult ( VAR_5 ) ; } return VAR_6 ; } 
public static java.lang.String METHOD_1 ( java.lang.String user , java.lang.String VAR_1 ) throws TYPE_1 { VAR_2 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_3 = null ; if ( user != null ) { VAR_3 = ( ( VAR_1 + STRING_2 ) + user ) + STRING_3 ; } else { VAR_3 = VAR_1 + STRING_3 ; } char [ ] VAR_4 = VAR_5 . METHOD_3 ( VAR_3 ) ; return VAR_4 == null ? STRING_4 : new java.lang.String ( VAR_4 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage : VAR_2 ) { if ( ( diskImage . METHOD_2 ( ) ) != VAR_1 ) { return new TYPE_1 . ValidationResult ( VAR_3 , java.lang.String . METHOD_3 ( STRING_1 , diskImage . METHOD_2 ( ) . name ( ) ) ) ; } } return VAR_4 ; } 
protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) throws java.lang.Exception { METHOD_1 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 0 ] , VAR_1 } , getEntity ( 0 ) ) ; if ( VAR_2 ) { METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { char [ ] VAR_1 = new char [ ( VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ) + 1 ] ; TYPE_1 . METHOD_3 ( VAR_1 , CHAR_1 ) ; VAR_4 . METHOD_4 ( INT_1 ) ; VAR_4 . METHOD_5 ( new java.lang.String ( VAR_1 ) ) ; dao . METHOD_6 ( VAR_4 ) ; TYPE_2 result = dao . get ( VAR_4 . METHOD_7 ( ) ) ; TYPE_3 . METHOD_8 ( result ) ; TYPE_3 . METHOD_9 ( result . METHOD_10 ( ) . METHOD_11 ( STRING_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; parameters . METHOD_3 ( VAR_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 = new java.util.ArrayList < > ( ) ; org.mockito.Mockito.when ( VAR_5 . get ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_6 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_6 ( command ) ; } 
public java.lang.Boolean METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , new TYPE_2 ( VAR_2 . METHOD_4 ( ) ) ) ; for ( org.ovirt.engine.core.common.businessentities . network VAR_3 : METHOD_5 ( ) ) { TYPE_3 . METHOD_6 ( METHOD_7 ( ) , VAR_3 ) ; } return java.lang.Boolean . TRUE ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_1 . setId ( VAR_2 . METHOD_2 ( ) ) ; } } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : METHOD_3 ( ) . METHOD_4 ( ) ) { try { METHOD_5 ( cluster ) ; } catch ( java.lang.Exception e ) { VAR_1 . METHOD_6 ( STRING_2 , cluster . METHOD_7 ( ) , e ) ; } } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( false ) ; if ( ( ( METHOD_3 ( ) . getEntity ( ) ) == null ) || ( ( ( ( java.lang.String ) ( METHOD_3 ( ) . getEntity ( ) ) ) . METHOD_4 ( ) . length ( ) ) == 0 ) ) { METHOD_5 ( ) . setEntity ( STRING_1 ) ; return ; } METHOD_6 ( ( ( java.lang.String ) ( METHOD_3 ( ) . getEntity ( ) ) ) ) ; } 
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return ; } java.util.ArrayList < TYPE_1 . VdcActionParametersBase > list = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object item : METHOD_2 ( ) ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( item ) ) ; list . add ( new TYPE_3 ( VAR_1 . getId ( ) , false , false ) ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , list ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , int VAR_3 ) { if ( VAR_2 == ( VAR_4 ) ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) + VAR_3 ) >= ( VAR_1 . METHOD_2 ( ) . METHOD_4 ( ) ) ; } if ( VAR_2 == ( VAR_5 ) ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) + VAR_3 ) >= ( VAR_1 . METHOD_2 ( ) . METHOD_6 ( ) ) ; } return false ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; dao . METHOD_5 ( VAR_1 ) ; TYPE_1 . assertEquals ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; VAR_1 . METHOD_6 ( true ) ; dao . METHOD_5 ( VAR_1 ) ; TYPE_1 . assertEquals ( true , VAR_1 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( VAR_3 ) ) . thenReturn ( VAR_1 ) ; METHOD_4 ( 1 ) ; METHOD_5 ( METHOD_6 ( ) ) ; java.util.List < TYPE_1 . Network > VAR_4 = METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( VAR_4 , TYPE_3 . METHOD_9 ( Network : : getId ) ) ; METHOD_10 ( VAR_4 ) ; } 
public static TYPE_1 < org.ovirt.engine.core.compat.Guid > METHOD_1 ( TYPE_1 < TYPE_2 . DiskImage > VAR_1 ) { TYPE_1 < org.ovirt.engine.core.compat.Guid > result = new java.util.ArrayList < > ( ) ; if ( VAR_1 != null ) { for ( TYPE_2 . DiskImage diskImage : VAR_1 ) { result . add ( diskImage . METHOD_2 ( ) ) ; } } return result ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; cluster = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; VAR_2 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; VAR_3 = new org.ovirt.engine.core.common.businessentities . Network ( ) ; VAR_3 . METHOD_4 ( STRING_3 ) ; VAR_3 . METHOD_5 ( STRING_4 ) ; VAR_3 . METHOD_6 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 disk , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 ) { java.lang.String VAR_2 = ( VAR_1 . isEmpty ( ) ) ? constants . METHOD_2 ( ) : VAR_1 . get ( 0 ) . METHOD_3 ( ) ; disk . METHOD_4 ( ) . setEntity ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 pool ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( ) . getStoragePoolId ( ) ; if ( pool != null ) { pool . setId ( VAR_1 ) ; } TYPE_2 VAR_2 = org.mockito.Mockito . METHOD_3 ( VAR_3 class ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 , METHOD_4 ( ) . METHOD_5 ( ) , METHOD_2 ( ) . METHOD_6 ( ) ) ) . thenReturn ( pool ) ; org.mockito.Mockito.when ( METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( ) ) . thenReturn ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( VAR_2 [ INT_1 ] , 1 ) ; METHOD_4 ( STRING_1 , null , VAR_3 , true ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; } 
private java.lang.Object METHOD_1 ( boolean VAR_1 , int VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_1 ) { VAR_3 . METHOD_3 ( METHOD_4 ( VAR_2 ) ) ; } else { VAR_3 . METHOD_3 ( null ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) { final TYPE_1 parameters = METHOD_2 ( ) ; parameters . METHOD_3 ( false ) ; TYPE_2 command = METHOD_4 ( parameters ) ; TYPE_3 < TYPE_4 < TYPE_1 > > validate = TYPE_5 . METHOD_5 ( ) . validate ( parameters , command . METHOD_6 ( ) . METHOD_7 ( new TYPE_6 < ? > [ 0 ] ) ) ; TYPE_7 . METHOD_8 ( validate . isEmpty ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; VAR_2 . METHOD_3 ( false ) ; VAR_3 . METHOD_3 ( false ) ; METHOD_4 ( ) . METHOD_5 ( METHOD_6 ( VAR_1 ) ) ; METHOD_7 ( ) . METHOD_5 ( java.lang.String.valueOf ( VAR_1 . METHOD_8 ( VAR_4 ) ) ) ; METHOD_9 ( ) . METHOD_5 ( java.lang.String.valueOf ( VAR_1 . METHOD_8 ( VAR_5 ) ) ) ; VAR_6 . METHOD_3 ( true ) ; } 
private TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { TYPE_1 params = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , VAR_1 ) ; params . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; params . METHOD_5 ( TYPE_2 . getParameters ( ) . METHOD_6 ( ) ) ; params . METHOD_7 ( TYPE_2 . getParameters ( ) ) ; return params ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; java.lang.String name = VAR_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( name . equals ( VAR_2 . METHOD_6 ( VAR_4 , VAR_5 . VM ) ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { final TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; final java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; TYPE_2 . METHOD_2 ( model , VAR_1 , VAR_2 ) ; } 
public void METHOD_1 ( ) { map = new TYPE_1 ( ) ; cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_2 < TYPE_3 > ( params ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_5 ( ) ; } 
private TYPE_1 . AddVmCommand < TYPE_2 > METHOD_1 ( final int VAR_1 , final int VAR_2 ) { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . AddVmCommand < TYPE_2 > cmd = METHOD_3 ( vm ) ; TYPE_3 . METHOD_4 ( cmd ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( ) ) . when ( cmd ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( ) ) . when ( cmd ) . METHOD_8 ( ) ; return cmd ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , true ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( true ) ; METHOD_10 ( true ) ; TYPE_3 . METHOD_11 ( command ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_4 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_5 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_1 . METHOD_3 ( VAR_1 , VAR_2 ) ) ; METHOD_4 ( ) ; } 
protected void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_3 = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( VAR_1 ) ) ; METHOD_2 ( ) . METHOD_3 ( ( ( VAR_3 != null ) && ( ( VAR_3 . METHOD_4 ( ) ) != null ) ) ) ; } 
protected java.util.List < TYPE_1 . Disk > METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = new java.util.ArrayList ( vm . METHOD_2 ( ) . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , new TYPE_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , TYPE_2 . METHOD_5 ( new TYPE_4 ( ) ) ) ; return VAR_1 ; } 
private static TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage i = new TYPE_1 . DiskImage ( ) ; i . METHOD_2 ( ( ( VAR_1 ) + ( VAR_2 ) ) ) ; i . METHOD_3 ( ( ( ( ( VAR_3 ) * INT_1 ) * INT_1 ) * INT_1 ) ) ; i . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; i . METHOD_6 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_7 ( VAR_4 ) ) ) ; return i ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( id ) , aQuery ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_2 ( ) . getValue ( ) ; TYPE_1 params = new TYPE_1 ( VAR_2 , VAR_3 ) ; params . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; return TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_4 , params ) . getSucceeded ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; VAR_1 = TYPE_2 . METHOD_1 ( VAR_1 ) ; model . METHOD_2 ( model , VAR_2 , VAR_1 , null ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < java.lang.String > VAR_2 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . equals ( VAR_3 ) ) ) ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_4 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; if ( VAR_4 != null ) { VAR_2 . add ( VAR_4 . METHOD_4 ( ) ) ; } } } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , getStoragePoolId ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_3 ( ) , VAR_2 ) ; for ( TYPE_3 iface : VAR_3 . METHOD_4 ( ) ) { VAR_1 . METHOD_5 ( iface , TYPE_2 . METHOD_6 ( ) . METHOD_7 ( ) ) ; } VAR_1 . METHOD_8 ( TYPE_2 . METHOD_9 ( ) ) ; super . METHOD_1 ( ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) ) ; return ( ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) && ( validate ( METHOD_5 ( ) ) ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; VAR_2 = new java.util.HashMap < > ( ) ; if ( VAR_1 != null ) { for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_2 . put ( VAR_3 . getId ( ) , VAR_3 ) ; } } METHOD_1 ( ) ; } 
private java.lang.Boolean METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) ) ) { return ( TYPE_2 . getVm ( ) . METHOD_4 ( ) ) != null ? TYPE_2 . getVm ( ) . METHOD_4 ( ) : TYPE_2 . getVdsGroup ( ) . METHOD_5 ( ) ; } return null ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_2 . any ( VAR_2 . Guid class ) , TYPE_2 . METHOD_4 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( vm ) ) ; TYPE_4 . METHOD_6 ( validator . METHOD_7 ( vm ) , TYPE_5 . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , false ) ; METHOD_2 ( 1 , true ) ; METHOD_3 ( VAR_1 [ 1 ] ) ; METHOD_4 ( METHOD_5 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , true , true ) ) ; METHOD_6 ( resource . METHOD_7 ( getModel ( 0 ) ) , 0 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 . getId ( ) ) . addValue ( STRING_1 , VAR_1 . METHOD_3 ( ) ) . addValue ( STRING_2 , VAR_1 . METHOD_4 ( ) ) . addValue ( STRING_3 , TYPE_3 . METHOD_5 ( ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ) ; TYPE_4 VAR_3 = VAR_1 . METHOD_8 ( ) ; METHOD_9 ( VAR_2 , ( VAR_3 == null ? new TYPE_4 ( ) : VAR_3 ) ) ; return VAR_2 ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > models = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; models . add ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; models . add ( VAR_2 ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; models . add ( VAR_3 ) ; TYPE_5 . METHOD_2 ( VAR_4 , models ) ; return models ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; METHOD_3 ( template ) ; METHOD_4 ( template . METHOD_5 ( ) ) ; METHOD_6 ( template . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { log . METHOD_2 ( STRING_1 , cluster . METHOD_3 ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_4 ( ) . METHOD_5 ( cluster . getId ( ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_2 = METHOD_6 ( ) . METHOD_7 ( cluster . getId ( ) ) ; if ( VAR_2 == null ) { log . METHOD_2 ( STRING_2 , cluster . METHOD_3 ( ) ) ; return ; } METHOD_8 ( cluster , VAR_2 , VAR_1 ) ; METHOD_9 ( cluster , VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( VAR_2 ) , VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , VAR_1 . size ( ) ) ; METHOD_5 ( VAR_1 . get ( 0 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 0 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , java.lang.Boolean . TRUE } , true , true ) ; METHOD_8 ( VAR_4 . METHOD_9 ( VAR_3 [ 0 ] . toString ( ) , new TYPE_1 ( ) { { METHOD_10 ( true ) ; } } ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( command == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( command == ( METHOD_6 ( ) ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_8 ( command . getName ( ) , STRING_1 ) ) { METHOD_9 ( ) ; } } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_3 < TYPE_2 > ( ) ; if ( ( METHOD_2 ( ) ) != null ) { for ( java.lang.Object item : METHOD_2 ( ) ) { TYPE_4 a = ( ( TYPE_4 ) ( item ) ) ; VAR_1 . add ( a . METHOD_3 ( ) ) ; } } return VAR_1 ; } 
protected org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( TYPE_1 to ) { org.ovirt.engine.core.common.businessentities.VDS VAR_1 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_1 . setId ( to . getId ( ) ) ; VAR_1 . METHOD_2 ( to . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( to . METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( to . METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( to . METHOD_9 ( ) ) ; VAR_1 . METHOD_10 ( to . METHOD_11 ( ) ) ; VAR_1 . METHOD_12 ( to . METHOD_13 ( ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { if ( ( ( VAR_1 . getStatus ( ) ) == ( VAR_2 ) ) && ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) { VAR_4 . METHOD_3 ( VAR_5 , VAR_1 ) ; VAR_6 = true ; VAR_7 = true ; VAR_8 . METHOD_4 ( STRING_1 , VAR_1 . getId ( ) , VAR_1 . METHOD_5 ( ) ) ; } } 
private void METHOD_1 ( ) { final java.util.HashMap < java.lang.Integer , java.lang.String > VAR_1 = TYPE_1 . getInstance ( ) . get ( VAR_2 class ) . METHOD_2 ( ) ; for ( TYPE_2 < java.lang.Integer , java.lang.String > VAR_3 : VAR_1 . METHOD_3 ( ) ) { final TYPE_3 VAR_4 = TYPE_4 . METHOD_4 ( VAR_3 . getValue ( ) ) ; if ( VAR_4 != null ) { VAR_5 . put ( VAR_3 . METHOD_5 ( ) , VAR_4 ) ; } } } 
protected boolean METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( object . getEntity ( ) ) ) ; TYPE_2 . Disk disk = VAR_1 . METHOD_2 ( ) ; boolean VAR_2 = disk . METHOD_3 ( ) ; boolean VAR_3 = ( disk . METHOD_4 ( ) ) == ( VAR_4 ) ; return ( ! VAR_2 ) && ( ! VAR_3 ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) ) ; VAR_4 = new TYPE_3 ( VAR_2 , VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_5 . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_2 . get ( STRING_1 ) ; VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_4 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_6 = dao . get ( new TYPE_2 ( STRING_3 , VAR_3 . METHOD_6 ( ) ) ) ; VAR_7 = new TYPE_3 ( VAR_8 , VAR_3 . METHOD_6 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ) ; java.util.List < java.lang.String > VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; getModel ( ) . METHOD_2 ( ) . setEntity ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , false , true , true , null ) ; } 
public java.util.HashMap < java.lang.String , java.lang.Object > METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( VAR_2 , model . name ( ) ) ; VAR_1 . put ( VAR_3 , action . name ( ) . METHOD_2 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 event ) { int VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_3 . setSelectedItem ( VAR_3 . METHOD_3 ( ) . get ( VAR_1 ) ) ; VAR_4 . METHOD_4 ( VAR_3 . METHOD_5 ( ) . METHOD_6 ( ) ) ; VAR_5 . METHOD_4 ( VAR_3 . METHOD_7 ( ) . METHOD_6 ( ) ) ; METHOD_8 ( ) ; } 
private void METHOD_1 ( ) { if ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) { java.util.List < TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) { getTable ( ) . METHOD_5 ( new TYPE_4 < org.ovirt.engine.core.common.businessentities.VDS > ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ) ; } } } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_4 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( cmd . METHOD_8 ( ) ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( getEntity ( ) . METHOD_2 ( ) ) != null ) ? getEntity ( ) . METHOD_2 ( ) : getEntity ( ) . METHOD_3 ( ) ; boolean VAR_2 = TYPE_2 . equals ( TYPE_3 . METHOD_4 ( getEntity ( ) . METHOD_5 ( ) , getEntity ( ) . METHOD_6 ( ) ) ) ; return ( VAR_1 == ( VAR_3 ) ) && VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 . DiskImage diskImage = new TYPE_1 . DiskImage ( ) ; diskImage . METHOD_2 ( new java.util.ArrayList ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_4 ( VAR_2 ) ; vm . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( true ) ) . when ( VAR_4 ) . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_6 . METHOD_8 ( vm , diskImage ) . get ( ) ) ; } 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; parameters . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; command = org.mockito.Mockito . METHOD_5 ( new TYPE_2 < TYPE_1 > ( parameters ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) , 2 ) ; dao . METHOD_5 ( VAR_3 ) ; java.util.List < TYPE_3 > VAR_4 = dao . METHOD_6 ( VAR_3 ) ; TYPE_2 . METHOD_7 ( VAR_4 . isEmpty ( ) ) ; TYPE_1 VAR_5 = VAR_2 . METHOD_2 ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_5 . METHOD_3 ( ) . METHOD_4 ( ) , 0 ) ; } 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( returnValue ) . when ( METHOD_4 ( ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_2 ) , TYPE_2 . any ( VAR_3 class ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_7 ( VAR_5 ) ) . thenReturn ( METHOD_8 ( VAR_6 ) ) ; } 
private static boolean METHOD_1 ( java.lang.String type ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = VAR_2 < java.util.Map < java.lang.String , java.lang.String > > METHOD_2 ( VAR_3 ) ; java.lang.String VAR_4 = VAR_1 . get ( type ) ; if ( VAR_4 != null ) { return java.lang.Boolean . METHOD_3 ( VAR_4 ) ; } return true ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; METHOD_3 ( ) . METHOD_4 ( null ) ; METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( ) . onSuccess ( VAR_4 . getModel ( ) , null ) ; } 
static void METHOD_1 ( TYPE_1 . Disk model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_4 ( model . METHOD_5 ( ) ) ; METHOD_4 ( ( ! ( model . METHOD_6 ( ) ) ) ) ; METHOD_4 ( model . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 . Network VAR_1 , TYPE_2 . Network entity ) { TYPE_2 . Network VAR_2 = METHOD_1 ( VAR_3 , VAR_4 . Network class ) . map ( VAR_1 , entity ) ; return new TYPE_3 ( entity . METHOD_2 ( ) . getValue ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 VAR_2 = new TYPE_2 ( VAR_1 ) ; long VAR_3 = TYPE_3 . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { METHOD_5 ( ) . METHOD_6 ( VAR_2 . METHOD_7 ( ) , VAR_3 , VAR_1 , true ) ; METHOD_8 ( VAR_2 . METHOD_9 ( ) . METHOD_10 ( ) , VAR_3 ) ; } else { VAR_4 . METHOD_11 ( STRING_1 , VAR_1 . METHOD_12 ( ) ) ; } } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; TYPE_2 VAR_3 = ( ( VAR_2 . size ( ) ) > 0 ) ? VAR_2 . get ( 0 ) : null ; VAR_1 . METHOD_1 ( VAR_3 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( TYPE_1 version , TYPE_2 [ ] types ) { if ( TYPE_3 . METHOD_2 ( version , VAR_1 ) ) { version . METHOD_3 ( new TYPE_4 ( ) ) ; for ( TYPE_2 type : types ) { version . METHOD_4 ( ) . METHOD_4 ( ) . add ( type . value ( ) ) ; } } } 
private static void METHOD_1 ( java.util.List < TYPE_1 > result ) { TYPE_2 . METHOD_2 ( result ) ; TYPE_2 . METHOD_3 ( result . isEmpty ( ) ) ; for ( TYPE_1 domain : result ) { TYPE_2 . assertEquals ( VAR_1 , domain . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { try { TYPE_1 pool = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( VAR_2 ) ; if ( ( pool != null ) && ( ( pool . METHOD_4 ( ) ) == ( VAR_3 ) ) ) { TYPE_2 . METHOD_5 ( pool ) ; } } catch ( java.lang.Exception e ) { } } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( VAR_3 [ 1 ] ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) , TYPE_1 . METHOD_9 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 context = METHOD_2 ( ) ; context . METHOD_3 ( map , map . getStatus ( ) ) ; map . METHOD_4 ( status ) ; METHOD_5 ( ) . METHOD_6 ( map . getId ( ) , map . getStatus ( ) ) ; METHOD_2 ( ) . METHOD_7 ( ) ; return null ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 ( ) ) ; VAR_2 = new TYPE_4 ( STRING_1 ) ; VAR_3 = new TYPE_4 ( STRING_1 ) ; VAR_4 = new TYPE_4 ( STRING_2 ) ; VAR_5 = new TYPE_4 ( STRING_2 ) ; VAR_6 = new TYPE_5 ( VAR_7 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.String value ) { TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; try { new TYPE_2 ( value ) ; } catch ( TYPE_3 e ) { result . METHOD_2 ( false ) ; result . METHOD_3 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } return result ; } 
protected void METHOD_1 ( final TYPE_1 status ) { METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public TYPE_3 METHOD_3 ( ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { TYPE_4 map = METHOD_4 ( domain ) ; TYPE_5 context = METHOD_5 ( ) ; context . METHOD_6 ( map , map . METHOD_7 ( ) ) ; METHOD_8 ( map , status ) ; METHOD_5 ( ) . METHOD_9 ( ) ; } return null ; } } ) ; } 
public TYPE_1 get ( ) { TYPE_1 VAR_1 = METHOD_1 ( VAR_2 , new TYPE_2 ( VAR_3 , true ) ) ; TYPE_3 . VdcQueryReturnValue result = runQuery ( VAR_4 , new TYPE_4 ( VAR_3 ) ) ; if ( ( ( result != null ) && ( result . getSucceeded ( ) ) ) && ( ( result . getReturnValue ( ) ) != null ) ) { VAR_1 . METHOD_2 ( ( ( java.lang.String ) ( result . getReturnValue ( ) ) ) ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { return new org.ovirt.engine.core.common.businessentities.DiskImage ( true , new TYPE_1 ( ) , new TYPE_1 ( ) , INT_1 , STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , STRING_2 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , INT_1 , VAR_1 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_2 , new TYPE_1 ( ) , STRING_3 , VAR_3 . VM , null , null , VAR_4 , false ) ; } 
public TYPE_1 add ( TYPE_2 . Network network ) { METHOD_1 ( network , STRING_1 ) ; if ( ! ( network . METHOD_2 ( ) ) ) { network . setId ( METHOD_3 ( network . getName ( ) , VAR_1 ) ) ; } org.ovirt.engine.core.common.businessentities . network entity = map ( network ) ; return METHOD_4 ( VAR_2 , METHOD_5 ( network , entity ) , new TYPE_3 ( network . getName ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; int VAR_3 = TYPE_2 . METHOD_3 ( VAR_2 ) ; int VAR_4 = ( VAR_1 . METHOD_4 ( ) ) - VAR_3 ; if ( VAR_4 > 0 ) { int VAR_5 = TYPE_3 . METHOD_5 ( VAR_4 , VAR_6 < java.lang.Integer > getValue ( VAR_7 ) ) ; VAR_8 . METHOD_6 ( STRING_1 , VAR_2 , VAR_4 , VAR_5 ) ; METHOD_7 ( VAR_2 , VAR_5 ) ; } } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 class ) ) { return false ; } boolean VAR_3 = ! ( ( VAR_1 . METHOD_2 ( VAR_4 class ) ) && ( VAR_1 . METHOD_3 ( VAR_4 class ) . value ( ) . METHOD_4 ( STRING_1 ) ) ) ; boolean VAR_5 = ! ( VAR_1 . METHOD_5 ( ) . equals ( VAR_6 class ) ) ; return VAR_3 && VAR_5 ; } 
public TYPE_1 add ( TYPE_2 VAR_1 ) { TYPE_3 entity = TYPE_4 . map ( VAR_1 , null ) ; TYPE_5 VAR_2 = METHOD_1 ( ) ; VAR_2 . METHOD_2 ( ) . add ( entity . METHOD_3 ( ) ) ; return METHOD_4 ( VAR_3 , new TYPE_6 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = METHOD_2 ( ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( vmId ) ) { METHOD_4 ( ) . setSelectedItem ( VAR_1 ) ; } else { METHOD_4 ( ) . setSelectedItem ( METHOD_5 ( ) . METHOD_6 ( vmId ) . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.Boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . toString ( ) ) ) ) ; return ( VAR_2 && ( VAR_1 . METHOD_5 ( ) ) ) && ( ! ( VAR_1 . METHOD_6 ( ) ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , new TYPE_1 . AsyncQuery ( new TYPE_2 ( ) { public void onSuccess ( java.lang.Object returnValue ) { java.util.List < TYPE_3 > VAR_3 = ( ( TYPE_4 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; METHOD_2 ( ) . setItems ( VAR_3 ) ; } } ) ) ; } 
protected boolean METHOD_1 ( ) { if ( ( getParameters ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( getParameters ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; return ( VAR_2 != null ) && ( VAR_2 . METHOD_6 ( ) ) ; } return false ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String [ ] VAR_2 , int i , java.lang.String VAR_3 , TYPE_1 VAR_4 , TYPE_2 VAR_5 ) { java.lang.String VAR_6 = METHOD_2 ( VAR_3 , VAR_2 [ ( i - INT_1 ) ] ) ; if ( ! ( VAR_4 . METHOD_3 ( VAR_3 ) ) ) { java.lang.String VAR_7 = TYPE_3 . METHOD_4 ( VAR_5 ) ; VAR_4 . METHOD_5 ( VAR_3 , this . VAR_8 . METHOD_6 ( VAR_6 , VAR_1 , VAR_7 ) ) ; } } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { if ( ! ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ) { VAR_2 . setId ( new TYPE_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) , VAR_1 . getId ( ) ) ) ; } } for ( TYPE_2 VAR_3 : VAR_1 . METHOD_6 ( ) ) { VAR_3 . setId ( new TYPE_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) , VAR_1 . getId ( ) ) ) ; } } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms ) { java.util.Map < java.lang.Boolean , java.util.List < org.ovirt.engine.core.common.businessentities.VM > > VAR_1 = new java.util.HashMap < java.lang.Boolean , java.util.List < org.ovirt.engine.core.common.businessentities.VM > > ( ) ; VAR_1 . put ( java.lang.Boolean . TRUE , vms ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( VAR_3 ) ) . thenReturn ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 . AuditLogType VAR_2 , java.lang.String VAR_3 ) { TYPE_1 VAR_4 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_2 . METHOD_3 ( ) ) ; if ( VAR_4 == null ) { return null ; } VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_4 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_4 . METHOD_7 ( ) , VAR_5 ) ) ; METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( VAR_4 ) ; return VAR_4 ; } 
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) ; vm . METHOD_3 ( METHOD_4 ( ) ) ; if ( getParameters ( ) . METHOD_5 ( ) ) { vm . METHOD_6 ( VAR_1 ) ; } org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_7 ( ) . METHOD_8 ( vm . METHOD_9 ( ) ) ; return null ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 , org.ovirt.engine.core.common.businessentities.VM vm , boolean VAR_5 , final TYPE_4 VAR_6 ) { final TYPE_1 VAR_7 = new TYPE_1 ( VAR_1 , VAR_3 , vm . getId ( ) , ( VAR_5 ? METHOD_2 ( vm ) : null ) , VAR_4 , VAR_2 , new TYPE_5 ( ) , vm . METHOD_3 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_7 ) ; VAR_6 . METHOD_6 ( VAR_7 ) ; return VAR_7 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( false ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } 
private void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; pool . setId ( command . getParameters ( ) . getStoragePoolId ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( pool ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( returnValue ) ) ; java.util.ArrayList < TYPE_2 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 cluster : VAR_4 ) { if ( ( ( VAR_2 == ( VAR_5 ) ) || ( ( cluster . METHOD_1 ( ) ) == ( VAR_5 ) ) ) || ( ( cluster . METHOD_1 ( ) ) == VAR_2 ) ) { VAR_3 . add ( cluster ) ; } } METHOD_2 ( this , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( true ) ; if ( ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { TYPE_2 . METHOD_4 ( METHOD_5 ( ) , VAR_2 , VAR_2 , TYPE_1 . METHOD_6 ( ) ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { try { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; java.lang.Object VAR_4 = VAR_3 . METHOD_4 ( VAR_1 , VAR_5 , VAR_6 ) ; return new TYPE_1 ( ( ( TYPE_4 ) ( VAR_4 ) ) ) ; } catch ( TYPE_5 e ) { throw new TYPE_6 ( ( STRING_1 + VAR_1 ) , e ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; if ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) { VAR_1 . add ( VAR_2 , STRING_1 ) ; } else { VAR_1 . add ( VAR_2 , STRING_2 ) ; } if ( ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) >= 0 ) { VAR_1 . add ( VAR_3 , new java.lang.Integer ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) . toString ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( model ) ; VAR_2 . METHOD_3 ( java.lang.Integer . toString ( getModel ( ) . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_5 ( getModel ( ) . METHOD_6 ( ) ) ) ; VAR_4 . setTitle ( getModel ( ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( VAR_1 ) ) ; METHOD_6 ( cmd ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_3 , VAR_4 , VAR_2 ) ) . when ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; TYPE_3 . METHOD_9 ( cmd . METHOD_10 ( ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return TYPE_1 . METHOD_2 ( vm , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , vm . getStoragePoolId ( ) , METHOD_4 ( ) . getValue ( ) , false , true , false , false , false , true , VAR_1 . Collections < org.ovirt.engine.core.common.businessentities . Disk > METHOD_5 ( ) ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < java.lang.Integer , TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; java.lang.String VAR_3 = ( ( VAR_2 != null ) && ( ! ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ) ) ? VAR_2 . METHOD_4 ( ) : VAR_4 ; return VAR_5 . METHOD_1 ( VAR_1 , getVm ( ) , VAR_3 , TYPE_2 . METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 . VM vm ) { java.lang.Boolean VAR_1 = getEntity ( VAR_2 . Boolean class , VAR_3 , new TYPE_2 ( new org.ovirt.engine.core.compat.Guid ( vm . getId ( ) ) ) , null , true ) ; if ( ! ( vm . METHOD_2 ( ) ) ) { vm . METHOD_3 ( new TYPE_3 ( ) ) ; } vm . METHOD_4 ( ) . METHOD_1 ( VAR_1 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; TYPE_2 . METHOD_1 ( aQuery , VAR_1 , null ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 ; switch ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) { default : case VAR_2 : VAR_1 = VAR_3 ; break ; case VAR_4 : VAR_1 = VAR_5 ; break ; } java.lang.String VAR_6 = VAR_7 < java.lang.String > METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_6 ) ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { VAR_1 . METHOD_1 ( ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( VAR_2 != null ) { METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; } } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; java.lang.String VAR_3 = VAR_1 . getName ( ) ; TYPE_3 . EngineMessage VAR_4 = VAR_5 ; return METHOD_2 ( VAR_1 . getId ( ) , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; } 
static TYPE_1 . Network METHOD_1 ( TYPE_1 . Network entity , boolean VAR_1 , boolean VAR_2 , boolean VAR_3 , int VAR_4 ) { TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_2 ) ; VAR_5 . METHOD_4 ( VAR_3 ) ; TYPE_3 . METHOD_5 ( entity . METHOD_6 ( ) ) . METHOD_7 ( VAR_5 ) . METHOD_8 ( ) ; return TYPE_4 . METHOD_1 ( entity , VAR_4 ) ; } 
private void METHOD_1 ( ) { java.lang.Integer VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; java.lang.Integer VAR_2 = METHOD_2 ( ) . METHOD_4 ( ) ; if ( ( VAR_1 != null ) && ( VAR_2 != null ) ) { METHOD_5 ( ( VAR_1 + VAR_2 ) ) ; } else { METHOD_5 ( 0 ) ; } } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } final java.util.ArrayList < TYPE_1 > list = ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ; return METHOD_2 ( list , VAR_1 , VAR_2 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { return ( ( ( ( VAR_1 . METHOD_2 ( ) ) + ( METHOD_3 ( VAR_1 ) ) ) < VAR_2 ) && ( ( VAR_1 . METHOD_4 ( ) ) >= VAR_3 ) ) && ( ( ( VAR_1 . METHOD_5 ( ) ) == null ) || ( ( ( new TYPE_1 ( ) . METHOD_6 ( ) ) - ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ) ) < ( TYPE_2 . METHOD_7 ( VAR_4 ) ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 entity ) { if ( ( VAR_1 . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { VAR_1 . setId ( VAR_1 . METHOD_3 ( ) . getId ( ) ) ; } else { VAR_1 . setId ( entity . getId ( ) . toString ( ) ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_5 [ 0 ] , VAR_6 } , METHOD_3 ( ) , VAR_2 ) ; VAR_7 . METHOD_4 ( ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String version , TYPE_1 VAR_1 ) { java.lang.String returnValue = TYPE_2 . instance ( ) . METHOD_2 ( INT_1 , true ) ; TYPE_3 VAR_2 = TYPE_3 . valueOf ( VAR_1 . name ( ) ) ; VAR_3 . METHOD_3 ( VAR_2 , version , returnValue ) ; return returnValue ; } 
protected boolean METHOD_1 ( ) { java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 < TYPE_4 > VAR_2 = TYPE_3 . METHOD_4 ( VAR_3 ) ; java.util.List < TYPE_5 . DiskImage > VAR_4 = TYPE_6 . METHOD_5 ( METHOD_6 ( ) , VAR_5 ) ; VAR_6 = TYPE_7 . METHOD_7 ( VAR_4 , VAR_1 , VAR_2 ) ; return validate ( new TYPE_8 ( VAR_4 ) . METHOD_8 ( VAR_6 , VAR_1 , VAR_7 , VAR_2 ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; org.ovirt.engine.core.compat . Version VAR_1 = vm . METHOD_2 ( ) ; if ( VAR_1 == null ) { METHOD_3 ( false ) ; } else { METHOD_3 ( ( ( java.lang.Boolean ) ( ! ( TYPE_1 . getInstance ( ) . METHOD_4 ( getEntity ( ) . METHOD_5 ( ) , VAR_1 ) . isEmpty ( ) ) ) ) ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; TYPE_1 params = new TYPE_1 ( vmId ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( params ) ; try { VAR_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; } finally { if ( ( user ) != null ) { VAR_1 . METHOD_4 ( VAR_4 . METHOD_5 ( new TYPE_1 ( user . METHOD_6 ( ) ) ) ) ; } VAR_4 . METHOD_7 ( ) ; } } 
protected void METHOD_1 ( java.lang.Object sender , TYPE_1 e ) { super . METHOD_1 ( sender , e ) ; if ( ( ( METHOD_2 ( ) ) != null ) && ( ( METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; setSelectedItem ( TYPE_3 . METHOD_4 ( VAR_3 . Linq < TYPE_2 > METHOD_5 ( METHOD_6 ( ) ) , new TYPE_4 ( VAR_2 . getId ( ) ) ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { TYPE_3 VAR_2 = VAR_3 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_2 != null ) { final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_2 . METHOD_3 ( ) ; return VAR_4 == null ? null : VAR_5 . METHOD_4 ( VAR_4 ) ; } } return null ; } 
public void METHOD_1 ( TYPE_1 < java.lang.Boolean > event ) { METHOD_2 ( ) . METHOD_3 ( event . getValue ( ) ) ; METHOD_2 ( ) . METHOD_4 ( ( ( VAR_1 ) && ( event . getValue ( ) ) ) ) ; METHOD_2 ( ) . METHOD_5 ( ( ! ( event . getValue ( ) ) ) ) ; } 
public java.util.List < TYPE_1 . DiskImage > METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { java.lang.Object [ ] args = VAR_1 . METHOD_2 ( ) ; TYPE_1 . DiskImage VAR_2 = ( ( TYPE_1 . DiskImage ) ( args [ 0 ] ) ) ; java.util.List < TYPE_1 . DiskImage > list = METHOD_3 ( VAR_2 . getId ( ) , INT_1 ) ; return list ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { vds . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( vds . getId ( ) ) ) ; vds . METHOD_4 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( vds . getId ( ) ) . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_4 VAR_4 = TYPE_5 . map ( VAR_3 , null ) ; assertEquals ( VAR_4 . getStatus ( ) . METHOD_3 ( ) , VAR_2 . value ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( null ) ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VmTemplate VAR_3 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 cluster , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { org.ovirt.engine.core.compat.Guid VAR_3 = cluster . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_1 , cluster . getId ( ) , VAR_2 ) ; if ( METHOD_4 ( VAR_3 , VAR_1 ) ) { cluster . METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( cluster ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; VAR_2 . METHOD_8 ( org.ovirt.engine.core.compat.Guid . METHOD_9 ( ) ) ; TYPE_2 . METHOD_10 ( command ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > list = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_3 : VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_1 . METHOD_2 ( VAR_3 , VAR_2 ) ; if ( storageDomain != null ) { list . add ( storageDomain ) ; } } return list ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( 0 , 0 , 0 ) ; METHOD_4 ( 0 ) ; METHOD_5 ( 0 , 0 ) ; METHOD_6 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 1 ] } , METHOD_7 ( VAR_3 [ 1 ] ) ) ; super . METHOD_1 ( ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { java.lang.String VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_3 . METHOD_3 ( new TYPE_4 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , VAR_1 . getId ( ) ) , VAR_4 , TYPE_5 . METHOD_5 ( VAR_3 ) , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , true ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : java.lang.Boolean . TRUE ; } } ; TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_3 ( ) ) , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( java.lang.String.valueOf ( METHOD_3 ( ) . METHOD_5 ( ) ) ) ; VAR_4 . METHOD_4 ( java.lang.Boolean . toString ( METHOD_3 ( ) . METHOD_6 ( ) ) ) ; VAR_5 . METHOD_4 ( TYPE_2 . getInstance ( ) . METHOD_7 ( METHOD_3 ( ) . METHOD_8 ( ) ) ) ; VAR_6 . METHOD_9 ( METHOD_3 ( ) ) ; VAR_7 . setTitle ( METHOD_3 ( ) . METHOD_10 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 view = ( ( TYPE_2 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( false ) . when ( validator ) . METHOD_2 ( VAR_1 . getId ( ) ) ; org.mockito.Mockito.doReturn ( false ) . when ( validator ) . METHOD_2 ( VAR_2 . getId ( ) ) ; TYPE_1 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_3 ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Boolean VAR_2 , java.lang.Boolean VAR_3 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . METHOD_2 ( VAR_4 ) ; storageDomain . METHOD_3 ( VAR_1 ) ; storageDomain . METHOD_4 ( VAR_2 ) ; storageDomain . METHOD_5 ( VAR_3 ) ; VAR_5 = org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ; storageDomain . setId ( VAR_5 ) ; TYPE_2 . METHOD_7 ( this ) ; VAR_6 . METHOD_8 ( VAR_7 class , VAR_8 ) ; org.mockito.Mockito.when ( VAR_8 . get ( VAR_5 ) ) . thenReturn ( storageDomain ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.Integer VAR_2 ) { org.ovirt.engine.core.common.businessentities . network VAR_3 = new org.ovirt.engine.core.common.businessentities . network ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_3 , this ) ; VAR_4 . METHOD_4 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_5 ( ) ) ; VAR_5 . put ( VAR_1 , VAR_4 ) ; return VAR_4 ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = getEntity ( ) ; VAR_2 . setId ( VAR_1 ) ; TYPE_2 < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( VAR_4 . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_3 . add ( VAR_2 ) ; VAR_4 . METHOD_2 ( ) . setItems ( VAR_3 ) ; VAR_4 . METHOD_2 ( ) . setSelectedItem ( VAR_2 ) ; this . METHOD_4 ( null ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.StoragePool entity ) { org.ovirt.engine.core.common.queries.IdQueryParameters parameters = new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) ; model . METHOD_2 ( METHOD_3 ( VAR_1 . List class , VAR_2 class ) . map ( getEntity ( VAR_1 . ArrayList class , VAR_3 , parameters , model . getId ( ) ) , null ) ) ; return model ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > result = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( result ) ; for ( TYPE_1 domain : VAR_1 ) { if ( ( domain . METHOD_5 ( ) ) == ( VAR_2 ) ) { result . METHOD_6 ( domain ) ; } } TYPE_2 . METHOD_7 ( ) . METHOD_8 ( result ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( ) { public java.lang.String METHOD_2 ( TYPE_2 entity ) { if ( entity == null ) { return VAR_1 . METHOD_3 ( ) ; } return VAR_2 . METHOD_2 ( entity ) ; } } ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.VM ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( 1 ) ; METHOD_4 ( METHOD_5 ( VAR_4 , VAR_5 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 } , VAR_1 , VAR_2 ) ) ; TYPE_1 model = getModel ( 0 ) ; try { VAR_7 . add ( model ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_8 ) { METHOD_7 ( VAR_8 , VAR_3 ) ; } } 
public void METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 , VAR_1 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ; try { if ( ! ( VAR_4 ) ) { METHOD_5 ( ( ( STRING_2 + VAR_1 ) + STRING_3 ) ) ; } else { METHOD_6 ( VAR_1 ) ; } } finally { VAR_3 . METHOD_3 ( ) . METHOD_7 ( ) ; } } 
public static TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 . VdcActionType VAR_1 ) { TYPE_1 . ValidationResult VAR_2 = VAR_3 ; if ( ! ( TYPE_3 . METHOD_2 ( vm ) ) ) { if ( ! ( TYPE_4 . METHOD_3 ( VAR_1 ) ) ) { VAR_2 = new TYPE_1 . ValidationResult ( VAR_4 ) ; } } return VAR_2 ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 , final TYPE_2 response , final TYPE_3 VAR_2 ) throws TYPE_4 , TYPE_5 { TYPE_6 VAR_3 = METHOD_2 ( ( ( TYPE_7 ) ( VAR_1 ) ) ) ; VAR_1 . METHOD_3 ( VAR_4 , VAR_3 ) ; VAR_2 . METHOD_1 ( VAR_1 , response ) ; METHOD_4 ( ( ( TYPE_8 ) ( response ) ) , VAR_1 . METHOD_5 ( ) , VAR_3 ) ; } 
private void METHOD_1 ( ) { final TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; model . METHOD_2 ( null ) ; METHOD_3 ( model . METHOD_4 ( ) . getSelectedItem ( ) . getId ( ) , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 result ) { model . METHOD_6 ( ) ; METHOD_7 ( null ) ; } } ) ; } 
public void METHOD_1 ( ) { VAR_1 . instance = this ; try { TYPE_1 VAR_2 = new TYPE_2 ( ) ; VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( new TYPE_3 ( this ) , TYPE_4 . METHOD_6 ( VAR_4 ) ) ; } catch ( TYPE_5 VAR_5 ) { log . error ( STRING_1 , VAR_5 . METHOD_7 ( ) ) ; log . METHOD_8 ( STRING_2 , VAR_5 ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = STRING_1 ; final java.lang.String value = VAR_3 ; final java.lang.String VAR_4 = STRING_2 ; final java.lang.String VAR_5 = null ; VAR_1 . METHOD_2 ( VAR_2 , value ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_4 , VAR_5 ) ; final java.lang.String VAR_6 = VAR_1 . METHOD_4 ( VAR_2 ) ; TYPE_3 . assertEquals ( ( ( value + VAR_5 ) + VAR_4 ) , VAR_6 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { get ( ) ; TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . setId ( id ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; if ( ( action != null ) && ( action . METHOD_2 ( ) ) ) { VAR_2 = METHOD_3 ( action . METHOD_4 ( ) ) ; } TYPE_4 parameters = new TYPE_4 ( VAR_1 , VAR_2 ) ; return METHOD_5 ( VAR_4 , parameters ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) ) != null ) { if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) == ( VAR_1 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) , TYPE_1 . METHOD_4 ( ) ) ; } throw new TYPE_3 ( STRING_1 ) ; } else { TYPE_1 . METHOD_5 ( false ) ; log . METHOD_6 ( STRING_2 ) ; } } 
public TYPE_1 < TYPE_2 , TYPE_3 < TYPE_4 > , TYPE_5 > METHOD_1 ( TYPE_6 VAR_1 , TYPE_7 < TYPE_8 > VAR_2 , final TYPE_7 < TYPE_3 < TYPE_4 > > VAR_3 , final TYPE_7 < TYPE_5 > VAR_4 ) { TYPE_9 < TYPE_2 , TYPE_3 < TYPE_4 > , TYPE_5 > result = new TYPE_9 < TYPE_2 , TYPE_3 < TYPE_4 > , TYPE_5 > ( VAR_1 , VAR_2 ) ; result . METHOD_2 ( VAR_3 ) ; result . METHOD_3 ( VAR_4 ) ; return result ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = VAR_2 . get ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; java.lang.String name = VAR_1 . getName ( ) ; TYPE_1 . METHOD_3 ( name . equals ( VAR_4 . METHOD_4 ( VAR_3 , VAR_5 . StoragePool ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_2 ( ) , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 . METHOD_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { METHOD_4 ( result . getReturnValue ( ) ) ; } } ; getWindow ( ) . METHOD_5 ( ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_6 ( VAR_3 , parameters , VAR_2 ) ; } 
void METHOD_1 ( TYPE_1 object ) { VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , false , VAR_4 ) ; VAR_5 = new TYPE_3 ( VAR_6 , VAR_4 ) ; VAR_7 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_8 , VAR_9 ) ; METHOD_5 ( VAR_10 ) ; METHOD_5 ( VAR_11 ) ; VAR_12 . METHOD_6 ( VAR_5 ) ; VAR_13 . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.util.List < java.lang.String > VAR_3 ) { if ( VAR_3 == null ) { VAR_3 = TYPE_2 . METHOD_2 ( ) ; } java.lang.String value = java.lang.String . METHOD_3 ( STRING_1 , VAR_3 ) ; put ( VAR_1 , VAR_2 , value ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . VM class ) ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; command . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( command ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 , org.mockito.Mockito . METHOD_9 ( 1 ) ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . VM class ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( TYPE_1 . getTable ( ) . METHOD_3 ( new TYPE_2 < TYPE_3 > ( VAR_1 . METHOD_4 ( ) , VAR_2 ) { protected org.ovirt.engine.ui.uicommonweb.UICommand METHOD_5 ( ) { return METHOD_6 ( ) . getModel ( ) . METHOD_7 ( ) ; } } , false ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , new TYPE_2 ( VAR_3 , STRING_1 , STRING_2 , INT_1 , INT_2 , STRING_3 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_4 , VAR_3 , true , VAR_5 ) , VAR_6 , VAR_7 ) ; return VAR_2 ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 , org.ovirt.engine.core.compat . Version VAR_3 , java.lang.Boolean VAR_4 ) { boolean VAR_5 = ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 . METHOD_2 ( ) ) ; TYPE_2 . METHOD_1 ( VAR_2 . getId ( ) , VAR_2 . METHOD_2 ( ) , VAR_3 , VAR_4 , VAR_5 ) ; } 
private org.ovirt.engine.core.common.businessentities.VDSGroup getVdsGroup ( java.lang.String name , org.ovirt.engine.core.compat.Guid id ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 = VAR_2 . METHOD_1 ( VAR_3 . VDSGroup class ) ; TYPE_1 . METHOD_2 ( VAR_1 . getId ( ) ) . METHOD_3 ( id ) . METHOD_4 ( ) ; TYPE_1 . METHOD_2 ( VAR_1 . METHOD_5 ( ) ) . METHOD_3 ( name ) . METHOD_4 ( ) ; return VAR_1 ; } 
public org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) throws TYPE_1 { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 . VM class , VAR_2 , METHOD_3 ( VAR_3 , id ) , id . toString ( ) ) ; org.ovirt.engine.core.common.businessentities.VM model = new org.ovirt.engine.core.common.businessentities.VM ( ) ; model . setId ( vm . getId ( ) . toString ( ) ) ; return TYPE_2 . METHOD_4 ( METHOD_5 ( ) , model ) ; } 
private void METHOD_1 ( TYPE_1 version , TYPE_2 [ ] VAR_1 ) { if ( TYPE_3 . METHOD_2 ( version , VAR_2 ) ) { version . METHOD_3 ( new TYPE_2 ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { version . METHOD_4 ( ) . METHOD_5 ( ) . add ( VAR_3 . value ( ) ) ; } } } 
public void METHOD_1 ( ) { command . METHOD_2 ( new TYPE_1 ( ) ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_3 ) . get ( TYPE_3 . any ( VAR_4 . Guid class ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . setId ( METHOD_3 ( ) . getId ( ) ) ; TYPE_2 params = new TYPE_2 ( VAR_1 ) ; METHOD_4 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_5 ( VAR_2 , params , new TYPE_3 ( ) { public void METHOD_6 ( TYPE_4 result ) { TYPE_5 model = ( ( TYPE_5 ) ( result . METHOD_7 ( ) ) ) ; model . METHOD_8 ( ) ; model . METHOD_9 ( ) ; } } , this ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true , getEntity ( 0 ) ) ; VAR_1 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_7 ( VAR_2 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = STRING_1 ; final java.lang.String value = VAR_3 ; final java.lang.String VAR_4 = STRING_2 ; VAR_1 . METHOD_1 ( VAR_2 , value , VAR_4 ) ; final java.lang.String VAR_5 = VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_3 . assertEquals ( value , VAR_5 ) ; } 
public boolean equals ( java.lang.Object obj ) { return ( ( ( obj != null ) && ( obj instanceof TYPE_1 ) ) && ( TYPE_2 . METHOD_1 ( getId ( ) , ( ( TYPE_1 ) ( obj ) ) . getId ( ) ) ) ) && ( super . equals ( obj ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . VdcActionType VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 , new TYPE_4 ( VAR_2 , VAR_4 , VAR_5 , VAR_1 . METHOD_2 ( ) , METHOD_3 ( VAR_2 , TYPE_5 . getParameters ( ) ) , VAR_1 . METHOD_4 ( ) , TYPE_5 . METHOD_5 ( ) ) ) ; VAR_3 . METHOD_6 ( TYPE_5 . getParameters ( ) . METHOD_7 ( ) ) ; org.ovirt.engine.core.compat.Guid VAR_6 = TYPE_6 . getInstance ( ) . METHOD_8 ( VAR_7 , VAR_3 , false ) ; return VAR_6 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( null ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_3 ( STRING_1 , null , null , network . getName ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( METHOD_4 ( ) ) ; METHOD_5 ( network , iface , null , false ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( METHOD_2 ( ) ) != null ) && ( METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ) ) { super . METHOD_1 ( VAR_2 . METHOD_4 ( VAR_1 ) ) ; } else { super . METHOD_1 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 > ( ) , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 1 ) ; METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; TYPE_1 nic = resource . get ( ) ; METHOD_8 ( nic . METHOD_9 ( ) ) ; VAR_3 . METHOD_10 ( nic , VAR_4 ) ; } finally { VAR_1 . METHOD_11 ( ) ; } } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( VAR_1 . size ( ) ) ; for ( TYPE_1 host : VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( host . getName ( ) ) ; vds . METHOD_3 ( host . getName ( ) ) ; hosts . add ( vds ) ; } return hosts ; } 
public boolean METHOD_1 ( TYPE_1 quota ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( quota . METHOD_3 ( ) , quota . getStoragePoolId ( ) ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . getId ( ) . equals ( quota . getId ( ) ) ) ) ) { METHOD_4 ( VAR_3 ) ; return false ; } return true ; } 
private TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 < java.lang.String > METHOD_2 ( VAR_3 ) ; TYPE_1 type = null ; try { type = TYPE_1 . valueOf ( VAR_1 ) ; } catch ( java.lang.Exception e ) { VAR_4 . error ( ( STRING_1 + VAR_1 ) ) ; } return type ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < > ( ) ; list . add ( new TYPE_2 ( TYPE_3 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) , null , VAR_1 , TYPE_3 . METHOD_4 ( ) , TYPE_3 . getParameters ( ) . METHOD_2 ( ) . METHOD_5 ( ) ) ) ; return list ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm != null ) { METHOD_2 ( vm ) ; } } } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; TYPE_3 returnValue = VAR_4 ; if ( ( VAR_3 . METHOD_3 ( ) ) != null ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_4 ( VAR_5 , new TYPE_4 ( VAR_3 . METHOD_3 ( ) ) ) ; } VAR_2 = null ; VAR_1 . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , vmId ) ; TYPE_2 . assertEquals ( true , VAR_1 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_2 ) ) . thenReturn ( METHOD_4 ( ) ) ; TYPE_3 parameters = METHOD_5 ( ) ; parameters . METHOD_6 ( ) . METHOD_7 ( true ) ; METHOD_8 ( parameters , TYPE_4 . METHOD_9 ( METHOD_10 ( VAR_4 ) ) ) ; TYPE_5 . METHOD_11 ( command , VAR_5 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 < TYPE_4 < TYPE_5 > > entities = ( ( TYPE_3 < TYPE_4 < TYPE_5 > > ) ( sender ) ) ; TYPE_4 < TYPE_5 > VAR_2 = entities . getSelectedItem ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 . METHOD_2 ( VAR_1 ) ; TYPE_3 . METHOD_2 ( VAR_2 ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_3 ( ) ; org.ovirt.engine.core.compat.Guid VAR_5 = VAR_1 . getId ( ) ; TYPE_3 . METHOD_2 ( VAR_4 ) ; TYPE_3 . METHOD_2 ( VAR_5 ) ; if ( METHOD_4 ( VAR_4 , VAR_2 ) ) { java.util.List < java.lang.String > VAR_6 = VAR_7 . METHOD_5 ( VAR_5 ) ; METHOD_6 ( VAR_4 , VAR_2 , VAR_6 , VAR_3 ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.Boolean VAR_1 ) throws TYPE_2 , TYPE_3 , TYPE_4 { java.lang.String url = this . METHOD_2 ( ) ; TYPE_5 VAR_2 = new TYPE_5 ( ) ; java.util.List < TYPE_6 > VAR_3 = VAR_2 . METHOD_3 ( ) ; TYPE_7 VAR_4 = new TYPE_7 ( url ) ; if ( VAR_1 != null ) { VAR_4 . add ( STRING_1 , VAR_1 , VAR_5 ) ; } url = VAR_4 . METHOD_3 ( ) ; return METHOD_4 ( ) . METHOD_1 ( url , VAR_6 class , VAR_3 ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( VAR_3 [ VAR_1 ] , model . getName ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; assertEquals ( VAR_4 , model . METHOD_3 ( ) . getName ( ) ) ; METHOD_4 ( model ) ; } 
public static < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > source , TYPE_3 < ? super TYPE_1 > VAR_1 ) { for ( TYPE_1 item : source ) { if ( VAR_1 . METHOD_2 ( item ) ) { return item ; } } return null ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) , TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_5 ( ) , TYPE_1 . getVdsGroup ( ) . METHOD_6 ( ) . toString ( ) , TYPE_1 . getReturnValue ( ) . METHOD_7 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , org.ovirt.engine.core.common.businessentities . network VAR_1 ) { return METHOD_2 ( ( ( ( iface . getName ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) , false , null , null , VAR_2 , VAR_1 . getName ( ) , VAR_1 . METHOD_3 ( ) ) ; } 
private boolean METHOD_1 ( ) { return ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) && ( ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) != null ) ) && ( ! ( METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) , TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ) ) ; } 
public boolean METHOD_1 ( TYPE_1 vm ) { if ( ( ( vm . METHOD_2 ( ) ) == null ) || ( vm . METHOD_2 ( ) . isEmpty ( ) ) ) { return false ; } java.lang.String VAR_1 = METHOD_3 ( vm ) ; if ( VAR_1 == null ) { return false ; } try { java.lang.Integer . METHOD_4 ( VAR_1 ) ; return true ; } catch ( TYPE_2 e ) { return false ; } } 
protected boolean METHOD_1 ( TYPE_1 status , TYPE_2 . VdcBllMessages VAR_1 ) { boolean returnValue = false ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = TYPE_3 . METHOD_2 ( ) ; if ( VAR_2 != null ) { returnValue = ( VAR_2 . getStatus ( ) ) != status ; if ( ( ! returnValue ) && ( ! ( TYPE_3 . getReturnValue ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 . name ( ) ) ) ) ) { addCanDoActionMessage ( VAR_1 ) ; } } return returnValue ; } 
public < TYPE_1 > TYPE_1 get ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_2 != null ) && ( ! ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ) ) { throw new TYPE_3 ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_1 ) ) ; } TYPE_1 value = get ( VAR_1 ) ; if ( value == null ) { value = VAR_2 ; } return value ; } 
protected void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; log . METHOD_6 ( STRING_1 , VAR_1 ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_7 ( TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) { log . METHOD_6 ( STRING_2 ) ; } else { TYPE_1 . METHOD_9 ( ) ; } TYPE_1 . METHOD_10 ( true ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getParameters ( ) . getStoragePoolId ( ) , getParameters ( ) . METHOD_2 ( ) ) ; TYPE_2 . VdcQueryReturnValue VAR_2 = METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) ; if ( ! ( VAR_2 . getSucceeded ( ) ) ) { return null ; } return ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > ) ( VAR_2 . getReturnValue ( ) ) ) ; } 
private void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > ... VAR_1 ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( new java.util.Map [ ] { METHOD_3 ( VAR_2 , VAR_1 ) } ) ; returnValue . METHOD_4 ( true ) ; org.mockito.Mockito.doReturn ( returnValue ) . when ( VAR_3 ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_4 ) , TYPE_2 . any ( VAR_5 class ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = TYPE_1 . METHOD_1 ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) , VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_2 ( list , new TYPE_3 ( ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 from ) { from . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . setId ( from . getId ( ) ) ; from . METHOD_4 ( ) . METHOD_5 ( ) ; from . METHOD_4 ( ) . METHOD_4 ( ) . add ( VAR_2 ) ; return from ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( vmId , VAR_1 , METHOD_3 ( ) ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_2 . ValidationResult ( VAR_2 ) ) . when ( VAR_3 ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( command . METHOD_7 ( VAR_3 ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , long VAR_2 , boolean VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( ) ; VAR_4 . addValue ( STRING_1 , VAR_1 ) . addValue ( STRING_2 , VAR_2 ) . addValue ( STRING_3 , VAR_3 ) ; java.util.List < TYPE_1 > VAR_5 = METHOD_3 ( ) . METHOD_4 ( STRING_4 , METHOD_5 ( ) , VAR_4 ) ; return VAR_5 ; } 
protected void METHOD_1 ( TYPE_1 entity , org.ovirt.engine.core.compat.Guid id ) { if ( ( ( entity . METHOD_2 ( ) ) == null ) || ( ! ( entity . METHOD_2 ( ) . equals ( id ) ) ) ) { return ; } entity . METHOD_3 ( null ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > models = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; models . add ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; models . add ( VAR_2 ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; models . add ( VAR_3 ) ; TYPE_5 VAR_4 = new TYPE_5 ( ) ; models . add ( VAR_4 ) ; TYPE_6 . METHOD_2 ( VAR_5 , models ) ; return models ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 0 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 , false ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_2 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } } 
public TYPE_1 . ValidationResult validate ( java.lang.Object value ) { TYPE_1 . ValidationResult VAR_1 = TYPE_2 . validate ( value ) ; if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { return VAR_1 ; } TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; if ( value instanceof java.lang.String ) { result . METHOD_2 ( METHOD_3 ( ( ( java.lang.String ) ( value ) ) ) ) ; result . METHOD_4 ( VAR_2 ) ; } return result ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { super . setItems ( VAR_1 ) ; if ( ( getSelectedItem ( ) ) == null ) { setSelectedItem ( ( ( VAR_1 . size ( ) ) > 1 ? VAR_1 . get ( 1 ) : VAR_1 . get ( 0 ) ) ) ; } METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; cmd . getVm ( ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( cmd ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_1 VAR_3 , TYPE_2 VAR_4 ) { TYPE_3 VAR_5 = new TYPE_3 ( ) ; VAR_5 . METHOD_2 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( VAR_3 . getId ( ) ) ; TYPE_4 . METHOD_1 ( VAR_5 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 network = ( ( TYPE_1 ) ( item ) ) ; if ( network . METHOD_2 ( ) ) { item . METHOD_3 ( ) ; } else { TYPE_2 VAR_1 = item . METHOD_4 ( ) . METHOD_5 ( item ) ; final TYPE_3 VAR_2 = VAR_1 . get ( VAR_3 ) . get ( 0 ) ; item . METHOD_4 ( ) . METHOD_6 ( VAR_3 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) . when ( cmd ) . METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( cmd . validate ( ) ) ; TYPE_2 . METHOD_8 ( cmd . getReturnValue ( ) . METHOD_9 ( ) . isEmpty ( ) ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 entity ) { if ( ( entity . METHOD_2 ( ) ) != null ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_3 ( new TYPE_3 ( ) ) ; VAR_1 . METHOD_4 ( ) . setId ( entity . METHOD_2 ( ) . toString ( ) ) ; return VAR_1 ; } else { return null ; } } 
public TYPE_1 METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . equals ( VAR_1 . METHOD_2 ( ) . getId ( ) ) ) ) { VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } VAR_2 . METHOD_4 ( VAR_1 . METHOD_2 ( ) ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; return null ; } 
public TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase params ) { VAR_2 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 , params ) ; params . METHOD_4 ( METHOD_5 ( ) . getId ( ) ) ; if ( VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_6 ( true ) ; return VAR_4 ; } return METHOD_7 ( ) . METHOD_8 ( VAR_1 , params ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , METHOD_5 ( ) ) ; java.util.List < TYPE_1 . Network > entities = new java.util.ArrayList < > ( ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , entities ) ; VAR_4 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_8 ( VAR_5 ) ; } } 
protected void METHOD_1 ( TYPE_1 < ? > command ) { if ( ( ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_2 ( ) ) == null ) ) || ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) { TYPE_2 . METHOD_4 ( command , command . METHOD_5 ( ) , command . METHOD_6 ( ) ) ; } TYPE_3 . METHOD_7 ( command . METHOD_8 ( ) ) ; command . METHOD_9 ( ) ; command . METHOD_10 ( ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < TYPE_1 , java.lang.Integer > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_5 ( VAR_4 , VAR_2 , false ) ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_6 ( VAR_4 , false ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 . getInstance ( ) . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_4 ( ) ; java.util.List < TYPE_2 < ? > > VAR_1 = ( ( java.util.List < TYPE_2 < ? > > ) ( returnValue ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_5 ( ) . setItems ( VAR_1 ) ; } } ) ) ; } 
protected void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( VAR_1 != null ) { METHOD_2 ( ) . setItems ( VAR_1 ) ; METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_3 ( VAR_1 , new TYPE_2 ( vds . getStoragePoolId ( ) ) ) ) ; if ( ( METHOD_2 ( ) . getSelectedItem ( ) ) == null ) { METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; } } } 
public void METHOD_1 ( ) { java.lang.String name = STRING_1 ; TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . get ( name ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_2 ( ) . METHOD_5 ( VAR_1 ) ; TYPE_1 VAR_3 = VAR_2 . METHOD_2 ( ) . get ( name ) ; TYPE_3 . METHOD_6 ( VAR_3 ) ; TYPE_3 . assertEquals ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_6 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_3 ( VAR_2 , cluster , VAR_3 ) ; TYPE_4 . METHOD_7 ( validator . METHOD_1 ( ) , TYPE_5 . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . StorageDomain model = new TYPE_1 . StorageDomain ( ) ; METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_2 ( VAR_1 ) ; command . getParameters ( ) . METHOD_3 ( VAR_2 ) ; java.util.HashMap < java.lang.String , java.lang.Object > VAR_3 = command . METHOD_1 ( ) ; TYPE_1 . METHOD_4 ( VAR_3 ) ; TYPE_1 . assertEquals ( STRING_1 , VAR_3 . get ( STRING_2 ) ) ; TYPE_1 . assertEquals ( STRING_3 , VAR_3 . get ( STRING_4 ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host ) { TYPE_1 . VdcQueryReturnValue returnValue = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_3 ( host . getId ( ) ) ) ; java.util.List < TYPE_4 > VAR_2 = returnValue . getReturnValue ( ) ; return TYPE_5 . METHOD_1 ( VAR_2 , host . METHOD_3 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.lang.String VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_4 . METHOD_3 ( STRING_1 , VAR_1 ) ; try { TYPE_1 . getInstance ( ) . METHOD_4 ( VAR_2 ) ; } catch ( java.lang.Exception e ) { VAR_4 . METHOD_5 ( STRING_2 , VAR_2 , e . METHOD_6 ( ) ) ; VAR_4 . METHOD_7 ( STRING_3 , e ) ; } } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . getVm ( ) . METHOD_2 ( ) ) != null ) { TYPE_3 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_2 . getVm ( ) . METHOD_2 ( ) , VAR_1 ) ) ; } else { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } } 
private TYPE_1 . AuditLogType METHOD_1 ( boolean VAR_1 ) { boolean VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; if ( VAR_1 ) { if ( VAR_2 ) { return VAR_3 ; } else { return VAR_4 ; } } else { if ( VAR_2 ) { return VAR_5 ; } else { return VAR_6 ; } } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ; if ( template == null ) { return ; } METHOD_3 ( template ) ; METHOD_4 ( template . METHOD_5 ( ) ) ; METHOD_6 ( template . METHOD_7 ( ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , boolean VAR_2 ) { org.mockito.Mockito . METHOD_2 ( frontend , org.mockito.Mockito . METHOD_3 ( VAR_1 ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_3 ) , TYPE_2 . METHOD_6 ( VAR_4 . VdcActionParametersBase class ) , VAR_5 . METHOD_7 ( ) , TYPE_2 . METHOD_5 ( false ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; java.util.List < TYPE_1 > VAR_6 = VAR_5 . METHOD_8 ( ) ; return VAR_6 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 , java.lang.String VAR_4 ) { TYPE_2 VAR_5 = new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , VAR_1 ) . METHOD_2 ( STRING_3 , VAR_2 ) . METHOD_2 ( STRING_4 , VAR_3 ) . METHOD_2 ( STRING_5 , VAR_4 ) . METHOD_3 ( ) ; java.util.Map < java.lang.String , java.lang.Object > response = new TYPE_4 ( this . client , VAR_5 ) . METHOD_4 ( STRING_6 ) . METHOD_5 ( java.lang.Object [ ] . class ) ; return new TYPE_1 ( response ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { final java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_1 ( VAR_2 , new TYPE_3 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 ) { network . METHOD_2 ( ) . setId ( new TYPE_4 ( getEntity ( ) . getId ( ) , network . getId ( ) ) ) ; } setItems ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < TYPE_2 > list = ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; VAR_1 . METHOD_1 ( list ) ; VAR_1 . METHOD_2 ( ) ; if ( ( VAR_2 ) != null ) { VAR_2 . METHOD_3 ( ) . setItems ( METHOD_4 ( VAR_3 ) ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( object . METHOD_2 ( ) . getSelectedItem ( ) ) != null ) { java.lang.String VAR_2 = object . METHOD_2 ( ) . getSelectedItem ( ) . getValue ( ) ; VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 ) ) ; } } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_1 VAR_2 = METHOD_3 ( ) . METHOD_4 ( ) . get ( VAR_3 . getId ( ) ) ; if ( ( VAR_2 . METHOD_5 ( ) ) == ( VAR_4 ) ) { VAR_1 . METHOD_6 ( true ) ; } } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public TYPE_3 METHOD_3 ( ) { METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( ) ; return null ; } } ) ; } 
protected void METHOD_1 ( TYPE_1 . DiskImage VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_1 . getId ( ) ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { TYPE_2 . METHOD_8 ( ) . METHOD_3 ( VAR_1 . getId ( ) ) ; } } 
protected static org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , java.util.List < TYPE_1 . DiskImage > VAR_2 ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 : VAR_1 ) { TYPE_2 . METHOD_2 ( VAR_3 , VAR_2 ) ; if ( ( ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) && ( ( VAR_3 . getStatus ( ) ) == ( VAR_4 ) ) ) && ( TYPE_2 . METHOD_5 ( VAR_3 , VAR_2 ) ) ) { return VAR_3 ; } } return null ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) . getValue ( ) ) ) ) ; METHOD_4 ( ) . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ; METHOD_4 ( ) . setIsChangable ( VAR_2 ) ; } 
public void METHOD_1 ( ) { int result = dao . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_1 VAR_2 = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . assertEquals ( result , ( ( VAR_1 . METHOD_3 ( ) ) + 1 ) ) ; TYPE_2 . assertEquals ( result , VAR_2 . METHOD_3 ( ) ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , true , false , true , true , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_3 ( VAR_4 ) ; TYPE_2 . assertEquals ( true , ( ( VAR_1 . size ( ) ) == 1 ) ) ; TYPE_2 . assertEquals ( VAR_4 . METHOD_4 ( ) , java.lang.Integer . valueOf ( INT_1 ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = getSelectedItem ( ) ; if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 . AsyncQuery VAR_1 = new TYPE_1 . AsyncQuery ( ) ; VAR_2 = new TYPE_2 ( ) { public void onSuccess ( java.lang.Object result ) { METHOD_2 ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( result ) ) ) ; } } ; TYPE_3 . getInstance ( ) . METHOD_3 ( VAR_1 , template . getId ( ) ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_3 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_4 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; VAR_4 . METHOD_1 ( VAR_3 ) ; TYPE_2 . METHOD_2 ( VAR_4 , new TYPE_3 ( ) ) ; TYPE_4 VAR_5 = ( ( TYPE_4 ) ( VAR_1 ) ) ; VAR_5 . setItems ( VAR_4 ) ; } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.compat.Guid VAR_1 : getReturnValue ( ) . METHOD_2 ( ) ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( ) . get ( VAR_1 ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ) { TYPE_3 . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; } } } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) . value ( ) ) ; model . METHOD_5 ( TYPE_3 . METHOD_6 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ) ; model . METHOD_7 ( new TYPE_4 ( ) ) ; return model ; } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( id ) ; java.lang.String host = TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_5 ; if ( host != null ) { VAR_4 = METHOD_4 ( host ) ; } TYPE_4 parameters = new TYPE_4 ( VAR_1 , VAR_4 ) ; return METHOD_5 ( VAR_6 , parameters ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( VAR_1 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_4 ( TYPE_1 . any ( VAR_4 . VM class ) ) ; } 
protected boolean METHOD_1 ( ) { boolean returnValue = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; returnValue = false ; } if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ) { addCanDoActionMessage ( VAR_3 ) ; returnValue = false ; } return returnValue ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( cmd . METHOD_3 ( ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( VAR_2 ) ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_2 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
private void METHOD_1 ( ) { if ( ( getVm ( ) . METHOD_2 ( ) ) == null ) { return ; } for ( TYPE_1 VAR_1 : getVm ( ) . METHOD_2 ( ) ) { if ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( getVm ( ) . getId ( ) , VAR_1 . getId ( ) ) ) { TYPE_2 . METHOD_3 ( ) . METHOD_5 ( VAR_1 ) ; } else { TYPE_2 . METHOD_3 ( ) . METHOD_6 ( VAR_1 ) ; } } } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.util.ArrayList < TYPE_1 > VAR_3 = ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ; METHOD_1 ( ) . setItems ( VAR_3 ) ; METHOD_1 ( ) . setSelectedItem ( TYPE_3 . METHOD_2 ( VAR_3 ) ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . add ( VAR_4 , VAR_2 ) ; TYPE_3 VAR_5 = TYPE_4 . METHOD_2 ( VAR_3 ) ; TYPE_5 . assertEquals ( VAR_1 , VAR_5 . METHOD_3 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { METHOD_1 ( ) ; java.util.List < TYPE_1 < TYPE_2 > > VAR_1 = ( ( java.util.List < TYPE_1 < TYPE_2 > > ) ( result ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_2 ( ) . setItems ( VAR_1 ) ; METHOD_2 ( ) . setSelectedItem ( null ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , METHOD_3 ( VAR_1 ) ) ) ) ; METHOD_4 ( cmd ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cluster ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_4 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_2 ( ) ) . when ( cmd ) . METHOD_3 ( ) ; cmd . getParameters ( ) . METHOD_4 ( true ) ; org.mockito.Mockito.doReturn ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) . when ( cmd ) . METHOD_6 ( TYPE_2 . METHOD_7 ( TYPE_1 . METHOD_2 ( ) ) ) ; TYPE_3 . METHOD_8 ( cmd ) ; org.mockito.Mockito . METHOD_9 ( VAR_1 ) . METHOD_10 ( TYPE_2 . METHOD_7 ( TYPE_1 . METHOD_2 ( ) ) , TYPE_2 . METHOD_11 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { if ( ( ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) . size ( ) ) == 0 ) { METHOD_2 ( ) ; } else { METHOD_3 ( ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( VAR_2 , true ) ; } 
protected java.util.List < TYPE_1 . Disk > METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = new java.util.ArrayList < TYPE_1 . Disk > ( vm . METHOD_2 ( ) . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , new TYPE_3 ( ) ) ; TYPE_2 . METHOD_4 ( VAR_1 , TYPE_2 . METHOD_5 ( new TYPE_4 ( ) ) ) ; return VAR_1 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 . getVm ( ) ) ; VAR_3 . METHOD_3 ( ( ( java.util.List ) ( VAR_1 . METHOD_4 ( ) ) ) ) ; VAR_4 . METHOD_3 ( ( ( java.util.List ) ( VAR_1 . METHOD_5 ( ) ) ) ) ; VAR_5 . METHOD_3 ( ( ( java.util.List ) ( VAR_1 . METHOD_6 ( ) ) ) ) ; } 
private java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( params . METHOD_5 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : VAR_2 ) { iface . METHOD_6 ( TYPE_1 . METHOD_7 ( METHOD_8 ( ) , iface ) ) ; } VAR_1 = TYPE_2 . METHOD_9 ( VAR_2 ) ; } return VAR_1 ; } 
private void METHOD_1 ( final TYPE_1 pool ) { pool . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 VAR_1 , java.lang.Object sender , TYPE_4 args ) { java.lang.String VAR_2 = ( ( TYPE_5 ) ( args ) ) . VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { VAR_4 . METHOD_5 ( null ) ; } } } ) ; VAR_4 . METHOD_6 ( true ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_2 . put ( VAR_1 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ) ; } if ( METHOD_3 ( iface ) ) { VAR_3 . put ( VAR_1 , iface ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_1 ) ) ; VAR_1 . METHOD_3 ( TYPE_2 . METHOD_2 ( STRING_2 ) ) ; boolean result = dao . METHOD_4 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( result ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 1 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . assertEquals ( VAR_4 , VAR_3 . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( VAR_5 , VAR_3 . METHOD_4 ( ) ) ; } 
public TYPE_1 list ( ) { if ( TYPE_2 . METHOD_1 ( getEntity ( VAR_1 . StorageDomain class , VAR_2 , new TYPE_3 ( METHOD_2 ( VAR_3 ) ) , STRING_1 ) ) ) { return METHOD_3 ( METHOD_4 ( ) ) ; } else { return METHOD_5 ( VAR_4 class ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 parameters , java.util.List < TYPE_3 > VAR_2 ) { if ( METHOD_2 ( parameters . getStoragePoolId ( ) ) ) { if ( ! ( TYPE_4 . METHOD_3 ( parameters . METHOD_4 ( ) ) ) ) { VAR_3 . error ( STRING_1 , parameters . METHOD_4 ( ) . getName ( ) ) ; METHOD_5 ( VAR_1 , parameters . METHOD_4 ( ) . getId ( ) , VAR_4 ) ; return false ; } } return true ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < ? > command , boolean VAR_1 ) { TYPE_1 returnValue = METHOD_2 ( command ) ; if ( returnValue != null ) { return returnValue ; } command . METHOD_3 ( VAR_1 ) ; TYPE_3 . METHOD_4 ( command , command . METHOD_5 ( ) , VAR_1 ) ; command . METHOD_6 ( ) ; returnValue = command . METHOD_7 ( ) ; returnValue . METHOD_8 ( command . getParameters ( ) . METHOD_9 ( ) ) ; returnValue . METHOD_10 ( command . METHOD_11 ( ) ) ; return returnValue ; } 
public static org.ovirt.engine.core.compat.Guid METHOD_1 ( java.lang.String ... args ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( java.lang.String VAR_2 : args ) { VAR_1 . append ( VAR_2 ) ; } byte [ ] VAR_3 ; try { VAR_3 = TYPE_2 . getInstance ( VAR_4 ) . METHOD_2 ( VAR_1 . toString ( ) . METHOD_3 ( ) ) ; } catch ( TYPE_3 e ) { throw new TYPE_4 ( e ) ; } return new org.ovirt.engine.core.compat.Guid ( VAR_3 , true ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 parameters : TYPE_3 . getParameters ( ) . METHOD_2 ( ) ) { TYPE_4 . DiskImage diskImage = METHOD_3 ( ) . get ( parameters . METHOD_4 ( ) ) ; org.ovirt.engine.core.compat.Guid VAR_2 = ( diskImage == null ) ? VAR_3 : diskImage . getId ( ) ; VAR_1 . add ( new TYPE_1 ( VAR_2 , VAR_4 . Disk , VAR_5 ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 . Network model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( super . equals ( obj ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_1 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , false ) ) ) ; METHOD_4 ( command ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( false ) ; METHOD_10 ( false ) ; METHOD_11 ( ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 , TYPE_4 { java.util.List < TYPE_2 > VAR_1 = new java.util.ArrayList < TYPE_2 > ( ) ; for ( java.lang.String VAR_2 : VAR_3 ) { TYPE_5 < ? > resource = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( METHOD_4 ( resource , VAR_2 , new java.util.HashMap < java.lang.String , TYPE_6 > ( ) ) ) ; } return VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; VAR_2 . METHOD_1 ( ( ( ( ( java.util.List ) ( VAR_2 . METHOD_2 ( ) ) ) . size ( ) ) == 0 ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_1 ) { TYPE_2 . METHOD_5 ( cluster . getId ( ) , TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; } TYPE_1 . METHOD_6 ( true ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 , null , null ) ; VAR_1 . METHOD_4 ( network . getId ( ) ) ; METHOD_5 ( false , true , true , TYPE_2 . METHOD_6 ( VAR_3 , TYPE_3 . METHOD_7 ( VAR_4 , network . getName ( ) ) ) , network , VAR_1 ) ; } 
protected org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( false ) ; disk . METHOD_5 ( true ) ; disk . METHOD_6 ( vmId ) ; disk . setId ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; return disk ; } 
public boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; return ( vm != null ) && ( ( ( ( vm . getStatus ( ) ) == ( VAR_1 ) ) || ( ( vm . getStatus ( ) ) == ( VAR_2 ) ) ) || ( ( vm . getStatus ( ) ) == ( VAR_3 ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( vm . getId ( ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( vm . getId ( ) , VAR_5 ) ) . thenReturn ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_6 ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( VAR_6 ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.String > VAR_2 = null ; if ( VAR_1 != null ) { VAR_2 = VAR_1 . METHOD_2 ( ) ; } return VAR_2 == null ? new java.util.HashMap < > ( ) : VAR_2 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( VAR_2 ) ) ; VAR_1 . METHOD_4 ( METHOD_3 ( VAR_3 ) ) ; VAR_1 . METHOD_5 ( METHOD_3 ( VAR_4 ) ) ; VAR_1 . METHOD_6 ( METHOD_3 ( VAR_5 ) ) ; VAR_1 . METHOD_7 ( METHOD_3 ( VAR_6 ) ) ; VAR_1 . METHOD_8 ( METHOD_3 ( VAR_7 ) ) ; VAR_1 . METHOD_9 ( METHOD_3 ( VAR_8 ) ) ; VAR_1 . METHOD_10 ( METHOD_3 ( VAR_9 ) ) ; VAR_1 . METHOD_11 ( METHOD_3 ( VAR_10 ) ) ; } 
private void METHOD_1 ( ) { parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; command = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( parameters ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; TYPE_2 VAR_2 = new TYPE_3 ( VAR_3 ) ; METHOD_3 ( 1 , VAR_2 ) ; METHOD_4 ( 1 ) ; VAR_4 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( VAR_1 ) ; try { METHOD_7 ( ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_4 VAR_6 ) { METHOD_9 ( VAR_6 , VAR_7 , VAR_2 ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { java.lang.Integer VAR_3 = VAR_4 < java.lang.Integer > METHOD_2 ( VAR_5 ) ; TYPE_2 VAR_6 = METHOD_3 ( ) . addValue ( STRING_1 , id ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) . addValue ( STRING_4 , VAR_3 . METHOD_4 ( ) ) ; return METHOD_5 ( ) . METHOD_6 ( STRING_5 , VAR_7 . instance , VAR_6 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . VDS vds = TYPE_2 . getInstance ( ) . METHOD_2 ( ) . get ( this . METHOD_3 ( ) . METHOD_4 ( ) ) ; status = TYPE_3 . METHOD_5 ( ) . METHOD_6 ( TYPE_3 . getParameters ( ) . getStoragePoolId ( ) . toString ( ) , vds . METHOD_7 ( ) , TYPE_3 . getParameters ( ) . getStoragePoolId ( ) . toString ( ) ) ; TYPE_3 . METHOD_8 ( ) ; TYPE_3 . METHOD_9 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 dao = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.doReturn ( new java.util.ArrayList < TYPE_2 > ( ) ) . when ( dao ) . METHOD_3 ( TYPE_3 . any ( VAR_2 . Guid class ) ) ; org.mockito.Mockito.doReturn ( dao ) . when ( VAR_3 ) . METHOD_4 ( ) ; TYPE_4 . METHOD_5 ( VAR_3 . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , VAR_4 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ) , false , VAR_5 ) ; } 
public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( ) throws java.lang.Exception { TYPE_3 returnValue ; returnValue = METHOD_2 ( VAR_1 , new TYPE_4 ( VAR_2 . METHOD_3 ( ) , entity . METHOD_4 ( ) , entity . METHOD_5 ( ) , entity . getName ( ) , entity . METHOD_6 ( ) , entity . METHOD_7 ( ) , VAR_3 ) ) ; return new TYPE_1 < TYPE_2 , TYPE_3 > ( VAR_2 , returnValue ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( boolean VAR_1 ) { boolean VAR_2 = ( ( VAR_3 . METHOD_2 ( ) ) == null ) && ( ! VAR_1 ) ; boolean VAR_4 = ( VAR_3 . METHOD_3 ( ) ) && ( ( ( VAR_3 . METHOD_4 ( ) ) || ( ( VAR_3 . METHOD_5 ( ) ) != null ) ) || ( ! VAR_2 ) ) ; return TYPE_2 . METHOD_6 ( VAR_5 ) . when ( VAR_4 ) ; } 
public < TYPE_1 > TYPE_2 < ? > METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) ; java.util.List < TYPE_3 > VAR_3 = VAR_2 . METHOD_2 ( ) ; return new TYPE_4 < TYPE_3 > ( new TYPE_5 < TYPE_3 > ( VAR_3 ) , VAR_4 , VAR_5 , VAR_6 , null ) ; } else { return new TYPE_4 < TYPE_3 > ( METHOD_3 ( ) , VAR_4 , VAR_5 , VAR_6 , null ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { TYPE_3 . METHOD_3 ( new TYPE_4 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) , VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) , true , true , null , false ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( VAR_3 , VAR_4 ) ) . thenReturn ( new java.util.HashMap < java.lang.String , java.lang.String > ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( VAR_5 , VAR_4 ) ) . thenReturn ( STRING_1 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 < ? > command ) { if ( ( ( VAR_1 ) == null ) || ( VAR_1 . METHOD_2 ( ) ) ) { TYPE_2 . METHOD_3 ( command , command . METHOD_4 ( ) , command . METHOD_5 ( ) , new java.lang.Boolean ( VAR_2 . get ( command . METHOD_6 ( ) ) ) ) ; } TYPE_3 . METHOD_7 ( command . METHOD_8 ( ) ) ; command . METHOD_9 ( ) ; } 
protected void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; TYPE_3 . when ( VAR_3 . get ( org.mockito.Mockito . any ( VAR_4 class ) ) ) . thenReturn ( VAR_2 ) ; } 
protected static void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { java.lang.String VAR_3 = TYPE_2 . name ( ) ; java.util.List < java.lang.String > VAR_4 = TYPE_3 . getInstance ( ) . METHOD_2 ( VAR_1 , VAR_3 , VAR_5 , VAR_6 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; } 
public TYPE_1 < TYPE_2 , TYPE_3 > append ( TYPE_4 < TYPE_2 , TYPE_3 > VAR_1 ) { java.util.List < TYPE_4 < TYPE_2 , TYPE_3 > > VAR_2 = new TYPE_1 < TYPE_2 , TYPE_3 > ( METHOD_1 ( 0 , size ( ) ) ) . METHOD_1 ( 0 , size ( ) ) ; TYPE_5 . METHOD_2 ( VAR_2 , VAR_1 ) ; return new TYPE_1 < TYPE_2 , TYPE_3 > ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { if ( ( ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) . size ( ) ) == 0 ) { METHOD_1 ( ) ; } else { METHOD_2 ( ) ; } } 
private TYPE_1 METHOD_1 ( ) { java.util.List < TYPE_2 . VdcActionParametersBase > parameters = getParameters ( ) ; if ( ( parameters != null ) && ( ( parameters . size ( ) ) != 0 ) ) { TYPE_2 . VdcActionParametersBase VAR_1 = parameters . get ( 0 ) ; if ( ( VAR_1 != null ) && ( VAR_1 instanceof TYPE_1 ) ) { return ( ( TYPE_1 ) ( VAR_1 ) ) ; } } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . setId ( STRING_1 ) ; METHOD_4 ( 1 , null ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 , null ) ; METHOD_7 ( VAR_1 ) ; METHOD_8 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_1 } , true , true ) ; VAR_4 . add ( model ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { ( ( TYPE_2 ) ( VAR_3 ) ) . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public static < TYPE_1 > java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 < ? extends TYPE_1 > source , TYPE_3 < ? super TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 item : source ) { if ( VAR_1 . METHOD_2 ( item ) ) { list . add ( item ) ; } } return list ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_2 : ( ( TYPE_2 < TYPE_1 > ) ( source ) ) ) { if ( ( ! VAR_3 ) || ( VAR_2 . METHOD_2 ( ) ) ) { VAR_1 . add ( VAR_2 . METHOD_3 ( ) ) ; } } return VAR_1 ; } 
private void METHOD_1 ( TYPE_1 model ) { if ( ! ( model . METHOD_2 ( ) ) ) { return ; } VAR_1 . METHOD_3 ( model . METHOD_4 ( ) ) ; model . METHOD_4 ( ) . METHOD_5 ( ) . setItems ( model . METHOD_5 ( ) . METHOD_6 ( ) ) ; model . METHOD_4 ( ) . METHOD_7 ( model . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , new TYPE_3 ( TYPE_4 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ) , null , null ) , null ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . validate ( ) ) ; } 
private void METHOD_1 ( ) { if ( ! ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) { if ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) { METHOD_4 ( true ) ; } else { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; TYPE_1 . METHOD_9 ( ) ; } } TYPE_1 . METHOD_10 ( true ) ; } 
private void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( false ) ; VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( VAR_2 ) ; TYPE_3 . getInstance ( ) . METHOD_7 ( VAR_4 , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < TYPE_2 > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_1 ( ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ) ; model . METHOD_2 ( ) . setItems ( VAR_1 ) ; model . METHOD_2 ( ) . METHOD_3 ( VAR_1 . isEmpty ( ) ) ; model . METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; TYPE_3 VAR_2 = METHOD_3 ( ) ; METHOD_4 ( true , VAR_2 ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; TYPE_4 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_5 . toString ( ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . validate ( ) ) ) ) { return ; } METHOD_3 ( ) ; getWindow ( ) . METHOD_4 ( null ) ; TYPE_2 . METHOD_5 ( this , new java.util.ArrayList < java.lang.Object > ( TYPE_3 . METHOD_6 ( new java.lang.Object [ ] { STRING_1 } ) ) ) . METHOD_7 ( ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_1 , METHOD_2 ( id ) ) ; return inject ( new TYPE_5 < TYPE_6 , TYPE_7 . VM > ( VAR_5 , VAR_6 , VAR_4 ) ) ; } 
protected TYPE_1 METHOD_1 ( boolean VAR_1 ) { TYPE_1 iface = new TYPE_1 ( ) ; iface . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; iface . METHOD_3 ( TYPE_2 . instance ( ) . METHOD_4 ( INT_1 ) ) ; iface . METHOD_5 ( VAR_1 ) ; return iface ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . AddVmCommand < TYPE_2 > cmd = METHOD_3 ( 0 , 0 ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( cmd ) . getVdsGroup ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( TYPE_3 . any ( VAR_2 . Integer class ) , TYPE_3 . any ( VAR_3 . Version class ) ) ) . thenReturn ( new java.util.ArrayList < > ( TYPE_4 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_5 . METHOD_7 ( STRING_2 , cmd . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_2 . any ( VAR_2 . VDS class ) ) ; VAR_3 . METHOD_4 ( VAR_4 class ) ; org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_5 . METHOD_3 ( vds ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.Map < java.lang.Integer , java.util.Map < org.ovirt.engine.core.compat . Version , java.lang.Boolean > > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_2 ( VAR_5 ) , VAR_1 ) ; } 
public TYPE_1 . Disk METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( rs.getString ( STRING_1 ) ) ; disk . METHOD_3 ( rs . METHOD_4 ( STRING_2 ) ) ; disk . setId ( METHOD_5 ( rs , STRING_3 ) ) ; return disk ; } 
public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) || ( ! ( METHOD_3 ( ) ) ) ) return false ; if ( ( ( ( ( item . METHOD_4 ( ) ) != null ) && ( VAR_1 . METHOD_5 ( ) ) ) && ( item . METHOD_4 ( ) . METHOD_6 ( ) . METHOD_7 ( ) ) ) && ( item . METHOD_4 ( ) . METHOD_6 ( ) . METHOD_8 ( ) ) ) { return true ; } return false ; } 
private void METHOD_1 ( ) { java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( 1 ) ; VAR_1 . add ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_3 ( VAR_1 ) ; TYPE_2 . when ( VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_3 ) , VAR_4 . Matchers < TYPE_4 > any ( VAR_5 class ) ) ) . thenReturn ( returnValue ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_3 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_3 . setId ( VAR_4 ) ; VAR_3 . METHOD_1 ( STRING_1 ) ; VAR_1 . add ( VAR_3 ) ; VAR_2 . METHOD_2 ( ) . setItems ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { java.util.List < TYPE_1 . DiskImage > VAR_1 = TYPE_2 . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) , true , false , true ) ; TYPE_4 VAR_2 = new TYPE_4 ( VAR_1 ) ; return validate ( VAR_2 . METHOD_6 ( ) ) ; } 
private java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . getValue ( ) ; java.util.Map < java.lang.String , java.lang.String > VAR_4 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( VAR_2 . METHOD_2 ( VAR_1 . getName ( ) ) ) ) ; TYPE_2 . METHOD_3 ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_4 ) ; return VAR_4 ; } 
public java.lang.String getValue ( TYPE_1 . Disk object ) { java.lang.String value = STRING_1 ; if ( ( object . METHOD_1 ( ) ) == ( VAR_1 ) ) { TYPE_1 . DiskImage diskImage = ( ( TYPE_1 . DiskImage ) ( object ) ) ; java.util.ArrayList < java.lang.String > VAR_2 = diskImage . METHOD_2 ( ) ; if ( VAR_2 != null ) { value = TYPE_2 . METHOD_3 ( STRING_2 , VAR_2 . METHOD_4 ( ) ) ; } } return value ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid id = VAR_1 . getId ( ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( id ) ) { id = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; VAR_1 . setId ( id ) ; } METHOD_4 ( ) . METHOD_5 ( STRING_1 , METHOD_6 ( VAR_1 ) ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) , new TYPE_5 ( VAR_1 , TYPE_4 . METHOD_3 ( ) , TYPE_4 . METHOD_4 ( ) ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; boolean VAR_1 = ( ( java.lang.Boolean ) ( TYPE_1 . getInstance ( ) . METHOD_3 ( VAR_2 , cluster . METHOD_4 ( ) . getValue ( ) ) ) ) ; getModel ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( VAR_2 ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( INT_1 ) ; VAR_3 . METHOD_5 ( INT_2 ) ; VAR_3 . METHOD_6 ( INT_3 ) ; TYPE_2 . METHOD_7 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_3 ) ; } 
private boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) != ( VAR_1 ) ) { return false ; } org.ovirt.engine.core.compat.Guid VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( METHOD_2 ( ) ) ) . METHOD_4 ( ) ; return ! ( TYPE_1 . equals ( VAR_2 , METHOD_4 ( ) ) ) ; } 
private void METHOD_1 ( java.util.ArrayList < TYPE_1 . Disk > VAR_1 ) { java.util.ArrayList < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_2 ( VAR_3 . Linq < TYPE_1 . DiskImage > METHOD_3 ( VAR_1 ) ) ; TYPE_3 . METHOD_4 ( VAR_2 , new TYPE_4 ( ) ) ; METHOD_5 ( ) . setItems ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; iface . METHOD_3 ( null ) ; METHOD_4 ( iface , true , iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , iface . METHOD_7 ( ) , iface . METHOD_8 ( ) , null ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { final java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; final TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . add ( VAR_2 ) ; final TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( null ) ; VAR_1 . add ( VAR_4 ) ; TYPE_2 . METHOD_2 ( VAR_5 ) ; VAR_1 . add ( TYPE_2 ) ; return VAR_1 ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( STRING_1 , VAR_4 , VAR_2 ) ; synchronized ( VAR_5 ) { if ( VAR_6 . METHOD_3 ( VAR_1 ) ) { for ( org.ovirt.engine.core.compat.Guid VAR_7 : new TYPE_1 < org.ovirt.engine.core.compat.Guid > ( VAR_6 . get ( VAR_1 ) ) ) { METHOD_4 ( VAR_7 , VAR_1 , VAR_2 ) ; } } } } 
private org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; TYPE_1 . when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; return disk ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_2 ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( VAR_2 ) . METHOD_8 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , STRING_1 , TYPE_2 . getValue ( ) , TYPE_3 . getValue ( ) ) ; validator = org.mockito.Mockito . METHOD_3 ( new TYPE_4 ( VAR_1 , new java.util.ArrayList < java.lang.String > ( ) ) ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( false ) ; METHOD_4 ( ) ; command . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( command . validate ( ) ) ; TYPE_2 . METHOD_9 ( command . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_3 . toString ( ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . DbFacade VAR_1 = METHOD_2 ( ) ; VAR_2 = org.mockito.Mockito . METHOD_3 ( VAR_3 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_5 ( vmId , METHOD_6 ( ) . METHOD_7 ( ) , METHOD_8 ( ) . METHOD_9 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_10 ( VAR_4 ) ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > command , TYPE_2 . VdcBllMessages ... VAR_2 ) { command . METHOD_2 ( ) ; for ( TYPE_2 . VdcBllMessages VAR_3 : VAR_2 ) { TYPE_3 . METHOD_3 ( VAR_1 , command , VAR_3 ) ; } return command . getReturnValue ( ) . METHOD_4 ( ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 . VdcActionParametersBase > ( parameters ) ) ; org.mockito.Mockito.when ( VAR_1 . getParameters ( ) ) . thenReturn ( parameters ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( METHOD_4 ( VAR_3 ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_4 ) ) . thenReturn ( null ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( VAR_1 ) ; TYPE_2 < TYPE_3 , java.lang.Object > VAR_2 = new TYPE_2 ( storageDomain . METHOD_3 ( ) , null ) ; returnValue . METHOD_4 ( VAR_2 ) ; return returnValue ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( METHOD_7 ( 0 ) ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_9 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( STRING_1 , ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; TYPE_2 . METHOD_3 ( STRING_2 , ( ( VAR_1 . get ( 0 ) . METHOD_4 ( ) . size ( ) ) == 1 ) ) ; } 
public boolean METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( true ) ; if ( ( METHOD_2 ( ) . METHOD_4 ( ) ) && ( ! ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ) { METHOD_2 ( ) . METHOD_5 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_6 ( ) ) ; METHOD_2 ( ) . METHOD_3 ( false ) ; } return METHOD_2 ( ) . METHOD_7 ( ) ; } 
private void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( METHOD_3 ( ) ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( METHOD_5 ( ) ) . getId ( ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( ) ) . when ( VAR_1 ) . METHOD_7 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( new java.util.ArrayList < TYPE_1 > ( ) ) . when ( VAR_1 ) . METHOD_8 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { quota = METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( VAR_1 ) ) . thenReturn ( quota ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_7 ( ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( null , VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_4 , VAR_3 ) ; final org.ovirt.engine.core.compat.Guid VAR_5 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_5 ) ; } 
public static void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( ) ; for ( org.ovirt.engine.core.compat . Version VAR_3 : VAR_4 < TYPE_1 < org.ovirt.engine.core.compat . Version > > METHOD_4 ( VAR_5 ) ) { VAR_2 . put ( VAR_3 , new TYPE_2 ( VAR_3 ) ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return TYPE_1 . METHOD_2 ( vm , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , vm . METHOD_4 ( ) , METHOD_5 ( ) . getValue ( ) , false , true , false , false , true , false , false , true , TYPE_3 . METHOD_6 ( ) ) ; } 
protected boolean validate ( ) { TYPE_1 VAR_1 = METHOD_1 ( ) ; if ( ! ( super . validate ( ) ) ) { return false ; } boolean VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( ! VAR_2 ) { return METHOD_4 ( VAR_3 ) ; } else if ( ( VAR_1 . METHOD_5 ( ) . size ( ) ) == 1 ) { return METHOD_4 ( VAR_4 ) ; } TYPE_2 VAR_5 = new TYPE_2 ( ) ; return validate ( VAR_5 . METHOD_6 ( VAR_1 ) ) ; } 
protected void METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) { TYPE_1 . METHOD_3 ( ) ; if ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; } METHOD_9 ( ) ; } else { TYPE_1 . METHOD_10 ( ) ; } TYPE_1 . METHOD_11 ( true ) ; } 
protected boolean validate ( ) { if ( ( VAR_1 . METHOD_1 ( ) ) != null ) { return METHOD_2 ( VAR_2 ) ; } if ( ! ( METHOD_3 ( ) ) ) { return METHOD_2 ( VAR_3 ) ; } if ( ! ( TYPE_1 . METHOD_4 ( VAR_4 ) . METHOD_5 ( VAR_5 . METHOD_6 ( ) ) ) ) { return METHOD_2 ( VAR_6 ) ; } return true ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.network.Network > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.network.Network > VAR_4 = new TYPE_3 < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 ) { if ( ! ( VAR_3 . METHOD_3 ( network . getName ( ) ) ) ) { VAR_4 . add ( network ) ; } } return VAR_4 ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > , TYPE_2 < java.lang.String > > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_4 ( VAR_5 ) , VAR_1 ) ; } 
public void METHOD_1 ( long VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = null ; TYPE_3 VAR_3 = null ; try { VAR_2 = VAR_4 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ( STRING_1 + ( STRING_2 + STRING_3 ) ) ) ; VAR_3 . METHOD_4 ( 1 , VAR_1 ) ; int VAR_5 = VAR_3 . METHOD_5 ( ) ; if ( VAR_5 != 1 ) { VAR_6 . error ( STRING_4 , VAR_1 ) ; } } finally { TYPE_4 . METHOD_6 ( VAR_3 , VAR_2 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return INT_1 ; } return source ; } } ; TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_3 ( ) ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( command . validate ( ) ) ; TYPE_2 . METHOD_10 ( command . getReturnValue ( ) . METHOD_11 ( ) . METHOD_12 ( TYPE_3 . toString ( ) ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( METHOD_2 ( host ) ) { VAR_2 . add ( host ) ; } } VAR_1 . METHOD_3 ( ) . setItems ( VAR_2 ) ; } 
protected java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 VAR_2 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain storage : VAR_1 ) { if ( storage . getStoragePoolId ( ) . equals ( VAR_2 ) ) { VAR_3 . add ( storage ) ; } } return VAR_3 ; } 
private boolean METHOD_1 ( ) { boolean result ; switch ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { case VAR_1 : case VAR_2 : case VAR_3 : case VAR_4 : case VAR_5 : result = true ; break ; default : result = false ; break ; } return result ; } 
private void METHOD_1 ( TYPE_1 version ) { if ( TYPE_2 . METHOD_2 ( version , VAR_1 ) ) { METHOD_3 ( version , TYPE_3 . METHOD_4 ( ) ) ; METHOD_5 ( version , TYPE_4 . METHOD_4 ( ) ) ; METHOD_6 ( version , TYPE_5 . METHOD_4 ( ) ) ; METHOD_7 ( version , TYPE_6 . METHOD_4 ( ) ) ; METHOD_8 ( version , TYPE_6 . METHOD_4 ( ) ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 . VdcQueryReturnValue returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) ; VAR_2 = returnValue . getReturnValue ( ) ; if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_2 . METHOD_1 ( ) ; } METHOD_2 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; switch ( VAR_1 ) { case VAR_2 : VAR_3 . error ( java.lang.String . METHOD_4 ( STRING_1 , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) ) ; return ; } super . METHOD_1 ( ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < java.lang.Integer , java.lang.String > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; TYPE_2 . getInstance ( ) . METHOD_2 ( new TYPE_3 ( VAR_3 ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_4 ( VAR_5 ) , VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_1 ) . METHOD_6 ( null ) ; } 
public static void METHOD_1 ( TYPE_1 nic , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = nic . METHOD_2 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_3 : new java.util.ArrayList < TYPE_2 > ( VAR_2 ) ) { TYPE_3 . METHOD_3 ( VAR_3 , null , VAR_1 ) . METHOD_4 ( ) ; } } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 ) , aQuery ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 1 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . assertEquals ( cluster . getStoragePoolId ( ) , VAR_3 . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( VAR_4 . StoragePool , VAR_3 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( VAR_1 ) ; vds . METHOD_3 ( 1 ) ; TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( vds ) ) ; vds . METHOD_3 ( 0 ) ; TYPE_1 . METHOD_6 ( VAR_2 . METHOD_5 ( vds ) ) ; vds . METHOD_2 ( VAR_3 ) ; TYPE_1 . METHOD_4 ( VAR_2 . METHOD_5 ( vds ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; if ( ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { list . add ( new TYPE_3 ( METHOD_4 ( ) , null , VAR_2 , METHOD_5 ( ) . getValue ( ) , METHOD_6 ( ) ) ) ; } return list ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( sender ) ) ; java.util.List < TYPE_4 > VAR_2 = ( ( java.util.List < TYPE_4 > ) ( model . METHOD_2 ( ) ) ) ; METHOD_3 ( VAR_2 ) ; } 
public static java.lang.String METHOD_1 ( java.util.ArrayList < TYPE_1 . Disk > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { return null ; } final java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 . Disk disk : VAR_1 ) { VAR_2 . add ( disk . METHOD_2 ( ) ) ; } return TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( ) . get ( iface . getName ( ) ) ; if ( VAR_1 == null ) { return true ; } return ! ( TYPE_1 . equals ( iface . METHOD_3 ( ) , VAR_1 . METHOD_3 ( ) ) ) ; } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( ) , new TYPE_4 < TYPE_2 > ( ) { public TYPE_2 METHOD_2 ( TYPE_5 VAR_2 ) throws TYPE_6 { return null ; } } ) ; VAR_3 = new TYPE_7 ( VAR_4 ) ; VAR_5 = new TYPE_8 < org.ovirt.engine.core.common.businessentities.VDS > ( new TYPE_9 < org.ovirt.engine.core.common.businessentities.VDS > ( ) { public java.lang.String METHOD_3 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return vds . METHOD_4 ( ) ; } } ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( VAR_1 ) ; METHOD_3 ( network ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_4 ( STRING_1 , network ) ; METHOD_5 ( iface ) ; iface . METHOD_6 ( true ) ; org.ovirt.engine.core.common.businessentities.VDS host = org.mockito.Mockito . METHOD_7 ( VAR_2 . VDS class ) ; TYPE_1 VAR_3 = METHOD_8 ( METHOD_9 ( iface ) , host ) ; METHOD_10 ( VAR_3 , VAR_4 , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( true ) ; TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 ) . METHOD_4 ( STRING_2 ) ) ; TYPE_2 . assertEquals ( STRING_3 , STRING_4 , VAR_1 . METHOD_3 ( STRING_5 ) ) ; TYPE_2 . assertEquals ( STRING_6 , STRING_4 , VAR_1 . METHOD_3 ( null ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; if ( ( model . METHOD_2 ( ) ) != null ) { return ; } model . METHOD_3 ( ) ; METHOD_4 ( model ) ; new TYPE_2 ( this , model , getEntity ( ) ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) , null ) ) ; METHOD_3 ( VAR_1 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( vds ) . getStatus ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( vds ) . getStatus ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Disk model = TYPE_2 . getModel ( ) ; model . METHOD_2 ( null ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; try { VAR_2 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_7 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_3 < ? extends TYPE_2 . VdcActionParametersBase > VAR_2 , java.lang.String [ ] VAR_3 , java.lang.Object [ ] VAR_4 , java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_5 , java.util.ArrayList < TYPE_4 > VAR_6 ) { java.lang.String VAR_7 = ( STRING_1 + ( VAR_8 [ 0 ] ) ) + STRING_2 ; return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , true , true , null , VAR_5 , VAR_6 , VAR_7 , true ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; if ( vm != null ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , new TYPE_2 ( vm . getId ( ) , VAR_3 ) , null , null ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ( ( ( java.util.List < TYPE_1 > ) ( source ) ) . size ( ) ) > 0 ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { if ( TYPE_1 . equals ( command . getName ( ) ) ) { METHOD_2 ( ) ; } else if ( ( ( TYPE_2 . equals ( command . getName ( ) ) ) || ( TYPE_3 . equals ( command . getName ( ) ) ) ) || ( TYPE_4 . equals ( command . getName ( ) ) ) ) { METHOD_3 ( ) ; } else { super . METHOD_1 ( command ) ; } } 
public static TYPE_1 METHOD_1 ( TYPE_2 type , TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) != type ) { if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { return TYPE_1 . METHOD_1 ( type , VAR_1 . METHOD_3 ( ) ) ; } return null ; } return VAR_1 ; } 
private boolean METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) { return false ; } org.ovirt.engine.core.compat.Guid VAR_1 = ( ( TYPE_1 . DiskImage ) ( METHOD_2 ( ) ) ) . METHOD_5 ( ) ; return ! ( TYPE_2 . equals ( VAR_1 , METHOD_5 ( ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new org.ovirt.engine.core.common.businessentities.DiskImage ( TYPE_1 . instance ( ) . METHOD_2 ( ) , new TYPE_2 ( ) , new TYPE_2 ( ) , INT_1 , STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , STRING_2 , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , INT_1 , VAR_2 , VAR_1 , VAR_3 , new TYPE_2 ( ) , STRING_3 , VAR_4 . VM , null , null , VAR_5 , false ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) . METHOD_6 ( ) . toString ( ) ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; TYPE_2 . METHOD_9 ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( true ) ; METHOD_3 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , TYPE_2 . METHOD_4 ( ) , null ) ; VAR_4 . METHOD_5 ( ) ; VAR_5 . METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; METHOD_8 ( STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = VAR_3 ; if ( VAR_2 . equals ( STRING_1 ) ) { METHOD_2 ( object ) ; } else if ( VAR_2 . equals ( STRING_2 ) ) { VAR_4 . METHOD_3 ( object . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ; VAR_1 . add ( new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ) ; TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( vm , null , VAR_1 ) , true , null ) ; } 
private void METHOD_1 ( java.lang.Object returnValue , int VAR_1 , int VAR_2 , int VAR_3 ) { org.ovirt.engine.core.compat . Version version = ( ( org.ovirt.engine.core.compat . Version ) ( returnValue ) ) ; TYPE_1 . assertEquals ( version . METHOD_2 ( ) , VAR_1 ) ; TYPE_1 . assertEquals ( version . METHOD_3 ( ) , VAR_2 ) ; TYPE_1 . assertEquals ( version . METHOD_4 ( ) , VAR_3 ) ; TYPE_1 . assertEquals ( version . METHOD_5 ( ) , 0 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 class ) ; java.util.List < java.lang.String > VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; TYPE_4 . METHOD_4 ( STRING_2 , VAR_3 . METHOD_5 ( STRING_2 ) ) ; TYPE_4 . METHOD_4 ( STRING_3 , VAR_3 . METHOD_5 ( STRING_3 ) ) ; } 
protected void METHOD_1 ( TYPE_1 parameters ) { super . METHOD_2 ( parameters . METHOD_3 ( ) ) ; if ( ( ( METHOD_4 ( ) ) != null ) && ( ( METHOD_4 ( ) . METHOD_5 ( ) ) != null ) ) { METHOD_6 ( METHOD_4 ( ) . METHOD_5 ( ) . getValue ( ) ) ; } } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return TYPE_1 . METHOD_2 ( vm , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , vm . getStoragePoolId ( ) , METHOD_4 ( ) . getValue ( ) , false , true , false , false , true , false , true , VAR_1 . Collections < org.ovirt.engine.core.common.businessentities . Disk > METHOD_5 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return METHOD_2 ( ( ( ( iface . getName ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) , false , null , null , VAR_2 , VAR_1 . getName ( ) , VAR_1 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_3 ) ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( ) ) . when ( VAR_4 ) . get ( VAR_5 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( true ) ) . when ( VAR_6 ) . get ( TYPE_1 . any ( VAR_7 . Guid class ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_4 = METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_6 , VAR_7 ) ; METHOD_5 ( VAR_8 , org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) , VAR_6 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( command . validate ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( true ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . METHOD_9 ( ) ) ; } 
private java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > returnValue = new java.util.HashMap < java.lang.String , java.lang.String > ( VAR_2 . METHOD_2 ( ) ) ; TYPE_2 < java.lang.String > VAR_3 = METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 != null ) && ( ( VAR_3 . size ( ) ) > 0 ) ) { TYPE_3 . METHOD_4 ( VAR_2 , VAR_3 , returnValue ) ; } return returnValue ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new TYPE_1 ( VAR_1 , VAR_2 ) , aQuery ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; if ( source != null ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( source ) ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( ) ; while ( VAR_2 . METHOD_2 ( ) ) { list . add ( ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( VAR_2 . METHOD_3 ( ) ) ) ) ; } } return list ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; model . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( model ) ; TYPE_2 entity = VAR_1 . getEntity ( ) ; model . setEntity ( entity ) ; model . METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( false ) ; VAR_2 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( STRING_1 , STRING_2 ) ; METHOD_3 ( nic ) ; TYPE_1 VAR_1 = METHOD_4 ( METHOD_5 ( nic ) ) ; METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( VAR_1 . METHOD_8 ( ) . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( 1 , null ) . equals ( VAR_1 ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_1 , null ) . equals ( VAR_2 ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( INT_2 , null ) . equals ( VAR_2 ) ) ; } 
private java.util.List < java.lang.String > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( VAR_1 . size ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : VAR_1 ) { VAR_2 . add ( vds . METHOD_2 ( ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; try { VAR_2 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_7 ( VAR_3 , STRING_2 , STRING_3 , METHOD_8 ( ) ) ; } } 
public boolean METHOD_1 ( TYPE_1 storageDomain ) { java.util.List < TYPE_2 > list = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( storageDomain . METHOD_4 ( ) ) ; for ( TYPE_2 VAR_1 : METHOD_5 ( list , storageDomain . METHOD_4 ( ) , STRING_1 ) ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; } METHOD_8 ( storageDomain ) ; return true ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.Boolean , java.util.List < org.ovirt.engine.core.common.businessentities.VM > > result = dao . METHOD_2 ( VAR_1 , true ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( STRING_1 , 1 , result . get ( false ) . size ( ) ) ; } 
protected < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_1 model , java.lang.String VAR_1 ) { java.util.List < TYPE_3 > VAR_2 = new java.util.ArrayList < TYPE_3 > ( model . METHOD_2 ( ) ) ; for ( TYPE_3 VAR_3 : model . METHOD_2 ( ) ) { if ( VAR_3 . METHOD_3 ( ) . equals ( VAR_1 ) ) { VAR_2 . METHOD_4 ( VAR_3 ) ; break ; } } model . METHOD_2 ( ) . METHOD_5 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_8 ( TYPE_2 . any ( ) ) ) . thenReturn ( new TYPE_3 . ValidationResult ( VAR_3 ) ) ; TYPE_4 . METHOD_9 ( command , VAR_4 ) ; } 
private void METHOD_1 ( ) { final TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; model . METHOD_2 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_1 , METHOD_4 ( false ) , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 result ) { model . METHOD_6 ( ) ; METHOD_7 ( null ) ; } } , this ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { VAR_3 . METHOD_1 ( VAR_1 ) ; this . VAR_1 = VAR_1 ; if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( false ) ; } else { METHOD_4 ( VAR_2 , VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 parameters = new TYPE_2 ( TYPE_3 . getParameters ( ) . METHOD_2 ( ) , VAR_1 . getId ( ) ) ; parameters . METHOD_3 ( false ) ; METHOD_4 ( TYPE_4 . getInstance ( ) . METHOD_5 ( VAR_2 , parameters ) . getSucceeded ( ) ) ; TYPE_3 . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 quota = METHOD_2 ( ) ; quota . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( quota ) ; VAR_1 . METHOD_6 ( ) ; TYPE_2 VAR_2 = VAR_3 . list ( ) ; METHOD_7 ( VAR_2 , 1 ) ; TYPE_3 VAR_4 = VAR_2 . METHOD_8 ( ) . get ( 0 ) ; assertEquals ( INT_1 , VAR_4 . METHOD_9 ( ) . METHOD_10 ( ) ) ; } 
public < TYPE_1 > java.util.List < TYPE_1 > METHOD_1 ( final java.lang.String VAR_1 , final TYPE_2 < TYPE_1 > VAR_2 , final TYPE_3 VAR_3 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_4 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; java.util.List < ? > VAR_5 = ( ( java.util.List < ? > ) ( VAR_4 . get ( VAR_6 ) ) ) ; return VAR_5 != null ? ( ( java.util.List < TYPE_1 > ) ( VAR_5 ) ) : null ; } 
public static org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_1 ) { if ( ( ( i . METHOD_2 ( ) ) != null ) && ( i . METHOD_2 ( ) ) ) { return i ; } } return null ; } 
public TYPE_1 METHOD_1 ( ) { if ( ! ( getParameters ( ) . METHOD_2 ( ) ) ) { METHOD_3 ( VAR_1 , METHOD_4 ( ) ) ; } else { METHOD_3 ( VAR_1 , null ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) , VAR_2 ) ; } return null ; } 
private void METHOD_1 ( boolean VAR_1 ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( METHOD_2 ( ) . getId ( ) ) . thenReturn ( VAR_3 ) ; METHOD_4 ( VAR_2 , VAR_1 ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( true ) ; METHOD_8 ( ) . METHOD_10 ( ) ; TYPE_1 . METHOD_11 ( METHOD_8 ( ) , true ) ; TYPE_2 . METHOD_12 ( METHOD_8 ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 storage ) { if ( ( ( storage . METHOD_2 ( ) ) == null ) || ( ( storage . METHOD_2 ( ) ) < 1 ) ) { return STRING_1 ; } return ( storage . METHOD_2 ( ) ) + STRING_2 ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) { public void METHOD_2 ( TYPE_2 VAR_2 , java.lang.Object sender , TYPE_3 args ) { if ( ! ( METHOD_3 ( VAR_3 . getSelectedItem ( ) , model ) ) ) { METHOD_4 ( ) . METHOD_5 ( model . METHOD_6 ( ) ) ; } else { METHOD_4 ( ) . METHOD_7 ( ) ; } } } ; VAR_3 . METHOD_8 ( ) . METHOD_9 ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_1 VAR_1 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 . METHOD_5 ( ) ) . addValue ( STRING_3 , VAR_1 . METHOD_6 ( ) ) . addValue ( STRING_4 , VAR_1 . METHOD_7 ( ) ) . addValue ( STRING_5 , VAR_1 . METHOD_8 ( ) ) . addValue ( STRING_6 , VAR_1 . METHOD_9 ( ) ) . addValue ( STRING_7 , TYPE_2 . METHOD_10 ( VAR_1 . METHOD_11 ( ) ) ) ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { VAR_2 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 ) { VAR_2 . put ( vm . getId ( ) , TYPE_1 . name ( ) ) ; } } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 , org.ovirt.engine.core.compat.Guid VAR_5 , org.ovirt.engine.core.compat.Guid VAR_6 ) { if ( METHOD_2 ( VAR_2 , VAR_5 ) ) { TYPE_4 . DiskImage VAR_7 = METHOD_3 ( VAR_3 , VAR_4 , VAR_6 , VAR_1 . getId ( ) ) ; return TYPE_5 . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_7 . METHOD_6 ( ) ) ; } return null ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : null ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , VAR_3 , aQuery ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < TYPE_1 > result = new java.util.ArrayList < > ( ) ; if ( VAR_1 != null ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { for ( TYPE_2 VAR_3 : VAR_2 ) { result . add ( TYPE_1 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ) ; } } } return result ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 , java.lang.Integer VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) , VAR_4 . VDS ) ; if ( VAR_2 != null ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_5 , VAR_3 , aQuery ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > VAR_1 ) { for ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > VAR_2 : VAR_1 ) { if ( ( VAR_2 . getEntity ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_3 ) ) { return true ; } } return false ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String version ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 1 ; } } ; TYPE_1 tempVar = new TYPE_1 ( VAR_1 ) ; tempVar . METHOD_4 ( version ) ; METHOD_5 ( tempVar , aQuery ) ; } 
protected void METHOD_1 ( TYPE_1 event ) { super . METHOD_1 ( event ) ; if ( ( ( VAR_1 ) != null ) && ( ( ( event . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( event . METHOD_2 ( ) ) == ( VAR_3 ) ) ) ) { VAR_1 . METHOD_3 ( event . METHOD_4 ( ) ) ; } } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_3 ( ( ( TYPE_3 ) ( returnValue ) ) ) ; } } ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_2 ( ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_5 ( TYPE_1 . any ( VAR_1 class ) , TYPE_1 . METHOD_6 ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; cmd . METHOD_10 ( ) ; } 
protected void METHOD_1 ( ) { command = METHOD_2 ( ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_8 ( ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . when ( ( ( ( ( METHOD_3 ( ) . METHOD_4 ( ) ) != ( VAR_2 . METHOD_4 ( ) ) ) && ( ( VAR_2 . getStatus ( ) ) != ( VAR_3 ) ) ) && ( ( VAR_2 . getStatus ( ) ) != ( VAR_4 ) ) ) ) ; } 
private void METHOD_1 ( int VAR_1 , java.lang.String VAR_2 , TYPE_1 < TYPE_2 . ValidationResult > VAR_3 ) { java.lang.String VAR_4 = STRING_1 ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_5 = METHOD_2 ( VAR_4 , true ) ; java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_6 = METHOD_3 ( VAR_4 , VAR_1 ) ; TYPE_3 . METHOD_4 ( VAR_2 , new TYPE_4 ( VAR_5 ) . METHOD_5 ( VAR_6 ) , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel ) ( sender ) ) . getEntity ( ) ) ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( ( ! VAR_2 ) ) ; } 
private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_2 ( ) ) ; METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ; } else { TYPE_1 . METHOD_7 ( false ) ; log . METHOD_8 ( STRING_1 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . StorageDomain ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , VAR_1 , aQuery ) ; } 
public static java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = new java.util.HashMap < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network VAR_3 : VAR_1 ) { VAR_2 . put ( VAR_3 . METHOD_2 ( ) , VAR_3 ) ; } return VAR_2 ; } else { return TYPE_1 . METHOD_3 ( ) ; } } 
private java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , boolean VAR_2 ) { org.mockito.Mockito . METHOD_2 ( frontend , org.mockito.Mockito . METHOD_3 ( VAR_1 ) ) . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_3 ) , TYPE_2 . any ( VAR_4 class ) , VAR_5 . METHOD_6 ( ) , TYPE_2 . METHOD_5 ( VAR_2 ) ) ; java.util.List < TYPE_1 > VAR_6 = VAR_5 . METHOD_7 ( ) ; return VAR_6 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( STRING_1 , command . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( STRING_2 , command . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } 
private static void METHOD_1 ( TYPE_1 vm ) { TYPE_2 . METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vm . getId ( ) ) , VAR_1 , vm . METHOD_4 ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( vm . METHOD_7 ( ) , vm . METHOD_8 ( ) ) , true , true , null ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool pool = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; pool . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; pool . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( pool ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { boolean returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ; if ( returnValue ) { command . METHOD_1 ( ) ; } else { org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , VAR_2 , VAR_3 ) ; } } 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; VAR_1 . METHOD_1 ( object . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_1 . METHOD_3 ( true ) ; VAR_4 . METHOD_3 ( false ) ; VAR_5 . METHOD_3 ( false ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; VAR_6 . METHOD_5 ( VAR_8 , INT_1 ) ; METHOD_6 ( ) . METHOD_7 ( INT_2 , INT_2 ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } if ( ! ( TYPE_1 . METHOD_2 ( TYPE_2 . getVdsGroup ( ) . METHOD_3 ( ) ) ) ) { METHOD_4 ( VAR_1 ) ; } return true ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( returnValue ) ) ; model . METHOD_2 ( ) . setItems ( new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( TYPE_2 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VmTemplate [ ] { template } ) ) ) ; model . METHOD_2 ( ) . setSelectedItem ( template ) ; model . METHOD_2 ( ) . setIsChangable ( false ) ; METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( validate ( TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) , TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) ) ) ) { return false ; } return true ; } 
public < TYPE_1 > TYPE_1 get ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { throw new TYPE_3 ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 . METHOD_1 ( ) , VAR_1 ) ) ; } TYPE_1 value = get ( VAR_1 ) ; if ( value == null ) { value = VAR_2 ; } return value ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , boolean VAR_3 ) { if ( VAR_1 == null ) { VAR_4 . error ( STRING_1 ) ; return false ; } if ( ! ( METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ) ) { return false ; } return true ; } 
protected void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; java.lang.String VAR_2 = VAR_3 < java.lang.String > METHOD_4 ( VAR_4 ) ; TYPE_3 . METHOD_5 ( VAR_1 , new TYPE_4 ( VAR_2 ) ) ; TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 = cmd . getParameters ( ) . METHOD_2 ( ) ; cmd . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 . getId ( ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_5 ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( ) ) ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) return true ; if ( ! ( VAR_1 instanceof TYPE_1 ) ) return false ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( TYPE_2 . equals ( METHOD_1 ( ) , VAR_2 . METHOD_1 ( ) ) ) && ( TYPE_2 . equals ( METHOD_2 ( ) , VAR_2 . METHOD_2 ( ) ) ) ; } 
public static TYPE_1 . DiskImage METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { TYPE_1 . DiskImage image = TYPE_4 . METHOD_2 ( vm , VAR_1 , VAR_2 ) ; image . METHOD_3 ( TYPE_4 . METHOD_4 ( vm . getName ( ) ) ) ; image . METHOD_5 ( VAR_3 ) ; return image ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . METHOD_2 ( VAR_1 . isEmpty ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 . DiskImage VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . getId ( ) ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( ( ( ! ( VAR_4 . isEmpty ( ) ) ) || ( METHOD_4 ( ) . METHOD_5 ( ) ) ) ) ; VAR_2 . METHOD_6 ( getParameters ( ) . METHOD_7 ( ) ) ; return METHOD_8 ( VAR_2 , METHOD_9 ( ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , vm . getId ( ) ) , VAR_2 , STRING_1 , STRING_2 , 1 , new java.util.HashMap < > ( ) , true , true , true , STRING_3 , new java.util.HashMap < > ( ) , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , STRING_4 , true ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM result = null ; TYPE_1 . VdcQueryReturnValue VAR_1 = TYPE_2 . getInstance ( ) . RunQuery ( VAR_2 , new TYPE_3 ( VAR_3 . getId ( ) ) ) ; if ( VAR_1 . getSucceeded ( ) ) { result = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( VAR_1 . getReturnValue ( ) ) ) ; } return result ; } 
private static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 VAR_1 , final TYPE_3 VAR_2 , boolean VAR_3 ) { return TYPE_4 . METHOD_2 ( VAR_1 , VAR_4 , new TYPE_3 ( ) . METHOD_3 ( VAR_5 , VAR_6 ) . METHOD_3 ( VAR_7 , VAR_3 ) . METHOD_3 ( VAR_8 , VAR_2 ) ) ; } 
protected void METHOD_1 ( TYPE_1 model ) { java.lang.String VAR_1 = model . METHOD_2 ( ) . name ; java.lang.String VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; java.lang.String VAR_3 = model . METHOD_4 ( ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( STRING_1 , ( VAR_3 + VAR_2 ) , VAR_4 ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; java.lang.String VAR_2 = ( ( vds != null ) && ( ( vds . METHOD_3 ( ) ) != null ) ) ? vds . METHOD_3 ( ) : STRING_1 ; VAR_1 . put ( TYPE_2 . name ( ) . METHOD_4 ( ) , VAR_2 ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_2 ( ) . getValue ( ) ; TYPE_2 params = new TYPE_2 ( VAR_2 , VAR_3 ) ; params . METHOD_3 ( TYPE_3 . getParameters ( ) . METHOD_4 ( ) ) ; return TYPE_3 . METHOD_5 ( ) . METHOD_6 ( VAR_4 , params ) . getSucceeded ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = VAR_2 class . METHOD_2 ( STRING_1 ) ; TYPE_2 VAR_3 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) ; VAR_4 = VAR_3 . METHOD_5 ( VAR_1 ) ; TYPE_4 VAR_5 = TYPE_5 . METHOD_3 ( ) . METHOD_6 ( ) ; VAR_6 = VAR_5 . METHOD_7 ( STRING_2 ) ; VAR_7 = VAR_5 . METHOD_7 ( STRING_3 ) ; VAR_8 = VAR_5 . METHOD_7 ( STRING_4 ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_1 . METHOD_2 ( list , new TYPE_2 < java.lang.String , java.lang.String > ( ) { public java.lang.String METHOD_3 ( java.lang.String VAR_1 ) { return VAR_1 . METHOD_4 ( 0 , 1 ) ; } } ) ; java.util.Map < java.lang.String , java.lang.String > VAR_2 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) { { put ( STRING_1 , STRING_2 ) ; put ( STRING_3 , STRING_4 ) ; } } ; TYPE_3 . assertEquals ( map , VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.util.Map < java.lang.String , java.lang.String > VAR_4 = new java.util.HashMap < > ( ) ; VAR_4 . put ( STRING_1 , VAR_2 ) ; VAR_4 . put ( STRING_2 , VAR_3 ) ; TYPE_2 tempVar = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , VAR_1 , VAR_4 ) ; TYPE_4 . getInstance ( ) . METHOD_3 ( VAR_5 , tempVar , TYPE_5 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . getId ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 : VAR_1 ) { TYPE_1 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_3 . getId ( ) ) ; TYPE_1 . METHOD_2 ( ) . METHOD_7 ( ) . METHOD_6 ( VAR_3 . getId ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.VM VAR_2 ) { TYPE_2 VAR_3 = VAR_2 . getStatus ( ) ; TYPE_2 VAR_4 = VAR_1 . METHOD_2 ( ) ; if ( ( ( VAR_3 == ( VAR_5 ) ) && ( VAR_4 != ( VAR_5 ) ) ) && ( VAR_4 . METHOD_3 ( ) ) ) { VAR_6 . add ( VAR_1 . getId ( ) ) ; VAR_7 . METHOD_4 ( STRING_1 , VAR_1 . getId ( ) ) ; VAR_2 . METHOD_5 ( null ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 0 ; } } ; VAR_1 . onSuccess ( aQuery . getModel ( ) , INT_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) . append ( STRING_1 , METHOD_2 ( ) ) . append ( STRING_2 , METHOD_3 ( ) ) . append ( STRING_3 , METHOD_4 ( ) ) . append ( STRING_4 , TYPE_2 . METHOD_5 ( METHOD_6 ( ) , STRING_5 ) ) . append ( STRING_6 , METHOD_7 ( ) ) . append ( STRING_7 , TYPE_2 . METHOD_5 ( METHOD_8 ( ) , STRING_5 ) ) . append ( STRING_8 , METHOD_9 ( ) ) ; } 
protected void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcQueryType > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcQueryType > ( ) ; VAR_1 . add ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; java.util.ArrayList < TYPE_3 > VAR_5 = new java.util.ArrayList < TYPE_3 > ( TYPE_4 . METHOD_3 ( new TYPE_3 [ ] { VAR_3 } ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_1 , VAR_5 , this , getModel ( ) . METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getEntity ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( TYPE_1 ) ( getEntity ( ) ) ) . METHOD_2 ( ) ; setItems ( template . METHOD_3 ( ) ) ; } else { setItems ( null ) ; } } 
public void METHOD_1 ( TYPE_1 < java.lang.String > event ) { super . METHOD_1 ( event ) ; if ( VAR_1 . METHOD_2 ( ) ) { TYPE_2 . get ( ) . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( ) { TYPE_4 VAR_2 = TYPE_5 . METHOD_5 ( STRING_1 ) ; if ( VAR_2 != null ) { TYPE_4 VAR_3 = VAR_2 . METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; VAR_3 . METHOD_8 ( VAR_2 ) ; } } } ) ; } } 
public int METHOD_1 ( TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VM > VAR_1 , TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VM > VAR_2 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; if ( VAR_3 != 0 ) { return VAR_3 ; } return VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_5 ( ) ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_1 ( ) . METHOD_2 ( ) . setIsChangable ( false ) ; VAR_3 . METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } 
public static TYPE_1 < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { TYPE_1 < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = new TYPE_2 < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage : VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage VAR_3 = org.ovirt.engine.core.common.businessentities.DiskImage . METHOD_2 ( diskImage ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; VAR_2 . add ( VAR_3 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( null ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_2 ( VAR_3 , host , VAR_4 ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( ) , TYPE_4 . METHOD_6 ( ) ) ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_1 ( ) ) ; TYPE_2 . when ( VAR_2 . METHOD_2 ( TYPE_3 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { return TYPE_2 . getSucceeded ( ) ? ( TYPE_2 . METHOD_2 ( ) ) == ( VAR_1 ) ? VAR_2 : TYPE_2 . METHOD_3 ( ) ? VAR_3 : VAR_4 : VAR_5 ? VAR_6 : ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) == ( VAR_7 ) ? VAR_8 : VAR_9 ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = null ; if ( ( getModel ( ) . METHOD_2 ( ) ) && ( ! ( getModel ( ) . METHOD_3 ( ) ) ) ) { VAR_1 = TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; } return VAR_1 ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ; for ( TYPE_1 domain : VAR_1 ) { if ( ( domain . METHOD_1 ( ) ) == ( VAR_2 ) ) { return domain ; } } } return null ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( ( TYPE_2 . equals ( id , other . id ) ) && ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = dao . get ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_1 ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( STRING_2 ) ; dao . METHOD_5 ( TYPE_2 . METHOD_6 ( new TYPE_1 [ ] { VAR_2 , VAR_1 } ) ) ; TYPE_3 . assertEquals ( VAR_2 , dao . get ( VAR_2 . getId ( ) ) ) ; TYPE_3 . assertEquals ( VAR_1 , dao . get ( VAR_1 . getId ( ) ) ) ; } 
private void METHOD_1 ( java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 != null ) { for ( TYPE_2 < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_3 : VAR_1 . METHOD_2 ( ) ) { VAR_2 . append ( STRING_1 ) . append ( VAR_3 . METHOD_3 ( ) ) . append ( STRING_2 ) . append ( VAR_3 . getValue ( ) ) . append ( CHAR_1 ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = TYPE_1 . instance ( ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_1 ) ; java.lang.String VAR_2 = TYPE_1 . instance ( ) . METHOD_6 ( INT_1 ) ; org.mockito.Mockito.when ( TYPE_3 . METHOD_4 ( ) . METHOD_7 ( ) ) . thenReturn ( VAR_2 ) ; TYPE_4 . getInstance ( ) . METHOD_8 ( VAR_2 , TYPE_3 . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.when ( command . METHOD_4 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_1 . any ( VAR_5 . Integer class ) , TYPE_1 . any ( VAR_3 . Version class ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ; command . METHOD_7 ( ) ; TYPE_3 . METHOD_8 ( command , VAR_6 ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 2 ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( new java.lang.Integer ( 2 ) , TYPE_3 . toString ( ) ) ) ; VAR_1 . METHOD_4 ( 0 ) ; VAR_1 . METHOD_5 ( 0 ) ; VAR_1 . METHOD_6 ( METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) ) ; return TYPE_4 . METHOD_10 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 returnValue ) { TYPE_2 model = ( ( TYPE_2 ) ( getWindow ( ) ) ) ; model . METHOD_2 ( ) ; if ( ( returnValue != null ) && ( returnValue . getSucceeded ( ) ) ) { METHOD_3 ( ) ; if ( model . METHOD_4 ( ) ) { METHOD_5 ( returnValue . METHOD_6 ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( ) ; } } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( TYPE_1 . any ( VAR_2 . VM class ) ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_3 ) ) ; TYPE_3 . METHOD_6 ( command , VAR_4 ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 ) { int VAR_3 = ( ( VAR_1 . METHOD_2 ( ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == 0 ) ) ? INT_1 : VAR_2 . METHOD_4 ( ) ; if ( VAR_3 > 0 ) { VAR_1 . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_3 ) ) ; VAR_1 . METHOD_7 ( TYPE_4 . METHOD_8 ( VAR_1 , VAR_2 ) ) ; } } 
private java.util.List < java.lang.Integer > METHOD_1 ( java.util.List < java.lang.Integer > VAR_1 , java.util.List < java.lang.Integer > VAR_2 ) { java.util.List < java.lang.Integer > VAR_3 = new java.util.ArrayList < java.lang.Integer > ( ) ; int VAR_4 = METHOD_2 ( ) ; for ( java.lang.Integer VAR_5 : VAR_1 ) { for ( java.lang.Integer other : VAR_2 ) { if ( ( VAR_5 * other ) == VAR_4 ) { VAR_3 . add ( VAR_5 ) ; break ; } } } return VAR_3 ; } 
private boolean METHOD_1 ( ) { return ( ( ! ( VAR_1 . METHOD_2 ( ) . equals ( TYPE_1 . METHOD_3 ( ) . METHOD_2 ( ) ) ) ) || ( ! ( VAR_1 . METHOD_4 ( ) . equals ( TYPE_1 . METHOD_4 ( ) ) ) ) ) || ( ( VAR_1 . METHOD_5 ( ) ) != ( TYPE_1 . METHOD_3 ( ) . METHOD_5 ( ) ) ) ; } 
private void METHOD_1 ( ) throws TYPE_1 { java.lang.String action = args . get ( VAR_1 ) ; if ( TYPE_2 . equals ( action ) ) { METHOD_2 ( ) ; } else if ( TYPE_3 . equals ( action ) ) { METHOD_3 ( ) ; } else if ( TYPE_4 . equals ( action ) ) { METHOD_4 ( ) ; } else if ( TYPE_5 . equals ( action ) ) { validate ( ) ; } else if ( TYPE_6 . equals ( action ) ) { METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 = new TYPE_1 ( VAR_2 , new TYPE_3 ( ) , null ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito . METHOD_3 ( VAR_4 ) . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito . METHOD_3 ( VAR_5 ) . METHOD_5 ( TYPE_4 . any ( VAR_6 class ) ) ; TYPE_5 . assertEquals ( STRING_1 , VAR_1 , VAR_3 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.when ( command . METHOD_4 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_1 . any ( VAR_5 . Integer class ) , TYPE_1 . any ( VAR_3 . Version class ) ) ) . thenReturn ( new java.util.ArrayList < > ( TYPE_2 . METHOD_6 ( STRING_1 ) ) ) ; TYPE_3 . METHOD_7 ( command , VAR_6 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) . getValue ( ) ) ) ) ; METHOD_4 ( ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ; METHOD_4 ( ) . setIsChangable ( ( VAR_2 && ( METHOD_7 ( ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 user ) { if ( user . METHOD_2 ( ) ) { return TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } if ( user . METHOD_5 ( ) ) { return TYPE_3 . METHOD_3 ( VAR_1 . METHOD_6 ( ) ) ; } return TYPE_3 . METHOD_3 ( VAR_1 . user ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_2 > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_3 ( VAR_1 , VAR_5 , VAR_2 , VAR_3 ) , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( INT_1 , INT_1 , INT_1 ) ; TYPE_2 . assertEquals ( STRING_1 , INT_1 , VAR_2 ) ; TYPE_2 . assertEquals ( STRING_2 , INT_1 , VAR_3 ) ; TYPE_2 . assertEquals ( STRING_3 , INT_1 , VAR_4 ) ; TYPE_2 . assertEquals ( STRING_4 , 0 , VAR_5 ) ; TYPE_2 . assertEquals ( STRING_5 , 0 , VAR_6 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 < TYPE_2 > VAR_3 = TYPE_3 . METHOD_2 ( VAR_4 , METHOD_3 ( VAR_1 ) , null , new TYPE_4 ( VAR_5 , VAR_2 ) ) ; try { VAR_3 . get ( ) ; } catch ( TYPE_5 | TYPE_6 e ) { log . error ( STRING_1 , VAR_1 ) ; log . error ( STRING_2 , e ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; TYPE_2 params = new TYPE_2 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , params , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 context , final TYPE_2 VAR_1 , TYPE_3 object , TYPE_4 event ) { super . METHOD_1 ( context , VAR_1 , object , event ) ; if ( TYPE_5 . equals ( event . METHOD_2 ( ) ) ) { TYPE_6 VAR_2 = METHOD_3 ( object ) ; if ( ! ( STRING_1 . equals ( VAR_2 . METHOD_4 ( ) ) ) ) { VAR_3 . METHOD_5 ( METHOD_3 ( object ) ) ; } } VAR_3 . METHOD_6 ( VAR_1 , event ) ; } 
private java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_1 . add ( VAR_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public static TYPE_1 map ( TYPE_2 model , TYPE_1 template ) { assert ( model . METHOD_1 ( ) ) || ( model . METHOD_2 ( ) ) ; return template != null ? template : ( model . getId ( ) ) != null ? TYPE_1 . METHOD_3 ( java.lang.Integer . METHOD_4 ( model . getId ( ) ) ) : TYPE_1 . valueOf ( model . getName ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_2 ( result ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( VAR_1 . getId ( ) ) , 1 ) ; result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( VAR_1 . getId ( ) ) , 0 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.lang.String VAR_1 = vm . getName ( ) ; int VAR_2 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ; int VAR_5 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_6 ) ; int VAR_7 = ( VAR_8 . METHOD_3 ( vm . METHOD_4 ( ) ) ) ? VAR_2 : VAR_5 ; boolean VAR_9 = ( VAR_1 . length ( ) ) <= VAR_7 ; return VAR_9 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = TYPE_1 . METHOD_3 ( METHOD_4 ( STRING_1 , null ) ) ; METHOD_5 ( VAR_1 , VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( METHOD_7 ( VAR_1 , VAR_3 ) ) ; METHOD_8 ( VAR_4 , VAR_5 ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , VAR_1 ) ; if ( TYPE_3 . METHOD_4 ( VAR_1 ) ) { try { VAR_2 = TYPE_3 . METHOD_5 ( VAR_1 ) ; } catch ( TYPE_4 e ) { VAR_3 . error ( ( STRING_2 + VAR_1 ) , e ) ; } } else { VAR_3 . error ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 VAR_2 = METHOD_3 ( ) ; long VAR_3 = TYPE_2 . METHOD_4 ( ) ; if ( VAR_2 . METHOD_5 ( ) ) { METHOD_6 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) , VAR_3 ) ; METHOD_9 ( VAR_2 . METHOD_10 ( ) . METHOD_11 ( ) . map ( TYPE_3 : : METHOD_12 ) , VAR_3 ) ; } else { VAR_4 . METHOD_13 ( STRING_1 , VAR_1 . METHOD_14 ( ) ) ; } } } 
public boolean METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; int VAR_2 = 0 ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) ; try { for ( java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_4 : VAR_5 . METHOD_6 ( ) ) { VAR_2 += VAR_4 . size ( ) ; } } finally { VAR_3 . METHOD_4 ( ) . METHOD_7 ( ) ; } return VAR_2 < ( ( VAR_1 * ( VAR_6 < java.lang.Integer > METHOD_8 ( VAR_7 ) ) ) / INT_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( new TYPE_1 ( ) ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( STRING_1 , null , VAR_1 , false ) ; METHOD_3 ( VAR_2 [ INT_1 ] , 2 ) ; METHOD_4 ( METHOD_5 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_2 , STRING_3 , STRING_4 } , new java.lang.Object [ ] { VAR_2 [ 1 ] , VAR_2 [ INT_1 ] , VAR_2 [ 0 ] } , true , true ) ) ; METHOD_6 ( resource . METHOD_7 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . setId ( id ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; TYPE_3 parameters = new TYPE_3 ( VAR_1 , VAR_2 ) ; return METHOD_2 ( VAR_4 , parameters ) ; } 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( new java.util.ArrayList ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ) ; java.util.List < TYPE_1 . DiskImage > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( disk ) ; return VAR_3 ; } 
public void METHOD_1 ( ) { TYPE_1 . assertEquals ( STRING_1 , dao . METHOD_2 ( VAR_1 ) , VAR_2 ) ; TYPE_1 . assertEquals ( STRING_1 , dao . METHOD_2 ( VAR_3 ) , VAR_4 ) ; TYPE_1 . assertEquals ( STRING_1 , dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) , 0 ) ; } 
protected boolean METHOD_1 ( ) { for ( TYPE_1 . DiskImage image : METHOD_2 ( ) ) { if ( ! ( image . METHOD_3 ( ) . METHOD_4 ( VAR_1 . get ( image . getId ( ) ) . METHOD_3 ( ) ) ) ) { METHOD_5 ( VAR_2 ) ; return false ; } } return true ; } 
public java.lang.Boolean getValue ( ) { boolean VAR_1 = ! ( METHOD_1 ( ) ) ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) ) { if ( VAR_1 || ( METHOD_3 ( VAR_2 ) ) ) { if ( ! ( VAR_2 . METHOD_4 ( ) ) ) { return false ; } } } return true ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_2 ) == null ) && ( ! ( TYPE_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_1 ) ) . isEmpty ( ) ) ) ) { this . VAR_1 = VAR_1 ; this . VAR_2 = ( TYPE_2 . isEmpty ( VAR_1 ) ) ? VAR_3 . Collections < java.lang.String > METHOD_4 ( ) : TYPE_1 . METHOD_3 ( VAR_1 ) ; } } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 status , TYPE_2 VAR_2 ) { org.ovirt.engine.core.common.businessentities.VmTemplate VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; if ( VAR_3 != null ) { if ( VAR_2 != null ) { VAR_2 . METHOD_3 ( VAR_3 , VAR_3 . getStatus ( ) ) ; } VAR_3 . METHOD_4 ( status ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; } else { VAR_4 . METHOD_6 ( STRING_1 , status ) ; } } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { boolean VAR_1 = VAR_2 . METHOD_2 ( java.lang.Integer . METHOD_3 ( METHOD_4 ( ) . getEntity ( ) . toString ( ) ) ) ; TYPE_1 . ValidationResult VAR_3 = new TYPE_1 . ValidationResult ( ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_3 . METHOD_6 ( TYPE_2 . METHOD_7 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_8 ( ) . METHOD_9 ( ) ) ) ; return VAR_3 ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_2 ( command ) ; TYPE_1 VAR_3 = command . getParameters ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; command . METHOD_5 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = VAR_4 . get ( command . getParameters ( ) . METHOD_6 ( ) ) ; return vm ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_2 ) ) { METHOD_4 ( ) ; } } 
protected int METHOD_1 ( float VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds ) { int VAR_2 = TYPE_1 . METHOD_2 ( ( ( ( ( vds . METHOD_3 ( ) ) - 1 ) * ( ( VAR_3 ) - 1 ) ) / ( VAR_1 - 1 ) ) ) ; return ( VAR_3 ) - VAR_2 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { org.ovirt.engine.core.compat . Version VAR_3 = METHOD_3 ( ( ( TYPE_3 ) ( args ) ) . METHOD_4 ( ) ) ; METHOD_5 ( VAR_3 ) ; } else if ( VAR_1 . METHOD_2 ( VAR_4 ) ) { java.lang.String VAR_5 = ( ( TYPE_3 ) ( args ) ) . METHOD_4 ( ) ; TYPE_4 . METHOD_6 ( VAR_5 ) ; } } 
protected void METHOD_1 ( TYPE_1 client , java.lang.String VAR_1 ) { java.lang.Integer VAR_2 = ( VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) * INT_1 ; client . METHOD_3 ( VAR_2 ) ; client . METHOD_4 ( VAR_2 ) ; client . METHOD_5 ( VAR_1 , VAR_5 ) ; try { client . METHOD_1 ( ) ; } catch ( java.lang.Exception e ) { log . METHOD_6 ( java.lang.String . METHOD_7 ( STRING_1 , VAR_1 , e . METHOD_8 ( ) ) ) ; throw new TYPE_2 ( e ) ; } } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = super . METHOD_1 ( ) ; VAR_1 . put ( TYPE_1 . name ( ) . METHOD_2 ( ) , TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( VAR_1 , METHOD_2 ( ) ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
private void METHOD_1 ( boolean VAR_1 , java.lang.String name ) { TYPE_1 parameters = METHOD_2 ( ) ; parameters . METHOD_3 ( ) . METHOD_4 ( name ) ; parameters . METHOD_5 ( VAR_1 ) ; TYPE_2 command = METHOD_6 ( parameters ) ; TYPE_3 < TYPE_4 < TYPE_1 > > validate = TYPE_5 . METHOD_7 ( ) . validate ( parameters , command . METHOD_8 ( ) . METHOD_9 ( new TYPE_6 < ? > [ 0 ] ) ) ; TYPE_7 . METHOD_10 ( validate . isEmpty ( ) , VAR_1 ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( METHOD_2 ( ) ) ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { return ; } METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( true ) ; METHOD_7 ( ) ; } 
private TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage disk = METHOD_2 ( ) ; disk . METHOD_3 ( true ) ; disk . METHOD_4 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( disk ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_2 . any ( VAR_5 . Integer class ) , TYPE_2 . any ( VAR_6 . Version class ) ) ) . thenReturn ( new TYPE_3 < > ( VAR_7 ) ) ; return disk ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_1 = METHOD_1 ( hosts ) ; hosts . add ( 0 , null ) ; VAR_2 . METHOD_2 ( ) . setItems ( hosts ) ; VAR_2 . METHOD_2 ( ) . setSelectedItem ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase params , TYPE_3 action ) { try { METHOD_2 ( VAR_1 , params ) ; if ( action != null ) { action . METHOD_3 ( TYPE_4 . METHOD_4 ( TYPE_5 ) ) ; return TYPE_1 . status ( VAR_2 ) . entity ( action ) . METHOD_5 ( ) ; } else { return TYPE_1 . status ( VAR_2 ) . METHOD_5 ( ) ; } } catch ( java.lang.Exception e ) { return METHOD_6 ( VAR_3 class , e , false ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { METHOD_1 ( ) . setEntity ( VAR_1 ) ; METHOD_2 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; } else { METHOD_2 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } 
public TYPE_1 add ( TYPE_2 cluster ) { METHOD_1 ( cluster , METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 class , cluster ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = METHOD_4 ( cluster ) ; return METHOD_5 ( VAR_3 , METHOD_6 ( cluster , VAR_2 ) , new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( VAR_4 , VAR_5 . IdQueryParameters class ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String VAR_3 = TYPE_2 . METHOD_2 ( model ) ; if ( VAR_3 != null ) { java.lang.String VAR_4 = java.lang.String . METHOD_3 ( STRING_1 , VAR_3 , VAR_2 , VAR_1 ) ; METHOD_4 ( model , VAR_1 , VAR_4 ) ; } return model ; } 
protected boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String name , org.ovirt.engine.core.compat.Guid VAR_2 , int VAR_3 ) { if ( TYPE_1 . METHOD_2 ( name ) ) { VAR_1 . add ( TYPE_2 . name ( ) ) ; return false ; } if ( ! ( METHOD_3 ( VAR_1 , VAR_3 ) ) ) { return false ; } if ( ! ( METHOD_4 ( VAR_1 ) ) ) { return false ; } return true ; } 
protected void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( new TYPE_2 ( VAR_1 . Disk , TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = METHOD_4 ( ) ; if ( VAR_2 . isEmpty ( ) ) { log . METHOD_5 ( STRING_1 ) ; TYPE_1 . METHOD_6 ( true ) ; METHOD_7 ( VAR_3 ) ; METHOD_8 ( TYPE_1 . getParameters ( ) . METHOD_9 ( ) ) ; } else { log . error ( STRING_2 , VAR_2 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) , null ) ) ; METHOD_3 ( cmd , VAR_1 ) ; METHOD_4 ( false ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; METHOD_4 ( true ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( false , VAR_1 ) ; cmd . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( ) ) . METHOD_7 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; TYPE_2 . assertEquals ( VAR_4 , cmd . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) ) ; VAR_2 . METHOD_3 ( ) ; VAR_2 . add ( new TYPE_1 ( VAR_1 ) ) ; } 
public void METHOD_1 ( final TYPE_1 object ) { METHOD_2 ( object ) ; object . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( ) { public void METHOD_6 ( TYPE_3 VAR_1 , java.lang.Object sender , TYPE_4 args ) { TYPE_5 . METHOD_7 ( VAR_2 this , object ) ; METHOD_2 ( object ) ; } } ) ; VAR_3 . METHOD_1 ( object ) ; } 
private static void METHOD_1 ( TYPE_1 model , TYPE_2 < ? extends TYPE_1 > VAR_1 ) { TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( model ) ; java.lang.String VAR_3 = TYPE_4 . METHOD_3 ( model , VAR_1 ) ; if ( VAR_3 != null ) { TYPE_5 VAR_4 = new TYPE_5 ( VAR_3 , VAR_2 . METHOD_4 ( ) ) ; model . METHOD_1 ( VAR_4 . METHOD_5 ( ) ) ; } } 
void METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { java.util.List < TYPE_3 > VAR_1 = METHOD_2 ( entity . METHOD_3 ( ) . getValue ( ) , entity . METHOD_4 ( ) ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { TYPE_4 VAR_2 = new TYPE_4 ( ) ; VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; model . METHOD_7 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_4 ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_5 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_5 ) ; } 
private static java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < ? > command , TYPE_2 . VdcBllMessages VAR_2 ) { java.util.List < java.lang.String > VAR_3 = command . getReturnValue ( ) . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( STRING_1 , TYPE_5 . METHOD_5 ( VAR_1 ) , VAR_2 . name ( ) , VAR_3 ) , VAR_3 . METHOD_6 ( VAR_2 . name ( ) ) ) ; return VAR_3 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.HashMap < java.lang.String , java.lang.Object > VAR_3 = new java.util.HashMap < > ( ) ; VAR_3 . put ( STRING_1 , VAR_1 ) ; VAR_3 . put ( STRING_2 , VAR_2 ) ; TYPE_2 VAR_4 = new TYPE_3 ( STRING_3 ) . METHOD_2 ( STRING_4 , VAR_3 ) . METHOD_3 ( ) ; java.util.Map < java.lang.String , java.lang.Object > response = new TYPE_4 ( this . client , VAR_4 ) ; return new TYPE_1 ( response ) ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) , null , TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ) ; TYPE_1 . METHOD_7 ( ) ; METHOD_8 ( ( VAR_1 . METHOD_9 ( ) ? METHOD_10 ( VAR_1 . METHOD_11 ( ) ) : METHOD_12 ( VAR_1 . METHOD_11 ( ) ) ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 , vm . METHOD_2 ( ) ) ; model . METHOD_3 ( model , TYPE_3 . METHOD_4 ( VAR_3 ) , VAR_2 , vm . METHOD_5 ( ) ) ; METHOD_6 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 event , TYPE_3 < TYPE_1 > VAR_1 ) { TYPE_4 < TYPE_1 > VAR_2 = METHOD_2 ( event , VAR_1 ) ; if ( VAR_2 != null ) { try { return VAR_2 . get ( ) ; } catch ( java.lang.Exception e ) { VAR_3 . METHOD_3 ( STRING_1 , event . getStoragePoolId ( ) , e . METHOD_4 ( ) ) ; } } return null ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( VAR_1 ) ; storageDomain . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( storageDomain ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ) . thenReturn ( storageDomain ) ; return storageDomain ; } 
public java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; for ( java.lang.Object item : METHOD_2 ( ) . METHOD_3 ( ) ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( item ) ) ; if ( VAR_2 . METHOD_4 ( ) ) { VAR_1 . add ( VAR_2 . getEntity ( ) ) ; } } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList < TYPE_3 > ( ) ) ; if ( ( getParameters ( ) ) != null ) { for ( TYPE_3 VAR_3 : getParameters ( ) ) { VAR_1 . getParameters ( ) . add ( VAR_3 . METHOD_1 ( ) ) ; } } return VAR_1 ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
public boolean METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; METHOD_4 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; return ( METHOD_2 ( ) . METHOD_5 ( ) ) && ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) , VAR_1 , false ) ; command . METHOD_7 ( ) ; TYPE_1 . assertEquals ( command . METHOD_8 ( ) . size ( ) , 1 ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_2 . DiskImage diskImage : METHOD_2 ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( diskImage ) ; TYPE_3 storageDomain = new TYPE_3 ( ) ; storageDomain . setSelectedItem ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( storageDomain ) ; VAR_1 . add ( VAR_2 ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( TYPE_3 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ( STRING_1 + ( ( VAR_3 . METHOD_6 ( ) ) % ( VAR_4 ) ) ) ) ; VAR_2 . METHOD_7 ( STRING_2 ) ; VAR_5 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_3 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( getStoragePoolId ( ) . getValue ( ) ) ; for ( final org.ovirt.engine.core.common.businessentities . Network VAR_2 : VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_6 ( VAR_2 . getId ( ) ) ; } METHOD_4 ( ) . METHOD_7 ( ) ; return null ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { METHOD_1 ( ) . setSelectedItem ( VAR_1 . get ( 0 ) ) ; } else { org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; } } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { if ( ( object . getEntity ( ) ) instanceof TYPE_2 ) { return ( ( TYPE_2 ) ( object . getEntity ( ) ) ) . METHOD_2 ( ) ; } else if ( ( object . getEntity ( ) ) instanceof TYPE_3 . DiskImage ) { return ( ( TYPE_3 . DiskImage ) ( object . getEntity ( ) ) ) . METHOD_3 ( ) ; } return null ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; for ( org.ovirt.engine.ui.uicommonweb.models.EntityModel a : METHOD_2 ( ) ) { if ( a . METHOD_3 ( ) ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( a . getEntity ( ) ) ) ; VAR_1 . append ( VAR_2 . toString ( ) ) ; } } return ! ( VAR_1 . equals ( STRING_1 ) ) ? TYPE_1 . valueOf ( VAR_1 . toString ( ) ) : null ; } 
private java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; for ( TYPE_1 a : VAR_2 . Linq < TYPE_1 > METHOD_2 ( METHOD_3 ( ) ) ) { if ( ( a . METHOD_4 ( ) ) == ( VAR_3 ) ) { VAR_1 += ( a . METHOD_5 ( ) ) + STRING_2 ; } } return VAR_1 . METHOD_6 ( 0 , ( ( VAR_1 . length ( ) ) - 2 ) ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { try ( TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 . METHOD_2 ( ) ) ) { METHOD_3 ( ) ; for ( java.lang.String VAR_4 : VAR_1 ) { VAR_5 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 ) ) ; } } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; TYPE_2 params = new TYPE_2 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , params , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( ) ; VAR_1 = METHOD_4 ( VAR_1 , VAR_2 , VAR_3 [ 1 ] . toString ( ) ) ; METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( ) ; try { resource . METHOD_7 ( ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_9 ( VAR_5 . METHOD_10 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_10 ( ) . getStatus ( ) ) ; } } 
private static TYPE_1 METHOD_1 ( TYPE_1 instance ) { TYPE_1 obj = new TYPE_1 ( ) ; obj . METHOD_2 ( instance . getStatus ( ) ) ; obj . METHOD_3 ( instance . METHOD_4 ( ) ) ; obj . METHOD_5 ( instance . METHOD_6 ( ) ) ; obj . METHOD_7 ( instance . METHOD_8 ( ) ) ; return obj ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( METHOD_4 ( ) , java.lang.Boolean . FALSE ) ) . thenReturn ( TYPE_1 . METHOD_5 ( vm ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( ) ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( METHOD_8 ( ) ) . when ( cmd ) . METHOD_8 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getModel ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { int VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; if ( VAR_1 <= 1 ) { getModel ( ) . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } } ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( command == ( METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } else if ( command == ( METHOD_6 ( ) ) ) { METHOD_7 ( ) ; } else if ( TYPE_1 . METHOD_8 ( command . getName ( ) , VAR_1 ) ) { METHOD_9 ( ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( getVm ( ) . METHOD_6 ( ) ) ; TYPE_3 . METHOD_7 ( getVm ( ) . getId ( ) ) ; if ( getParameters ( ) . METHOD_8 ( ) ) { getParameters ( ) . METHOD_9 ( getVm ( ) ) ; METHOD_10 ( getVm ( ) . getId ( ) ) ; } return null ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version version , TYPE_2 VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > VAR_3 = VAR_4 < java.util.Map > getValue ( VAR_1 , version . getValue ( ) ) ; return java.lang.Boolean . METHOD_2 ( VAR_3 . METHOD_3 ( VAR_2 . name ( ) , VAR_3 . get ( VAR_2 . METHOD_4 ( ) . name ( ) ) ) ) ; } 
private void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.List < java.lang.String > ) ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) ; java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 . add ( null ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . setItems ( VAR_3 ) ; METHOD_4 ( ) . setIsChangable ( false ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { if ( VAR_3 . get ( i ) . METHOD_2 ( ) . getId ( ) . equals ( VAR_1 . getId ( ) ) ) { VAR_3 . METHOD_3 ( i ) ; break ; } } METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) . METHOD_6 ( this , VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; dao . METHOD_3 ( VAR_1 ) ; java.util.List < TYPE_3 > result = dao . METHOD_4 ( VAR_2 , true ) ; TYPE_4 . assertEquals ( INT_1 , result . size ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_4 ( ) ) ; VAR_3 = org.mockito.Mockito . METHOD_5 ( new TYPE_3 ( cmd . METHOD_6 ( ) ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_3 ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_8 ( ) ; } 
private void METHOD_1 ( TYPE_1 . VdcBllMessages VAR_1 , java.lang.String VAR_2 ) { java.util.List < java.lang.String > VAR_3 = VAR_4 . get ( VAR_1 ) ; if ( VAR_3 == null ) { VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 . put ( VAR_1 , VAR_3 ) ; } VAR_3 . add ( VAR_2 ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = VAR_3 ; TYPE_2 model = new TYPE_2 ( ) ; TYPE_3 . map ( VAR_1 , VAR_4 , model ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) . METHOD_4 ( ) ) ; assertEquals ( model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 ) ; assertEquals ( model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_6 ( ) , VAR_2 ) ; } 
private static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > args ) throws TYPE_1 { TYPE_2 log = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_1 = ( ( java.lang.String ) ( args . get ( STRING_2 ) ) ) ; if ( VAR_1 != null ) { TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; VAR_2 . METHOD_3 ( new TYPE_4 ( ) ) ; log . METHOD_4 ( VAR_2 ) ; } TYPE_5 . METHOD_5 ( ( ( TYPE_6 ) ( args . get ( STRING_3 ) ) ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.util.List < TYPE_1 > VAR_1 ) { VAR_1 . add ( id ) ; TYPE_2 VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( STRING_2 , id ) ; org.ovirt.engine.core.common.businessentities.VDSGroup VAR_3 = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( VAR_2 . METHOD_5 ( ) ) ) ; if ( VAR_3 != null ) { VAR_1 . add ( VAR_3 . METHOD_6 ( ) ) ; } } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_1 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( ! VAR_1 ) { addCanDoActionMessage ( VAR_2 ) ; } } if ( ! VAR_1 ) { TYPE_1 . METHOD_5 ( ) ; } return VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { this . METHOD_1 ( ) ; TYPE_1 < TYPE_2 > VAR_1 = ( ( TYPE_1 < TYPE_2 > ) ( returnValue ) ) ; TYPE_1 < TYPE_3 > VAR_2 = new TYPE_4 < > ( ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { if ( VAR_3 . METHOD_2 ( ) ) { VAR_2 . add ( VAR_3 . METHOD_3 ( ) ) ; } } METHOD_4 ( VAR_4 , VAR_2 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; TYPE_3 < TYPE_4 > VAR_2 = new TYPE_5 < > ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_2 . add ( VAR_3 . METHOD_1 ( ) ) ; } TYPE_6 VAR_4 = TYPE_7 . METHOD_2 ( VAR_2 ) ; TYPE_8 VAR_5 = TYPE_9 . getInstance ( ) ; METHOD_3 ( VAR_5 . METHOD_4 ( VAR_4 ) ) ; } 
protected TYPE_1 . Network METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid id , java.lang.String name ) { for ( TYPE_1 . Network entity : METHOD_2 ( VAR_2 . Network class , VAR_3 , new TYPE_2 ( VAR_1 ) ) ) { if ( ( ( id != null ) && ( id . equals ( entity . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( entity . getName ( ) ) ) ) ) { return entity ; } } return null ; } 
private TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_4 < TYPE_5 > VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_1 < java.lang.String > VAR_3 = new TYPE_6 < > ( ) ; for ( TYPE_5 VAR_4 : VAR_2 ) { VAR_3 . add ( VAR_4 . METHOD_3 ( ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { boolean VAR_1 = ( ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) . size ( ) ) > 0 ; if ( ! VAR_1 ) { TYPE_3 VAR_2 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . setIsChangable ( false ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; } } 
protected org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { switch ( TYPE_1 . METHOD_2 ( ) ) { case VAR_1 : case VAR_2 : if ( ( VAR_3 ) == null ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_4 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; VAR_3 = ( VAR_4 . isEmpty ( ) ) ? null : VAR_4 . get ( 0 ) ; } return VAR_3 ; default : return super . METHOD_1 ( ) ; } } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } if ( ( METHOD_2 ( ) . getStatus ( ) ) != ( VAR_1 ) ) { METHOD_3 ( VAR_2 , METHOD_4 ( ) ) ; } for ( TYPE_1 VAR_3 : VAR_4 ) { if ( ( ( VAR_3 . METHOD_5 ( ) ) == null ) || ( ( VAR_3 . METHOD_6 ( ) ) == null ) ) { METHOD_3 ( VAR_5 ) ; } } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_8 ( ) ; TYPE_2 . METHOD_9 ( command . validate ( ) ) ; TYPE_2 . METHOD_10 ( command . getReturnValue ( ) . METHOD_11 ( ) . METHOD_12 ( TYPE_3 . toString ( ) ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) . getId ( ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = ( ( TYPE_2 < java.lang.String > ) ( returnValue ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } } ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_3 ( ) ; } } ) , VAR_4 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { validator = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_1 , cluster , VAR_2 ) ) ; org.mockito.Mockito.doReturn ( false ) . when ( validator ) . METHOD_3 ( TYPE_2 . any ( VAR_3 class ) ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( TYPE_4 . instance ( ) . METHOD_6 ( VAR_3 class ) ) , TYPE_5 . METHOD_7 ( VAR_4 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_3 . METHOD_6 ( ) ; TYPE_1 . Disk disk = resource . get ( ) ; METHOD_7 ( disk ) ; assertEquals ( disk . getId ( ) , TYPE_2 . toString ( ) ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) , TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) , TYPE_2 . getParameters ( ) . METHOD_6 ( ) ) ; if ( TYPE_3 . isEmpty ( VAR_1 ) ) { METHOD_7 ( VAR_1 ) ; return ; } METHOD_7 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 quota = METHOD_2 ( ) ; quota . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( quota ) ; VAR_1 . METHOD_6 ( ) ; TYPE_2 VAR_2 = VAR_3 . list ( ) ; METHOD_7 ( VAR_2 , 1 ) ; TYPE_3 VAR_4 = VAR_2 . METHOD_8 ( ) . get ( 0 ) ; assertEquals ( VAR_4 . METHOD_9 ( ) . METHOD_10 ( ) , INT_1 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return ( ( METHOD_2 ( ) ) == null ) || ( ! ( VAR_1 . getStoragePoolId ( ) . equals ( METHOD_2 ( ) . getStoragePoolId ( ) ) ) ) ? new TYPE_1 . ValidationResult ( VAR_2 ) : VAR_3 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network network = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_1 = ( network == null ) ? null : network . getId ( ) ; return TYPE_3 . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 . Network , TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 = METHOD_2 ( VAR_5 , VAR_6 ) ; VAR_7 . add ( VAR_1 ) ; VAR_7 . add ( VAR_4 ) ; VAR_7 . add ( METHOD_2 ( VAR_8 , VAR_9 ) ) ; VAR_10 = METHOD_3 ( VAR_11 , VAR_12 ) ; VAR_13 = METHOD_4 ( ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = new java.util.ArrayList ( VAR_1 . size ( ) ) ; for ( TYPE_1 host : VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( host . getName ( ) ) ; vds . METHOD_3 ( host . getName ( ) ) ; hosts . add ( vds ) ; } return hosts ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 . DiskImage VAR_1 , TYPE_3 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 ) { if ( TYPE_4 . METHOD_2 ( VAR_2 , VAR_4 ) ) { double VAR_5 = TYPE_4 . METHOD_3 ( VAR_1 , org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . get ( VAR_4 ) . METHOD_5 ( ) ) ; return TYPE_4 . METHOD_6 ( VAR_1 . METHOD_7 ( ) , TYPE_5 . valueOf ( VAR_5 ) . METHOD_8 ( ) ) ; } return null ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . getId ( ) ) ; TYPE_2 . METHOD_4 ( TYPE_1 . getVm ( ) ) ; METHOD_5 ( ) ; } else { TYPE_1 . METHOD_6 ( false ) ; log . METHOD_7 ( STRING_1 ) ; } TYPE_1 . METHOD_8 ( true ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 0 ] , TYPE_1 . METHOD_3 ( VAR_6 [ 1 ] ) } , METHOD_4 ( ) , VAR_2 ) ; VAR_7 . METHOD_5 ( ) ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( sender ) ) ; for ( java.lang.Object item : METHOD_2 ( ) ) { if ( ( item instanceof TYPE_2 ) && ( item != sender ) ) { TYPE_2 model = ( ( TYPE_2 ) ( item ) ) ; model . METHOD_3 ( ) . setEntity ( VAR_1 . METHOD_3 ( ) . getEntity ( ) ) ; } } } 
public java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . append ( STRING_1 ) . append ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) . append ( STRING_1 ) ; TYPE_3 VAR_3 = METHOD_3 ( ) . addValue ( STRING_3 , VAR_2 . toString ( ) ) ; return METHOD_4 ( ) . METHOD_5 ( STRING_4 , METHOD_6 ( ) , METHOD_3 ( ) . addValue ( STRING_3 , VAR_2 . toString ( ) ) ) ; } 
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 , java.lang.String version , org.ovirt.engine.ui.frontend.IAsyncConverter VAR_2 ) { if ( VAR_2 == null ) { return null ; } TYPE_2 < TYPE_1 , java.lang.String > VAR_3 = new TYPE_2 < TYPE_1 , java.lang.String > ( VAR_1 , version ) ; return VAR_2 . Convert ( VAR_4 . get ( VAR_3 ) , null ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . METHOD_4 ( ) , VAR_1 , METHOD_5 ( ) , METHOD_5 ( ) , METHOD_5 ( ) , METHOD_5 ( ) , true , true , true , true , null ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = this . METHOD_2 ( ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( ) ; java.lang.Object value = VAR_3 . METHOD_4 ( ( ( VAR_4 ) + VAR_1 ) ) ; java.lang.String result = null ; if ( value instanceof java.lang.String ) { result = ( ( java.lang.String ) ( value ) ) ; } else { VAR_5 . error ( STRING_1 ) ; } return result ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( null ) ; VAR_2 . METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; org.mockito.Mockito . METHOD_4 ( VAR_4 ) . METHOD_3 ( VAR_1 , VAR_3 ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_5 ( VAR_5 , VAR_6 ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( org.mockito.Mockito . any ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
private org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 ) { if ( network . METHOD_5 ( ) . METHOD_6 ( ) ) { VAR_1 = network ; return VAR_1 ; } } } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { super . METHOD_1 ( ) ; addCanDoActionMessage ( VAR_1 ) ; boolean returnValue = ( ( ( ( TYPE_1 . METHOD_2 ( ) ) && ( METHOD_3 ( VAR_2 , VAR_3 ) ) ) && ( TYPE_1 . METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ) && ( ( ( TYPE_1 . METHOD_6 ( ) . METHOD_7 ( ) ) == ( VAR_4 ) ) || ( TYPE_1 . METHOD_8 ( ) ) ) ; return returnValue ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . getStoragePoolId ( ) ) ; if ( ( VAR_1 . size ( ) ) >= ( VAR_2 < java.lang.Integer > METHOD_5 ( VAR_3 ) ) ) { METHOD_6 ( ) ; return ; } METHOD_7 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( true ) ; } 
private TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_2 params ) { TYPE_3 . VM vm = getEntity ( VAR_1 . VM class , VAR_2 , new TYPE_4 ( VAR_3 ) , STRING_1 ) ; if ( ( vm . METHOD_2 ( ) . METHOD_3 ( ) ) && ( vm . METHOD_4 ( ) ) ) { params . METHOD_5 ( true ) ; } return params ; } 
boolean METHOD_1 ( ) { TYPE_1 parameters = getParameters ( ) ; long VAR_1 = parameters . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > METHOD_5 ( VAR_4 ) ; boolean VAR_5 = ( ( TYPE_2 . METHOD_6 ( ) ) - VAR_1 ) > VAR_2 ; VAR_6 . METHOD_7 ( STRING_1 , parameters . METHOD_8 ( ) , ( VAR_5 ? STRING_2 : STRING_3 ) , VAR_2 ) ; return VAR_5 ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( ( ( event . METHOD_2 ( ) ) != ( getModel ( ) ) ) || ( ( ( getModel ( ) . METHOD_3 ( ) ) != null ) && ( ( VAR_1 ) == 0 ) ) ) { return ; } if ( ( VAR_1 ) == 0 ) { getModel ( ) . METHOD_4 ( null ) ; } ( VAR_1 ) ++ ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . EngineMessage VAR_1 = VAR_2 ; org.mockito.Mockito.doReturn ( new TYPE_2 . ValidationResult ( VAR_1 ) ) . when ( VAR_3 ) . METHOD_3 ( TYPE_3 . METHOD_4 ( ) , TYPE_3 . any ( VAR_4 . StorageDomain class ) ) ; TYPE_4 . METHOD_5 ( command , VAR_1 ) ; } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 , java.util.List < TYPE_2 > VAR_3 , boolean VAR_4 ) { TYPE_3 . METHOD_2 ( VAR_3 ) ; for ( TYPE_2 VAR_5 : VAR_3 ) { METHOD_3 ( VAR_2 ) ; TYPE_4 result = new TYPE_4 ( ) ; result . METHOD_4 ( ( VAR_4 ? true : VAR_1 ) ) ; result . METHOD_5 ( ( VAR_4 ? VAR_1 : false ) ) ; VAR_5 . METHOD_6 ( new TYPE_5 ( VAR_6 , null , TYPE_3 . METHOD_7 ( result ) ) ) ; } } 
public static < TYPE_1 > java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < java.util.ArrayList < TYPE_1 > > VAR_1 ) { java.util.ArrayList < TYPE_1 > result = new java.util.ArrayList < TYPE_1 > ( ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { result . METHOD_2 ( VAR_1 . get ( 0 ) ) ; } for ( java.util.ArrayList < TYPE_1 > list : VAR_1 ) { result . METHOD_3 ( list ) ; } return result ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; java.util.List < java.lang.String > error = VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 , STRING_1 , STRING_2 ) ) ; java.lang.String result = STRING_3 ; TYPE_4 . METHOD_4 ( STRING_4 , ( ( error . size ( ) ) == 1 ) ) ; TYPE_4 . assertEquals ( STRING_5 , result , error . get ( 0 ) ) ; } 
protected boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 = TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . METHOD_3 ( ) ) ; return VAR_1 == null ? METHOD_4 ( VAR_2 ) : ( VAR_1 . METHOD_5 ( ) ) != ( TYPE_1 . getVm ( ) . METHOD_6 ( ) ) ? METHOD_4 ( VAR_3 ) : true ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . get ( getVm ( ) . getId ( ) ) ; if ( VAR_1 != null ) { addCanDoActionMessage ( VAR_2 ) ; addCanDoActionMessage ( java.lang.String . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ) ; return false ; } return true ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_2 parameters ) { final TYPE_3 . DbFacade VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 . DbFacade class ) ; final TYPE_4 VAR_3 = org.mockito.Mockito . METHOD_2 ( VAR_4 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; return org.mockito.Mockito . METHOD_4 ( new TYPE_1 < TYPE_2 > ( parameters ) { protected TYPE_5 METHOD_5 ( org.ovirt.engine.core.compat.Guid VAR_5 ) { return VAR_6 ; } protected TYPE_3 . DbFacade METHOD_6 ( ) { return VAR_1 ; } } ) ; } 
private void METHOD_1 ( int VAR_1 , int VAR_2 ) throws java.lang.Exception { for ( int i = 0 ; i < VAR_1 ; i ++ ) { METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_5 [ VAR_2 ] } , VAR_6 ) ; } } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_1 . METHOD_2 ( ) . equals ( TYPE_2 . getName ( ) ) ) ) { return true ; } return ( ( VAR_1 . METHOD_3 ( ) ) == null ) && ( METHOD_4 ( ) . get ( VAR_1 . METHOD_5 ( ) ) . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { STRING_3 , STRING_4 } , getEntity ( 0 ) ) ; VAR_3 . METHOD_5 ( ) ; METHOD_6 ( resource . METHOD_7 ( STRING_3 , STRING_4 ) , 0 ) ; } 
public void METHOD_1 ( TYPE_1 map ) { TYPE_2 VAR_1 = METHOD_2 ( ) . addValue ( STRING_1 , map . METHOD_3 ( ) ) . addValue ( STRING_2 , map . METHOD_4 ( ) ) . addValue ( STRING_3 , map . METHOD_5 ( ) ) ; METHOD_6 ( ) . METHOD_7 ( STRING_4 , VAR_1 ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ; METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; for ( org.ovirt.engine.core.compat.Guid VAR_3 : VAR_2 ) { METHOD_4 ( TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_3 ) ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( VAR_2 , VAR_3 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 [ 1 ] } , METHOD_4 ( 1 ) ) ; METHOD_5 ( STRING_2 ) ; VAR_5 . METHOD_6 ( VAR_1 ) ; METHOD_7 ( METHOD_8 ( ) ) ; } 
private void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { final TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( ) ; if ( VAR_1 == null ) { return ; } METHOD_3 ( VAR_1 ) ; if ( ! ( VAR_1 . METHOD_4 ( ) ) ) { VAR_2 . METHOD_5 ( ) ; } METHOD_6 ( ) ; } 
protected void METHOD_1 ( java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; METHOD_3 ( parameters , VAR_3 , VAR_2 . getId ( ) , ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( VAR_1 . METHOD_4 ( ) ) ) , VAR_4 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( object . METHOD_3 ( ) ) ; if ( METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_2 ) ) { VAR_3 . METHOD_5 ( true ) ; } else if ( METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_4 ) ) { VAR_5 . METHOD_5 ( true ) ; } else { VAR_6 . METHOD_5 ( true ) ; } METHOD_6 ( ) ; } 
public int METHOD_1 ( TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 , TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; if ( VAR_3 != 0 ) { return VAR_3 ; } return VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_5 ( ) ) ; } 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 entity : TYPE_2 . METHOD_2 ( ) ) { if ( ( ( entity . METHOD_3 ( ) ) & ( TYPE_3 . getValue ( ) ) ) > 0 ) { VAR_1 . add ( entity ) ; } } return VAR_1 ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_2 ( VAR_5 ) ; TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 < TYPE_2 > ( VAR_1 , TYPE_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) { protected void METHOD_6 ( ) { } protected void METHOD_7 ( ) { } } ) ; return command ; } 
protected void METHOD_1 ( final TYPE_1 map , final TYPE_2 status ) { METHOD_2 ( new TYPE_3 < TYPE_1 > ( ) { public TYPE_1 METHOD_3 ( ) { TYPE_4 context = METHOD_4 ( ) ; context . METHOD_5 ( map ) ; map . METHOD_6 ( status ) ; METHOD_7 ( ) . METHOD_8 ( map . getId ( ) , map . getStatus ( ) ) ; METHOD_4 ( ) . METHOD_9 ( ) ; return null ; } } ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { return TYPE_1 . METHOD_2 ( VAR_1 . get ( VAR_2 . get ( diskImage . getId ( ) ) . METHOD_3 ( ) . get ( 0 ) ) . METHOD_4 ( ) , diskImage , TYPE_2 . getReturnValue ( ) . METHOD_5 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( map , map . METHOD_4 ( ) ) ; map . METHOD_5 ( VAR_1 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( map . getId ( ) , map . METHOD_4 ( ) ) ; if ( ( METHOD_8 ( ) . METHOD_9 ( ) ) == ( VAR_2 ) ) { METHOD_10 ( ) ; } METHOD_2 ( ) . METHOD_11 ( ) ; return null ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 value , TYPE_3 VAR_1 ) { if ( value != null ) { VAR_1 . append ( VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( value ) . METHOD_5 ( ) ) ) ) ; } } 
protected void METHOD_1 ( ) { final org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ; TYPE_2 VAR_2 = TYPE_3 . getInstance ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_4 ( ) ; } METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; TYPE_1 . METHOD_7 ( true ) ; } 
private TYPE_1 . Disk METHOD_1 ( org.ovirt.engine.core.compat.Guid id , boolean VAR_1 ) { TYPE_1 . Disk disk = new TYPE_2 ( ) ; disk . setId ( id ) ; TYPE_3 VAR_2 = new TYPE_3 ( new TYPE_4 ( id , null ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( TYPE_5 . METHOD_4 ( VAR_2 ) ) ; return disk ; } 
private static boolean METHOD_1 ( TYPE_1 . DiskImage diskImage , java.util.List < TYPE_2 > VAR_1 , TYPE_3 < org.ovirt.engine.core.compat.Guid > VAR_2 , TYPE_4 user ) { for ( TYPE_2 VAR_3 : VAR_1 ) { if ( TYPE_5 . METHOD_2 ( VAR_3 , VAR_2 , user ) ) { VAR_2 . add ( VAR_3 . getId ( ) ) ; diskImage . METHOD_3 ( VAR_3 . getId ( ) ) ; return true ; } } return false ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( returnValue ) ) ; model . METHOD_2 ( ) . setEntity ( VAR_1 . METHOD_3 ( ) ) ; model . METHOD_4 ( ) . setEntity ( VAR_1 . METHOD_4 ( ) ) ; model . METHOD_5 ( ) . setEntity ( VAR_1 . METHOD_5 ( ) ) ; } 
protected java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.core.common.businessentities.VM vm ) { java.util.Map < java.lang.String , java.lang.Object > parameters = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; parameters . put ( VAR_1 . VM , vm ) ; if ( ( cluster . METHOD_2 ( ) ) != null ) { parameters . METHOD_3 ( cluster . METHOD_2 ( ) ) ; } return parameters ; } 
public double METHOD_1 ( ) { if ( ( VAR_1 ) == 0 ) { for ( TYPE_1 . Disk disk : METHOD_2 ( ) . METHOD_3 ( ) ) { if ( ( VAR_2 ) == ( disk . METHOD_4 ( ) ) ) { VAR_1 += ( ( ( TYPE_1 . DiskImage ) ( disk ) ) . METHOD_5 ( ) ) / ( TYPE_2 . valueOf ( ( ( INT_1 * INT_1 ) * INT_1 ) ) ) ; } } } return VAR_1 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
private void METHOD_1 ( ) { TYPE_1 model = new TYPE_1 ( this , VAR_1 ) ; model . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; model . METHOD_3 ( STRING_1 ) ; model . METHOD_4 ( VAR_2 ) ; model . setEntity ( ( ( TYPE_2 ) ( getSelectedItem ( ) ) ) ) ; METHOD_5 ( model ) ; } 
public void METHOD_1 ( ) { TYPE_1 . VM entity = new TYPE_1 . VM ( ) ; entity . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; entity . METHOD_4 ( VAR_2 ) ; TYPE_1 . VM model = TYPE_2 . map ( entity , null ) ; assertEquals ( VAR_2 . toString ( ) , model . METHOD_5 ( ) . getId ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) , TYPE_1 . METHOD_3 ( new TYPE_2 ( 0 ) ) ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_3 = VAR_1 . METHOD_4 ( VAR_4 ) ; TYPE_3 . assertEquals ( STRING_1 , 1 , VAR_3 . size ( ) ) ; TYPE_3 . assertEquals ( STRING_2 , VAR_3 . get ( 0 ) , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { final TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( false ) ; try { VAR_2 . METHOD_4 ( this . VAR_3 , VAR_4 , this ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; } catch ( TYPE_4 e ) { throw new TYPE_5 ( STRING_1 ) ; } catch ( TYPE_3 e ) { try { VAR_2 . METHOD_6 ( ) ; } catch ( TYPE_3 VAR_5 ) { } } return VAR_2 ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( null ) ; final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . getStoragePoolId ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object result = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; model . METHOD_1 ( ( result != null ? ( ( java.util.ArrayList < TYPE_2 > ) ( result ) ) : new java.util.ArrayList < TYPE_2 > ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 . Disk disk = resource . get ( ) ; TYPE_2 . METHOD_6 ( disk , 1 ) ; METHOD_7 ( disk ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , true ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( true ) ; METHOD_10 ( true ) ; TYPE_3 . METHOD_11 ( command ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 resource , TYPE_3 VAR_1 , TYPE_4 VAR_2 ) { TYPE_5 . Disk disk = VAR_1 . METHOD_2 ( ) ; METHOD_3 ( disk ) ; METHOD_4 ( disk ) ; return resource . METHOD_5 ( VAR_3 , METHOD_6 ( VAR_1 , new TYPE_6 ( ) . map ( disk , null ) , disk ) , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( 1 ) ; METHOD_4 ( VAR_2 [ 0 ] ) ; METHOD_4 ( VAR_2 [ 1 ] ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_6 ( ) ; METHOD_7 ( METHOD_8 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { for ( TYPE_1 item : ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) { return item ; } } return null ; } } ; TYPE_2 VAR_2 = new TYPE_2 ( ( STRING_1 + VAR_1 ) , VAR_3 . VDS ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_2 , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; model . METHOD_3 ( new TYPE_2 ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( ) ; try { VAR_3 . add ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_4 ) { METHOD_8 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public static TYPE_1 METHOD_1 ( TYPE_1 result ) { if ( TYPE_2 . METHOD_2 ( result . METHOD_3 ( ) ) ) { TYPE_3 VAR_1 ; if ( ( result . METHOD_4 ( ) ) != null ) { VAR_1 = new TYPE_3 ( result . METHOD_4 ( ) . METHOD_5 ( ) , result . METHOD_3 ( ) ) ; } else { VAR_1 = new TYPE_3 ( VAR_2 , result . METHOD_3 ( ) ) ; } throw VAR_1 ; } return result ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_2 > > VAR_2 ) { METHOD_2 ( ) . setEntity ( false ) ; java.util.List < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_2 > > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( ) . setEntity ( false ) ; VAR_1 . setItems ( VAR_3 ) ; METHOD_5 ( VAR_3 . isEmpty ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String vmId , TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_1 ( vmId , VAR_1 . METHOD_2 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { TYPE_3 VAR_1 = getEntity ( VAR_2 class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( entity . METHOD_2 ( ) ) , null , true ) ; TYPE_4 VAR_4 = getEntity ( VAR_5 class , VAR_6 , new TYPE_5 ( VAR_1 . METHOD_3 ( ) , VAR_1 . getName ( ) , entity . METHOD_4 ( ) , true ) , null , true ) ; model = METHOD_5 ( VAR_5 class , VAR_7 class ) . map ( VAR_4 , model ) ; return model ; } 
protected boolean METHOD_1 ( ) { boolean returnValue = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { METHOD_3 ( VAR_1 , VAR_2 ) ; returnValue = false ; } if ( returnValue && ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) == ( VAR_3 ) ) ) { METHOD_3 ( VAR_1 , VAR_4 ) ; returnValue = false ; } return returnValue ; } 
public void METHOD_1 ( final TYPE_1 model ) { VAR_1 . METHOD_1 ( model ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ) ; model . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 < TYPE_3 > ( ) { public void METHOD_7 ( TYPE_4 < ? extends TYPE_3 > VAR_4 , java.lang.Object sender , TYPE_3 args ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ) ; } } ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { return ( ( TYPE_2 . getName ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ) && ( TYPE_2 . getName ( ) . equals ( VAR_1 ) ) ) || ( ( TYPE_3 . getName ( ) . equals ( VAR_1 . METHOD_2 ( ) ) ) && ( TYPE_4 . getName ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 event ) { METHOD_2 ( ) . METHOD_1 ( context , VAR_1 , TYPE_4 . getValue ( ) , TYPE_4 . METHOD_3 ( ) , event , VAR_2 ) ; if ( ( TYPE_5 . equals ( event . METHOD_4 ( ) ) ) && ( ( VAR_3 ) != null ) ) { VAR_3 . METHOD_5 ( event ) ; } } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( getParameters ( ) . METHOD_2 ( ) , getParameters ( ) . getStoragePoolId ( ) , VAR_2 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) . METHOD_6 ( VAR_3 ) ; METHOD_7 ( ) ; return new TYPE_1 ( VAR_4 , VAR_5 ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; final org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; TYPE_1 < TYPE_2 > cmd = METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ; cmd . getVm ( ) . METHOD_4 ( STRING_1 ) ; METHOD_5 ( cmd ) ; TYPE_3 . METHOD_6 ( cmd , VAR_4 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Object source ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > list = METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) , VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( list , new TYPE_3 ( ) ) ; return list ; } return new java.util.ArrayList < > ( ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 . getVm ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . getVm ( ) . METHOD_2 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ; return validate ( TYPE_2 . METHOD_1 ( TYPE_1 . getVm ( ) . METHOD_2 ( ) , METHOD_7 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , false ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } ) ) ; METHOD_5 ( resource . METHOD_6 ( new TYPE_1 ( ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( 2 , false , false , false ) ; METHOD_4 ( METHOD_5 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_1 } , true , true ) ) ; METHOD_6 ( resource . METHOD_7 ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { TYPE_3 . METHOD_3 ( new TYPE_4 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) , VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) , true , true ) ; } } 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities . Network network : VAR_2 ) { VAR_1 . put ( network . METHOD_2 ( ) , new TYPE_1 ( network , this ) ) ; } METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_6 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ; TYPE_3 . METHOD_7 ( command , VAR_4 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; VAR_1 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { if ( version == null ) { return false ; } java.lang.Boolean VAR_1 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_2 , version . toString ( ) ) ) ) ; return VAR_1 == null ? false : VAR_1 ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 . VdcQueryReturnValue VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( VAR_1 . getSucceeded ( ) ) { org.ovirt.engine.core.common.businessentities.VM vm = VAR_1 . getReturnValue ( ) ; METHOD_1 ( TYPE_2 . METHOD_2 ( vm ) ) ; METHOD_3 ( ) ; } else { METHOD_4 ( VAR_2 . METHOD_5 ( METHOD_6 ( ) . getEntity ( ) ) ) ; } METHOD_7 ( ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { boolean returnValue = true ; if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) . size ( ) ) != 0 ) { returnValue = false ; VAR_2 . add ( TYPE_2 . toString ( ) ) ; } return returnValue ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) throws TYPE_2 , TYPE_3 { try ( final TYPE_4 client = METHOD_2 ( ) ) { METHOD_3 ( client , VAR_1 ) ; METHOD_4 ( client , VAR_2 , VAR_3 ) ; java.lang.String VAR_4 = METHOD_5 ( client ) ; return METHOD_6 ( VAR_4 ) ; } } 
public java.util.ArrayList < java.lang.Integer > METHOD_1 ( ) { java.util.ArrayList < java.lang.Integer > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { if ( METHOD_3 ( VAR_2 ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { METHOD_2 ( ) ; return ( ( ( ( ( ( ( ( TYPE_1 . METHOD_3 ( ) ) && ( TYPE_1 . METHOD_4 ( ) ) ) && ( TYPE_1 . METHOD_5 ( ) ) ) && ( METHOD_6 ( METHOD_7 ( ) ) ) ) && ( METHOD_8 ( ) ) ) && ( METHOD_9 ( ) ) ) && ( TYPE_1 . METHOD_10 ( ) ) ) && ( METHOD_11 ( ) ) ) && ( METHOD_12 ( ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 . Version VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ( ( ( VAR_1 . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) . METHOD_4 ( ) , true ) ; return VAR_2 . toString ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( false , VAR_3 ) ; try { cmd . METHOD_5 ( ) ; } catch ( TYPE_3 e ) { TYPE_4 . assertEquals ( e . METHOD_6 ( ) , VAR_3 ) ; } org.mockito.Mockito . METHOD_7 ( VAR_4 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_5 . any ( VAR_5 class ) ) ; } 
public boolean METHOD_1 ( ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) ; return ( ( VAR_1 != null ) && ( ! ( STRING_1 . equals ( VAR_1 ) ) ) ) && ( ! ( STRING_2 . METHOD_3 ( VAR_1 ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , METHOD_3 ( VAR_1 ) ) ) ) ; METHOD_4 ( cmd ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_4 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { disk . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_1 = TYPE_2 . METHOD_3 ( INT_1 ) ; disk . METHOD_4 ( VAR_1 ) ; METHOD_5 ( disk , TYPE_2 . METHOD_6 ( STRING_1 ) , TYPE_2 . METHOD_7 ( VAR_1 . METHOD_8 ( 0 , INT_2 ) ) ) ; } 
private void METHOD_1 ( TYPE_1 status ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . METHOD_2 ( status ) ; domain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( domain ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_2 . any ( VAR_2 . Guid class ) , TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( domain ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; command . METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_5 ( TYPE_1 . METHOD_6 ( VAR_2 ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_7 ( TYPE_1 . METHOD_6 ( VAR_3 ) , TYPE_1 . any ( VAR_4 . Guid class ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_4 [ 0 ] , java.lang.Boolean . FALSE } , true , true , false ) ; VAR_1 = METHOD_5 ( VAR_1 , VAR_5 , TYPE_2 . toString ( ) ) ; METHOD_6 ( VAR_1 ) ; VAR_6 . METHOD_7 ( ) ; resource . METHOD_8 ( ) ; } 
private TYPE_1 METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { TYPE_2 VAR_3 = TYPE_3 . getInstance ( ) . get ( VAR_4 class ) ; java.util.List < TYPE_4 < TYPE_5 , TYPE_1 > > VAR_5 = VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( ! ( VAR_5 . isEmpty ( ) ) ) { TYPE_4 < TYPE_5 , TYPE_1 > VAR_6 = VAR_5 . get ( 0 ) ; return VAR_6 . METHOD_3 ( ) ; } return VAR_7 ; } 
public long METHOD_1 ( long VAR_1 ) { if ( VAR_1 <= 0 ) { throw new TYPE_1 ( STRING_1 ) ; } long VAR_2 = super . METHOD_1 ( ) ; if ( VAR_2 == ( VAR_3 ) ) { VAR_2 ++ ; } return ( TYPE_2 . METHOD_2 ( VAR_2 ) ) % VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 status ) { final TYPE_3 VAR_3 = get ( VAR_1 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_2 ( status ) ; if ( ( VAR_2 . equals ( VAR_4 ) ) || ( VAR_3 . METHOD_3 ( ) ) ) { TYPE_4 . METHOD_4 ( VAR_5 , new TYPE_5 < java.lang.Object > ( ) { public TYPE_6 METHOD_5 ( ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_3 ) ; return null ; } } ) ; } } } 
private java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_2 : METHOD_2 ( ) . METHOD_3 ( ) ) { VAR_1 . add ( VAR_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { return METHOD_2 ( ) . METHOD_1 ( TYPE_1 . getVm ( ) , TYPE_1 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_1 . getParameters ( ) , TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) , METHOD_6 ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ; TYPE_2 VAR_2 = METHOD_1 ( ) ; VAR_1 . add ( 0 , null ) ; VAR_2 . setItems ( VAR_1 ) ; VAR_2 . setIsChangable ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { METHOD_2 ( aQuery , VAR_1 , VAR_2 , VAR_3 , new TYPE_1 ( ) { protected java.lang.String METHOD_3 ( java.util.ArrayList < java.lang.String > VAR_4 , TYPE_2 VAR_5 ) { return ( VAR_6 ) + ( super . METHOD_3 ( VAR_4 , VAR_5 ) ) ; } protected boolean METHOD_4 ( TYPE_2 VAR_5 ) { return ( VAR_7 ) == ( VAR_5 . METHOD_5 ( ) ) ; } } ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , vmId ) , VAR_2 , TYPE_3 . getName ( ) , STRING_1 , 0 , null , true , true , false , STRING_1 , null , null ) ; } 
private void METHOD_1 ( TYPE_1 . DiskImage disk ) { TYPE_1 . DiskImage VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; if ( VAR_1 == null ) { log . METHOD_6 ( STRING_1 , TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; VAR_1 = TYPE_2 . METHOD_4 ( ) ; } disk . METHOD_7 ( VAR_1 . METHOD_8 ( ) ) ; disk . METHOD_9 ( VAR_1 . METHOD_10 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( ) ; boolean VAR_2 = true ; for ( TYPE_2 VAR_3 : result . getReturnValue ( ) ) { VAR_2 = VAR_2 && ( VAR_3 . METHOD_3 ( ) ) ; if ( ! VAR_2 ) { break ; } } if ( VAR_2 ) { METHOD_4 ( ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return source ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; } 
private java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . getValue ( ) ; java.util.Map < java.lang.String , java.lang.String > VAR_4 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( VAR_2 . METHOD_2 ( VAR_1 . getName ( ) ) ) ) ; TYPE_2 . METHOD_3 ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_4 ) ; return VAR_4 ; } 
public java.lang.Boolean METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 , new TYPE_2 ( VAR_2 . METHOD_4 ( ) ) ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_3 : METHOD_5 ( ) ) { TYPE_3 . METHOD_6 ( METHOD_7 ( ) , VAR_3 ) ; } return java.lang.Boolean . TRUE ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( command . METHOD_6 ( ) ) ; } 
public synchronized void METHOD_1 ( TYPE_1 host ) { if ( ! ( VAR_1 . METHOD_2 ( host . getId ( ) ) ) ) { VAR_1 . put ( host . getId ( ) , host ) ; } VAR_2 . METHOD_3 ( STRING_1 , host . getName ( ) ) ; METHOD_4 ( host ) ; } 
protected TYPE_1 < java.lang.Boolean , TYPE_2 > METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , int type ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_3 . METHOD_2 ( ) . get ( VAR_1 ) ; if ( ! ( TYPE_3 . METHOD_3 ( vds ) ) ) { VAR_2 . error ( STRING_1 , vds . getName ( ) , storageDomain . getName ( ) ) ; TYPE_4 . METHOD_4 ( VAR_3 , null , vds ) ; return new TYPE_1 ( false , null ) ; } return super . METHOD_1 ( storageDomain , VAR_1 , type ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = METHOD_3 ( ) ; vm . METHOD_4 ( INT_1 ) ; METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( INT_1 ) ) . thenReturn ( STRING_1 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_7 ( TYPE_1 . any ( VAR_2 . Integer class ) , TYPE_1 . any ( VAR_3 . Version class ) ) ) . thenReturn ( TYPE_2 . METHOD_8 ( ) ) ; TYPE_3 . METHOD_9 ( command , VAR_4 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( VAR_1 . name ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_2 ( VAR_4 , null ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_2 ( VAR_5 , null ) ) . thenReturn ( new java.util.ArrayList < > ( ) ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_6 class , VAR_3 ) ; } 
protected boolean validate ( ) { TYPE_1 returnValue = TYPE_2 . METHOD_1 ( VAR_1 , METHOD_2 ( ) , TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , true ) ; TYPE_3 . getReturnValue ( ) . METHOD_6 ( returnValue . METHOD_7 ( ) ) ; return returnValue . METHOD_8 ( ) ; } 
protected boolean METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 . DiskImage diskImage , TYPE_2 VAR_2 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 ) { boolean VAR_4 = METHOD_2 ( diskImage ) ; if ( VAR_4 && ( VAR_1 . METHOD_3 ( VAR_3 ) ) ) { return false ; } return super . METHOD_1 ( VAR_1 , diskImage , VAR_2 , VAR_3 ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 VAR_1 = getSelectedItem ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . setTitle ( VAR_3 . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( STRING_1 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; VAR_2 . METHOD_5 ( null ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( VAR_2 ) ; METHOD_8 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; parameters . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( command ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 < ? > command , TYPE_3 . VdcActionType VAR_1 ) { TYPE_3 . VdcActionParametersBase params = command . getParameters ( ) ; TYPE_1 VAR_2 ; if ( ( params . METHOD_2 ( ) ) != null ) { VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( ( ( org.ovirt.engine.core.compat.Guid ) ( params . METHOD_2 ( ) ) ) ) ; } else { VAR_2 = TYPE_4 . METHOD_4 ( VAR_1 , command ) ; TYPE_5 . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) ; } return VAR_2 ; } 
public boolean METHOD_1 ( boolean VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( true ) ; METHOD_4 ( ) . METHOD_3 ( true ) ; if ( VAR_1 ) { METHOD_2 ( ) . METHOD_5 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; } else { METHOD_4 ( ) . METHOD_6 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; } return ( METHOD_4 ( ) . METHOD_7 ( ) ) && ( METHOD_2 ( ) . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network network = ( ( org.ovirt.engine.core.common.businessentities . Network ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; boolean VAR_1 = ( ( METHOD_3 ( ) ) && ( network != null ) ) && ( ! ( network . getId ( ) . equals ( VAR_2 ) ) ) ; METHOD_4 ( ) . setIsChangable ( VAR_1 ) ; METHOD_5 ( ) . setIsChangable ( VAR_1 ) ; METHOD_6 ( ) . setIsChangable ( VAR_1 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . String class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( org.mockito.Mockito . METHOD_4 ( VAR_3 . VDS class ) ) ) ; TYPE_3 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_4 . METHOD_7 ( VAR_4 ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { TYPE_1 entity = TYPE_2 . METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vm . getId ( ) ) , VAR_1 , vm . METHOD_4 ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( vm . METHOD_7 ( ) ) , true , true ) ; } 
public void METHOD_1 ( final TYPE_1 model ) { VAR_1 . METHOD_1 ( model ) ; VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ) ; model . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( ) { public void METHOD_7 ( TYPE_3 VAR_4 , java.lang.Object sender , TYPE_4 args ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( model . METHOD_4 ( ) . getEntity ( ) ) ) ; } } ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . network > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private java.lang.String METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , java.lang.String VAR_2 ) { org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_2 ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_5 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; if ( VAR_5 . equals ( VAR_3 ) ) { java.lang.String VAR_6 = VAR_4 . METHOD_4 ( ) ; if ( ( VAR_4 . METHOD_5 ( ) ) != null ) { VAR_6 += STRING_1 + ( VAR_4 . METHOD_5 ( ) ) ; } return VAR_6 ; } } return STRING_2 ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . getReturnValue ( ) . METHOD_4 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , true , true , false , false , true , true , METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 event ) { METHOD_2 ( ) . METHOD_1 ( context , VAR_1 , TYPE_4 . getValue ( ) , event , VAR_2 ) ; if ( ( TYPE_5 . equals ( event . METHOD_3 ( ) ) ) && ( ( VAR_3 ) != null ) ) { VAR_3 . METHOD_4 ( event ) ; } } 
private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( TYPE_3 . METHOD_3 ( ) . getId ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) , TYPE_3 . METHOD_4 ( ) . getId ( ) , TYPE_3 . METHOD_4 ( ) . getName ( ) , VAR_2 . getId ( ) , TYPE_3 . getParameters ( ) . METHOD_6 ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_7 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; TYPE_1 VAR_3 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; VAR_3 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) . toString ( ) ) ; org.mockito.Mockito.when ( command . METHOD_5 ( VAR_1 ) ) . thenReturn ( VAR_3 ) ; boolean VAR_4 = command . METHOD_6 ( VAR_1 , null ) ; TYPE_2 . METHOD_7 ( VAR_4 ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_4 : VAR_3 ) { if ( VAR_1 . equals ( VAR_4 . METHOD_4 ( ) ) ) { return true ; } } return false ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return TYPE_1 . METHOD_2 ( vm , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , vm . getStoragePoolId ( ) , METHOD_4 ( ) . getValue ( ) , false , true , false , false , true , false , false , true , VAR_1 . Collections < org.ovirt.engine.core.common.businessentities . Disk > METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS host = METHOD_2 ( ) ; host . METHOD_3 ( STRING_1 ) ; TYPE_1 VAR_1 = METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_6 ( host , VAR_2 ) ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_6 ( host , VAR_3 ) ) ; TYPE_2 . METHOD_7 ( VAR_1 . METHOD_6 ( host , VAR_4 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; cmd . getVm ( ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_8 ( ) ; TYPE_1 . METHOD_9 ( cmd ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { int VAR_3 = 0 ; if ( ( VAR_4 . METHOD_2 ( ) ) != null ) { VAR_3 = ( ( java.util.List < ? > ) ( METHOD_3 ( ) . METHOD_2 ( ) ) ) . size ( ) ; } int VAR_5 = METHOD_4 ( ) ; int VAR_6 = METHOD_5 ( ) ; return TYPE_2 . METHOD_1 ( VAR_1 , VAR_3 , VAR_5 , VAR_6 , VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) ) ; return ( ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( TYPE_2 . getParameters ( ) . METHOD_7 ( ) ) ) ) ; } 
protected int METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { int result = 0 ; for ( org.ovirt.engine.core.common.businessentities.DiskImage VAR_2 : METHOD_2 ( ) ) { if ( ( VAR_2 . METHOD_3 ( ) ) != ( VAR_3 ) ) { if ( VAR_2 . METHOD_4 ( ) . get ( 0 ) . getValue ( ) . equals ( VAR_1 ) ) { result = result + ( ( int ) ( TYPE_1 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ) ) ; } } } return result ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( VAR_3 ) == null ? 0 : VAR_3 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( VAR_4 ) == null ? 0 : VAR_4 . METHOD_1 ( ) ) ; return result ; } 
private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( METHOD_2 ( ) ) ; METHOD_3 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_1 , params , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 result ) { TYPE_4 model = ( ( TYPE_4 ) ( result . METHOD_6 ( ) ) ) ; model . METHOD_7 ( ) ; model . METHOD_8 ( ) ; } } , this ) ; } 
private boolean METHOD_1 ( TYPE_1 parameters ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( parameters . METHOD_3 ( ) ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = METHOD_4 ( parameters . METHOD_5 ( ) , TYPE_2 . getStoragePoolId ( ) ) ; return ( ( METHOD_6 ( VAR_1 ) ) && ( METHOD_7 ( VAR_2 ) ) ) && ( ( METHOD_8 ( ) ) || ( METHOD_9 ( VAR_2 , VAR_1 ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = METHOD_2 ( VAR_1 . METHOD_5 ( ) ) ; VAR_4 = VAR_2 . get ( VAR_5 ) ; VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_6 ( STRING_1 ) ; VAR_6 . METHOD_7 ( VAR_4 . METHOD_8 ( ) ) ; VAR_7 = new TYPE_2 ( ) ; } 
static void METHOD_1 ( TYPE_1 . Disk model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( ( ! ( model . METHOD_4 ( ) ) ) ) ; METHOD_2 ( model . METHOD_5 ( ) ) ; } 
private void METHOD_1 ( java.lang.Object sender ) { TYPE_1 storageDomain = ( ( TYPE_1 ) ( ( ( TYPE_2 ) ( sender ) ) . getSelectedItem ( ) ) ) ; if ( storageDomain != null ) { for ( TYPE_3 VAR_1 : VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) . equals ( sender ) ) { METHOD_3 ( storageDomain . getId ( ) , VAR_1 . METHOD_4 ( ) ) ; break ; } } } } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { final TYPE_3 VAR_1 = new TYPE_3 ( TYPE_4 . METHOD_2 ( this . host ) , this . VAR_2 ) ; TYPE_5 VAR_3 = TYPE_5 . METHOD_3 ( ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; VAR_3 . METHOD_4 ( false ) ; int VAR_4 = VAR_5 ; TYPE_1 VAR_6 = VAR_3 . METHOD_5 ( this . VAR_7 , VAR_4 , new TYPE_6 < > ( ) ) ; METHOD_6 ( true ) ; METHOD_7 ( ) ; return VAR_6 ; } 
private void METHOD_1 ( TYPE_1 model ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; model . METHOD_5 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; model . METHOD_6 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_7 ( TYPE_4 VAR_2 , java.lang.Object sender , TYPE_5 args ) { } } ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( false ) ; try { command . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) ; } catch ( TYPE_2 VAR_1 ) { org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( INT_1 ) ) . log ( TYPE_3 . any ( VAR_3 class ) , TYPE_3 . any ( VAR_4 . AuditLogType class ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; this . VAR_4 . METHOD_2 ( VAR_2 ) ; this . VAR_4 . METHOD_3 ( ) ; this . VAR_3 = VAR_3 ; METHOD_4 ( true ) ; METHOD_5 ( false ) ; } 
private TYPE_1 METHOD_1 ( ) { return METHOD_2 ( VAR_1 , new TYPE_2 ( TYPE_3 . METHOD_3 ( ) . getId ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) , TYPE_3 . METHOD_4 ( ) . getId ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_6 ( ) , VAR_2 . getId ( ) , TYPE_3 . getParameters ( ) . METHOD_7 ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_8 ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ; model . METHOD_6 ( TYPE_3 . METHOD_7 ( TYPE_2 . METHOD_3 ( VAR_4 class ) ) ) ; model . METHOD_8 ( null ) ; return model ; } 
public void METHOD_1 ( final boolean VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( INT_1 , VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( INT_1 , VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_6 ( VAR_3 ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_7 ( VAR_4 , STRING_1 ) ; METHOD_8 ( ) ; TYPE_1 . METHOD_9 ( VAR_5 ) ; } } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( source ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { return true ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new TYPE_1 ( VAR_1 , iface ) , aQuery ) ; } 
private boolean METHOD_1 ( ) { for ( TYPE_1 nic : TYPE_2 . getVm ( ) . METHOD_2 ( ) ) { if ( ( nic . METHOD_3 ( ) ) == null ) { if ( ! ( TYPE_3 . METHOD_4 ( TYPE_2 . getVm ( ) . METHOD_5 ( ) . getValue ( ) ) ) ) { addCanDoActionMessage ( VAR_1 ) ; return false ; } else { return true ; } } } return true ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; model . METHOD_2 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } } ) ; TYPE_2 . METHOD_3 ( VAR_1 , VAR_2 , vm . METHOD_4 ( ) , VAR_3 ) ; } 
protected void METHOD_1 ( TYPE_1 . Disk disk ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( disk ) ; if ( VAR_1 != null ) { TYPE_1 . StorageDomain storageDomain = METHOD_3 ( VAR_1 ) ; if ( storageDomain != null ) { disk . METHOD_4 ( TYPE_2 . map ( storageDomain . METHOD_5 ( ) ) . value ( ) ) ; } } } 
public void METHOD_1 ( ) { if ( METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) ) { getReturnValue ( ) . METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( TYPE_1 . getInstance ( ) . METHOD_7 ( ) . METHOD_8 ( METHOD_9 ( ) , METHOD_10 ( ) ) ) ; } TYPE_2 . METHOD_11 ( METHOD_2 ( ) . METHOD_12 ( ) , true ) ; getReturnValue ( ) . METHOD_4 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_4 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; TYPE_1 VAR_5 = VAR_4 . METHOD_5 ( ) . get ( VAR_1 . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( VAR_5 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_5 ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String result = STRING_1 ; if ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) && ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { if ( VAR_3 . METHOD_3 ( VAR_1 ) ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_4 = VAR_3 . get ( VAR_1 ) ; result = VAR_4 . METHOD_4 ( VAR_2 , VAR_2 ) ; } else { VAR_5 . error ( VAR_6 , VAR_1 ) ; } } return result ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( true ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( VAR_3 class ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , false , false ) ; METHOD_2 ( 1 , true , true ) ; METHOD_3 ( VAR_1 [ 1 ] ) ; METHOD_4 ( METHOD_5 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , true , true ) ) ; METHOD_6 ( resource . METHOD_7 ( getModel ( 0 ) ) , 0 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new org.ovirt.engine.core.common.businessentities.VDS ( ) , true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 class ) ) ) . METHOD_4 ( new TYPE_2 ( ) ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; } 
private boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , boolean VAR_2 ) { boolean returnValue = false ; if ( ( METHOD_2 ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( METHOD_2 ( ) ) ; VAR_4 . METHOD_4 ( STRING_1 , METHOD_2 ( ) , VAR_3 . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) ) ; returnValue = METHOD_7 ( VAR_1 , VAR_2 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( TYPE_1 . METHOD_8 ( VAR_3 ) ) ) ; } return returnValue ; } 
private TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . setId ( VAR_1 ) ; TYPE_2 . METHOD_2 ( VAR_2 ) ; disk . METHOD_3 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) ; return disk ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( action , new TYPE_1 ( VAR_1 ) , new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 result ) { VAR_2 . METHOD_5 ( ) . METHOD_6 ( ) ; } } ) ; METHOD_7 ( ) ; } 
protected void METHOD_1 ( ) { java.util.ArrayList < java.lang.String > VAR_1 = new java.util.ArrayList < > ( TYPE_1 . METHOD_2 ( new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . any ( VAR_3 . Version class ) ) ) . thenReturn ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 { TYPE_1 VAR_2 = super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_3 ) . toString ( ) . METHOD_4 ( VAR_4 ) ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_5 ) . toString ( ) . METHOD_4 ( VAR_4 ) ) ; VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( VAR_6 ) . toString ( ) . METHOD_4 ( ) ) ; return VAR_2 ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { switch ( TYPE_2 . METHOD_2 ( ) ) { case VAR_1 : return TYPE_2 . getSucceeded ( ) ? ( TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) . size ( ) ) > 0 ? VAR_2 : VAR_3 : VAR_4 ; case VAR_5 : return TYPE_2 . getSucceeded ( ) ? VAR_6 : VAR_7 ; default : return VAR_7 ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_7 ( ) ) . when ( command ) . METHOD_8 ( ) ; TYPE_3 . METHOD_9 ( command , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . Disk model = METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . get ( 0 ) . METHOD_5 ( null ) ; METHOD_6 ( METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( ) ; try { VAR_2 . add ( model ) ; METHOD_9 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_10 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( false , VAR_1 ) ; cmd . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( ) ) . METHOD_7 ( TYPE_1 . any ( VAR_3 class ) ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( ) ) . METHOD_8 ( TYPE_1 . any ( VAR_4 . Guid class ) , TYPE_1 . any ( VAR_4 . Guid class ) ) ; TYPE_2 . assertEquals ( VAR_5 , cmd . METHOD_9 ( ) ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 class ) . to ( VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_3 class ) . to ( VAR_4 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_5 class ) . to ( VAR_6 ) ; METHOD_4 ( VAR_7 class , VAR_8 class , VAR_9 class , VAR_10 class , VAR_11 class ) ; } 
public < TYPE_1 > java.util.List < TYPE_1 > METHOD_1 ( final java.lang.String VAR_1 , final TYPE_2 < TYPE_1 > VAR_2 , final TYPE_3 VAR_3 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_4 = METHOD_2 ( VAR_1 , VAR_3 , METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) ) ; return ( ( java.util.List < TYPE_1 > ) ( VAR_4 . get ( VAR_5 ) ) ) ; } 
private static org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; final org.ovirt.engine.core.common.businessentities.DiskImage VAR_3 = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( TYPE_1 . instance ( ) . METHOD_6 ( ) ) ; return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = METHOD_2 ( null ) ; model . METHOD_3 ( null ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; try { VAR_2 . add ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_8 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) ) ) . thenReturn ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( new java.util.ArrayList < TYPE_3 > ( ) ) ; VAR_3 . METHOD_4 ( true ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( validator ) . METHOD_5 ( TYPE_1 . any ( ) ) ; TYPE_4 . METHOD_6 ( validator . METHOD_7 ( VAR_4 ) , TYPE_5 . METHOD_8 ( ) ) ; } 
private boolean METHOD_1 ( final TYPE_1 < ? , ? > VAR_1 ) { final boolean VAR_2 = ( ! ( VAR_3 . METHOD_2 ( VAR_1 ) ) ) || ( VAR_1 . METHOD_3 ( ) ) ; if ( VAR_2 && ( VAR_3 . add ( VAR_1 ) ) ) { VAR_4 . METHOD_4 ( this ) ; if ( METHOD_5 ( VAR_1 ) ) { TYPE_2 . METHOD_6 ( VAR_5 ) ; } } return true ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . get ( VAR_2 class ) ; VAR_3 = VAR_1 . METHOD_2 ( this , STRING_1 , new TYPE_3 [ ] { } , new java.lang.Object [ ] { } , VAR_4 < java.lang.Integer > getValue ( VAR_5 ) , VAR_4 < java.lang.Integer > getValue ( VAR_5 ) , VAR_6 ) ; VAR_7 . METHOD_3 ( STRING_2 ) ; } 
public void METHOD_1 ( java.lang.Exception VAR_1 , java.lang.String VAR_2 , final java.util.Map < java.lang.String , java.lang.Object > globalMap ) throws TYPE_1 { VAR_3 . put ( STRING_1 , TYPE_2 . METHOD_2 ( ) ) ; ( ( java.util.Map ) ( VAR_4 . get ( ) ) ) . put ( STRING_2 , STRING_3 ) ; METHOD_3 ( VAR_1 , VAR_2 , globalMap ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_2 ) { for ( java.lang.Object object : VAR_3 ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( TYPE_1 ) ( object ) ) . METHOD_2 ( ) ; if ( ! ( METHOD_3 ( ( ( template . getName ( ) ) + VAR_1 ) , VAR_2 , METHOD_4 ( null ) ) ) ) { return false ; } } return true ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_3 , STRING_2 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_2 VAR_5 = new TYPE_2 ( STRING_3 ) ; VAR_5 . METHOD_3 ( 0 ) ; TYPE_3 . assertEquals ( STRING_3 , VAR_4 . METHOD_4 ( VAR_5 , STRING_4 ) ) ; VAR_1 . METHOD_2 ( VAR_2 , STRING_5 ) ; VAR_1 . METHOD_2 ( VAR_3 , STRING_6 ) ; TYPE_3 . METHOD_5 ( STRING_3 , VAR_4 . METHOD_4 ( VAR_5 , STRING_4 ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 ) ) ) , null ) ) ; METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 , false ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_3 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( new TYPE_4 ( true , VAR_2 ) ) ; TYPE_5 resource = VAR_4 . METHOD_5 ( VAR_5 class ) ; TYPE_6 response = VAR_3 . METHOD_6 ( METHOD_7 ( null , true , false ) , resource ) ; METHOD_8 ( response ) ; VAR_4 . METHOD_9 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . parameters = new TYPE_3 ( VAR_1 ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( true ) ; VAR_5 . METHOD_5 ( VAR_7 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; parameters . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_7 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( command ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_1 . any ( VAR_2 class ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( INT_1 ) ) . METHOD_7 ( TYPE_1 . any ( VAR_3 . Guid class ) , TYPE_1 . any ( VAR_3 . Guid class ) ) ; TYPE_2 . assertEquals ( VAR_4 , cmd . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( VAR_2 ) . get ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( true , VAR_4 ) ) . when ( VAR_5 ) . get ( TYPE_1 . any ( VAR_6 . Guid class ) ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; return METHOD_2 ( VAR_3 , VAR_1 ) ; } catch ( TYPE_4 VAR_4 ) { throw new TYPE_5 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = METHOD_4 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_4 [ 0 ] , java.lang.Boolean . TRUE } , true , true , false ) ; VAR_1 = METHOD_5 ( VAR_1 , VAR_5 , TYPE_2 . toString ( ) ) ; METHOD_6 ( VAR_1 ) ; VAR_6 . METHOD_7 ( ) ; METHOD_8 ( resource . METHOD_9 ( ) ) ; } 
private static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , java.lang.String name ) { TYPE_1 returnValue = null ; if ( VAR_1 . METHOD_2 ( name ) ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( ( ( VAR_1 . get ( name ) ) instanceof java.lang.String ) ? VAR_1 . get ( name ) : null ) ) ; returnValue = ( VAR_2 == null ) ? null : TYPE_1 . METHOD_3 ( VAR_2 ) ; } return returnValue ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; cmd . getParameters ( ) . getVm ( ) . METHOD_4 ( VAR_2 ) ; TYPE_1 . METHOD_5 ( cmd . METHOD_6 ( VAR_2 ) ) ; TYPE_2 . METHOD_7 ( STRING_1 , cmd , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , true ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( true ) ; METHOD_7 ( true ) ; METHOD_8 ( true ) ; TYPE_3 . METHOD_9 ( command , VAR_2 ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_2 > VAR_1 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; TYPE_3 . METHOD_3 ( VAR_1 , new TYPE_4 ( ) ) ; setItems ( VAR_1 ) ; } } ) , getEntity ( ) . getId ( ) ) ; } 
private TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > METHOD_1 ( java.lang.String VAR_1 ) { java.util.List < TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > > VAR_2 = ( ( java.util.List < TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > > ) ( METHOD_2 ( ) ) ) ; for ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup , TYPE_2 > item : VAR_2 ) { if ( item . METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_1 ) ) { return item ; } } return null ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( VAR_1 , METHOD_2 ( ) ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . getId ( ) , result . getId ( ) ) ; TYPE_2 . assertEquals ( false , result . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( result . METHOD_6 ( ) ) ; } 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = METHOD_4 ( ) ; if ( VAR_2 == null ) { return false ; } TYPE_3 < TYPE_1 > VAR_3 = METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; return VAR_3 . METHOD_7 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 value = new TYPE_1 ( ) ; value . METHOD_2 ( false ) ; value . METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_6 ( TYPE_3 . any ( VAR_4 class ) , TYPE_3 . any ( VAR_5 class ) ) ) . thenReturn ( value ) ; VAR_1 . METHOD_7 ( ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; VAR_2 . METHOD_2 ( ( ( ( ( java.util.List ) ( VAR_2 . METHOD_3 ( ) ) ) . size ( ) ) == 0 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.List < java.lang.String > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; getModel ( ) . METHOD_1 ( ) . setEntity ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_1 ) ) ; VAR_3 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ) ) ) ; } 
public boolean METHOD_1 ( ) { return ( ( VAR_1 . METHOD_2 ( STRING_1 ) ) || ( ( ( METHOD_3 ( ) ) != null ) && ( METHOD_3 ( ) . equals ( VAR_2 ) ) ) ) || ( ( METHOD_4 ( ) . METHOD_2 ( VAR_3 ) ) && ( ( ( METHOD_3 ( ) ) == null ) || ( ! ( METHOD_3 ( ) . equals ( VAR_4 ) ) ) ) ) ; } 
protected boolean METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; return false ; } if ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) != ( VAR_2 ) ) { addCanDoActionMessage ( VAR_3 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { client . METHOD_2 ( VAR_1 ) ; client . METHOD_3 ( ) ; client . METHOD_4 ( ) ; TYPE_1 VAR_2 = new TYPE_2 ( INT_1 ) ; client . METHOD_5 ( VAR_3 , null , VAR_2 , null ) ; TYPE_3 . assertEquals ( VAR_4 , new java.lang.String ( VAR_2 . METHOD_6 ( ) , STRING_1 ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( STRING_1 ) ; if ( VAR_1 == null ) { return TYPE_2 . METHOD_3 ( ) ; } java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.String VAR_3 : VAR_1 . METHOD_4 ( STRING_2 ) ) { if ( TYPE_3 . METHOD_5 ( VAR_3 ) ) { VAR_2 . add ( new TYPE_1 ( VAR_3 ) ) ; } } return VAR_2 ; } 
private void METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 < java.lang.String > METHOD_2 ( VAR_3 ) ; java.lang.String [ ] types = VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_4 ) , ( - 1 ) ) ; for ( java.lang.String VAR_5 : types ) { java.lang.String [ ] VAR_6 = VAR_5 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_7 ) , ( - 1 ) ) ; VAR_8 . put ( VAR_6 [ 0 ] , VAR_6 [ 1 ] ) ; } } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object result ) { java.util.List < TYPE_1 > VAR_2 = ( ( java.util.List < TYPE_1 > ) ( result ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { VAR_3 . METHOD_1 ( ) . METHOD_2 ( false ) ; if ( ! VAR_4 ) { VAR_3 . METHOD_3 ( ) . METHOD_2 ( false ) ; } } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_6 ( true ) ; METHOD_5 ( ) . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( METHOD_5 ( ) , true ) ; TYPE_2 . METHOD_9 ( METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , new TYPE_3 ( TYPE_4 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ) , null , null ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . getStatus ( ) ; TYPE_5 . METHOD_7 ( command . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 . METHOD_2 ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; dao . METHOD_4 ( VAR_2 ) ; VAR_1 = dao . get ( VAR_2 . METHOD_2 ( ) ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( new java.util.ArrayList < > ( ) ) ; VAR_1 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_7 ( VAR_2 ) ; } } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , vmId ) , VAR_2 , TYPE_3 . getName ( ) , STRING_1 , 0 , null , true , true , false , STRING_1 , null , null , null ) ; } 
private void METHOD_1 ( TYPE_1 model ) { java.util.ArrayList < TYPE_2 > VAR_1 = ( ( java.util.ArrayList < TYPE_2 > ) ( model . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; if ( ! ( model . METHOD_4 ( ) ) ) { return ; } VAR_2 . METHOD_5 ( model . METHOD_6 ( ) ) ; model . METHOD_6 ( ) . METHOD_2 ( ) . setItems ( model . METHOD_2 ( ) . METHOD_3 ( ) ) ; model . METHOD_6 ( ) . METHOD_7 ( model . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 . Network > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 ) ; } } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( id ) ; org.ovirt.engine.core.compat.Guid VAR_2 = VAR_3 ; TYPE_3 parameters = new TYPE_3 ( VAR_1 , VAR_2 ) ; return METHOD_3 ( VAR_4 , parameters ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 ) { try { return TYPE_2 . getInstance ( ) . METHOD_2 ( TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( TYPE_3 . METHOD_3 ( ) , vds . getId ( ) , VAR_1 , VAR_2 ) ; } catch ( TYPE_4 e ) { final TYPE_5 result = METHOD_6 ( ) ; result . METHOD_7 ( vds ) ; result . METHOD_8 ( VAR_1 ) ; throw e ; } } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_2 ) ) . thenReturn ( VAR_3 ) ; return VAR_3 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( returnValue ) ) ; model . METHOD_2 ( model , new java.util.ArrayList < TYPE_2 > ( TYPE_3 . METHOD_3 ( new TYPE_2 [ ] { VAR_1 } ) ) ) ; model . METHOD_4 ( ) . setIsChangable ( false ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito . METHOD_2 ( ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_2 ( ) . when ( command ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_2 ( ) . when ( command ) . METHOD_7 ( ) ; command . METHOD_8 ( TYPE_2 . METHOD_9 ( ) ) ; command . METHOD_10 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_1 . when ( VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_3 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_2 ( ) . setItems ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; METHOD_3 ( ) ; } } ; TYPE_2 . METHOD_4 ( getVm ( ) . METHOD_5 ( ) , METHOD_6 ( ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_1 , METHOD_2 ( id ) ) ; return inject ( new TYPE_5 < TYPE_6 , TYPE_7 > ( VAR_5 , VAR_6 , VAR_4 ) ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 type , TYPE_3 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( id ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( type ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; return VAR_3 ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) { return ; } TYPE_4 VAR_3 = null ; java.lang.String VAR_4 ; VAR_3 = VAR_5 . METHOD_3 ( ) ; VAR_4 = constants . METHOD_4 ( ) ; TYPE_5 VAR_6 = TYPE_6 . METHOD_5 ( TYPE_7 . METHOD_6 ( VAR_3 ) . METHOD_7 ( ) ) ; VAR_2 . append ( VAR_7 . METHOD_8 ( VAR_6 , VAR_4 ) ) ; } 
protected TYPE_1 . StorageDomain map ( TYPE_2 entity , TYPE_1 . StorageDomain template ) { TYPE_1 . StorageDomain model = super . map ( entity , template ) ; if ( ! ( METHOD_1 ( ) ) ) { switch ( entity . METHOD_2 ( ) ) { case VAR_1 : METHOD_3 ( model , entity ) ; break ; case VAR_2 : METHOD_4 ( model , entity ) ; break ; case VAR_3 : case VAR_4 : case VAR_5 : METHOD_5 ( model , entity ) ; break ; } } return model ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
protected boolean METHOD_1 ( TYPE_1 storageDomain ) { return ( ( ( ( METHOD_2 ( storageDomain ) ) && ( METHOD_3 ( storageDomain , TYPE_2 . METHOD_4 ( ) ) ) ) && ( METHOD_5 ( storageDomain ) ) ) && ( ( ( ( storageDomain . METHOD_6 ( ) ) == ( VAR_1 ) ) || ( ( storageDomain . METHOD_6 ( ) ) == ( VAR_2 ) ) ) || ( METHOD_7 ( storageDomain ) ) ) ) && ( METHOD_8 ( storageDomain ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; log . METHOD_3 ( STRING_1 , TYPE_1 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_6 ( ) ; log . METHOD_7 ( STRING_2 , TYPE_1 . getParameters ( ) . METHOD_8 ( ) , TYPE_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; VAR_1 . METHOD_7 ( ) ; TYPE_1 nic = resource . get ( ) ; TYPE_2 . METHOD_8 ( nic , 1 ) ; METHOD_9 ( nic ) ; } 
private java.lang.String METHOD_1 ( ) { if ( VAR_1 ) { return VAR_2 ; } if ( ( METHOD_2 ( ) ) == ( VAR_3 ) ) { return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } if ( ! ( TYPE_2 . METHOD_5 ( TYPE_1 . getVm ( ) . METHOD_6 ( ) , TYPE_1 . getVm ( ) . METHOD_7 ( ) ) ) ) { return VAR_2 ; } return TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( ) ; final boolean VAR_1 = ( VAR_2 . size ( ) ) > 0 ; if ( VAR_1 ) { TYPE_3 . METHOD_6 ( new TYPE_4 < TYPE_5 > ( ) { public TYPE_5 METHOD_7 ( ) { if ( METHOD_8 ( ) ) { METHOD_9 ( true ) ; } return null ; } } ) ; } else { METHOD_10 ( ) ; } } 
public java.lang.String METHOD_1 ( TYPE_1 . Version VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ( ( ( VAR_1 . METHOD_2 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) . METHOD_4 ( ) , true ) ; return VAR_2 != null ? VAR_2 . toString ( ) : null ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . parameters = new TYPE_3 ( VAR_1 , VAR_1 . getId ( ) ) ; VAR_5 . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( true ) ; VAR_5 . METHOD_5 ( VAR_7 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_3 . any ( VAR_4 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_9 ( ) , VAR_5 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; METHOD_4 ( VAR_4 , VAR_5 ) ; METHOD_5 ( VAR_6 , org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) , VAR_4 ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_7 ) ) . when ( VAR_8 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; TYPE_3 . METHOD_9 ( command , VAR_9 ) ; } 
protected void METHOD_1 ( TYPE_1 . DiskImage VAR_1 ) { TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_1 . getId ( ) ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { METHOD_8 ( ) . METHOD_3 ( VAR_1 . getId ( ) ) ; } } 
public java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > METHOD_1 ( ) { java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_1 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 > ( ) ; for ( TYPE_1 user : METHOD_2 ( ) ) { VAR_1 . put ( user . METHOD_3 ( ) , user ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) ; nic . METHOD_6 ( VAR_2 ) ; METHOD_7 ( VAR_1 ) ; METHOD_8 ( nic ) ; nic . METHOD_6 ( VAR_3 ) ; TYPE_1 VAR_4 = METHOD_9 ( METHOD_10 ( nic ) ) ; METHOD_11 ( VAR_4 , VAR_5 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; parameters . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( command ) ; } 
public TYPE_1 add ( TYPE_2 . Disk disk ) { METHOD_1 ( VAR_1 . Disk class , disk ) ; if ( disk . METHOD_2 ( ) ) { return METHOD_3 ( disk ) ; } else { METHOD_4 ( disk ) ; METHOD_5 ( disk ) ; return METHOD_6 ( VAR_2 , METHOD_7 ( map ( disk ) , disk ) , new TYPE_3 ( ) ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String ... VAR_1 ) throws TYPE_2 { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_4 = null ; try { VAR_4 = new TYPE_3 ( VAR_2 , STRING_2 ) ; for ( java.lang.String VAR_5 : VAR_1 ) { VAR_4 . METHOD_3 ( VAR_5 ) ; } } finally { if ( VAR_4 != null ) { VAR_4 . METHOD_4 ( ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; } 
public java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) ) ; if ( ! ( VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ) ) { VAR_1 = VAR_2 . METHOD_7 ( ) ; } return VAR_2 . METHOD_5 ( ) . get ( VAR_1 ) ; } else { return VAR_2 . METHOD_5 ( ) . get ( VAR_3 ) ; } } 
public java.lang.String METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( VAR_2 ) == null ) ) { VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; if ( ( VAR_2 ) != null ) { VAR_1 = VAR_2 . METHOD_1 ( ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; TYPE_1 result = dao . get ( new TYPE_2 ( VAR_1 . METHOD_3 ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_4 ( ) . toString ( ) ) ) ) ; TYPE_3 . METHOD_5 ( result ) ; TYPE_3 . assertEquals ( VAR_1 , result ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_8 ( ) ; TYPE_1 . METHOD_9 ( command . METHOD_10 ( ) ) ; TYPE_1 . METHOD_11 ( command . getReturnValue ( ) . METHOD_12 ( ) . METHOD_13 ( TYPE_2 . toString ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_3 < ? extends TYPE_2 . VdcActionParametersBase > VAR_2 , java.lang.String [ ] VAR_3 , java.lang.Object [ ] VAR_4 , boolean VAR_5 , boolean VAR_6 , java.lang.Object VAR_7 , java.lang.String VAR_8 , boolean VAR_9 ) { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 , null , null , VAR_8 , VAR_9 ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( id , other . id ) ) && ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { TYPE_2 tempVar = new TYPE_2 ( vds . getId ( ) , VAR_1 , VAR_2 ) ; tempVar . METHOD_2 ( true ) ; TYPE_3 . getInstance ( ) . METHOD_3 ( VAR_3 , tempVar , TYPE_4 . METHOD_4 ( ) ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ( ( java.lang.Integer ) ( TYPE_2 . getValue ( VAR_2 ) ) ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; return ( VAR_1 . METHOD_5 ( VAR_3 ) ) || ( VAR_1 . equals ( VAR_3 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new TYPE_1 ( STRING_1 ) ) ; VAR_1 . METHOD_3 ( new TYPE_1 ( STRING_2 ) ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( ) . isEmpty ( ) ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_6 ( ) . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; VAR_1 . METHOD_2 ( VAR_3 , STRING_2 ) ; TYPE_1 VAR_4 = new TYPE_1 ( INT_1 ) ; TYPE_2 VAR_5 = new TYPE_2 ( STRING_3 ) ; VAR_5 . METHOD_3 ( 0 ) ; TYPE_3 . assertEquals ( STRING_3 , VAR_4 . METHOD_4 ( VAR_5 , STRING_4 ) ) ; VAR_1 . METHOD_2 ( VAR_2 , STRING_5 ) ; VAR_1 . METHOD_2 ( VAR_3 , STRING_6 ) ; TYPE_3 . METHOD_5 ( STRING_3 , VAR_4 . METHOD_4 ( VAR_5 , STRING_4 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_2 class , VAR_1 ) ; METHOD_3 ( VAR_1 ) ; TYPE_1 result = METHOD_4 ( VAR_1 , new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 class ) , VAR_5 , new TYPE_3 ( ) ) ; if ( result != null ) { TYPE_4 . METHOD_5 ( this , result ) ; } return result ; } 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; METHOD_2 ( object ) ; if ( object . METHOD_3 ( ) ) { object . METHOD_4 ( ) . setEntity ( STRING_1 ) ; VAR_1 . METHOD_5 ( false ) ; } } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_3 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_4 , VAR_3 ) ) . when ( VAR_5 ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_6 ) , TYPE_2 . METHOD_7 ( METHOD_8 ( VAR_4 ) ) ) ; METHOD_2 ( VAR_7 , VAR_8 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , null , VAR_1 , VAR_2 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( false , VAR_3 , VAR_4 ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_5 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_3 . any ( VAR_6 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_10 ( ) , VAR_7 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( TYPE_2 ) ( returnValue ) ) ; if ( ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_1 ( ) ) != ( VAR_2 ) ) ) { model . METHOD_2 ( ) ; } else { model . METHOD_3 ( ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 map = METHOD_2 ( ) ; METHOD_3 ( map , VAR_1 , VAR_2 , TYPE_2 . METHOD_4 ( ) ) ; if ( METHOD_5 ( ) ) { TYPE_3 parameters = new TYPE_3 ( TYPE_2 . getStoragePoolId ( ) ) ; METHOD_6 ( VAR_3 , parameters , null ) ; METHOD_6 ( VAR_4 , METHOD_7 ( ) , TYPE_2 . METHOD_8 ( ) ) ; } if ( TYPE_2 . METHOD_9 ( ) ) { METHOD_10 ( ) ; } TYPE_2 . METHOD_11 ( true ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_3 . put ( VAR_4 , VAR_1 ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_4 ( VAR_3 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_5 , TYPE_2 . METHOD_6 ( ) ) ; TYPE_4 . assertEquals ( VAR_2 . METHOD_7 ( ) . get ( 0 ) . METHOD_8 ( ) , new TYPE_5 ( STRING_2 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 storage = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; if ( ( storage . METHOD_4 ( ) ) == ( VAR_1 ) ) { TYPE_3 VAR_2 = METHOD_5 ( ) ; METHOD_6 ( VAR_2 . getReturnValue ( ) ) ; } else { TYPE_2 . METHOD_7 ( ) . METHOD_8 ( new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ) ; } } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == ( VAR_2 ) ) { VAR_1 = super . METHOD_1 ( ) ; if ( ( ( TYPE_1 . METHOD_3 ( ) ) != null ) && ( ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) != ( VAR_3 ) ) ) { addCanDoActionMessage ( VAR_4 ) ; VAR_1 = false ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 , this , getEntity ( ) ) ; METHOD_2 ( VAR_2 ) ; VAR_2 . METHOD_3 ( ) . setItems ( TYPE_4 . METHOD_4 ( getEntity ( ) ) ) ; VAR_2 . METHOD_3 ( ) . setSelectedItem ( getEntity ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 . METHOD_3 ( ) ) ) ; if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_4 ( ) ) ) { METHOD_5 ( false ) ; return ; } } METHOD_5 ( true ) ; } 
public void METHOD_1 ( TYPE_1 . VdcActionType action , java.util.List < TYPE_2 > VAR_1 ) { java.util.List < TYPE_1 . VdcActionType > VAR_2 = new java.util.ArrayList < TYPE_1 . VdcActionType > ( VAR_1 . size ( ) ) ; TYPE_3 . METHOD_2 ( VAR_2 , action ) ; METHOD_3 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_4 ( null ) ; VAR_2 . METHOD_5 ( ) ; try { resource . METHOD_6 ( VAR_1 ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_8 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( TYPE_1 . instance ( ) . METHOD_4 ( ) ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_5 ( STRING_2 , VAR_1 ) ; nic . METHOD_3 ( TYPE_1 . instance ( ) . METHOD_4 ( ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_2 VAR_2 = METHOD_8 ( METHOD_9 ( nic ) ) ; METHOD_10 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_1 VAR_5 = METHOD_6 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_5 , true ) ; TYPE_2 . METHOD_9 ( command . METHOD_10 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( 0 ) ; METHOD_4 ( ) ; METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; TYPE_1 . VM model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_8 ( model ) ; METHOD_9 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_10 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; cmd . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; METHOD_7 ( true ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 , org.mockito.Mockito . METHOD_9 ( 1 ) ) . METHOD_10 ( TYPE_1 . METHOD_11 ( ) , TYPE_1 . METHOD_11 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 , org.mockito.Mockito . METHOD_9 ( 0 ) ) . METHOD_12 ( TYPE_1 . METHOD_11 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( TYPE_2 . METHOD_5 ( ) ) ) . thenReturn ( VAR_5 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) { if ( ( a . METHOD_1 ( ) ) == ( VAR_1 ) ) { list . add ( a ) ; } } model . METHOD_2 ( model , list ) ; METHOD_3 ( ) . METHOD_4 ( this , VAR_2 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( ) ) , null ) ) ; METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( VAR_2 ) ; TYPE_2 command = new TYPE_2 ( params , null ) ; java.util.HashMap < java.lang.String , java.lang.Object > VAR_3 = command . METHOD_1 ( ) ; TYPE_3 . METHOD_4 ( VAR_3 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_3 . get ( STRING_2 ) ) ; TYPE_3 . assertEquals ( STRING_3 , VAR_3 . get ( STRING_4 ) ) ; } 
public TYPE_1 add ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 ) ; METHOD_2 ( VAR_2 class , VAR_1 ) ; return METHOD_3 ( VAR_3 , new TYPE_3 ( map ( METHOD_4 ( VAR_1 ) ) ) , new TYPE_4 < org.ovirt.engine.core.compat.Guid > ( VAR_4 , VAR_5 . IdQueryParameters class ) ) ; } 
public TYPE_1 METHOD_1 ( ) { get ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . setId ( id ) ; java.lang.String host = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; org.ovirt.engine.core.compat.Guid VAR_5 = VAR_6 ; if ( host != null ) { VAR_5 = METHOD_3 ( host ) ; } TYPE_4 parameters = new TYPE_4 ( VAR_1 , VAR_5 ) ; return METHOD_4 ( VAR_7 , parameters ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( id ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 vm = new TYPE_1 ( ) ; vm . setId ( VAR_1 ) ; vm . METHOD_2 ( new TYPE_2 . StorageDomain ( ) ) ; vm . METHOD_3 ( ) . setId ( VAR_2 ) ; vm = TYPE_3 . METHOD_4 ( METHOD_5 ( ) , vm ) ; assertEquals ( VAR_3 , vm . METHOD_6 ( ) ) ; assertEquals ( VAR_4 , vm . METHOD_3 ( ) . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > list = new TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ; list . add ( new TYPE_2 ( ) ) ; list . add ( new TYPE_3 ( ) ) ; list . add ( new TYPE_4 ( ) ) ; list . add ( new TYPE_5 ( ) ) ; list . add ( new TYPE_6 ( ) ) ; METHOD_2 ( list ) ; METHOD_3 ( list ) ; } 
public void METHOD_1 ( ) { final TYPE_1 parameters = METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 ) > ( VAR_2 . length ( ) ) ) ) ; parameters . METHOD_4 ( true ) ; TYPE_3 command = METHOD_5 ( parameters ) ; TYPE_4 < TYPE_5 < TYPE_1 > > validate = TYPE_6 . METHOD_6 ( ) . validate ( parameters , command . METHOD_7 ( ) . METHOD_8 ( new TYPE_7 < ? > [ 0 ] ) ) ; TYPE_2 . METHOD_9 ( validate . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( org.mockito.Mockito . METHOD_4 ( VAR_3 class ) ) ; TYPE_2 . METHOD_5 ( validator . METHOD_1 ( ) , TYPE_3 . METHOD_6 ( ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( VAR_2 ) ) { VAR_3 . METHOD_3 ( ( ( STRING_1 + ( VAR_1 . METHOD_4 ( ) . getName ( ) ) ) + STRING_2 ) ) ; TYPE_2 . get ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 1 ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . equals ( METHOD_5 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) && ( ! ( VAR_1 . getId ( ) . equals ( METHOD_6 ( ) . getId ( ) ) ) ) ) && ( METHOD_6 ( ) . METHOD_7 ( ) . equals ( VAR_1 . METHOD_7 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . METHOD_7 ( ) , STRING_2 ) ; VAR_3 = new TYPE_2 ( VAR_2 . METHOD_8 ( ) , VAR_1 , 1 ) ; TYPE_3 . METHOD_9 ( STRING_3 , VAR_3 . METHOD_10 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( resource ) ) ; METHOD_2 ( ) ; METHOD_3 ( INT_1 ) ; METHOD_4 ( INT_1 ) ; METHOD_5 ( INT_1 ) ; METHOD_6 ( INT_2 ) ; METHOD_7 ( METHOD_8 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_4 , VAR_5 [ 1 ] } ) ) ; METHOD_9 ( VAR_1 . METHOD_10 ( new TYPE_2 ( ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_3 = new org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface ( ) ; VAR_3 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_1 . getName ( ) ) ; VAR_3 . METHOD_5 ( true ) ; return VAR_3 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; vds . METHOD_3 ( STRING_2 ) ; cluster . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( vds ) ; TYPE_1 . METHOD_6 ( vds . getStatus ( ) , VAR_4 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { if ( ( ( vm . METHOD_2 ( ) ) || ( ( vm . getStatus ( ) ) == ( VAR_1 ) ) ) || ( METHOD_3 ( vm ) ) ) { return new TYPE_1 . ValidationResult ( VAR_2 ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd , false ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_3 ) ) . thenReturn ( METHOD_4 ( VAR_3 ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_4 ) ) . thenReturn ( METHOD_5 ( VAR_4 ) ) ; } 
private void METHOD_1 ( TYPE_1 parameters , java.util.List < TYPE_2 > VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , parameters . METHOD_3 ( ) . getId ( ) ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( INT_1 , 2 , 2 , 2 , 2 ) ; TYPE_2 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( nic , null ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 TYPE_2 = METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , INT_1 , 0 ) ; org.mockito.Mockito.when ( command . METHOD_3 ( ) ) . thenReturn ( TYPE_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_4 ) . get ( TYPE_3 . METHOD_4 ( ) ) ; org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . METHOD_5 ( VAR_5 ) ; domain . METHOD_6 ( VAR_6 ) ; METHOD_7 ( TYPE_2 . getId ( ) , domain ) ; TYPE_4 . METHOD_8 ( command , VAR_7 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { if ( ( VAR_4 . METHOD_2 ( ) ) != null ) { METHOD_3 ( ( ( java.util.List < TYPE_3 > ) ( VAR_4 . METHOD_2 ( ) ) ) ) ; } } } 
public void METHOD_1 ( ) { final TYPE_1 command = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( command . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { try { TYPE_1 VAR_1 = METHOD_2 ( new TYPE_2 ( ) , vds ) ; if ( VAR_2 . METHOD_3 ( ) ) { VAR_2 . METHOD_4 ( STRING_1 , METHOD_5 ( ) , VAR_1 ) ; } } finally { if ( vds != null ) { METHOD_6 ( vds . METHOD_7 ( ) ) ; VAR_3 . METHOD_8 ( vds ) ; TYPE_3 . getInstance ( ) . METHOD_9 ( ) . METHOD_10 ( vds . getId ( ) ) ; } } } 
protected void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( this . METHOD_2 ( ) . METHOD_3 ( ) ) ; VAR_2 . add ( 1 , METHOD_2 ( ) ) ; this . METHOD_2 ( ) . setItems ( VAR_2 ) ; this . METHOD_2 ( ) . setSelectedItem ( METHOD_2 ( ) ) ; } super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , TYPE_1 VAR_2 , org.ovirt.engine.core.common.businessentities.network.Network network ) { if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { VAR_1 . put ( VAR_3 , ( network == null ? VAR_4 . Collections < java.lang.String > METHOD_3 ( ) : TYPE_2 . METHOD_4 ( network . getName ( ) ) ) ) ; } } 
protected void METHOD_1 ( int VAR_1 ) throws java.lang.Exception { for ( int i = 0 ; i < VAR_1 ; i ++ ) { METHOD_2 ( VAR_2 , VAR_3 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 [ i ] } , TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_5 ) ) ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; if ( returnValue != null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; } else { VAR_4 = true ; } VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( null ) ; model . METHOD_3 ( new TYPE_2 . Network ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; try { VAR_2 . add ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
private static void METHOD_1 ( TYPE_1 entity , TYPE_2 VAR_1 , java.util.Map < java.lang.String , TYPE_1 > VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_4 < TYPE_3 < TYPE_1 > > get ( VAR_1 , VAR_5 . Collections < TYPE_1 > METHOD_2 ( ) ) ) { if ( ! ( VAR_2 . METHOD_3 ( VAR_6 < java.lang.String > get ( VAR_7 ) ) ) ) { VAR_2 . put ( VAR_3 . get ( VAR_7 ) , VAR_3 ) ; TYPE_4 . METHOD_1 ( VAR_3 , VAR_8 , VAR_2 ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( VAR_1 ) ; TYPE_2 . METHOD_7 ( command , VAR_4 ) ; } 
protected void METHOD_1 ( ) { try { if ( TYPE_1 . METHOD_2 ( ) ) { METHOD_3 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . get ( TYPE_1 . METHOD_5 ( ) ) ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { TYPE_2 . METHOD_6 ( TYPE_1 . METHOD_5 ( ) ) ; METHOD_7 ( ) ; } } TYPE_1 . METHOD_8 ( true ) ; } finally { TYPE_1 . METHOD_9 ( ) ; } } 
private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_1 ) { if ( VAR_3 . METHOD_2 ( ) . equals ( VAR_2 . METHOD_3 ( ) ) ) { return true ; } for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_4 : METHOD_4 ( VAR_2 . getId ( ) ) ) { if ( VAR_3 . METHOD_2 ( ) . equals ( VAR_4 . METHOD_5 ( ) ) ) { return true ; } } } return false ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == null ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_1 . METHOD_4 ( VAR_2 . METHOD_2 ( ) ) ; } } } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.ArrayList < java.lang.Integer > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_2 ( VAR_5 ) , VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat . Version version , java.lang.String VAR_1 ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_2 = new java.util.HashMap < > ( ) ; java.util.HashMap < java.lang.String , java.lang.String > VAR_3 = new java.util.HashMap < > ( ) ; METHOD_2 ( version , VAR_1 , VAR_3 , VAR_2 ) ; return new TYPE_1 ( METHOD_3 ( VAR_3 ) , METHOD_3 ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { validator = new TYPE_1 ( ) ; validator = org.mockito.Mockito . METHOD_2 ( validator ) ; org.mockito.Mockito . METHOD_3 ( validator . METHOD_4 ( org.mockito.Mockito . any ( VAR_1 . VDS class ) ) ) . METHOD_5 ( VAR_2 ) ; org.mockito.Mockito . METHOD_3 ( validator . METHOD_6 ( ) ) . METHOD_5 ( VAR_3 ) ; TYPE_2 . METHOD_7 ( VAR_4 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.ArrayList < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( INT_1 , null ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . size ( ) ) == 2 ) ) ; for ( java.lang.String VAR_2 : TYPE_3 . METHOD_4 ( STRING_1 ) ) { TYPE_2 . METHOD_3 ( VAR_1 . METHOD_5 ( VAR_2 ) ) ; } } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( disk . getVm ( ) ) == null ) { return ; } boolean VAR_2 = TYPE_3 . equals ( ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel ) ( sender ) ) . getEntity ( ) ) ; org.ovirt.engine.core.compat . Version VAR_3 = disk . getVm ( ) . METHOD_2 ( ) ; VAR_4 . METHOD_3 ( ( ( ( VAR_3 . METHOD_4 ( VAR_5 ) ) >= 0 ) && ( ! VAR_2 ) ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = new org.ovirt.engine.core.common.businessentities . Network ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 < java.lang.String > METHOD_4 ( VAR_3 ) ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) . getId ( ) ) ; VAR_1 . METHOD_8 ( true ) ; TYPE_1 . METHOD_9 ( ) . METHOD_10 ( VAR_1 ) ; } 
public static java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( TYPE_1 VAR_1 ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_3 . METHOD_6 ( TYPE_4 : : METHOD_7 , ( e ) - > java.lang.String.valueOf ( e . getValue ( ) ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_2 ) ) { METHOD_4 ( ) ; } else { super . METHOD_1 ( command ) ; } } 
private void METHOD_1 ( ) { if ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) ) ; TYPE_1 . METHOD_8 ( ) ; } TYPE_1 . METHOD_9 ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . assertEquals ( VAR_1 . METHOD_2 ( STRING_1 , STRING_2 , false ) , STRING_3 ) ; TYPE_1 . assertEquals ( VAR_1 . METHOD_2 ( STRING_4 , STRING_5 , false ) , STRING_6 ) ; TYPE_1 . assertEquals ( VAR_1 . METHOD_2 ( STRING_2 , STRING_2 , false ) , STRING_7 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( 1 , VAR_4 ) ; METHOD_4 ( 1 ) ; VAR_6 . METHOD_5 ( ) ; VAR_7 . METHOD_6 ( VAR_1 ) ; try { METHOD_7 ( ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_4 VAR_8 ) { METHOD_9 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_10 ( ) ; } } 
public void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , boolean VAR_1 ) { if ( METHOD_2 ( column ) ) { VAR_2 . put ( column , VAR_1 ) ; java.lang.String VAR_3 = METHOD_3 ( column ) ; java.lang.String VAR_4 = ( VAR_3 != null ) ? VAR_3 : VAR_5 . get ( column ) ; METHOD_4 ( column , VAR_1 ) ; METHOD_5 ( column , null , VAR_1 , VAR_4 , false ) ; } } 
protected TYPE_1 map ( TYPE_2 entity , TYPE_3 template ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_4 > VAR_1 = VAR_2 . METHOD_1 ( ) ; return VAR_2 . map ( entity , ( VAR_1 . METHOD_2 ( entity . METHOD_3 ( ) ) ? VAR_1 . get ( entity . METHOD_3 ( ) ) : null ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; final java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > ) ( result ) ) ; TYPE_2 VAR_3 = METHOD_1 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_3 . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( command == ( METHOD_6 ( ) ) ) { METHOD_7 ( ) ; } else if ( command . getName ( ) . equals ( STRING_2 ) ) { METHOD_8 ( ) ; } } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( TYPE_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( STRING_1 ) ; VAR_1 . METHOD_5 ( STRING_1 ) ; VAR_1 . METHOD_6 ( STRING_1 ) ; VAR_1 . METHOD_7 ( new TYPE_3 ( ) ) ; VAR_1 . METHOD_8 ( TYPE_2 . getParameters ( ) . getVm ( ) . METHOD_9 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . METHOD_4 ( VAR_1 [ 0 ] ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 , final TYPE_4 VAR_4 , TYPE_5 constants ) { VAR_4 . METHOD_2 ( new TYPE_6 ( VAR_1 , constants ) , VAR_5 , VAR_6 , VAR_4 . METHOD_3 ( ) ) ; VAR_4 . METHOD_2 ( new TYPE_7 ( VAR_2 , constants ) , VAR_7 , VAR_6 , VAR_4 . METHOD_3 ( ) ) ; VAR_4 . METHOD_2 ( new TYPE_8 ( VAR_3 , constants ) , VAR_8 , VAR_6 , VAR_4 . METHOD_3 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid id , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { int VAR_3 = VAR_4 < java.lang.Integer > METHOD_2 ( VAR_5 ) ; TYPE_2 VAR_6 = METHOD_3 ( ) . addValue ( STRING_1 , id ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) . addValue ( STRING_4 , VAR_3 ) ; return METHOD_4 ( ) . METHOD_5 ( STRING_5 , VAR_7 . instance , VAR_6 ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { if ( ! ( TYPE_3 . METHOD_2 ( version ) ) ) { return TYPE_4 . METHOD_3 ( ) ; } TYPE_5 < TYPE_2 , java.util.Map < java.lang.String , java.lang.String > > map = VAR_1 . get ( version ) ; if ( map . isEmpty ( ) ) { return TYPE_4 . METHOD_3 ( ) ; } else { return TYPE_4 . METHOD_4 ( map . METHOD_5 ( ) ) ; } } 
public boolean METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( METHOD_3 ( ) . getSelectedItem ( ) ) == ( VAR_3 ) ; boolean VAR_4 = ( METHOD_4 ( ) . getSelectedItem ( ) ) == ( VAR_5 ) ; boolean VAR_6 = ( VAR_7 . METHOD_5 ( METHOD_6 ( ) ) ) <= 0 ; return ( ( VAR_1 && VAR_2 ) && VAR_4 ) && VAR_6 ; } 
public void METHOD_1 ( ) { TYPE_1 . AddVmCommand < TYPE_2 > cmd = METHOD_2 ( METHOD_3 ( 1 , 1 ) ) ; cmd . getParameters ( ) . getVm ( ) . METHOD_4 ( STRING_1 ) ; TYPE_3 . METHOD_5 ( STRING_2 , cmd . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVdsGroup ( ) ) != null ) { METHOD_2 ( ( ( TYPE_1 . getVdsGroup ( ) . METHOD_3 ( ) ) != null ? TYPE_1 . getVdsGroup ( ) . METHOD_3 ( ) . getValue ( ) : VAR_1 ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , METHOD_5 ( ) , null ) ; VAR_4 . METHOD_6 ( ) ; METHOD_7 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , false ) ; org.mockito.Mockito.when ( cluster . METHOD_3 ( ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( cluster . METHOD_4 ( ) ) . thenReturn ( false ) ; validator = new TYPE_1 ( VAR_3 , VAR_4 , cluster , VAR_5 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; iface . METHOD_3 ( null ) ; METHOD_4 ( iface , false , iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , iface . METHOD_7 ( ) , iface . METHOD_8 ( ) , METHOD_9 ( ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 , boolean VAR_3 , java.lang.String VAR_4 ) { org.mockito.Mockito.when ( VAR_5 . METHOD_2 ( VAR_1 ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( VAR_1 ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_4 ( VAR_4 ) ) . thenReturn ( VAR_7 ) ; org.mockito.Mockito.when ( VAR_7 . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ) . thenReturn ( VAR_8 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; resource . METHOD_2 ( ) . VAR_1 = VAR_1 ; resource . METHOD_2 ( ) . VAR_2 = VAR_2 ; resource . METHOD_2 ( ) . VAR_3 = VAR_4 ; resource . METHOD_2 ( ) . VAR_5 = VAR_5 ; resource . METHOD_2 ( ) . VAR_6 = VAR_6 ; TYPE_1 . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( TYPE_2 . METHOD_3 ( new TYPE_1 . VdcActionParametersBase [ ] { new TYPE_3 ( getEntity ( ) . getId ( ) ) } ) ) , new TYPE_4 ( ) { public void METHOD_4 ( TYPE_5 result ) { } } , null ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) ; VAR_2 = VAR_1 . METHOD_2 ( this , STRING_1 , new TYPE_3 [ 0 ] , new java.lang.Object [ 0 ] , VAR_3 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_5 = ( VAR_6 ) - 1 ; VAR_7 = VAR_1 . METHOD_2 ( this , STRING_2 , new TYPE_3 [ 0 ] , new java.lang.Object [ 0 ] , VAR_8 , VAR_8 , VAR_9 ) ; } 
public void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 , final org.ovirt.engine.core.compat.Guid VAR_2 ) { METHOD_2 ( new org.ovirt.engine.ui.uicommonweb.UICommand ( null , this ) . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) . METHOD_4 ( true ) . METHOD_5 ( true ) ) ; METHOD_6 ( VAR_1 . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( ) ) ; super . setItems ( new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_10 ( VAR_2 ) ; } } , VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , ( ( iface . METHOD_7 ( ) ) + 1 ) , METHOD_8 ( ) ) ; } 
private java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { if ( ( VAR_2 ) != null ) { VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ; } else { VAR_1 = new java.util.HashMap < > ( ) ; } } return VAR_1 ; } 
private TYPE_1 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > > METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > VAR_2 = new org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > ( ) ; VAR_2 . setEntity ( VAR_1 . METHOD_2 ( ) ) ; return new TYPE_1 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > > ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . StorageDomain storageDomain = new TYPE_1 . StorageDomain ( ) ; storageDomain . setId ( VAR_1 ) ; storageDomain . METHOD_2 ( new TYPE_2 ( ) ) ; storageDomain . METHOD_3 ( ) . setId ( VAR_2 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , storageDomain ) ; assertEquals ( VAR_3 , storageDomain . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 . VM model ) { if ( ! ( model . METHOD_2 ( ) ) ) { model . METHOD_3 ( new TYPE_2 ( ) ) ; } model . METHOD_4 ( ) . METHOD_5 ( ( ! ( TYPE_3 . getInstance ( ) . METHOD_6 ( new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) . isEmpty ( ) ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 = TYPE_1 . METHOD_1 ( ( ( TYPE_2 < TYPE_3 > ) ( returnValue ) ) ) ; VAR_2 = ( ( TYPE_2 < TYPE_3 > ) ( returnValue ) ) ; TYPE_1 . METHOD_2 ( VAR_3 , vmId ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.core.common.businessentities.network.Network network ) { if ( iface . METHOD_2 ( ) ) { return ( iface . METHOD_3 ( ) ) != null ; } else { return ( network != null ) && ( ( network . METHOD_4 ( ) ) != null ) ; } } 
public boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( ( VAR_2 ) == ( VAR_1 . getStatus ( ) ) ) || ( ( ( VAR_3 ) == ( VAR_1 . getStatus ( ) ) ) && ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_4 ) ) ) ) || ( ( VAR_5 ) == ( VAR_1 . getStatus ( ) ) ) ) { return true ; } return false ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_3 . any ( VAR_4 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_9 ( ) , VAR_5 ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { if ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) && ( VAR_1 != null ) ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { VAR_2 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 ) { VAR_2 . put ( vm . getId ( ) , TYPE_2 . name ( ) ) ; } } } 
public void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { if ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( vm . getId ( ) ) ) { VAR_1 . add ( vm ) ; } else { org.ovirt.engine.core.common.businessentities.VM VAR_2 = null ; for ( org.ovirt.engine.core.common.businessentities.VM VAR_3 : VAR_1 ) { if ( VAR_3 . getId ( ) . equals ( vm . getId ( ) ) ) { VAR_2 = VAR_3 ; break ; } } VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . add ( vm ) ; } super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_4 ( VAR_4 , VAR_2 , this , true ) ; TYPE_3 VAR_5 = VAR_3 . METHOD_4 ( METHOD_5 ( ) ) . METHOD_4 ( METHOD_6 ( ) ) . METHOD_4 ( METHOD_7 ( ) ) ; VAR_3 . METHOD_8 ( VAR_1 ) ; VAR_3 . METHOD_9 ( ) ; } 
protected void METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.VM vm ) { vm . METHOD_2 ( model . METHOD_3 ( ) . getSelectedItem ( ) . getId ( ) ) ; vm . METHOD_4 ( model . METHOD_5 ( ) . METHOD_6 ( ) ) ; vm . METHOD_7 ( model . METHOD_8 ( ) . getSelectedItem ( ) . getId ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; java.lang.String VAR_3 = ( VAR_1 == null ) ? STRING_1 : TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . get ( VAR_1 ) . getName ( ) ; VAR_2 . METHOD_4 ( STRING_2 , VAR_3 ) ; VAR_4 . log ( VAR_2 , VAR_5 ) ; } 
public void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new java.lang.String [ ] { VAR_2 } ) ) ; VAR_3 = new TYPE_2 ( null ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_1 ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . METHOD_6 ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( ( ( ( ( ( getEntity ( ) ) != null ) && ( ( ( getEntity ( ) . getStatus ( ) ) == ( VAR_1 ) ) || ( ( getEntity ( ) . getStatus ( ) ) == ( VAR_2 ) ) ) ) && ( TYPE_1 . METHOD_4 ( getEntity ( ) . METHOD_5 ( ) ) ) ) && ( METHOD_6 ( ) . METHOD_7 ( ) ) ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_4 ( ) . setId ( VAR_2 . toString ( ) ) ; VAR_1 . METHOD_5 ( TYPE_3 . toString ( ) ) ; VAR_1 . METHOD_6 ( new TYPE_4 ( ) ) ; VAR_1 . METHOD_7 ( ) . METHOD_8 ( ) . add ( METHOD_9 ( STRING_2 ) ) ; return VAR_1 ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { final java.util.List < TYPE_2 > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_1 . METHOD_5 ( VAR_2 . get ( 0 ) . METHOD_6 ( ) ) ; } else { VAR_1 . METHOD_5 ( TYPE_3 . METHOD_7 ( VAR_1 . METHOD_4 ( ) ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . getId ( ) , VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_4 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.VM VAR_2 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
private void METHOD_1 ( TYPE_1 . VdcBllMessages VAR_1 , java.lang.String VAR_2 ) { java.util.List < java.lang.String > VAR_3 = VAR_4 . get ( VAR_1 ) ; if ( VAR_3 == null ) { VAR_3 = new TYPE_2 < java.lang.String > ( ) ; VAR_4 . put ( VAR_1 , VAR_3 ) ; } VAR_3 . add ( VAR_2 ) ; } 
private void METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; if ( ! ( VAR_1 . validate ( ) ) ) { return ; } if ( ( ! ( VAR_1 . METHOD_2 ( ) ) ) || ( ( VAR_1 . METHOD_3 ( ) . getSelectedItem ( ) ) == ( VAR_2 ) ) ) { METHOD_4 ( VAR_1 ) ; } else { METHOD_5 ( VAR_1 , false ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , boolean VAR_1 , java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 ) { TYPE_1 VAR_3 = TYPE_2 . METHOD_2 ( VAR_2 , iface ) ; TYPE_3 . METHOD_3 ( STRING_1 , VAR_3 ) ; TYPE_3 . assertEquals ( ( ( STRING_2 + ( VAR_1 ? STRING_3 : STRING_4 ) ) + STRING_5 ) , VAR_1 , VAR_3 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_2 ) ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_3 ) ; org.ovirt.engine.core.compat.Guid VAR_4 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( STRING_4 ) ; TYPE_1 VAR_5 = METHOD_3 ( VAR_3 , VAR_1 ) ; TYPE_1 VAR_6 = METHOD_3 ( VAR_4 , VAR_2 ) ; METHOD_4 ( VAR_5 , VAR_6 ) ; VAR_5 = METHOD_3 ( VAR_3 , VAR_1 ) ; VAR_6 = METHOD_3 ( VAR_3 , VAR_2 ) ; METHOD_4 ( VAR_5 , VAR_6 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < > ( ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . getStoragePoolId ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( VAR_3 , VAR_4 , false ) ) . thenReturn ( VAR_2 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.String value ) { TYPE_1 . ValidationResult VAR_1 = TYPE_2 . METHOD_1 ( value ) ; if ( ! ( VAR_1 . METHOD_2 ( ) ) ) { return VAR_1 ; } TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; if ( value != null ) { result . METHOD_3 ( METHOD_4 ( value ) ) ; result . METHOD_5 ( VAR_2 ) ; } return result ; } 
protected java.lang.Object [ ] METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return new java.lang.Object [ 0 ] ; } else { java.util.ArrayList < java.lang.Object > VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StoragePool a : VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.StoragePool > METHOD_3 ( METHOD_2 ( ) ) ) { VAR_1 . add ( a . getId ( ) ) ; } return VAR_1 . METHOD_4 ( new java.lang.Object [ ] { } ) ; } } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 ) { boolean returnValue = true ; log . METHOD_2 ( STRING_1 ) ; if ( VAR_1 == null ) { returnValue = METHOD_3 ( VAR_2 , VAR_3 ) ; } else { returnValue = METHOD_4 ( VAR_1 , VAR_3 ) ; } log . METHOD_2 ( STRING_2 , returnValue ) ; return returnValue ; } 
protected void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( ( TYPE_1 . getParameters ( ) . METHOD_1 ( ) ) == null ) && ( ! ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . equals ( VAR_1 ) ) ) ) { TYPE_1 . getParameters ( ) . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) ; } return TYPE_1 . getParameters ( ) . METHOD_1 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( false ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { TYPE_1 . getVm ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 . getVm ( ) . METHOD_4 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getVm ( ) . METHOD_7 ( ) ) ; } else { VAR_2 . METHOD_8 ( STRING_1 ) ; } TYPE_1 . METHOD_9 ( true ) ; } 
protected TYPE_1 . DiskImage METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 ) { if ( METHOD_2 ( METHOD_3 ( VAR_2 ) ) ) { return ( ( TYPE_1 . DiskImage ) ( METHOD_4 ( VAR_5 , new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ) . getReturnValue ( ) ) ) ; } else { return TYPE_3 . METHOD_5 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.core.common.businessentities.VDS host , java.lang.String VAR_1 ) { final TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; if ( ( ( TYPE_3 . METHOD_3 ( host . METHOD_4 ( ) ) ) || ( VAR_2 . METHOD_5 ( iface . METHOD_6 ( ) , host . METHOD_7 ( ) ) ) ) || ( iface . getName ( ) . equals ( host . METHOD_8 ( ) ) ) ) { iface . METHOD_9 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 . METHOD_3 ( ) ) . getStoragePoolId ( ) ; TYPE_1 . METHOD_4 ( VAR_1 . getValue ( ) ) ; java.util.List < TYPE_2 > result = dao . METHOD_5 ( VAR_1 . getValue ( ) ) ; TYPE_1 . METHOD_4 ( result ) ; TYPE_1 . METHOD_6 ( result . isEmpty ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.ArrayList < java.lang.String > ) ( returnValue ) ) ; METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 ) ) ; METHOD_5 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_3 ) ) ; METHOD_6 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_4 ) ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = METHOD_2 ( ) ; return ( ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS host ) { TYPE_2 validator = new TYPE_2 ( host , TYPE_3 . getParameters ( ) , METHOD_2 ( ) , METHOD_3 ( ) , METHOD_4 ( ) , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; return validator . validate ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; command . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( command ) ; org.mockito.Mockito . METHOD_7 ( VAR_3 , org.mockito.Mockito . METHOD_8 ( 1 ) ) . METHOD_9 ( TYPE_2 . any ( VAR_4 . VM class ) ) ; } 
private void METHOD_1 ( final TYPE_1 model , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_3 . METHOD_2 ( model . METHOD_3 ( ) . getSelectedItem ( ) ) ; VAR_1 . METHOD_4 ( true ) ; if ( VAR_2 != null ) { TYPE_4 VAR_3 = new TYPE_4 ( ) ; VAR_3 . METHOD_5 ( TYPE_5 . METHOD_2 ( model . METHOD_6 ( ) . getSelectedItem ( ) ) ) ; VAR_3 . METHOD_7 ( VAR_2 ) ; VAR_1 . METHOD_8 ( VAR_3 ) ; } } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) , VAR_3 ) ; for ( TYPE_1 disk : VAR_1 ) { if ( TYPE_3 . METHOD_4 ( disk . METHOD_5 ( ) ) ) { TYPE_3 VAR_4 = new TYPE_3 ( disk ) ; TYPE_2 . getVm ( ) . METHOD_6 ( VAR_4 ) ; break ; } } } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { return VAR_2 ; } else if ( ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) || ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_3 ) ) ) { return VAR_3 ; } else { return VAR_4 ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return java.lang.Integer . valueOf ( 0 ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private TYPE_1 METHOD_1 ( TYPE_1 api ) { java.lang.String VAR_1 = METHOD_2 ( VAR_2 . String class , VAR_3 ) ; api . METHOD_3 ( new TYPE_2 ( ) ) ; api . METHOD_4 ( ) . METHOD_5 ( STRING_1 ) ; api . METHOD_4 ( ) . METHOD_6 ( STRING_2 ) ; api . METHOD_4 ( ) . METHOD_7 ( VAR_1 ) ; api . METHOD_4 ( ) . METHOD_8 ( TYPE_3 . METHOD_9 ( METHOD_2 ( VAR_2 . String class , VAR_4 ) ) ) ; return api ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . METHOD_4 ( STRING_2 , VAR_1 . METHOD_5 ( STRING_3 ) ) ; TYPE_2 . METHOD_4 ( ( ( VAR_2 . METHOD_3 ( STRING_4 ) . length ) == 0 ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { for ( TYPE_1 < java.lang.String , java.lang.Integer > VAR_2 : VAR_3 . METHOD_2 ( ) ) { if ( TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) . equals ( VAR_1 ) ) { return VAR_2 . getValue ( ) . toString ( ) ; } } VAR_4 . error ( STRING_1 , VAR_1 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_5 ( VAR_1 ) ; TYPE_2 . METHOD_6 ( command ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . getId ( ) ) ; VAR_2 . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( false ) ; VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( TYPE_3 . getParameters ( ) ) ; return VAR_2 ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( true ) ; VAR_1 . METHOD_5 ( VAR_3 ) ; VAR_1 . METHOD_6 ( STRING_1 ) ; VAR_1 . METHOD_7 ( VAR_4 ) ; return VAR_1 ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) return true ; if ( ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) ) ) return false ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( TYPE_2 . equals ( id , VAR_2 . id ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic , java.util.List < TYPE_2 > VAR_2 ) { if ( nic == null ) { nic = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } TYPE_2 VAR_3 = METHOD_4 ( nic , VAR_2 ) ; VAR_1 . METHOD_5 ( METHOD_6 ( VAR_3 ) ) ; VAR_1 . METHOD_7 ( METHOD_8 ( nic . getName ( ) , VAR_3 , VAR_2 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( ) ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( ) ) . setId ( TYPE_2 . any ( VAR_4 . Guid class ) ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; VAR_2 . put ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , ( TYPE_2 . isEmpty ( VAR_1 . METHOD_3 ( ) ) ? STRING_1 : VAR_1 . METHOD_3 ( ) ) ) ; VAR_2 . put ( VAR_5 , VAR_1 . METHOD_4 ( ) . toString ( ) ) ; VAR_2 . put ( VAR_6 , STRING_2 ) ; return VAR_2 ; } 
private void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_2 ( TYPE_3 . getVm ( ) . getId ( ) ) , TYPE_4 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ) ; TYPE_3 . METHOD_6 ( null ) ; TYPE_3 . METHOD_7 ( true ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { context . host = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_1 = new TYPE_1 ( ) { public void METHOD_2 ( ) { METHOD_3 ( ) ; } } ; VAR_1 . METHOD_4 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . getId ( ) , VAR_3 , VAR_4 , VAR_5 ) ; if ( VAR_2 ) { VAR_1 . METHOD_4 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { if ( TYPE_1 . equals ( VAR_1 , VAR_2 ) ) { return false ; } if ( ( VAR_1 == null ) || ( VAR_2 == null ) ) { return false ; } return ( VAR_2 . METHOD_2 ( VAR_3 ) ) && ( VAR_1 . METHOD_3 ( VAR_3 ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < TYPE_2 > VAR_1 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; java.util.List < TYPE_2 > VAR_2 = TYPE_3 . getInstance ( ) . METHOD_1 ( VAR_1 , VAR_3 . METHOD_2 ( ) ) ; model . METHOD_3 ( model , VAR_4 , VAR_2 , VAR_3 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_2 ( VAR_1 [ 2 ] ) ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_1 [ 2 ] ) ) . when ( VAR_3 ) . METHOD_5 ( VAR_1 [ 2 ] ) ; VAR_4 . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_5 , org.mockito.Mockito . METHOD_8 ( 1 ) ) . METHOD_9 ( TYPE_2 . any ( VAR_6 class ) ) ; } 
protected boolean METHOD_1 ( ) { java.util.Map < TYPE_1 . DiskImage , org.ovirt.engine.core.compat.Guid > map = new java.util.HashMap < > ( ) ; for ( TYPE_2 parameters : getParameters ( ) . METHOD_2 ( ) ) { TYPE_1 . DiskImage diskImage = METHOD_3 ( parameters . METHOD_4 ( ) ) ; map . put ( diskImage , diskImage . METHOD_5 ( ) . get ( 0 ) ) ; } return validate ( TYPE_3 . METHOD_1 ( map , TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) , TYPE_4 . METHOD_8 ( ) ) ) ; } 
protected static int METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; int VAR_4 = 0 ; if ( VAR_3 != null ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_3 ) { if ( ( vm . METHOD_4 ( ) ) && ( TYPE_1 . METHOD_5 ( vm . getId ( ) , VAR_2 ) ) ) ++ VAR_4 ; } } return VAR_4 ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) ) ; METHOD_2 ( VAR_5 , VAR_6 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_7 [ 0 ] } , METHOD_4 ( ) , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 , TYPE_2 status ) { METHOD_2 ( VAR_1 , VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_3 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( METHOD_3 ( VAR_5 , STRING_1 , VAR_6 , status ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , METHOD_3 ( ) , VAR_2 ) ; VAR_5 . METHOD_4 ( ) ; } 
public static TYPE_1 . DiskImage METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 VAR_1 , TYPE_3 VAR_2 , java.lang.String VAR_3 ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( VAR_2 . METHOD_3 ( vm ) ) ; image . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ; image . METHOD_6 ( VAR_4 ) ; image . METHOD_7 ( VAR_5 ) ; image . METHOD_8 ( VAR_3 ) ; return image ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( null , VAR_2 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . assertEquals ( true , ( ( VAR_1 . size ( ) ) == 1 ) ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; TYPE_2 . assertEquals ( true , ( ( VAR_3 . METHOD_4 ( ) ) > 0 ) ) ; TYPE_2 . assertEquals ( new java.lang.Integer ( INT_1 ) , VAR_3 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . setId ( VAR_2 ) ; dao . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = dao . METHOD_4 ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_5 ( VAR_1 . equals ( VAR_3 ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( final TYPE_1 VAR_1 , final org.ovirt.engine.core.compat.Guid VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_3 = VAR_1 . METHOD_2 ( VAR_2 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = TYPE_2 . METHOD_3 ( VAR_3 , new TYPE_3 < org.ovirt.engine.core.common.businessentities.VM > ( ) { public boolean METHOD_4 ( org.ovirt.engine.core.common.businessentities.VM VAR_4 ) { return ( ( VAR_4 . METHOD_5 ( ) ) == ( VAR_5 ) ) && ( ( VAR_4 . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ) == false ) ; } } ) ; return vms ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( false ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_8 ( TYPE_1 . METHOD_9 ( ) ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) ) ; TYPE_1 . ValidationResult result ; result = VAR_1 . METHOD_3 ( ) ; if ( ! ( result . METHOD_4 ( ) ) ) { return result ; } result = METHOD_5 ( ) ; if ( ! ( result . METHOD_4 ( ) ) ) { return result ; } result = VAR_1 . METHOD_6 ( VAR_2 ) ; if ( ! ( result . METHOD_4 ( ) ) ) { return result ; } return VAR_3 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; java.util.List < java.lang.String > VAR_1 = VAR_2 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ( ( VAR_3 ) + STRING_1 ) ) ) ; TYPE_2 . METHOD_6 ( VAR_1 . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , true ) ; org.mockito.Mockito.when ( cluster . METHOD_3 ( ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( cluster . METHOD_4 ( ) ) . thenReturn ( true ) ; validator = new TYPE_1 ( VAR_3 , VAR_4 , cluster , VAR_5 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_1 ( ) , TYPE_3 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( TYPE_1 . getSucceeded ( ) ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; } else if ( ! ( VAR_2 . isEmpty ( ) ) ) { TYPE_2 . log ( this , METHOD_7 ( VAR_2 ) ) ; } } METHOD_8 ( TYPE_1 . getVm ( ) . getId ( ) ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = METHOD_2 ( ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
protected void METHOD_1 ( ) { if ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) { METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; METHOD_5 ( ) . setIsChangable ( false ) ; METHOD_6 ( ) . setIsChangable ( false ) ; METHOD_7 ( ) . setIsChangable ( false ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . assertEquals ( VAR_2 , VAR_1 . METHOD_2 ( ) . toString ( ) ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_1 . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( VAR_4 , VAR_1 . METHOD_4 ( ) ) ; TYPE_2 . assertEquals ( VAR_5 , VAR_1 . METHOD_5 ( ) ) ; TYPE_2 . assertEquals ( VAR_6 , VAR_1 . getStatus ( ) ) ; TYPE_2 . assertEquals ( VAR_7 , VAR_1 . METHOD_6 ( ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( VAR_1 ) ; storageDomain . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( storageDomain ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( VAR_1 , VAR_2 ) ) . thenReturn ( storageDomain ) ; } 
public void METHOD_1 ( TYPE_1 < java.lang.Boolean > event ) { METHOD_2 ( ) . METHOD_3 ( event . getValue ( ) ) ; METHOD_2 ( ) . METHOD_4 ( ( ! ( event . getValue ( ) ) ) ) ; METHOD_2 ( ) . METHOD_5 ( ( ( VAR_1 ) && ( ! ( event . getValue ( ) ) ) ) ) ; } 
public void METHOD_1 ( final TYPE_1 object ) { VAR_1 . METHOD_1 ( object ) ; object . METHOD_2 ( ) . METHOD_3 ( true ) ; object . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( ) { public void METHOD_6 ( TYPE_3 VAR_2 , java.lang.Object sender , TYPE_4 args ) { METHOD_7 ( object ) ; } } ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { VAR_2 . converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter < TYPE_1 < java.lang.String > > ( ) { public TYPE_1 < java.lang.String > Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_3 ) { TYPE_1 < java.lang.String > VAR_4 = new TYPE_2 < java.lang.String > ( new TYPE_3 ( ) ) ; VAR_4 . METHOD_2 ( ( ( TYPE_4 < java.lang.String > ) ( returnValue ) ) ) ; return VAR_4 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_5 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , VAR_2 ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( ) ; if ( source != null ) { for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( source ) ) ) { if ( ( template . METHOD_1 ( ) ) == ( VAR_1 ) ) { list . add ( template ) ; } } TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; } return list ; } 
TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( METHOD_2 ( ) . getEntity ( ) , METHOD_3 ( ) . getEntity ( ) , METHOD_4 ( ) . getEntity ( ) , METHOD_5 ( ) . getEntity ( ) , VAR_1 , ( ( METHOD_6 ( ) ) != null ? METHOD_6 ( ) . getSelectedItem ( ) . getId ( ) : null ) ) ; } 
protected void METHOD_1 ( ) { java.lang.String VAR_1 = null ; try { VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ) ; } catch ( java.lang.Exception VAR_3 ) { log . error ( STRING_1 , VAR_3 . METHOD_5 ( ) ) ; log . METHOD_6 ( STRING_2 , VAR_3 ) ; } TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ( VAR_1 != null ) ) ; TYPE_2 . METHOD_7 ( ) . METHOD_9 ( true ) ; } 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , VAR_2 , TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_1 . METHOD_6 ( ) ) ; if ( VAR_1 != null ) { TYPE_1 . getVm ( ) . METHOD_7 ( ) . put ( VAR_3 . getId ( ) , VAR_1 ) ; } } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 response ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 , VAR_4 ) ; TYPE_4 returnValue = VAR_2 . METHOD_3 ( VAR_5 , new TYPE_5 ( VAR_1 ) ) ; if ( returnValue . getSucceeded ( ) ) { response . METHOD_4 ( VAR_6 ) ; VAR_7 . METHOD_5 ( STRING_1 , VAR_1 ) ; } else { response . METHOD_4 ( VAR_8 ) ; VAR_7 . METHOD_5 ( STRING_2 , VAR_1 ) ; } } 
public boolean METHOD_1 ( TYPE_1 storageDomain ) { TYPE_2 VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( storageDomain . METHOD_3 ( ) ) ; if ( VAR_1 != null ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } return true ; } 
public void METHOD_1 ( ) { TYPE_1 . AddVmCommand < TYPE_2 > cmd = METHOD_2 ( 0 , 0 ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( cmd ) . getVdsGroup ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_3 . any ( VAR_2 . Integer class ) , TYPE_3 . any ( VAR_3 . Version class ) ) ) . thenReturn ( new java.util.ArrayList < > ( TYPE_4 . METHOD_5 ( STRING_1 ) ) ) ; TYPE_5 . METHOD_6 ( STRING_2 , cmd . METHOD_7 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( returnValue ) ) ; model . METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; model . METHOD_3 ( ) ; } 
public void METHOD_1 ( TYPE_1 context , org.ovirt.engine.core.common.businessentities.VmTemplate template , TYPE_2 VAR_1 ) { VAR_1 . append ( VAR_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 , STRING_1 , context ) , template . METHOD_4 ( ) ) ) ; java.lang.String VAR_4 = template . METHOD_5 ( ) ; if ( ( VAR_4 != null ) && ( ! ( VAR_4 . isEmpty ( ) ) ) ) { VAR_1 . append ( VAR_2 . METHOD_6 ( VAR_4 ) ) ; } } 
public void METHOD_1 ( final TYPE_1 client ) { client . METHOD_2 ( new TYPE_2 ( INT_1 , 0 , INT_2 ) ) ; client . METHOD_3 ( new TYPE_3 ( ) { public void METHOD_4 ( byte [ ] VAR_1 ) { TYPE_4 VAR_2 = new TYPE_4 ( client , VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; } } ) ; } 
public static TYPE_1 < java.lang.Object [ ] > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new java.lang.Object [ ] [ ] { new java.lang.Object [ ] { org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , false } , new java.lang.Object [ ] { org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , true } } ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = VAR_1 . METHOD_2 ( VAR_2 , STRING_1 ) ; TYPE_2 . METHOD_3 ( result . get ( STRING_2 ) ) ; TYPE_2 . assertEquals ( result . get ( STRING_3 ) . METHOD_4 ( ) , STRING_4 ) ; TYPE_2 . assertEquals ( result . get ( STRING_5 ) . METHOD_4 ( ) , STRING_6 ) ; TYPE_2 . assertEquals ( result . get ( STRING_7 ) . METHOD_4 ( ) , STRING_1 ) ; } 
public final void METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = METHOD_2 ( ) ) { METHOD_3 ( ) ; if ( ! ( VAR_3 . METHOD_4 ( VAR_1 . getId ( ) ) ) ) { throw new TYPE_3 ( VAR_4 ) ; } METHOD_5 ( VAR_1 . getId ( ) ) ; METHOD_6 ( VAR_1 ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.Boolean VAR_2 ) { return METHOD_2 ( new TYPE_2 < java.lang.String > ( ) { public java.lang.String METHOD_3 ( ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 . getId ( ) . toString ( ) ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; return VAR_4 . METHOD_1 ( VAR_3 ) ; } } ) ; } 
private void METHOD_1 ( ) { final TYPE_1 VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; for ( TYPE_2 VAR_2 : VAR_1 . METHOD_3 ( ) ) { METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; } final TYPE_3 VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VmTemplate VAR_4 : VAR_3 . METHOD_3 ( ) ) { METHOD_4 ( VAR_4 ) ; VAR_3 . METHOD_5 ( VAR_4 ) ; } } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { try { if ( VAR_1 != null ) { TYPE_2 VAR_3 = VAR_4 . METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; } } } catch ( java.lang.Exception e ) { log . error ( STRING_1 , VAR_1 , VAR_2 , e . METHOD_5 ( ) ) ; log . METHOD_6 ( STRING_2 , e ) ; } } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } VAR_1 = METHOD_2 ( ) ; if ( ( VAR_1 ) == null ) { addCanDoActionMessage ( java.lang.String . METHOD_3 ( STRING_1 , TYPE_1 . getVdsGroup ( ) . METHOD_4 ( ) ) ) ; addCanDoActionMessage ( VAR_2 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) , METHOD_3 ( ) ) ; command = new TYPE_2 < TYPE_1 > ( VAR_1 ) { public TYPE_3 METHOD_4 ( ) { return VAR_2 ; } protected TYPE_4 METHOD_5 ( ) { return VAR_3 ; } protected TYPE_5 METHOD_6 ( ) { return VAR_4 ; } } ; } 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; int VAR_2 = ( VAR_3 < java.lang.Integer > getValue ( VAR_4 ) ) * INT_1 ; while ( VAR_1 . METHOD_5 ( true ) ) { if ( ( VAR_1 . METHOD_6 ( ) . getStatus ( ) ) == ( VAR_5 ) ) { return true ; } TYPE_3 . METHOD_7 ( VAR_2 ) ; } return false ; } 
public void METHOD_1 ( ) { TYPE_1 . VM entity = new TYPE_1 . VM ( ) ; entity . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = TYPE_2 . METHOD_3 ( ) ; entity . METHOD_4 ( VAR_2 ) ; TYPE_1 . VM model = TYPE_3 . map ( entity , null ) ; assertEquals ( VAR_2 . toString ( ) , model . METHOD_5 ( ) . getId ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( nic ) ; nic . METHOD_4 ( STRING_2 ) ; TYPE_1 VAR_1 = METHOD_5 ( METHOD_6 ( nic ) ) ; METHOD_7 ( VAR_1 , VAR_2 , nic . METHOD_8 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_4 VAR_4 = TYPE_5 . map ( VAR_3 , null ) ; assertEquals ( VAR_4 . METHOD_3 ( ) , VAR_2 . value ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( hosts ) ; VAR_2 . setItems ( METHOD_2 ( VAR_1 ) ) ; VAR_3 . setItems ( METHOD_2 ( VAR_1 ) ) ; VAR_4 . setItems ( METHOD_2 ( VAR_1 ) ) ; this . hosts . setItems ( VAR_1 ) ; METHOD_3 ( ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_3 = null ; if ( ( VAR_2 != null ) && ( ! ( TYPE_3 . equals ( VAR_2 ) ) ) ) { TYPE_1 VAR_4 = TYPE_4 . METHOD_3 ( ) . get ( VAR_2 ) ; VAR_3 = TYPE_5 . METHOD_4 ( VAR_4 , VAR_1 . METHOD_5 ( ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { this . VAR_1 = VAR_1 ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 VAR_4 , java.lang.Object sender , TYPE_4 args ) { METHOD_5 ( ) ; } } ; METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( VAR_3 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { TYPE_3 VAR_4 = VAR_1 . METHOD_2 ( ) . get ( VAR_3 ) ; if ( ( ( VAR_3 != null ) && ( VAR_4 != null ) ) && ( ( VAR_4 . METHOD_3 ( ) ) != null ) ) { METHOD_4 ( VAR_4 ) ; } } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { super . METHOD_1 ( VAR_1 , sender , args ) ; if ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( sender == ( METHOD_3 ( ) ) ) ) { METHOD_4 ( ) . METHOD_5 ( this , VAR_3 ) ; } else if ( ( VAR_1 . METHOD_2 ( VAR_2 ) ) && ( sender == ( METHOD_6 ( ) ) ) ) { METHOD_7 ( args ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities . Network VAR_2 , org.ovirt.engine.core.common.businessentities . Network VAR_3 ) { METHOD_2 ( VAR_1 , VAR_4 , java.lang.String . METHOD_3 ( STRING_1 , VAR_2 . getName ( ) , ( ( VAR_2 . METHOD_4 ( ) ) == 0 ? STRING_2 : VAR_2 . METHOD_4 ( ) ) , VAR_3 . getName ( ) , VAR_3 . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( new TYPE_2 . StorageDomain ( ) ) ; VAR_1 . METHOD_3 ( ) . setId ( VAR_3 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , VAR_1 ) ; assertEquals ( VAR_4 , VAR_1 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( result ) ) ; TYPE_2 VAR_3 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_3 . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 parameters = METHOD_2 ( ) ; parameters . METHOD_3 ( METHOD_4 ( VAR_1 ) ) ; org.ovirt.engine.core.common.businessentities.DiskImage VAR_2 = METHOD_5 ( ) ; VAR_2 . METHOD_6 ( org.ovirt.engine.core.compat.Guid . METHOD_7 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_4 ) ) . thenReturn ( VAR_2 ) ; METHOD_8 ( parameters ) ; METHOD_9 ( ) ; TYPE_2 . METHOD_10 ( command . METHOD_11 ( ) ) ; command . METHOD_12 ( ) ; TYPE_2 . METHOD_10 ( ( ( VAR_2 . METHOD_13 ( ) ) == null ) ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > VAR_2 , boolean VAR_3 , boolean VAR_4 ) { VAR_5 . METHOD_2 ( ( ( STRING_1 + ( VAR_2 . size ( ) ) ) + STRING_2 ) ) ; for ( TYPE_2 . VdcActionParametersBase params : VAR_2 ) { params . METHOD_3 ( METHOD_4 ( ) . getId ( ) ) ; } java.util.ArrayList < TYPE_1 > VAR_6 = METHOD_5 ( ) . METHOD_6 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; return VAR_6 ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) { public TYPE_3 METHOD_2 ( org.ovirt.engine.core.compat.Guid VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return inject ( new TYPE_6 < TYPE_7 , TYPE_3 > ( VAR_5 , VAR_2 , VAR_4 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = STRING_1 ; java.util.List < java.lang.String > VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_3 . METHOD_3 ( STRING_2 , ( ( VAR_4 . size ( ) ) == 1 ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) ; return TYPE_1 . METHOD_1 ( list , VAR_1 , VAR_2 ) ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 . Network ) ) ; } } 
private java.util.Map METHOD_1 ( TYPE_1 . VM vm ) { java.util.Map VAR_1 = map ( ) ; VAR_1 . put ( STRING_1 , METHOD_2 ( ) ) ; VAR_1 . put ( STRING_2 , ( STRING_3 + ( METHOD_3 ( vm , STRING_2 , 2 ) ) ) ) ; VAR_1 . put ( STRING_4 , ( STRING_3 + ( METHOD_3 ( vm , STRING_4 , 2 ) ) ) ) ; VAR_1 . put ( STRING_5 , METHOD_3 ( vm , STRING_5 , INT_1 ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_3 ( null ) ; TYPE_1 parameters = METHOD_4 ( VAR_1 , VAR_3 ) ; java.lang.String VAR_4 = ( VAR_1 . getName ( ) ) + STRING_1 ; parameters . METHOD_5 ( ) . add ( METHOD_6 ( VAR_4 , INT_1 , STRING_2 ) ) ; METHOD_7 ( VAR_1 , VAR_3 ) ; TYPE_2 VAR_5 = METHOD_8 ( parameters ) ; METHOD_9 ( VAR_5 , VAR_6 , VAR_4 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( java.util.Map < java.lang.String , java.util.List < TYPE_1 > > VAR_1 ) { java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 < java.lang.String , java.util.List < TYPE_1 > > VAR_3 : VAR_1 . METHOD_2 ( ) ) { java.lang.String VAR_4 = VAR_3 . METHOD_3 ( ) ; java.util.List < TYPE_1 > VAR_5 = VAR_3 . getValue ( ) ; if ( ! ( METHOD_4 ( VAR_5 ) ) ) { VAR_2 . add ( VAR_4 ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . getStoragePoolId ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { final java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( returnValue ) ) ; final TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; model . setItems ( list ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_6 ( VAR_4 , java.lang.Boolean . FALSE ) ; VAR_3 . METHOD_6 ( VAR_5 , VAR_6 , java.lang.Boolean . TRUE ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( VAR_7 ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { if ( ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) || ( ( VAR_1 ) < ( ( VAR_2 < java.lang.Integer > METHOD_3 ( VAR_3 ) ) - 1 ) ) ) && ( METHOD_4 ( ) . METHOD_5 ( ) ) ) && ( METHOD_4 ( ) . METHOD_6 ( ) ) ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_7 ( ) ; } else { TYPE_1 . METHOD_8 ( ) . METHOD_9 ( false ) ; } } 
public TYPE_1 list ( ) { java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > > VAR_1 = getEntity ( VAR_2 . HashMap class , VAR_3 , new TYPE_2 ( METHOD_1 ( VAR_4 ) ) , null ) ; return METHOD_2 ( VAR_1 ) ; } 
public void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_3 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_2 . METHOD_5 ( ) ; } } ) ) ; } 
private java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; for ( org.ovirt.engine.core.common.businessentities.DiskImage VAR_3 : ( ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( getEntity ( VAR_4 . List class , VAR_5 , new TYPE_1 ( VAR_1 ) , STRING_1 ) ) ) ) { VAR_2 . put ( VAR_3 . getId ( ) , VAR_3 ) ; } return VAR_2 ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage ) { try { TYPE_1 . METHOD_2 ( diskImage . METHOD_3 ( ) , diskImage . getId ( ) ) ; TYPE_1 . METHOD_4 ( diskImage ) ; } catch ( TYPE_2 VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 ) ; throw new TYPE_3 ( VAR_3 , VAR_1 ) ; } } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; METHOD_7 ( true ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 , null ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_3 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_5 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_4 ( ) , VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_5 ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , true ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
static TYPE_1 . Disk getModel ( int VAR_1 ) { TYPE_1 . Disk model = new TYPE_1 . Disk ( ) ; model . METHOD_1 ( TYPE_2 . toString ( ) ) ; model . METHOD_2 ( TYPE_3 . toString ( ) ) ; model . METHOD_3 ( true ) ; model . METHOD_4 ( false ) ; model . METHOD_5 ( false ) ; model . METHOD_6 ( false ) ; model . METHOD_7 ( true ) ; return model ; } 
private void METHOD_1 ( ) { if ( ( getVm ( ) . METHOD_2 ( ) ) != null ) { for ( TYPE_1 VAR_1 : getVm ( ) . METHOD_2 ( ) ) { if ( METHOD_3 ( ) . METHOD_4 ( getVm ( ) . getId ( ) , VAR_1 . getId ( ) ) ) { METHOD_3 ( ) . METHOD_5 ( VAR_1 ) ; } else { METHOD_3 ( ) . METHOD_6 ( VAR_1 ) ; } } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; parameters . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_4 ) ; TYPE_2 . METHOD_5 ( command , VAR_5 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( false ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( VAR_3 class ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_8 ( TYPE_1 . METHOD_9 ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_5 [ 0 ] , VAR_6 } , METHOD_3 ( ) , VAR_2 ) ; VAR_7 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( command . validate ( ) ) ; TYPE_2 . METHOD_5 ( command . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_3 . toString ( ) ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 , org.mockito.Mockito . METHOD_9 ( ) ) . METHOD_10 ( TYPE_4 . METHOD_11 ( ) ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; TYPE_1 VAR_5 = METHOD_5 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_5 , true ) ; TYPE_2 . METHOD_8 ( command . METHOD_9 ( ) ) ; } 
protected boolean validate ( ) { METHOD_1 ( ) . METHOD_2 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; METHOD_3 ( ) . METHOD_2 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; METHOD_4 ( ) . METHOD_5 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; return ( ( METHOD_1 ( ) . METHOD_6 ( ) ) && ( METHOD_3 ( ) . METHOD_6 ( ) ) ) && ( METHOD_4 ( ) . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 < java.lang.Integer > ( new TYPE_3 < java.lang.Integer > ( ) , new TYPE_4 < java.lang.Integer > ( ) { public java.lang.Integer METHOD_2 ( TYPE_5 VAR_3 ) throws TYPE_6 { return VAR_1 . METHOD_3 ( ) . getValue ( ) ; } } ) ; } 
private void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( false ) ; VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getStoragePoolId ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_3 . getInstance ( ) . METHOD_7 ( VAR_5 , VAR_3 , METHOD_8 ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , TYPE_1 . METHOD_3 ( ) ) ; org.ovirt.engine.core.common.businessentities.VDS vds = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . get ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_2 ( STRING_2 , TYPE_1 . METHOD_3 ( ) ) ; VAR_2 . METHOD_5 ( vds , false ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; for ( TYPE_1 VAR_2 : result ) { TYPE_2 . assertEquals ( VAR_1 . getId ( ) , VAR_2 . METHOD_5 ( ) ) ; } } 
protected boolean METHOD_1 ( ) { if ( ! ( validate ( TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) , TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( ) . getId ( ) ) ) ) ) { return false ; } return true ; } 
public static java.lang.Boolean METHOD_1 ( java.lang.Integer VAR_1 , org.ovirt.engine.core.compat . Version version ) { TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > VAR_2 = new TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > ( VAR_1 , version ) ; if ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { return TYPE_2 . METHOD_2 ( ) . get ( VAR_2 ) ; } return false ; } 
public TYPE_1 < org.ovirt.engine.core.compat.Guid , TYPE_2 > METHOD_1 ( ) throws java.lang.Exception { TYPE_2 returnValue ; returnValue = METHOD_2 ( VAR_1 , new TYPE_3 ( VAR_2 , entity . METHOD_3 ( ) , entity . METHOD_4 ( ) , entity . getName ( ) , VAR_3 , VAR_4 ) ) ; return new TYPE_1 < org.ovirt.engine.core.compat.Guid , TYPE_2 > ( VAR_2 , returnValue ) ; } 
public java.util.HashMap < java.lang.Integer , TYPE_1 > METHOD_1 ( ) { java.util.HashMap < java.lang.Integer , TYPE_1 > VAR_1 = new java.util.HashMap < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { java.lang.String VAR_3 = METHOD_3 ( VAR_4 . get ( VAR_2 ) , STRING_1 , null ) ; if ( VAR_3 != null ) { VAR_1 . put ( VAR_2 , TYPE_1 . valueOf ( VAR_3 ) ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( domain ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( ) ) ; TYPE_3 . METHOD_7 ( cmd . METHOD_8 ( ) ) ; TYPE_3 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_9 ( ) . isEmpty ( ) ) ; } 
public static < TYPE_1 extends TYPE_2 < ? extends TYPE_3 > > TYPE_4 < TYPE_5 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_4 < TYPE_5 > result = TYPE_6 . METHOD_2 ( ) . METHOD_3 ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { result . METHOD_4 ( TYPE_5 . from ( VAR_2 ) ) ; } return result ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( VAR_1 != null ) & ( VAR_1 . METHOD_2 ( STRING_1 ) ) ) && ( VAR_1 . METHOD_3 ( STRING_2 ) ) ) { return VAR_1 . METHOD_4 ( 1 , ( ( VAR_1 . length ( ) ) - 2 ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { java.lang.Integer VAR_1 = new java.lang.Integer ( INT_1 ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , new java.lang.Integer ( INT_2 ) ) ) ; TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_1 , new java.lang.Integer ( INT_1 ) ) ) ; TYPE_1 . METHOD_4 ( TYPE_2 . METHOD_3 ( null , null ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 , null ) ) ; TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( null , VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 id ) { TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , new TYPE_4 ( METHOD_3 ( ) , id ) ) ; TYPE_5 VAR_4 = ( ( TYPE_5 ) ( VAR_1 . getReturnValue ( ) ) ) ; return METHOD_4 ( VAR_4 ) ; } 
private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; params . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( params ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_8 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { if ( ( ( java.lang.Boolean ) ( returnValue ) ) ) { METHOD_1 ( VAR_1 , VAR_2 ) ; } else { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) . add ( VAR_3 . METHOD_5 ( ) ) ; METHOD_3 ( ) . METHOD_6 ( false ) ; } } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( domain , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . getReturnValue ( ) ) ) ; return METHOD_3 ( VAR_5 ) ; } 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.HashMap < java.lang.Integer , TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( ( ! ( METHOD_2 ( vds ) ) ) && ( ! ( vds . getId ( ) . equals ( VAR_1 . getId ( ) ) ) ) ) && ( vds . METHOD_3 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) ; } 
private boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 , boolean VAR_2 ) { boolean returnValue = false ; if ( ( METHOD_2 ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VDS VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( METHOD_2 ( ) ) ; VAR_4 . METHOD_4 ( STRING_1 , METHOD_2 ( ) , VAR_3 . getName ( ) , VAR_3 . METHOD_5 ( ) ) ; returnValue = METHOD_6 ( VAR_1 , VAR_2 , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( TYPE_1 . METHOD_7 ( VAR_3 ) ) ) ; } return returnValue ; } 
private java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = null ; if ( ( VAR_1 != null ) && ( VAR_1 . METHOD_2 ( ) ) ) { VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; for ( TYPE_2 . Disk disk : VAR_1 . METHOD_3 ( ) ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( TYPE_3 . map ( disk , null ) ) ) ; VAR_2 . add ( diskImage ) ; } } return VAR_2 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = METHOD_2 ( ) ; if ( ( diskImage != null ) && ( ( diskImage . METHOD_3 ( ) ) != VAR_1 ) ) { diskImage . METHOD_1 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( diskImage . METHOD_5 ( ) . getId ( ) , VAR_1 ) ; } } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; VAR_2 . METHOD_2 ( ( ( ( ( java.util.List ) ( VAR_2 . METHOD_3 ( ) ) ) . size ( ) ) == 0 ) ) ; } 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 , TYPE_2 VAR_2 ) { java.lang.String VAR_3 = VAR_1 . getName ( ) ; if ( VAR_3 == STRING_1 ) { return VAR_4 . get ( ) ; } else if ( VAR_3 == STRING_2 ) { return VAR_5 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } } 
public TYPE_1 METHOD_1 ( final TYPE_2 rs , final int VAR_1 ) throws TYPE_3 { TYPE_1 entity = new TYPE_1 ( ) ; entity . setId ( METHOD_2 ( rs , STRING_1 ) ) ; entity . METHOD_3 ( rs.getString ( STRING_2 ) ) ; entity . METHOD_4 ( rs . METHOD_5 ( STRING_3 ) ) ; entity . METHOD_6 ( rs.getString ( STRING_4 ) ) ; entity . METHOD_7 ( rs.getString ( STRING_5 ) ) ; entity . METHOD_8 ( new TYPE_4 ( rs . METHOD_9 ( STRING_6 ) ) ) ; return entity ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; } 
void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( ) ; int VAR_2 = 0 ; for ( final TYPE_2 VAR_3 : model . METHOD_3 ( ) ) { TYPE_3 VAR_4 = new TYPE_3 ( constants ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_4 . METHOD_6 ( model . METHOD_7 ( ) ) ; VAR_4 . METHOD_8 ( TYPE_4 . METHOD_9 ( VAR_6 , ( STRING_1 + ( VAR_2 ++ ) ) ) ) ; VAR_1 . add ( VAR_4 ) ; } } 
private TYPE_1 METHOD_1 ( java.lang.String url , java.lang.Integer VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( url , VAR_1 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; VAR_3 . METHOD_5 ( new TYPE_4 ( new TYPE_5 ( METHOD_6 ( url ) , METHOD_7 ( url , VAR_1 ) ) ) , VAR_6 ) ; new TYPE_6 ( VAR_3 , VAR_7 , VAR_8 ) . METHOD_8 ( ) ; return VAR_3 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { METHOD_1 ( ) . setEntity ( result ) ; METHOD_2 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; } else { METHOD_2 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = new TYPE_1 ( ( ( java.lang.String ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; METHOD_1 ( VAR_1 , METHOD_2 ( ) ) ; TYPE_3 . METHOD_3 ( STRING_1 , STRING_2 , VAR_1 . toString ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( result ) ) ; VAR_2 . METHOD_1 ( ) . setItems ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; VAR_2 . METHOD_1 ( ) . setSelectedItem ( VAR_1 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , STRING_1 ) ) { METHOD_5 ( ) ; } else if ( TYPE_1 . METHOD_4 ( command . getName ( ) , TYPE_2 ) ) { METHOD_6 ( ) ; } } 
private static void METHOD_1 ( TYPE_1 . Disk disk ) throws java.lang.Exception { TYPE_1 . Disk VAR_1 = new TYPE_1 . DiskImage ( ) ; TYPE_2 . getInstance ( ) . METHOD_2 ( TYPE_2 . getInstance ( ) . METHOD_3 ( disk ) , VAR_1 ) ; TYPE_3 . assertEquals ( disk , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 object , TYPE_3 VAR_1 ) { if ( VAR_2 . METHOD_2 ( object ) ) { VAR_1 . METHOD_3 ( STRING_1 ) ; TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_3 ) . METHOD_6 ( ) ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; } super . METHOD_1 ( context , object , VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 validator = METHOD_2 ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( validator . METHOD_5 ( METHOD_6 ( ) ) . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_1 ) . METHOD_9 ( TYPE_3 . METHOD_10 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_1 , org.mockito.Mockito . METHOD_11 ( ) ) . METHOD_12 ( TYPE_3 . METHOD_10 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_1 , org.mockito.Mockito . METHOD_11 ( ) ) . METHOD_13 ( TYPE_3 . METHOD_10 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( INT_1 ) ; VAR_1 . METHOD_4 ( INT_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_4 ) . METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_6 ( VAR_5 , VAR_6 ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_5 ) ) . thenReturn ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { boolean returnValue = ( ( ( ( ( TYPE_1 . METHOD_2 ( ) ) && ( METHOD_3 ( VAR_1 , VAR_2 ) ) ) && ( TYPE_1 . METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ) && ( ( ( TYPE_1 . METHOD_6 ( ) . METHOD_7 ( ) ) == ( VAR_3 ) ) || ( TYPE_1 . METHOD_8 ( ) ) ) ) && ( ( TYPE_1 . METHOD_9 ( ) ) != null ) ; return returnValue ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = dao . get ( VAR_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_5 ( STRING_1 ) ; VAR_6 = new TYPE_2 ( ) ; VAR_6 . METHOD_6 ( VAR_7 ) ; } 
private void METHOD_1 ( ) { if ( ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) || ( ( VAR_1 ) < ( ( VAR_2 < java.lang.Integer > METHOD_3 ( VAR_3 ) ) - 1 ) ) ) && ( METHOD_4 ( ) . METHOD_5 ( ) ) ) && ( METHOD_4 ( ) . METHOD_1 ( ) ) ) { ( VAR_1 ) ++ ; TYPE_1 . METHOD_6 ( ) ; } else { TYPE_1 . METHOD_7 ( ) . METHOD_8 ( false ) ; } } 
private void METHOD_1 ( java.util.List VAR_1 ) { if ( ( VAR_1 == null ) || ( ( VAR_1 . size ( ) ) != 1 ) ) { METHOD_2 ( false ) ; return ; } org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . getSelectedItem ( ) ; if ( ( ( vm == null ) || ( ! ( vm . METHOD_3 ( ) ) ) ) || ( ( vm . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ) < 0 ) ) { METHOD_2 ( false ) ; } else { METHOD_2 ( true ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_12 ( VAR_1 ) ; } if ( VAR_3 ) { VAR_2 . METHOD_13 ( VAR_4 . METHOD_14 ( ) ) ; } if ( VAR_5 ) { VAR_2 . METHOD_15 ( VAR_4 . METHOD_16 ( ) ) ; } } 
public void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : TYPE_1 . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , iface ) ; } VAR_2 . METHOD_5 ( VAR_3 . METHOD_6 ( ) . get ( 0 ) . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( ( ( VAR_3 . METHOD_6 ( ) . size ( ) ) == 1 ) ) ; } 
public void METHOD_1 ( ) { try { if ( ( VAR_1 ) != null ) { VAR_1 . METHOD_2 ( true ) ; } } catch ( TYPE_1 VAR_2 ) { log . error ( STRING_1 , VAR_2 . METHOD_3 ( ) ) ; log . METHOD_4 ( STRING_2 , VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 0 , 1 ) ; METHOD_6 ( ) ; METHOD_7 ( 1 ) ; METHOD_8 ( ) ; VAR_1 . METHOD_9 ( ) ; TYPE_1 response = resource . get ( ) ; METHOD_10 ( response , 0 ) ; METHOD_11 ( response ) ; } 
public static java.util.List < java.lang.String > METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.util.List < java.lang.String > VAR_4 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_5 : VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) { java.lang.String VAR_6 = VAR_5 . getString ( null , VAR_2 ) ; if ( VAR_6 == null ) { VAR_6 = VAR_3 ; } VAR_4 . add ( VAR_6 ) ; } return VAR_4 ; } 
public boolean equals ( java.lang.Object obj ) { return ( ( ( ( obj != null ) && ( obj instanceof TYPE_1 ) ) && ( TYPE_2 . METHOD_1 ( getId ( ) , ( ( TYPE_1 ) ( obj ) ) . getId ( ) ) ) ) && ( TYPE_2 . METHOD_1 ( METHOD_2 ( ) , ( ( TYPE_1 ) ( obj ) ) . METHOD_2 ( ) ) ) ) && ( TYPE_2 . METHOD_1 ( getValue ( ) , ( ( TYPE_1 ) ( obj ) ) . getValue ( ) ) ) ; } 
public boolean validate ( ) { METHOD_1 ( ) . METHOD_2 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( INT_1 ) , new TYPE_4 ( ) } ) ; METHOD_3 ( ) . METHOD_2 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( INT_1 ) } ) ; return ( METHOD_1 ( ) . METHOD_4 ( ) ) && ( METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
protected void METHOD_1 ( int VAR_1 , boolean VAR_2 ) throws java.lang.Exception { while ( ( VAR_1 -- ) > 0 ) { METHOD_1 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , ( VAR_2 ? null : getEntity ( 0 ) ) ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) { TYPE_1 pool = VAR_1 . get ( 0 ) ; TYPE_3 . METHOD_1 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } } 
private void METHOD_1 ( ) { VAR_1 . setItems ( TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_3 < TYPE_4 > ( ) { public void METHOD_6 ( TYPE_5 < ? extends TYPE_4 > VAR_2 , java.lang.Object sender , TYPE_4 args ) { METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; } } ) ; VAR_1 . setSelectedItem ( VAR_3 ) ; METHOD_7 ( ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; java.util.Map < java.lang.String , java.lang.Object > disk = new java.util.HashMap < > ( ) ; VAR_1 . put ( STRING_1 , disk ) ; VAR_1 . put ( STRING_2 , disk ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_2 , true ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; this . VAR_3 . METHOD_1 ( VAR_2 ) ; final java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > result = this . METHOD_2 ( VAR_4 ) ; VAR_5 . onSuccess ( result ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( null , null ) ; final org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
protected boolean METHOD_1 ( ) { boolean result = true ; if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . length ( ) ) > ( METHOD_4 ( ) ) ) { result = false ; addCanDoActionMessage ( VAR_1 ) ; } return result ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel object ) { TYPE_2 . Disk disk = ( ( TYPE_3 ) ( object . getEntity ( ) ) ) . METHOD_2 ( ) ; if ( disk . METHOD_3 ( ) ) { return TYPE_4 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } return null ; } 
public void METHOD_1 ( ) { if ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) { java.util.List < TYPE_2 < org.ovirt.engine.core.common.businessentities.VDSGroup > > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) { getTable ( ) . METHOD_5 ( new TYPE_4 < org.ovirt.engine.core.common.businessentities.VDSGroup > ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = METHOD_2 ( null , null ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_2 = METHOD_3 ( VAR_1 , VAR_3 , VAR_4 ) ; METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( VAR_6 , INT_1 ) ; org.mockito.Mockito.when ( VAR_7 . METHOD_6 ( VAR_2 ) ) . thenReturn ( VAR_1 ) ; } 
private void METHOD_1 ( ) { getParameters ( ) . METHOD_2 ( ) . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; for ( TYPE_1 iface : getParameters ( ) . METHOD_2 ( ) . METHOD_4 ( ) ) { iface . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; iface . METHOD_5 ( TYPE_2 . getInstance ( ) . METHOD_6 ( ) ) ; } } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , java.lang.String VAR_3 ) { return METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , ( ( VAR_1 + STRING_1 ) + VAR_2 ) , false , null , VAR_2 , VAR_3 , true , null , false , null ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String version ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; } } ; TYPE_1 tempVar = new TYPE_1 ( VAR_1 ) ; tempVar . METHOD_3 ( version ) ; TYPE_2 . METHOD_4 ( tempVar , aQuery ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 . METHOD_1 ( ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 ( ) ) ; TYPE_4 . getInstance ( ) . METHOD_3 ( VAR_2 , VAR_3 . getId ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . METHOD_4 ( STRING_1 , STRING_2 ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_5 ( STRING_3 ) ; VAR_3 . METHOD_6 ( STRING_4 ) ; VAR_3 . METHOD_7 ( STRING_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > > VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , VAR_2 . Collections < org.ovirt.engine.core.common.businessentities.network.Network > METHOD_3 ( ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( new TYPE_3 ( VAR_2 . Collections < org.ovirt.engine.core.common.businessentities.network.Network > METHOD_3 ( ) ) ) ; TYPE_4 . METHOD_4 ( VAR_3 . METHOD_5 ( VAR_1 ) , TYPE_5 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 2 ] } ) ) ; TYPE_1 action = new TYPE_1 ( ) ; action . METHOD_5 ( VAR_3 [ 2 ] ) ; METHOD_6 ( resource . METHOD_7 ( action ) ) ; } 
protected TYPE_1 [ ] METHOD_1 ( java.lang.Object object ) { final int VAR_1 = METHOD_2 ( object ) ; return new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( VAR_1 ) , new TYPE_4 ( ) { protected java.lang.String METHOD_3 ( ) { return org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; } } , new TYPE_5 ( VAR_2 ) } ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( VAR_2 class ) , TYPE_1 . any ( VAR_3 . ArrayList class ) ) ; VAR_4 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; TYPE_2 . METHOD_7 ( STRING_1 , command . validate ( ) ) ; } 
protected java.lang.String METHOD_1 ( java.lang.String id ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( id ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_3 ( ) . setId ( VAR_2 ) ; return TYPE_3 . METHOD_4 ( METHOD_5 ( ) , VAR_1 ) . METHOD_6 ( ) ; } 
private void METHOD_1 ( ) { java.util.List < ? extends TYPE_1 < org.ovirt.engine.core.common.businessentities.StorageDomain > > VAR_1 = TYPE_2 . METHOD_2 ( new TYPE_3 ( VAR_2 ) , new TYPE_4 ( VAR_3 ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_4 ) . METHOD_3 ( TYPE_5 . METHOD_4 ( VAR_5 . StorageDomain class ) , TYPE_5 . METHOD_4 ( VAR_6 . DiskImage class ) ) ; } 
public static < TYPE_1 extends TYPE_2 . VdcActionParametersBase > boolean METHOD_1 ( TYPE_2 . VdcActionType action , TYPE_1 parameters , TYPE_3 VAR_1 ) { return ( TYPE_4 . METHOD_2 ( TYPE_5 . METHOD_3 ( action . name ( ) ) , parameters . METHOD_4 ( ) , VAR_1 . METHOD_4 ( ) ) ) != null ; } 
protected java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( ) { if ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) && ( ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) != null ) ) && ( ! ( TYPE_2 . equals ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ) ) ) { return TYPE_3 . METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) , TYPE_4 . name ( ) ) ; } return null ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.VM VAR_2 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; final java.lang.String VAR_4 = VAR_1 . METHOD_5 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . getParameters ( ) . getId ( ) ) ; if ( vds != null ) { vds . METHOD_4 ( TYPE_1 . METHOD_5 ( ) . METHOD_6 ( vds . METHOD_7 ( ) , vds . METHOD_8 ( ) ) ) ; } TYPE_1 . METHOD_9 ( ) . METHOD_10 ( vds ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( result ) ) ) ) ; VAR_2 . METHOD_3 ( ) . setItems ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) . setSelectedItem ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; VAR_2 . METHOD_5 ( ) ; } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : METHOD_2 ( ) . METHOD_3 ( ) ) { java.lang.String VAR_1 = iface . METHOD_4 ( ) ; if ( ( TYPE_1 . METHOD_5 ( VAR_1 ) ) && ( ! ( VAR_2 . METHOD_6 ( VAR_1 ) ) ) ) { VAR_3 . add ( VAR_1 ) ; } } } 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( VAR_1 ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; command . METHOD_7 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , null , VAR_1 , VAR_2 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( true , null , VAR_3 ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_4 , org.mockito.Mockito . METHOD_8 ( INT_1 ) ) . METHOD_9 ( TYPE_3 . any ( VAR_5 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_10 ( ) , VAR_6 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 value , TYPE_4 event , TYPE_5 < TYPE_3 > VAR_2 ) { TYPE_6 VAR_3 = METHOD_2 ( value ) ; if ( VAR_3 == null ) { VAR_3 = METHOD_2 ( value , VAR_1 ) ; } TYPE_7 . METHOD_3 ( event , VAR_1 , VAR_3 ) ; super . METHOD_1 ( context , VAR_1 , value , event , VAR_2 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 . VdcQueryReturnValue response = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( response . getSucceeded ( ) ) { model . METHOD_1 ( ( ( java.util.ArrayList < TYPE_2 > ) ( response . getReturnValue ( ) ) ) , false , VAR_1 ) ; model . METHOD_2 ( STRING_1 ) ; } else { model . METHOD_2 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; } } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status ) { final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( status , STRING_1 , VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ; cmd . METHOD_5 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? TYPE_1 . METHOD_3 ( ( ( java.lang.Integer ) ( source ) ) . METHOD_4 ( ) ) : VAR_1 ; } } ; METHOD_5 ( new TYPE_2 ( VAR_2 , METHOD_6 ( ) ) , aQuery ) ; } 
protected boolean METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { return METHOD_3 ( VAR_1 ) ; } if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_4 ( ) ) == ( VAR_2 ) ) { return METHOD_3 ( VAR_3 ) ; } return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } TYPE_2 . METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( source ) ) , new TYPE_3 ( ) ) ; return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_4 ( ) , aQuery ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 . DiskImage disk ) { TYPE_1 parameters = new TYPE_1 ( VAR_1 , disk ) ; parameters . METHOD_2 ( VAR_2 ) ; parameters . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; parameters . METHOD_5 ( VAR_3 . getParameters ( ) ) ; parameters . METHOD_6 ( false ) ; return parameters ; } 
public static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( VAR_1 . METHOD_2 ( STRING_1 ) ) { VAR_2 . METHOD_3 ( TYPE_2 . valueOf ( VAR_1 . get ( STRING_1 ) . toString ( ) ) ) ; } VAR_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 , STRING_2 ) ) ; java.lang.Integer VAR_3 = TYPE_3 . METHOD_6 ( VAR_1 , STRING_3 ) ; if ( VAR_3 != null ) { VAR_2 . METHOD_7 ( VAR_3 ) ; } return VAR_2 ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { for ( TYPE_1 VAR_2 : VAR_1 ) { TYPE_2 params = new TYPE_2 ( VAR_2 , null , null ) ; TYPE_3 returnValue = TYPE_4 . getInstance ( ) . METHOD_2 ( VAR_3 , params , TYPE_5 . METHOD_3 ( ) ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { VAR_4 . METHOD_4 ( STRING_1 , VAR_2 . getName ( ) ) ; } } } 
private void METHOD_1 ( TYPE_1 < TYPE_2 > command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( VAR_1 ) . get ( VAR_2 ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( VAR_1 ) . get ( VAR_3 ) ; } 
public void METHOD_1 ( final TYPE_1 object ) { VAR_1 . METHOD_1 ( object ) ; METHOD_2 ( object ) ; object . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_2 , java.lang.Object sender , TYPE_4 args ) { if ( args instanceof TYPE_5 ) { METHOD_2 ( object ) ; } } } ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( storageDomain . getId ( ) , INT_1 ) ; TYPE_1 VAR_4 = VAR_3 . METHOD_2 ( VAR_1 . getId ( ) , INT_1 ) ; return VAR_2 . METHOD_3 ( VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; try { VAR_1 . METHOD_4 ( ) ; resource . METHOD_5 ( new TYPE_1 ( ) ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_7 ( VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
protected static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_4 . DiskImage > VAR_1 ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_2 > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_2 > ( ) ; for ( TYPE_4 . Disk diskImage : VAR_1 ) { VAR_2 . put ( diskImage . getId ( ) , diskImage ) ; } return new TYPE_5 < TYPE_2 > ( VAR_2 . METHOD_2 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { TYPE_2 tempVar = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) . getId ( ) , VAR_1 , VAR_2 ) ; tempVar . METHOD_3 ( true ) ; TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_3 , tempVar , TYPE_5 . METHOD_5 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { TYPE_4 VAR_2 = new TYPE_4 ( ) ; TYPE_5 VAR_3 = null ; try { VAR_3 = new TYPE_6 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; } finally { if ( VAR_3 != null ) { VAR_3 . METHOD_3 ( ) ; } } return new TYPE_7 ( VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 . getVm ( ) . METHOD_2 ( true ) ; TYPE_1 VAR_1 = super . METHOD_1 ( ) ; TYPE_3 VAR_2 = TYPE_2 . getParameters ( ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; VAR_3 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; VAR_3 . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; VAR_1 . METHOD_9 ( VAR_3 ) ; VAR_1 . METHOD_10 ( VAR_2 . METHOD_11 ( ) ) ; return VAR_1 ; } 
private java.util.List < TYPE_1 > METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( int i = 0 ; i < VAR_1 ; ++ i ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( java.lang.String.valueOf ( i ) ) ; VAR_3 . METHOD_5 ( VAR_5 ) ; VAR_3 . METHOD_6 ( vmId ) ; VAR_2 . add ( VAR_3 ) ; } return VAR_2 ; } 
public boolean METHOD_1 ( ) { return ( ( ( ( ( ( ( this ) == ( VAR_1 ) ) || ( ( this ) == ( VAR_2 ) ) ) || ( ( this ) == ( VAR_3 ) ) ) || ( ( this ) == ( VAR_4 ) ) ) || ( ( this ) == ( VAR_5 ) ) ) || ( ( this ) == ( VAR_6 ) ) ) || ( ( this ) == ( VAR_7 ) ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = VAR_2 < java.lang.String > METHOD_2 ( VAR_3 ) ; if ( ( VAR_1 . METHOD_3 ( ) . length ( ) ) == 0 ) { VAR_4 . METHOD_4 ( ) ; } else { VAR_4 . METHOD_5 ( VAR_5 , VAR_1 ) ; } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_3 VAR_4 = new TYPE_4 ( VAR_5 ) ; METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; VAR_7 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_5 VAR_8 ) { METHOD_8 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_9 ( ) ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ( getSelectedItem ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( getSelectedItem ( ) ) ) ; VAR_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_3 ) ) ) ; METHOD_4 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) , null ) ) ; METHOD_3 ( cmd , VAR_1 ) ; METHOD_4 ( false ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; METHOD_4 ( true ) ; METHOD_6 ( VAR_2 ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 quota = METHOD_2 ( ) ; quota . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( quota ) ; VAR_1 . METHOD_6 ( ) ; TYPE_2 VAR_2 = VAR_3 . list ( ) ; METHOD_7 ( VAR_2 , 1 ) ; TYPE_3 VAR_4 = VAR_2 . METHOD_8 ( ) . get ( 0 ) ; assertEquals ( VAR_5 , VAR_4 . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; command . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( command . METHOD_5 ( ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 ) . METHOD_7 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 ) . METHOD_8 ( TYPE_2 . METHOD_9 ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network network ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( network . getId ( ) ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( VAR_3 . METHOD_4 ( ) ) { if ( METHOD_5 ( VAR_1 , VAR_3 , VAR_4 ) ) { return VAR_3 ; } } else { if ( METHOD_5 ( VAR_1 , VAR_3 , VAR_5 ) ) { return VAR_3 ; } } } return null ; } 
private static void METHOD_1 ( TYPE_1 < TYPE_2 > command , TYPE_3 . VdcBllMessages VAR_1 ) { TYPE_4 . METHOD_2 ( command . METHOD_3 ( ) ) ; TYPE_4 . METHOD_4 ( command . getReturnValue ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 . name ( ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . String class ) , TYPE_2 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_5 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_4 ( VAR_3 , cluster , VAR_4 ) ; TYPE_5 . METHOD_6 ( validator . METHOD_1 ( ) , TYPE_6 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , false ) ; org.mockito.Mockito.when ( cluster . METHOD_3 ( ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( cluster . METHOD_4 ( ) ) . thenReturn ( true ) ; validator = new TYPE_1 ( VAR_3 , VAR_4 , cluster , VAR_5 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( VAR_6 ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 from ) { from . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; from . METHOD_4 ( new TYPE_3 ( ) ) ; from . METHOD_5 ( ) . setId ( from . getId ( ) ) ; return from ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.List < java.lang.String > ) ( returnValue ) ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; if ( ! ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { if ( ! ( VAR_1 . METHOD_3 ( VAR_2 ) ) ) { VAR_1 . add ( VAR_2 ) ; } METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . getStoragePoolId ( ) , TYPE_1 . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . get ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_7 ( VAR_2 ) ; } } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( java.util.List < TYPE_1 . DiskImage > VAR_1 ) { if ( ( VAR_2 . equals ( VAR_3 ) ) && ( ( TYPE_2 . getVm ( ) ) != null ) ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_3 . METHOD_2 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 ) ; if ( storageDomain != null ) { VAR_2 = storageDomain . getId ( ) ; } } return VAR_2 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; TYPE_2 VAR_4 = METHOD_5 ( ) ; if ( ( ( VAR_4 . getId ( ) ) == null ) || ( VAR_4 . getId ( ) . isEmpty ( ) ) ) { VAR_4 . setId ( TYPE_3 . METHOD_6 ( ) ) ; } METHOD_7 ( VAR_4 . getId ( ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( true , METHOD_4 ( ) , VAR_2 ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; } 
protected boolean METHOD_1 ( ) { boolean returnValue = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; returnValue = false ; } if ( ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ) || ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { addCanDoActionMessage ( VAR_4 ) ; returnValue = false ; } return returnValue ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 value , TYPE_3 VAR_1 , java.lang.String id ) { if ( value != null ) { VAR_1 . append ( VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , TYPE_4 . METHOD_3 ( TYPE_5 . METHOD_4 ( value ) . METHOD_5 ( ) ) ) ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; org.mockito.Mockito . METHOD_3 ( VAR_2 , org.mockito.Mockito . METHOD_4 ( 0 ) ) . METHOD_5 ( VAR_3 [ 0 ] , null ) ; org.mockito.Mockito . METHOD_3 ( VAR_2 , org.mockito.Mockito . METHOD_4 ( 0 ) ) . METHOD_5 ( VAR_3 [ 1 ] , null ) ; org.mockito.Mockito . METHOD_3 ( VAR_4 , org.mockito.Mockito . METHOD_4 ( 0 ) ) . METHOD_6 ( TYPE_1 . any ( VAR_5 class ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ; METHOD_6 ( ) ; } else { TYPE_1 . METHOD_7 ( false ) ; log . METHOD_8 ( STRING_1 ) ; } TYPE_1 . METHOD_9 ( true ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_2 = new TYPE_2 ( new TYPE_3 < java.lang.Integer > ( ) , new TYPE_4 < java.lang.Integer > ( ) { public java.lang.Integer METHOD_2 ( TYPE_5 VAR_3 ) throws TYPE_6 { return VAR_1 . METHOD_3 ( ) . getValue ( ) ; } } ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , getEntity ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 VAR_5 = resource . get ( ) ; TYPE_2 . METHOD_6 ( VAR_5 , 1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_3 , org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) , VAR_1 ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_4 ) ) . when ( VAR_5 ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) , TYPE_2 . METHOD_8 ( ) ) ; TYPE_3 . METHOD_9 ( command . validate ( ) ) ; TYPE_3 . METHOD_10 ( command . getReturnValue ( ) . METHOD_11 ( ) . METHOD_12 ( TYPE_4 . name ( ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface getModel ( int i ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; nic . setId ( VAR_1 [ 1 ] ) ; nic . METHOD_1 ( VAR_2 [ i ] ) ; nic . METHOD_2 ( VAR_3 [ i ] ) ; nic . METHOD_3 ( VAR_4 [ i ] ) ; nic . METHOD_4 ( VAR_5 [ i ] ) ; return nic ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { if ( ( ( response . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( response . METHOD_3 ( ) . METHOD_4 ( ) . equals ( VAR_3 ) ) ) { VAR_4 = true ; METHOD_5 ( ) . METHOD_6 ( url , params ) ; } else { VAR_5 . METHOD_7 ( VAR_6 . METHOD_8 ( ) ) ; } } 
protected boolean METHOD_1 ( ) { METHOD_2 ( ) ; if ( ! ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ) { TYPE_2 VAR_1 = new TYPE_2 ( storageDomain ) ; if ( ! ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) { return false ; } } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_9 ( VAR_5 ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( new TYPE_1 . DiskImage ( ) ) . when ( validator ) . METHOD_2 ( TYPE_2 . any ( VAR_1 . Guid class ) ) ; TYPE_3 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( TYPE_5 . METHOD_6 ( VAR_2 ) ) . METHOD_7 ( TYPE_5 . METHOD_8 ( TYPE_4 . METHOD_9 ( TYPE_6 . METHOD_10 ( VAR_3 , VAR_4 ) ) ) ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) . getValue ( ) , TYPE_1 . getParameters ( ) . getStoragePoolId ( ) . toString ( ) , METHOD_5 ( ) ) ; TYPE_1 . METHOD_6 ( ) ; java.util.Map < java.lang.String , java.lang.String > returnValue = VAR_1 . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( returnValue ) ; METHOD_9 ( returnValue ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 , METHOD_2 ( VAR_1 , STRING_1 , 1 ) . get ( 0 ) , METHOD_2 ( VAR_1 , STRING_2 , 1 ) . get ( 0 ) , false ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 ( ) ) ; java.util.ArrayList < TYPE_4 > VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) ; model . METHOD_4 ( ) . setItems ( TYPE_2 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_2 , VAR_3 ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; for ( org.ovirt.engine.core.compat.Guid VAR_2 : VAR_1 . METHOD_5 ( ) ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_6 ( VAR_1 . getId ( ) , VAR_2 ) ; } for ( java.lang.String VAR_3 : VAR_1 . METHOD_7 ( ) ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_8 ( VAR_1 . getId ( ) , VAR_3 ) ; } getReturnValue ( ) . METHOD_9 ( VAR_1 . getId ( ) ) ; return null ; } 
public static TYPE_1 map ( java.lang.String VAR_1 , TYPE_2 type , TYPE_1 VAR_2 ) { VAR_2 . METHOD_1 ( new TYPE_3 ( ) ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( new TYPE_4 ( ) ) ; VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_2 ( ) . METHOD_4 ( ) . METHOD_6 ( type . value ( ) ) ; return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { true , false } , METHOD_5 ( ) ) ; METHOD_6 ( ) ; VAR_3 . METHOD_7 ( ) ; METHOD_8 ( resource . get ( ) , 0 ) ; } 
protected boolean validate ( ) { if ( ! ( super . validate ( ) ) ) { return false ; } if ( ( METHOD_1 ( ) ) == null ) { METHOD_2 ( VAR_1 ) ; return false ; } if ( METHOD_1 ( ) . METHOD_3 ( ) ) { METHOD_2 ( VAR_2 ) ; return false ; } return true ; } 
protected TYPE_1 . DiskImage METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( VAR_3 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( VAR_4 ) ; return disk ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 storage = new TYPE_1 ( ) ; storage . setId ( VAR_1 ) ; storage . METHOD_2 ( new TYPE_2 ( ) ) ; storage . METHOD_3 ( ) . setId ( VAR_2 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , storage ) ; assertEquals ( VAR_3 , storage . METHOD_6 ( ) ) ; assertEquals ( VAR_4 , storage . METHOD_3 ( ) . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) , TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) ; if ( vds != null ) { vds . METHOD_7 ( TYPE_2 . METHOD_8 ( vds . METHOD_9 ( ) , vds . METHOD_10 ( ) ) ) ; } TYPE_1 . METHOD_11 ( ) . METHOD_12 ( vds ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_1 ) { if ( ! ( TYPE_1 . METHOD_2 ( i . METHOD_3 ( ) ) ) ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 = new org.ovirt.engine.ui.uicommonweb.UICommand ( STRING_1 , this ) ; VAR_1 . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( true ) ; METHOD_4 ( ) . add ( VAR_1 ) ; org.ovirt.engine.ui.uicommonweb.UICommand VAR_2 = new org.ovirt.engine.ui.uicommonweb.UICommand ( STRING_2 , this ) ; VAR_2 . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( true ) ; METHOD_4 ( ) . add ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . VM vm = new TYPE_1 . VM ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; vm . METHOD_4 ( VAR_1 ) ; TYPE_3 map = TYPE_4 . map ( vm , ( ( TYPE_3 ) ( null ) ) ) ; METHOD_5 ( map . METHOD_6 ( ) ) ; assertEquals ( map . METHOD_6 ( ) , STRING_1 ) ; } 
public java.lang.String METHOD_1 ( TYPE_1 id ) { org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( id . METHOD_2 ( ) , false ) ; byte [ ] VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; for ( int VAR_4 = 0 ; VAR_4 < ( VAR_2 . length ) ; VAR_4 ++ ) { VAR_3 . append ( ( STRING_1 + ( java.lang.String . METHOD_4 ( STRING_2 , VAR_2 [ VAR_4 ] ) ) ) ) ; } return VAR_3 . toString ( ) ; } 
protected void METHOD_1 ( TYPE_1 parameters ) { super . METHOD_1 ( parameters ) ; METHOD_2 ( parameters . METHOD_3 ( ) ) ; parameters . METHOD_4 ( new TYPE_2 ( VAR_1 . VmTemplate , TYPE_3 . METHOD_5 ( ) ) ) ; VAR_2 = TYPE_3 . getParameters ( ) . METHOD_6 ( ) ; VAR_3 = new java.util.HashMap < > ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_5 , parameters , null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) ; TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 , METHOD_2 ( id ) ) ; return inject ( new TYPE_4 < TYPE_5 . Disk , TYPE_5 . Disk > ( VAR_5 , VAR_6 , VAR_4 ) ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 value ) { if ( value == null ) { return METHOD_2 ( value ) ; } if ( value . METHOD_3 ( ) ) { return STRING_1 ; } else if ( value . METHOD_4 ( ) ) { return STRING_2 ; } return STRING_3 ; } 
protected < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 , TYPE_3 VAR_2 , final TYPE_4 . Version version ) { return getEntity ( VAR_1 , VAR_3 , new TYPE_5 ( VAR_2 ) { { METHOD_2 ( TYPE_6 . METHOD_3 ( version ) ) ; } } , VAR_2 . toString ( ) ) ; } 
private TYPE_1 METHOD_1 ( java.lang.Object instance , java.lang.String VAR_1 , TYPE_2 < ? > [ ] VAR_2 , java.lang.Object [ ] VAR_3 ) { java.lang.String VAR_4 = METHOD_2 ( instance , VAR_1 ) ; TYPE_1 VAR_5 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_4 , VAR_6 ) . METHOD_5 ( VAR_7 class ) . METHOD_6 ( ) ; METHOD_7 ( VAR_5 . METHOD_8 ( ) , instance , VAR_1 , VAR_2 , VAR_3 ) ; return VAR_5 ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_4 ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_5 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . assertEquals ( VAR_4 , VAR_5 . getId ( ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 . DiskImage disk ) { if ( ! ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( getVm ( ) . getId ( ) , VAR_1 ) ) ) { TYPE_2 . METHOD_2 ( ) . METHOD_4 ( new TYPE_3 ( VAR_1 , VAR_2 , getVm ( ) . getId ( ) , null , VAR_3 , disk . METHOD_5 ( ) , disk . METHOD_6 ( ) , disk . METHOD_7 ( ) ) ) ; } } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.Boolean VAR_1 = ( ( java.lang.Boolean ) ( returnValue ) ) ; if ( ! VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_2 ) { if ( TYPE_1 . METHOD_2 ( i . METHOD_3 ( ) , VAR_3 . getName ( ) ) ) { VAR_4 . add ( i ) ; } } } VAR_5 . append ( VAR_3 . getName ( ) ) ; VAR_6 . METHOD_1 ( VAR_7 , VAR_4 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) . value ( ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) . value ( ) ) ; model . METHOD_6 ( TYPE_3 . METHOD_7 ( TYPE_2 . METHOD_3 ( VAR_4 class ) ) ) ; model . METHOD_8 ( null ) ; return model ; } 
protected boolean METHOD_1 ( TYPE_1 type , java.util.List < TYPE_2 > VAR_1 ) { return ( VAR_1 != null ) && ( ( VAR_1 . isEmpty ( ) ) || ( TYPE_3 . getInstance ( ) . METHOD_2 ( type ) . METHOD_3 ( TYPE_4 . METHOD_4 ( ) , VAR_1 , TYPE_4 . METHOD_5 ( ) . getId ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 quota = METHOD_2 ( ) ; quota . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( quota ) ; VAR_1 . METHOD_6 ( ) ; TYPE_2 VAR_2 = VAR_3 . list ( ) ; METHOD_7 ( VAR_2 , 1 ) ; TYPE_3 VAR_4 = VAR_2 . METHOD_8 ( ) . get ( 0 ) ; assertEquals ( VAR_4 . METHOD_9 ( ) , VAR_5 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 parameters = null ; try { parameters = VAR_2 . METHOD_2 ( ) ; parameters . getParameters ( ) . add ( new TYPE_2 ( VAR_1 , null , VAR_3 , VAR_4 , FLOAT_1 ) ) ; } catch ( TYPE_3 e ) { } return VAR_5 . METHOD_3 ( parameters ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { java.util.List < java.lang.String > VAR_4 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 != null ) { VAR_4 . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; } TYPE_2 name = new TYPE_2 ( VAR_4 ) ; TYPE_1 result = new TYPE_1 ( ) ; result . METHOD_4 ( METHOD_5 ( name ) ) ; result . METHOD_6 ( METHOD_7 ( VAR_3 , METHOD_8 ( VAR_1 ) ) ) ; return result ; } 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 VAR_2 , java.lang.Object sender , TYPE_5 args ) { METHOD_6 ( ) ; } } ) ; METHOD_7 ( VAR_1 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_1 ( ( ( TYPE_3 ) ( returnValue ) ) ) ; VAR_2 . getName ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( false ) ; VAR_1 . setItems ( new java.util.ArrayList ( TYPE_4 . METHOD_5 ( new TYPE_2 [ ] { VAR_2 } ) ) ) ; } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 , TYPE_2 status ) { METHOD_2 ( VAR_1 , VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_3 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( METHOD_4 ( VAR_5 , STRING_1 , VAR_6 , status ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 , java.lang.String VAR_4 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_5 , new TYPE_3 ( VAR_1 , VAR_3 , VAR_2 , VAR_4 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.when ( VAR_1 . get ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_2 . getStoragePoolId ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( ) ) . thenReturn ( VAR_5 ) ; org.mockito.Mockito . METHOD_4 ( VAR_6 ) ; } 
public void METHOD_1 ( ) { VAR_1 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( METHOD_4 ( ) , METHOD_5 ( ) , null ) ) ; org.mockito.Mockito . METHOD_6 ( ) . when ( VAR_4 ) . METHOD_7 ( TYPE_2 . any ( VAR_5 . VDS class ) , TYPE_2 . any ( VAR_6 class ) , TYPE_2 . any ( VAR_7 . Map class ) ) ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = super . METHOD_1 ( ) ; if ( VAR_1 && ( METHOD_2 ( ) ) ) { VAR_1 = ( validate ( METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ) && ( validate ( METHOD_3 ( ) . METHOD_5 ( METHOD_6 ( ) ) ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { TYPE_1 vds = VAR_1 . get ( VAR_2 ) ; TYPE_2 . METHOD_2 ( vds ) ; java.lang.String name = vds . getName ( ) ; TYPE_2 . METHOD_3 ( name . equals ( VAR_3 . METHOD_4 ( VAR_2 , VAR_4 . VDS ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ; TYPE_2 . METHOD_4 ( ) . METHOD_5 ( TYPE_4 . name ( ) , STRING_3 ) ; VAR_1 = VAR_2 . METHOD_6 ( ) ; VAR_3 = VAR_4 . cluster ( VAR_1 ) . METHOD_6 ( ) ; VAR_5 = VAR_6 . host ( VAR_3 ) . METHOD_7 ( ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( VAR_2 ) ) ) . thenReturn ( null ) ; VAR_3 . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_3 ) . METHOD_6 ( VAR_4 ) ; org.mockito.Mockito . METHOD_5 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_6 ( TYPE_1 . any ( VAR_5 . VM class ) ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } final TYPE_1 validator = new TYPE_1 ( METHOD_2 ( ) ) ; return ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { final TYPE_1 VAR_3 = VAR_4 . get ( VAR_1 ) ; if ( VAR_3 == null ) { throw new TYPE_3 ( VAR_5 ) ; } return VAR_6 . METHOD_2 ( VAR_1 , VAR_3 , VAR_2 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) ; METHOD_3 ( cmd ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_2 , VAR_3 ) ) . when ( VAR_4 ) . METHOD_5 ( VAR_2 ) ; TYPE_3 . METHOD_6 ( cmd . validate ( ) ) ; } 
public TYPE_1 . Network METHOD_1 ( TYPE_1 . Network VAR_1 ) { METHOD_2 ( VAR_2 . Network class , VAR_1 ) ; TYPE_1 . Network network = map ( VAR_1 , map ( get ( ) ) ) ; network . METHOD_3 ( ) . METHOD_4 ( network . getId ( ) ) ; network . METHOD_3 ( ) . METHOD_5 ( cluster . METHOD_6 ( ) . getId ( ) ) ; METHOD_7 ( VAR_3 , new TYPE_2 ( network . METHOD_3 ( ) ) ) ; return get ( ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain domain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; domain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; domain . METHOD_3 ( VAR_1 ) ; disk . METHOD_4 ( new java.util.ArrayList ( TYPE_2 . METHOD_5 ( domain . getId ( ) ) ) ) ; VAR_2 . METHOD_6 ( VAR_3 class , VAR_4 ) ; org.mockito.Mockito.when ( VAR_4 . get ( domain . getId ( ) ) ) . thenReturn ( domain ) ; return domain ; } 
public void METHOD_1 ( ) { for ( TYPE_1 parameters : VAR_1 . getParameters ( ) . METHOD_2 ( ) ) { METHOD_3 ( parameters ) ; } METHOD_4 ( ) ; METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) , false ) ; VAR_1 . METHOD_8 ( null ) ; VAR_1 . getReturnValue ( ) . METHOD_9 ( true ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { METHOD_1 ( ) . setEntity ( ( ( java.lang.String ) ( result ) ) ) ; METHOD_2 ( true ) ; } else { METHOD_1 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; METHOD_2 ( false ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( getModel ( 1 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public static void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 = TYPE_2 . METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 ( ) { public void METHOD_5 ( TYPE_4 VAR_3 , java.lang.Object sender , TYPE_5 args ) { TYPE_6 . METHOD_6 ( VAR_1 , VAR_2 . getSelectedItem ( ) ) ; } } ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , VAR_4 } , getEntity ( 0 ) ) ; VAR_5 . METHOD_3 ( ) ; TYPE_1 VAR_6 = resource . get ( ) ; METHOD_4 ( VAR_6 ) ; } 
private void METHOD_1 ( ) { super . METHOD_2 ( ) ; org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 = new org.ovirt.engine.ui.uicommonweb.UICommand ( STRING_1 , this ) ; VAR_1 . setTitle ( VAR_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( true ) ; METHOD_5 ( ) . add ( VAR_1 ) ; METHOD_5 ( ) . add ( METHOD_6 ( ) ) ; if ( ( getVm ( ) ) != null ) { METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( true ) ; } METHOD_10 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String id , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( TYPE_1 ) ( source ) ) : null ; } } ; TYPE_2 params = new TYPE_2 ( id ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_2 ( ) , aQuery ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.util.Map < java.lang.String , java.lang.String > VAR_4 = new java.util.HashMap < > ( ) ; VAR_4 . put ( STRING_1 , VAR_2 ) ; VAR_4 . put ( STRING_2 , VAR_3 ) ; TYPE_2 tempVar = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , VAR_1 , VAR_4 ) ; METHOD_3 ( VAR_5 , tempVar , TYPE_4 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ) ; } 
private void METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ; VAR_3 . log ( VAR_2 , VAR_4 ) ; } } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = METHOD_2 ( ) ; java.lang.Integer VAR_1 = METHOD_3 ( ) . getSelectedItem ( ) ; if ( ( cluster == null ) || ( VAR_1 == null ) ) { return ; } java.util.List < TYPE_1 < TYPE_2 , TYPE_3 > > VAR_2 = TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_1 , cluster . METHOD_5 ( ) ) ; METHOD_6 ( VAR_2 ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < TYPE_1 . Disk > list = new java.util.ArrayList < > ( ) ; if ( source != null ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( source ) ) ; TYPE_3 VAR_2 = VAR_1 . METHOD_2 ( ) ; while ( VAR_2 . METHOD_3 ( ) ) { list . add ( ( ( TYPE_1 . Disk ) ( VAR_2 . METHOD_4 ( ) ) ) ) ; } } return list ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object a : VAR_2 . METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities . Network network = ( ( org.ovirt.engine.core.common.businessentities . Network ) ( a ) ) ; VAR_1 . add ( new TYPE_2 ( network . METHOD_3 ( ) . getValue ( ) , network ) ) ; } org.ovirt.engine.ui.frontend.Frontend . METHOD_4 ( VAR_3 , VAR_1 ) ; VAR_2 . METHOD_5 ( null ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( storageDomain ) == null ) { return new TYPE_1 . ValidationResult ( VAR_1 ) ; } if ( ( ( storageDomain . METHOD_2 ( ) ) == null ) || ( ( storageDomain . METHOD_2 ( ) ) != ( VAR_2 ) ) ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , false ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( true ) ; METHOD_10 ( true ) ; TYPE_3 . METHOD_11 ( command , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 result ) { VAR_1 . METHOD_2 ( ) ; if ( ! ( result . getReturnValue ( ) . getSucceeded ( ) ) ) { VAR_1 . METHOD_3 ( result . getReturnValue ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; } else { METHOD_6 ( null ) ; } } 
protected void METHOD_1 ( ) { if ( org.ovirt.engine.core.common.businessentities.VM . METHOD_2 ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) ) { METHOD_4 ( TYPE_2 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 , new TYPE_3 ( TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_8 ( ) ) ) . getReturnValue ( ) ) ; TYPE_1 . METHOD_9 ( true ) ; } else { METHOD_4 ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) ; } } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; TYPE_1 . when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; METHOD_7 ( true ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_4 ) . METHOD_4 ( VAR_5 ) ; org.mockito.Mockito.doReturn ( vds ) . when ( VAR_1 ) . get ( VAR_5 ) ; } 
protected TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_3 , METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( METHOD_5 ( ) ) ) ; if ( VAR_2 . getSucceeded ( ) ) { getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; METHOD_4 ( false , VAR_2 ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_3 . any ( VAR_4 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_9 ( ) , VAR_5 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; java.util.Map < java.lang.String , java.lang.Object > result = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; if ( vds != null ) { result = TYPE_2 . METHOD_4 ( vds . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) . METHOD_7 ( result ) ; } 
public void METHOD_1 ( final TYPE_1 model ) { super . METHOD_1 ( model ) ; model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_1 , java.lang.Object sender , TYPE_4 args ) { if ( ( model . METHOD_6 ( ) ) != null ) { METHOD_7 ( model . METHOD_6 ( ) ) ; } } } ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.lang.Object [ ] VAR_3 = ( ( java.lang.Object [ ] ) ( VAR_1 ) ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( VAR_3 [ 0 ] ) ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_5 = ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( VAR_3 [ 1 ] ) ) ; boolean VAR_6 = ( ( VAR_5 . METHOD_1 ( ) ) == ( VAR_7 ) ) && ( VAR_2 == null ) ; VAR_4 . METHOD_2 ( VAR_5 , VAR_6 ) ; } 
protected void METHOD_1 ( ) { command = METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( VAR_1 . Version class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( vmId ) ; VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( INT_1 ) ; VAR_2 . METHOD_5 ( INT_2 ) ; VAR_2 . METHOD_6 ( VAR_3 ) ; return VAR_2 ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { VAR_3 . METHOD_2 ( ( ( VAR_2 + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) ) ; if ( ( VAR_1 . METHOD_4 ( ) ) != null ) { VAR_3 . METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_3 ( VAR_1 ) , aQuery ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_3 = ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_3 . METHOD_1 ( VAR_3 , new TYPE_4 ( ) ) ; VAR_2 . setItems ( VAR_3 ) ; VAR_2 . METHOD_2 ( ( ( VAR_3 . size ( ) ) == 0 ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 model = ( ( TYPE_2 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; if ( ( VAR_2 ) != null ) { METHOD_3 ( VAR_2 ) ; } VAR_3 = true ; } } ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; java.util.List < java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_3 . METHOD_3 ( STRING_1 , ( ( VAR_3 . size ( ) ) == 0 ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 . getId ( ) ) ) . thenReturn ( VAR_1 ) ; command . METHOD_3 ( VAR_1 . getId ( ) ) ; TYPE_1 . METHOD_4 ( command . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , command , VAR_3 ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) ) != null ) { VAR_1 . METHOD_2 ( TYPE_1 . getVm ( ) . getId ( ) ) ; } METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } 
private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 == null ) { java.util.List < TYPE_2 > VAR_2 = new TYPE_3 < TYPE_2 > ( ) ; VAR_2 . add ( METHOD_4 ( ) ) ; METHOD_2 ( ) . setItems ( VAR_2 ) ; } else { for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_3 . METHOD_5 ( METHOD_6 ( ) . METHOD_7 ( ) , METHOD_6 ( ) . getId ( ) ) ; } } } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ; for ( TYPE_1 domain : VAR_1 ) { if ( ( domain . METHOD_1 ( ) ) == ( VAR_2 ) ) { return domain ; } } return null ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) instanceof org.ovirt.engine.core.common.businessentities.VM ) { VAR_1 = new TYPE_1 ( this ) ; } else if ( ( getEntity ( ) ) instanceof TYPE_2 ) { VAR_1 = new TYPE_3 ( this ) ; } else { throw new TYPE_4 ( ) ; } VAR_1 . METHOD_2 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( VAR_2 , VAR_3 ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_5 . METHOD_3 ( ) . getStoragePoolId ( ) ; if ( ! ( VAR_4 . equals ( VAR_6 ) ) ) { METHOD_4 ( VAR_1 , VAR_4 ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return TYPE_2 . equals ( id , other . id ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.String domain : METHOD_2 ( ) ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( domain ) ; TYPE_2 VAR_3 = new TYPE_2 ( domain . METHOD_4 ( ) , true ) ; VAR_2 . setId ( VAR_3 . toString ( ) ) ; VAR_1 . add ( VAR_2 ) ; } return VAR_1 ; } 
public static void METHOD_1 ( java.lang.String url , TYPE_1 resource , java.lang.String VAR_1 , TYPE_2 params ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( ( VAR_1 + ( VAR_3 ) ) ) ; VAR_2 . METHOD_3 ( TYPE_4 . METHOD_4 ( ( ( TYPE_4 . METHOD_4 ( url , VAR_1 ) ) + ( VAR_4 ) ) , params ) ) ; resource . METHOD_5 ( ) . add ( VAR_2 ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ) ; } VAR_1 . METHOD_2 ( getName ( ) . getEntity ( ) ) ; org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_3 ( ) . getSelectedItem ( ) ; VAR_1 . METHOD_4 ( ( network != null ? network . METHOD_5 ( ) : null ) ) ; VAR_1 . METHOD_6 ( METHOD_7 ( ) . getEntity ( ) ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) . getSelectedItem ( ) ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_2 ) { for ( java.lang.Object object : VAR_3 . METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( object ) ) ; if ( ! ( METHOD_3 ( ( ( vm . METHOD_4 ( ) ) + VAR_1 ) , vm . METHOD_5 ( ) , VAR_2 ) ) ) { return false ; } } return true ; } 
public TYPE_1 get ( ) { TYPE_2 VAR_1 = TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( id ) ) . METHOD_5 ( ) ) ; TYPE_4 status = VAR_2 ; return TYPE_1 . status ( status ) . METHOD_6 ( VAR_1 ) . METHOD_7 ( ) ; } 
public final void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( 1 , VAR_2 ) ; } if ( ( model . METHOD_2 ( ) ) == null ) { model . METHOD_3 ( null ) ; VAR_1 . METHOD_4 ( true ) ; } if ( ( VAR_3 ) != null ) { VAR_3 . METHOD_5 ( VAR_1 ) ; } if ( METHOD_6 ( ) ) { METHOD_7 ( ) ; } else { METHOD_8 ( ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( STRING_1 , TYPE_2 . METHOD_5 ( ( ( TYPE_3 < java.lang.String > ) ( METHOD_2 ( ) . METHOD_6 ( ) . getReturnValue ( ) ) ) , TYPE_4 . METHOD_7 ( STRING_2 , STRING_3 , STRING_4 ) ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { if ( returnValue == null ) { return new java.util.ArrayList < > ( ) ; } java.util.List < TYPE_1 > VAR_2 = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( TYPE_3 < TYPE_1 > ) ( returnValue ) ) , VAR_3 ) ) ; TYPE_4 . METHOD_4 ( VAR_2 , new TYPE_5 ( ) ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( network . getId ( ) ) ) . thenReturn ( network ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( network . getId ( ) ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_6 ( network . getId ( ) ) ; TYPE_4 . METHOD_7 ( METHOD_8 ( VAR_3 ) . METHOD_9 ( ) , TYPE_5 . METHOD_10 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 . METHOD_3 ( ) . setId ( VAR_3 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , VAR_1 ) ; assertEquals ( VAR_4 , VAR_1 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; java.lang.String name = VAR_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( name . equals ( VAR_2 . METHOD_6 ( VAR_3 , VAR_4 . VmTemplate ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( cmd . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( TYPE_2 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( TYPE_2 ) ( returnValue ) ) ; if ( ( ( VAR_1 ) == null ) || ( ( VAR_1 . METHOD_2 ( ) ) != ( VAR_2 ) ) ) { model . METHOD_3 ( ) ; } else { model . METHOD_4 ( ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_3 . METHOD_1 ( VAR_2 , new TYPE_4 ( ) ) ; java.util.ArrayList < TYPE_5 . Disk > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_4 : VAR_2 ) { VAR_3 . add ( VAR_4 . METHOD_2 ( ) ) ; } setItems ( VAR_3 ) ; } 
private void METHOD_1 ( int VAR_1 ) { TYPE_1 . when ( VAR_2 . METHOD_2 ( VAR_3 . Matchers < org.ovirt.engine.core.compat.Guid > any ( VAR_4 . Guid class ) , VAR_3 . Matchers < TYPE_2 > any ( VAR_5 class ) ) ) . thenReturn ( METHOD_3 ( VAR_1 ) ) ; } 
private static java.lang.Boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String name ) { if ( VAR_1 . METHOD_2 ( name ) ) { if ( ( VAR_1 . METHOD_3 ( name ) ) instanceof java.lang.Boolean ) { return ( ( java.lang.Boolean ) ( VAR_1 . METHOD_3 ( name ) ) ) ; } return java.lang.Boolean . METHOD_4 ( VAR_1 . METHOD_3 ( name ) . toString ( ) ) ; } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 model = METHOD_4 ( null ) ; model . METHOD_5 ( new TYPE_2 ( ) ) ; model . METHOD_6 ( ) . METHOD_7 ( new TYPE_3 ( ) ) ; VAR_1 . METHOD_8 ( ) ; try { VAR_2 . add ( model ) ; METHOD_9 ( STRING_1 ) ; } catch ( TYPE_4 VAR_3 ) { METHOD_10 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = METHOD_2 ( ) ; return TYPE_2 . METHOD_3 ( VAR_2 ) . when ( ( ( VAR_1 != null ) && ( cluster . METHOD_4 ( ) ? ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( cluster . METHOD_5 ( ) ) ) > 0 : false ) ) ) ; } 
public boolean METHOD_1 ( TYPE_1 status ) { if ( ( VAR_1 . size ( ) ) == 0 ) { synchronized ( VAR_1 ) { VAR_1 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } } return ! ( VAR_1 . METHOD_5 ( status . getValue ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( disk . getId ( ) , TYPE_3 . METHOD_2 ( ) ) , VAR_1 , TYPE_4 . getName ( ) , STRING_1 , 0 , null , true , TYPE_3 . getParameters ( ) . METHOD_3 ( ) , false , STRING_1 ) ; } 
protected void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_1 ) { VAR_2 . add ( METHOD_2 ( cluster ) ) ; } METHOD_3 ( ) . setItems ( VAR_2 ) ; if ( VAR_3 ) { VAR_3 = false ; METHOD_4 ( ) ; } } 
public java.lang.String METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( ( ( ( ( ( ( ( METHOD_3 ( ) ? STRING_1 : STRING_2 ) + ( METHOD_4 ( ) ? STRING_3 : STRING_4 ) ) + STRING_5 ) + STRING_6 ) + ( VAR_2 [ VAR_3 ] ) ) + STRING_7 ) + ( ( METHOD_5 ( ) ) / INT_1 ) ) + STRING_8 ) ) ; return org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( ( ( METHOD_5 ( ) ) / INT_1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( VAR_1 ) ) ; METHOD_6 ( cmd ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_3 , VAR_4 , VAR_2 ) ) . when ( VAR_5 ) . METHOD_8 ( VAR_3 ) ; TYPE_3 . METHOD_9 ( cmd . validate ( ) ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { final TYPE_1 params = new TYPE_1 ( host . getId ( ) , VAR_1 ) ; TYPE_2 . METHOD_2 ( new TYPE_3 ( ) { public void METHOD_3 ( ) { TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_2 , params , TYPE_5 . METHOD_5 ( ) ) ; } } ) ; } } 
private boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( VAR_4 . METHOD_2 ( ) ) == VAR_2 ) { if ( ( VAR_3 == null ) || ( VAR_3 . equals ( VAR_4 . METHOD_3 ( ) ) ) ) { return true ; } } } return false ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( TYPE_1 . METHOD_2 ( ) ) ; } else { TYPE_1 . METHOD_7 ( false ) ; log . METHOD_8 ( STRING_1 ) ; } } 
protected void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( result ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( ( domain . METHOD_5 ( ) ) == ( VAR_2 ) ) { result . METHOD_6 ( domain ) ; } } TYPE_1 . METHOD_7 ( ) . METHOD_8 ( result ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > > ( ) ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , VAR_3 , aQuery ) ; } 
protected java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( ) ; java.lang.String VAR_2 = TYPE_1 . METHOD_3 ( ( VAR_1 != null ? VAR_1 : STRING_1 ) ) ; java.lang.String VAR_3 = STRING_2 ; if ( ! ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ) { VAR_3 = STRING_3 + ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) ) ; } return ( ( getEntity ( ) . getName ( ) ) + STRING_4 ) + VAR_3 ; } 
private void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; int VAR_2 = 0 ; for ( int VAR_3 = 1 ; VAR_2 < INT_1 ; VAR_3 ++ ) { VAR_2 = VAR_3 * INT_2 ; VAR_1 . add ( java.lang.String.valueOf ( VAR_2 ) ) ; } METHOD_2 ( ) . setItems ( VAR_1 , java.lang.String.valueOf ( INT_2 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } } 
protected boolean METHOD_1 ( ) { if ( ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) != ( VAR_2 ) ) ) { addCanDoActionMessage ( VAR_3 ) ; return false ; } return true ; } 
public TYPE_1 getValue ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; case VAR_4 : return METHOD_3 ( ) . METHOD_6 ( ) ; case VAR_5 : return METHOD_3 ( ) . METHOD_7 ( ) ; case VAR_6 : return METHOD_3 ( ) . METHOD_8 ( ) ; default : return METHOD_3 ( ) . METHOD_6 ( ) ; } } 
private static java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( java.lang.String model , int VAR_1 , int VAR_2 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_3 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; VAR_3 . put ( VAR_4 , ( model + VAR_1 ) ) ; VAR_3 . put ( VAR_5 , java.lang.Integer . toString ( VAR_2 ) ) ; return VAR_3 ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 VAR_3 = storageDomain . METHOD_3 ( ) ; if ( ! ( VAR_1 . equals ( VAR_3 ) ) ) { return new TYPE_1 . ValidationResult ( VAR_4 ) ; } return VAR_5 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 , true ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . METHOD_4 ( ( ( VAR_1 . METHOD_5 ( ) . size ( ) ) == 2 ) ) ; TYPE_2 . assertEquals ( VAR_2 , VAR_1 . getId ( ) ) ; } 
public static TYPE_1 . ValidationResult METHOD_1 ( int VAR_1 , int VAR_2 ) { if ( VAR_2 < VAR_1 ) { return new TYPE_1 . ValidationResult ( VAR_3 , java.lang.String . METHOD_2 ( STRING_1 , VAR_1 ) , java.lang.String . METHOD_2 ( STRING_2 , VAR_2 ) ) ; } return VAR_4 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { final TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( METHOD_3 ( ) ) ; final java.util.ArrayList < TYPE_3 . VdcActionParametersBase > VAR_4 = new java.util.ArrayList < > ( ) ; VAR_4 . METHOD_4 ( VAR_2 . METHOD_5 ( VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) ) ) ; TYPE_4 . METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_5 , VAR_4 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( TYPE_1 . METHOD_2 ( domain ) ) { VAR_2 . add ( domain ) ; } } METHOD_3 ( ) . setItems ( VAR_2 ) ; if ( VAR_3 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . METHOD_3 ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { cmd . METHOD_2 ( VAR_1 ) ; cmd . METHOD_1 ( ) ; TYPE_1 . assertEquals ( VAR_2 , cmd . METHOD_3 ( ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( TYPE_2 . any ( VAR_4 . VDS class ) , TYPE_2 . any ( VAR_5 class ) ) ; } 
private void METHOD_1 ( TYPE_1 iface ) { if ( ( iface . getId ( ) ) == null ) { iface . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; } METHOD_3 ( iface ) ; iface . METHOD_4 ( null ) ; iface . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ; } 
protected java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > METHOD_1 ( ) { if ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != null ) && ( ! ( TYPE_2 . equals ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) ) ) { return TYPE_3 . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) , TYPE_4 . name ( ) ) ; } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid vmId = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; TYPE_1 VAR_1 = dao . get ( vmId ) ; VAR_1 . METHOD_2 ( TYPE_2 ) ; dao . METHOD_3 ( VAR_1 ) ; VAR_1 = dao . get ( vmId ) ; TYPE_3 . METHOD_4 ( ( ( VAR_1 . METHOD_5 ( ) . getValue ( ) ) == ( TYPE_2 . getValue ( ) ) ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 . getId ( ) ) ; } 
public static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) throws java.lang.Exception { java.lang.String value = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; if ( value == null ) { throw new TYPE_3 ( VAR_3 , java.lang.String . METHOD_3 ( VAR_4 , VAR_2 ) ) ; } return TYPE_4 . METHOD_4 ( value , TYPE_5 . name ( ) ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_5 = METHOD_5 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( command . METHOD_8 ( ) ) ; TYPE_1 . METHOD_9 ( command . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_2 . toString ( ) ) ) ; } 
public boolean equals ( java.lang.Object obj ) { boolean returnValue = super . equals ( obj ) ; if ( ( ( ! returnValue ) && ( obj != null ) ) && ( obj instanceof TYPE_1 ) ) { returnValue = ( ! ( STRING_1 . equals ( METHOD_1 ( ) ) ) ) && ( TYPE_2 . METHOD_2 ( METHOD_1 ( ) , ( ( TYPE_1 ) ( obj ) ) . METHOD_1 ( ) ) ) ; } return returnValue ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) ) ; return ( ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 model ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_2 ) ) ) ; if ( ! ( TYPE_3 . METHOD_3 ( VAR_1 ) ) ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_3 = model . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_3 . setEntity ( VAR_1 ) ; VAR_3 . setIsChangable ( false ) ; } METHOD_6 ( model ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; _asyncQuery . METHOD_2 ( this ) ; VAR_1 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String version = ( ( java.lang.String ) ( result ) ) ; METHOD_3 ( ) . METHOD_4 ( version ) ; } } ; TYPE_1 . METHOD_5 ( _asyncQuery ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( new TYPE_2 ( VAR_1 , vm . getId ( ) ) , VAR_4 , STRING_1 , null , 0 , VAR_2 , true , true , true , null , null , null , null ) ; vm . METHOD_3 ( ) . put ( VAR_1 , VAR_3 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; boolean VAR_1 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_3 ( VAR_2 , cluster . METHOD_4 ( ) . getValue ( ) ) ) ) ; getModel ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; return validate ( TYPE_2 . METHOD_1 ( TYPE_3 . METHOD_5 ( METHOD_2 ( ) , TYPE_1 . getParameters ( ) . METHOD_6 ( ) ) , TYPE_1 . METHOD_7 ( ) . METHOD_8 ( ) , TYPE_1 . METHOD_9 ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String id ) { TYPE_2 VAR_1 = getEntity ( ) ; if ( ! ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_3 . METHOD_4 ( id ) ) ) ) { throw new TYPE_4 ( VAR_2 ) ; } return METHOD_5 ( VAR_3 , new TYPE_5 ( VAR_1 . getId ( ) , VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; VAR_4 . METHOD_5 ( ) ; try { resource . METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_9 ( VAR_5 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_3 ) ) . when ( VAR_2 ) . METHOD_8 ( TYPE_2 . METHOD_9 ( ) ) ; TYPE_3 . METHOD_10 ( cmd , VAR_4 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( vmId ) , aQuery ) ; } 
protected void METHOD_1 ( java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.String > > VAR_1 , TYPE_2 VAR_2 ) throws java.lang.Exception { for ( TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_3 : VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) , ( ( VAR_3 . METHOD_5 ( ) ) + STRING_1 ) ) ; } } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( METHOD_2 ( ) ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( METHOD_5 ( ) ) ) ) ) && ( validate ( validator . METHOD_6 ( METHOD_5 ( ) , METHOD_7 ( ) ) ) ) ; } 
public boolean METHOD_1 ( TYPE_1 value , TYPE_2 context ) { if ( ( ( value . METHOD_2 ( ) ) == null ) || ( STRING_1 . equals ( value . METHOD_2 ( ) . METHOD_3 ( ) ) ) ) { return true ; } TYPE_3 VAR_1 = ( VAR_2 . METHOD_4 ( value . METHOD_5 ( ) ) ) ? VAR_3 : VAR_4 ; return VAR_1 . METHOD_6 ( ) . METHOD_7 ( value . METHOD_2 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 ) ; if ( ! ( VAR_2 . METHOD_3 ( ) ) ) { VAR_3 . error ( ( STRING_1 + STRING_2 ) , VAR_1 , TYPE_3 . METHOD_4 ( ) ) ; return null ; } java.lang.String version = VAR_2 . METHOD_5 ( VAR_4 ) ; java.lang.String VAR_5 = VAR_2 . METHOD_5 ( VAR_6 ) ; java.lang.String VAR_7 = VAR_2 . METHOD_5 ( VAR_8 ) ; return new TYPE_1 ( version , VAR_5 , VAR_7 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network , boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( network . getName ( ) ) ; VAR_2 . METHOD_3 ( network . getId ( ) ) ; TYPE_2 parameters = new TYPE_2 ( VAR_2 ) ; parameters . METHOD_4 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_5 ( VAR_3 , parameters , new TYPE_3 ( ) { public void METHOD_6 ( TYPE_4 result ) { VAR_4 . METHOD_7 ( ) . METHOD_8 ( ) ; } } ) ; } 
private void METHOD_1 ( ) { model . METHOD_2 ( ) . METHOD_3 ( new TYPE_1 ( ) { public void METHOD_4 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { boolean VAR_2 = model . METHOD_5 ( ) ; VAR_3 super . METHOD_6 ( VAR_2 , true ) ; } } ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( java.lang.String.valueOf ( METHOD_3 ( ) . METHOD_5 ( ) ) ) ; VAR_4 . METHOD_4 ( java.lang.Boolean . toString ( METHOD_3 ( ) . METHOD_6 ( ) ) ) ; VAR_5 . METHOD_4 ( TYPE_2 . METHOD_7 ( METHOD_3 ( ) . METHOD_8 ( ) ) ) ; VAR_6 . METHOD_9 ( METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( VAR_3 . METHOD_3 ( VAR_1 ) ) ) { VAR_4 . METHOD_4 ( VAR_5 , VAR_1 ) ; VAR_6 = true ; VAR_7 = true ; VAR_8 . METHOD_5 ( STRING_1 , VAR_1 . getId ( ) , VAR_1 . METHOD_6 ( ) ) ; } } 
public void METHOD_1 ( ) throws TYPE_1 { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( METHOD_2 ( VAR_3 ) ) ; METHOD_3 ( ) . METHOD_4 ( ) ; java.util.Map < java.lang.String , java.lang.String > VAR_4 = METHOD_3 ( ) . METHOD_5 ( ) . getReturnValue ( ) ; TYPE_3 . METHOD_6 ( VAR_4 ) ; TYPE_3 . assertEquals ( METHOD_7 ( ) , VAR_4 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( vmId ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( vmId , VAR_5 ) ) . thenReturn ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; TYPE_4 . METHOD_6 ( VAR_6 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_6 ) . METHOD_7 ( ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_2 == null ) { VAR_2 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; VAR_3 . put ( VAR_1 . METHOD_2 ( ) , VAR_2 ) ; } VAR_2 . put ( VAR_1 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( VAR_1 ) ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status , java.lang.String name ) { final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( status , name , VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_2 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_6 ( VAR_1 ) ) ; cmd . METHOD_7 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return VAR_1 ; } 
protected boolean METHOD_1 ( ) { return ( ( ( ( getParameters ( ) . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( TYPE_1 . getVm ( ) ) != null ) ) && ( ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) || ( ( TYPE_1 . getVm ( ) . getStatus ( ) ) == ( VAR_2 ) ) ) ) && ( ( TYPE_1 . getVm ( ) . METHOD_4 ( ) ) != null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { int VAR_1 = 2 ; METHOD_2 ( VAR_2 , VAR_3 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 } , METHOD_3 ( VAR_1 ) ) ; TYPE_1 VAR_5 = METHOD_4 ( null ) ; VAR_6 . METHOD_5 ( VAR_5 ) ; VAR_7 . METHOD_6 ( ) ; java.util.List < TYPE_2 > VAR_8 = METHOD_7 ( ) ; METHOD_8 ( VAR_8 ) ; assertEquals ( VAR_8 . size ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; command = org.mockito.Mockito . METHOD_4 ( new TYPE_2 < TYPE_1 > ( parameters ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( ) ) . thenReturn ( VAR_3 ) ; for ( TYPE_1 storageDomain : VAR_1 ) { org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( storageDomain . getId ( ) , VAR_4 ) ) . thenReturn ( storageDomain ) ; } } 
public TYPE_1 METHOD_1 ( java.lang.String id , TYPE_2 action ) { getEntity ( id ) ; if ( ( action . METHOD_2 ( ) ) && ( action . METHOD_3 ( ) ) ) { return METHOD_4 ( VAR_1 , new TYPE_3 ( VAR_2 , org.ovirt.engine.core.compat.Guid . METHOD_5 ( id ) , true ) ) ; } else { return METHOD_1 ( id ) ; } } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( STRING_1 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; for ( TYPE_1 vm : result ) { TYPE_2 . assertEquals ( STRING_1 , vm . METHOD_5 ( ) ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; TYPE_2 . METHOD_1 ( VAR_1 , new TYPE_3 ( ) ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( value ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . METHOD_3 ( TYPE_3 . METHOD_4 ( from . METHOD_5 ( ) ) ) ; } if ( from . METHOD_6 ( ) ) { to . METHOD_7 ( from . METHOD_8 ( ) ) ; } return to ; } 
public static void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_2 ( ) ) == ( VAR_4 ) ) { list . add ( VAR_3 ) ; if ( ( VAR_3 . METHOD_3 ( ) ) != null ) { TYPE_2 . METHOD_1 ( VAR_3 , VAR_3 . METHOD_3 ( ) ) ; } } } VAR_1 . METHOD_4 ( list ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_3 , VAR_4 , java.lang.Boolean . TRUE } , true , true ) ) ; TYPE_1 . Disk disk = resource . METHOD_5 ( METHOD_6 ( ) ) ; METHOD_7 ( disk ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 . Frontend class ) . METHOD_3 ( VAR_2 class ) ; METHOD_4 ( VAR_3 class ) ; METHOD_2 ( VAR_4 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_5 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_6 class ) . to ( VAR_7 class ) . METHOD_3 ( VAR_2 class ) ; METHOD_2 ( VAR_8 class ) . METHOD_3 ( VAR_2 class ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( 1 , INT_1 , INT_2 , 2 , 1 ) ; TYPE_2 . assertEquals ( 1 , VAR_1 . size ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( nic , null ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = null ; if ( ( getModel ( ) . METHOD_2 ( ) ) && ( ! ( getModel ( ) . METHOD_3 ( true ) ) ) ) { VAR_1 = TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; } return VAR_1 ; } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( new java.util.ArrayList ( TYPE_2 . METHOD_4 ( TYPE_3 . getParameters ( ) . METHOD_5 ( ) ) ) ) ; TYPE_4 VAR_2 = METHOD_6 ( VAR_1 ) ; return validate ( VAR_2 . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( context ) ; VAR_1 . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 VAR_2 , java.lang.Object sender , TYPE_4 args ) { METHOD_5 ( ) ; } } ) ; TYPE_5 VAR_3 = VAR_4 . get ( VAR_5 ) ; VAR_3 . METHOD_1 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( boolean VAR_1 , boolean VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_1 command = new TYPE_1 ( VAR_3 ) ; command . METHOD_4 ( org.mockito.Mockito . METHOD_5 ( VAR_4 . AuditLogDirector class ) ) ; return org.mockito.Mockito . METHOD_6 ( command ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 resource = new TYPE_1 ( VAR_1 [ 0 ] . toString ( ) , VAR_2 ) ; VAR_2 . METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( STRING_1 , null ) ; METHOD_5 ( resource . get ( ) , 0 ) ; } 
private static TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , boolean VAR_2 ) { if ( VAR_1 . isEmpty ( ) ) { return null ; } if ( VAR_2 ) { return ( VAR_1 . size ( ) ) >= 2 ? VAR_1 . get ( 1 ) : VAR_1 . get ( 0 ) ; } return VAR_1 . get ( 0 ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( ! ( VAR_3 . isEmpty ( ) ) ) { VAR_2 . put ( VAR_4 , VAR_3 ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_2 class ) . value ( ) ) ; model . METHOD_4 ( VAR_1 ) ; model . METHOD_5 ( ) . METHOD_6 ( TYPE_4 . value ( ) ) ; model . METHOD_7 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ; model . METHOD_7 ( ) . METHOD_7 ( ) . add ( TYPE_5 . name ( ) ) ; return model ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) { return true ; } if ( ( VAR_1 == null ) || ( ( METHOD_1 ( ) ) != ( VAR_1 . METHOD_1 ( ) ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( TYPE_2 . equals ( VAR_2 , VAR_3 ) ) && ( TYPE_2 . equals ( VAR_4 , VAR_5 ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.util.Map < java.lang.String , java.lang.String > VAR_4 = new java.util.HashMap < > ( ) ; VAR_4 . put ( STRING_1 , VAR_2 ) ; VAR_4 . put ( STRING_2 , VAR_3 ) ; TYPE_2 tempVar = new TYPE_2 ( TYPE_3 . METHOD_2 ( ) , VAR_1 , VAR_4 ) ; TYPE_4 . getInstance ( ) . METHOD_3 ( VAR_5 , tempVar , TYPE_5 . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( TYPE_4 . METHOD_4 ( VAR_2 ) ) ) ) . thenReturn ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_5 ( STRING_1 ) ; vds . METHOD_6 ( TYPE_5 . METHOD_7 ( ) ) ; VAR_3 . add ( vds ) ; } 
public TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( TYPE_4 VAR_1 , TYPE_5 < TYPE_6 > VAR_2 , final TYPE_5 < TYPE_2 > VAR_3 , final TYPE_5 < TYPE_3 > VAR_4 ) { TYPE_7 < TYPE_2 , TYPE_3 > result = new TYPE_7 < TYPE_2 , TYPE_3 > ( VAR_1 , VAR_2 ) ; result . METHOD_2 ( VAR_3 ) ; result . METHOD_3 ( VAR_4 ) ; return result ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) ) ) ; METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( false , VAR_1 ) ; try { cmd . METHOD_4 ( ) ; } catch ( TYPE_1 e ) { TYPE_2 . assertEquals ( VAR_1 , e . METHOD_5 ( ) ) ; } org.mockito.Mockito . METHOD_6 ( VAR_2 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_3 . any ( VAR_3 class ) ) ; } 
private java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = VAR_2 < java.lang.String > METHOD_2 ( VAR_3 ) ; java.lang.String VAR_4 = STRING_1 ; if ( VAR_5 ) { VAR_4 += VAR_2 < java.lang.String > METHOD_2 ( VAR_6 ) ; } if ( VAR_7 ) { VAR_4 += VAR_2 < java.lang.String > METHOD_2 ( VAR_8 ) ; } VAR_1 . METHOD_3 ( VAR_9 , VAR_4 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = VAR_1 . get ( VAR_2 ) ; TYPE_1 . METHOD_2 ( network ) ; java.lang.String name = network . getName ( ) ; TYPE_1 . METHOD_3 ( name . equals ( VAR_3 . METHOD_4 ( VAR_2 , VAR_4 . Network ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.util.List < TYPE_1 > VAR_3 ) { aQuery . METHOD_2 ( true ) ; TYPE_2 parameters = new TYPE_2 ( VAR_1 , VAR_2 , VAR_3 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , parameters , aQuery ) ; } 
protected void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 < TYPE_2 . DiskImage > VAR_2 ) { TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = null ; for ( TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 : METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 = ( VAR_3 == null ) ? VAR_4 . METHOD_3 ( ) : VAR_3 . METHOD_4 ( VAR_4 . METHOD_3 ( ) ) ; } TYPE_4 . METHOD_5 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 , this . METHOD_3 ( ) . getName ( ) ) ; try { if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; } } catch ( TYPE_1 e ) { log . error ( STRING_2 , e ) ; } TYPE_2 . METHOD_6 ( this ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( METHOD_4 ( ) , java.lang.Boolean . FALSE ) ) . thenReturn ( TYPE_1 . METHOD_5 ( vm ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( ) ) . when ( cmd ) . METHOD_7 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters , boolean VAR_2 , boolean VAR_3 ) { TYPE_1 returnValue = METHOD_2 ( VAR_1 ) ; if ( returnValue != null ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < > ( ) ; list . add ( returnValue ) ; return list ; } else { return METHOD_3 ( VAR_1 , parameters , false , VAR_2 , VAR_3 , null ) ; } } 
public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { return METHOD_2 ( new TYPE_3 < TYPE_1 > ( ) { public TYPE_1 METHOD_3 ( ) { TYPE_4 VAR_2 = new TYPE_4 ( ) ; VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_3 . METHOD_8 ( VAR_1 . METHOD_9 ( ) . toString ( ) , VAR_2 ) ; return null ; } } ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , METHOD_5 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , METHOD_6 ( ) ) ; VAR_4 . METHOD_7 ( ) ; METHOD_8 ( resource . get ( ) , 0 ) ; } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 . VdcActionType , TYPE_2 . VdcActionParametersBase > VAR_1 = new TYPE_1 < TYPE_2 . VdcActionType , TYPE_2 . VdcActionParametersBase > ( VAR_2 , new TYPE_2 . VdcActionParametersBase ( ) , null ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito . METHOD_3 ( VAR_4 ) . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito . METHOD_3 ( VAR_5 ) . METHOD_5 ( TYPE_3 . any ( VAR_6 class ) ) ; TYPE_4 . assertEquals ( STRING_1 , VAR_1 , VAR_3 . METHOD_6 ( ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { TYPE_1 entity = VAR_2 . METHOD_1 ( rs , VAR_1 ) ; entity . METHOD_2 ( TYPE_4 . METHOD_3 ( ( ( java.lang.Integer [ ] ) ( rs . METHOD_4 ( STRING_1 ) . METHOD_4 ( ) ) ) ) ) ; return entity ; } 
public TYPE_1 add ( java.lang.String name , java.util.Map < java.lang.String , java.lang.String > VAR_1 ) { TYPE_2 . METHOD_1 ( name ) ; if ( ( VAR_1 == null ) || ( VAR_1 . isEmpty ( ) ) ) { return this ; } this . VAR_1 . put ( name , VAR_1 ) ; return this ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { try { TYPE_5 . METHOD_2 ( response , TYPE_6 . METHOD_3 ( METHOD_4 ( VAR_1 ) ) ) ; } catch ( java.lang.Exception VAR_2 ) { TYPE_5 . METHOD_5 ( response , VAR_3 , VAR_2 ) ; } } 
protected java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { java.util.Map < java.lang.String , java.lang.String > parameters = new java.util.HashMap < > ( ) ; if ( ( cluster . METHOD_2 ( ) ) != null ) { parameters . METHOD_3 ( cluster . METHOD_2 ( ) ) ; } return parameters ; } 
protected java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { java.util.ArrayList < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 storage : VAR_1 ) { if ( storage . METHOD_2 ( ) . equals ( VAR_2 ) ) { VAR_3 . add ( storage ) ; } } return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; TYPE_2 . METHOD_3 ( command . validate ( ) ) ; TYPE_2 . METHOD_4 ( command . getReturnValue ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_3 . toString ( ) ) ) ; } 
protected < TYPE_1 extends TYPE_2 > TYPE_1 METHOD_1 ( TYPE_3 < TYPE_1 > VAR_1 ) { TYPE_1 dao = TYPE_4 . get ( VAR_1 ) ; if ( dao instanceof TYPE_5 ) { TYPE_5 VAR_2 = ( ( TYPE_5 ) ( dao ) ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( this ) ; } else { } return dao ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getParameters ( ) . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_6 ( METHOD_7 ( ) . getStoragePoolId ( ) , getParameters ( ) . METHOD_4 ( ) ) ; getReturnValue ( ) . METHOD_8 ( true ) ; } 
protected org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface map ( TYPE_1 entity , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface template ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = super . map ( entity , template ) ; if ( entity . METHOD_1 ( ) ) { TYPE_2 . Network VAR_1 = METHOD_2 ( entity . METHOD_3 ( ) ) ; iface . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } return iface ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 ) ; java.util.Map < java.lang.String , java.lang.String > map = new TYPE_2 < > ( ) ; map . put ( STRING_1 , STRING_2 ) ; VAR_1 . METHOD_2 ( map ) ; VAR_1 . METHOD_3 ( STRING_3 ) ; dao . METHOD_4 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_3 . METHOD_5 ( result . equals ( VAR_1 ) ) ; } 
protected boolean METHOD_1 ( TYPE_1 status , TYPE_2 . VdcBllMessages VAR_1 ) { boolean returnValue = false ; TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( ) ; if ( VAR_2 != null ) { returnValue = ( VAR_2 . METHOD_3 ( ) ) != status ; if ( ( ! returnValue ) && ( ! ( TYPE_4 . getReturnValue ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 . name ( ) ) ) ) ) { addCanDoActionMessage ( VAR_1 ) ; } } return returnValue ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( VAR_2 ) ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , VAR_1 . size ( ) ) ; METHOD_5 ( VAR_1 . get ( 0 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_3 VAR_4 = new TYPE_4 ( VAR_5 ) ; METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; VAR_7 . METHOD_5 ( ) ; try { TYPE_2 . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_5 VAR_8 ) { METHOD_8 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_9 ( ) ; } } 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 < TYPE_4 > ( ) { public void METHOD_5 ( TYPE_5 < ? extends TYPE_4 > VAR_2 , java.lang.Object sender , TYPE_4 args ) { VAR_3 . get ( ) . METHOD_6 ( ) ; } } ) ; METHOD_7 ( VAR_1 ) ; METHOD_8 ( ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == false ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_3 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . DiskImage entity = METHOD_2 ( ) ; TYPE_2 < TYPE_3 . Disk , TYPE_1 . DiskImage > VAR_1 = ( ( TYPE_2 < TYPE_3 . Disk , TYPE_1 . DiskImage > ) ( ( ( TYPE_4 ) ( resource ) ) . METHOD_3 ( ) ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) , entity ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ( ( ( java.util.List < java.lang.String > ) ( source ) ) . size ( ) ) > 0 ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
private static void METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , TYPE_2 VAR_2 ) { if ( ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( ) ) != null ) { java.lang.String VAR_3 = org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_2 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( ) . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public TYPE_1 . Network METHOD_1 ( TYPE_1 . Network VAR_1 ) { METHOD_2 ( VAR_2 . Network class , VAR_1 ) ; TYPE_1 . Network network = map ( VAR_1 , map ( get ( ) ) ) ; network . METHOD_3 ( ) . METHOD_4 ( network . getId ( ) ) ; network . METHOD_3 ( ) . METHOD_5 ( cluster . METHOD_3 ( ) . getId ( ) ) ; METHOD_6 ( VAR_3 , new TYPE_2 ( network . METHOD_3 ( ) ) ) ; return get ( ) ; } 
protected TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , TYPE_1 . VdcActionParametersBase parameters ) { if ( VAR_1 == ( VAR_2 ) ) { return parameters ; } TYPE_1 . VdcActionParametersBase VAR_3 = parameters . METHOD_2 ( ) ; if ( VAR_3 == null ) { java.lang.String VAR_4 = STRING_1 + VAR_1 ; log . error ( VAR_4 ) ; throw new TYPE_2 ( VAR_5 , VAR_4 ) ; } VAR_3 . METHOD_3 ( parameters . METHOD_4 ( ) ) ; return VAR_3 ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) . getValue ( ) ) ) ) ; if ( METHOD_4 ( ) . METHOD_5 ( ) ) { METHOD_4 ( ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; METHOD_4 ( ) . setIsChangable ( ( VAR_2 && ( METHOD_8 ( ) ) ) ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_5 ( VAR_1 ) ; TYPE_2 . METHOD_6 ( command ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( command , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; try { METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_7 ) { METHOD_7 ( VAR_7 , VAR_8 , VAR_4 ) ; } finally { VAR_2 . METHOD_8 ( ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( 0 ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( VAR_3 class ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_5 class ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; TYPE_4 id = ( ( TYPE_4 ) ( VAR_1 . METHOD_3 ( ) ) ) ; java.lang.String name = VAR_1 . METHOD_2 ( ) ; return new TYPE_1 ( VAR_2 , id , name ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( ( METHOD_2 ( ) . METHOD_3 ( ) . getEntity ( ) ) != null ) && ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( ) . getEntity ( ) ) ) ) { METHOD_4 ( ) . setEntity ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; } else { METHOD_4 ( ) . setIsChangable ( true ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( VAR_2 class ) ; java.util.List < java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; TYPE_3 . METHOD_5 ( STRING_2 , ( ( VAR_3 . METHOD_6 ( STRING_2 ) ) || ( VAR_3 . METHOD_6 ( STRING_3 ) ) ) ) ; TYPE_3 . METHOD_5 ( STRING_4 , VAR_3 . METHOD_6 ( STRING_4 ) ) ; } 
protected void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 <= 0 ) { METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; } else { METHOD_3 ( VAR_3 ) ; METHOD_5 ( METHOD_2 ( ) ) ; } TYPE_1 . METHOD_6 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 . VM vm = new TYPE_1 . VM ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; vm . METHOD_3 ( VAR_1 ) ; TYPE_1 . VM map = TYPE_3 . map ( vm , ( ( TYPE_1 . VM ) ( null ) ) ) ; METHOD_4 ( map . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( template == null ) { return ; } METHOD_3 ( template , template . getStoragePoolId ( ) . getValue ( ) ) ; METHOD_4 ( template . METHOD_5 ( ) ) ; METHOD_6 ( template . METHOD_7 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( final int VAR_1 , final int VAR_2 , final int VAR_3 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 , VAR_3 ) ; org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_9 ( ) ; return vm ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 == ( VAR_3 ) ) { VAR_4 . METHOD_2 ( VAR_2 , 0 ) ; } else if ( VAR_1 == ( VAR_5 ) ) { if ( VAR_2 != null ) { VAR_4 . METHOD_2 ( VAR_2 , 0 ) ; this . VAR_6 = VAR_2 ; } else if ( ( this . VAR_6 ) != null ) { VAR_4 . METHOD_3 ( this . VAR_6 ) ; } } else { super . METHOD_1 ( VAR_1 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; if ( VAR_2 ) { METHOD_5 ( ) ; } VAR_1 . METHOD_2 ( STRING_2 ) ; } catch ( TYPE_1 e ) { if ( ! ( TYPE_2 . METHOD_6 ( ) ) ) { VAR_1 . error ( java.lang.String . METHOD_7 ( STRING_3 , e . METHOD_8 ( ) ) , e ) ; } METHOD_9 ( ) ; } } 
public void onSuccess ( java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( ( ( TYPE_2 < TYPE_1 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; VAR_1 . add ( VAR_2 ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { int VAR_1 = VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ; log . METHOD_3 ( STRING_1 , VAR_1 ) ; TYPE_1 . METHOD_4 ( ( VAR_1 * INT_1 ) ) ; TYPE_2 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_4 , new TYPE_3 ( TYPE_4 . METHOD_7 ( ) , VAR_5 ) ) ; } 
public boolean METHOD_1 ( ) { boolean VAR_1 = ( ( METHOD_2 ( ) . size ( ) ) > 0 ) || ( ( VAR_2 . size ( ) ) > 0 ) ; if ( ! VAR_1 ) { METHOD_3 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } METHOD_5 ( VAR_1 ) ; return ( super . METHOD_1 ( ) ) && ( METHOD_6 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( METHOD_4 ( ) ) == null ) { METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } METHOD_9 ( getVm ( ) . getId ( ) ) ; METHOD_10 ( true ) ; return null ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_2 . METHOD_4 ( VAR_3 , VAR_4 ) ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_4 , VAR_2 . METHOD_5 ( VAR_3 ) ) ; TYPE_2 . assertEquals ( STRING_3 , VAR_4 , VAR_2 . METHOD_5 ( VAR_1 , VAR_3 ) ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 ) { int VAR_3 = ( VAR_1 . METHOD_2 ( ) ) ? TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , INT_1 ) : VAR_2 . METHOD_5 ( ) ; if ( VAR_3 > 0 ) { VAR_1 . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_3 ) ) ; VAR_1 . METHOD_8 ( TYPE_5 . METHOD_9 ( VAR_1 , VAR_2 ) ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { VAR_3 . METHOD_2 ( VAR_2 . getId ( ) . toString ( ) ) ; } if ( VAR_3 == null ) { return ; } METHOD_3 ( VAR_3 ) ; } 
private boolean METHOD_1 ( ) { boolean VAR_1 = true ; for ( TYPE_1 VAR_2 : ( ( TYPE_2 < TYPE_1 > ) ( METHOD_2 ( ) ) ) ) { if ( ! ( METHOD_3 ( VAR_2 ) ) ) { VAR_1 = false ; } else { VAR_2 . METHOD_4 ( null ) ; } } if ( ! VAR_1 ) { METHOD_5 ( new TYPE_3 ( STRING_1 ) ) ; } return VAR_1 ; } 
private void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { java.util.List < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > VAR_3 = new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > ( ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > VAR_4 = new org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > ( VAR_1 . get ( i ) ) ; VAR_3 . add ( VAR_4 ) ; } VAR_2 . setItems ( VAR_3 ) ; } 
protected java.util.List < TYPE_1 . VdcActionParametersBase > METHOD_1 ( ) { java.util.List < TYPE_1 . VdcActionParametersBase > VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( VAR_1 , new TYPE_4 < TYPE_1 . VdcActionParametersBase > ( ) { public int METHOD_4 ( TYPE_1 . VdcActionParametersBase VAR_2 , TYPE_1 . VdcActionParametersBase VAR_3 ) { return ( ( TYPE_5 ) ( VAR_2 ) ) . METHOD_5 ( ) . METHOD_6 ( ( ( TYPE_5 ) ( VAR_3 ) ) . METHOD_5 ( ) ) ; } } ) ; return VAR_1 ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = TYPE_2 . METHOD_1 ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ) ; model . METHOD_2 ( ) . setItems ( VAR_1 ) ; model . METHOD_2 ( ) . METHOD_3 ( VAR_1 . isEmpty ( ) ) ; model . METHOD_4 ( ) ; METHOD_5 ( ) ; } 
protected void METHOD_1 ( TYPE_1 . VdcQueryReturnValue returnValue , TYPE_2 < TYPE_3 > VAR_1 ) { for ( TYPE_4 item : ( ( java.util.List < TYPE_4 > ) ( returnValue . getReturnValue ( ) ) ) ) { TYPE_5 a = ( ( TYPE_5 ) ( item ) ) ; if ( ! ( VAR_1 . METHOD_2 ( a . getId ( ) ) ) ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_2 = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; VAR_2 . setEntity ( new TYPE_6 ( a ) ) ; METHOD_3 ( ) . add ( VAR_2 ) ; } } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( disk ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_4 ( vmId ) ; } 
public void METHOD_1 ( TYPE_1 constants ) { this . constants = constants ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( null ) ; TYPE_2 . getModel ( ) . METHOD_5 ( ) . METHOD_6 ( new TYPE_3 ( ) { public void METHOD_7 ( TYPE_4 VAR_1 , java.lang.Object sender , TYPE_5 args ) { VAR_2 . METHOD_8 ( ( ( TYPE_6 ) ( getModel ( ) . METHOD_9 ( ) . getEntity ( ) ) ) ) ; } } ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 ) ; vds . METHOD_2 ( INT_1 ) ; TYPE_1 host = TYPE_2 . map ( vds , ( ( TYPE_1 ) ( null ) ) ) ; METHOD_3 ( host . METHOD_4 ( ) ) ; assertEquals ( host . METHOD_4 ( ) , TYPE_3 . valueOf ( INT_2 ) ) ; } 
public void setEntity ( java.lang.Object value ) { cluster = null ; super . setEntity ( value ) ; if ( ( getEntity ( ) ) != null ) { TYPE_1 . getInstance ( ) . METHOD_1 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { cluster = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; METHOD_2 ( ) ; } } ) , ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getEntity ( ) ) ) . METHOD_3 ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_3 class ) ; if ( VAR_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) { METHOD_5 ( ) . METHOD_6 ( VAR_2 . get ( VAR_1 . METHOD_4 ( ) ) ) ; } } 
private static void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { java.lang.String VAR_3 = VAR_4 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; TYPE_2 . METHOD_4 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) , VAR_1 . getId ( ) ) , VAR_5 , TYPE_4 . METHOD_6 ( VAR_3 ) , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , true , null ) ; } 
protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_4 , VAR_5 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 [ 0 ] } , VAR_1 , VAR_2 ) ) ; try { VAR_7 . METHOD_5 ( VAR_6 [ 0 ] . toString ( ) ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_1 VAR_8 ) { METHOD_7 ( VAR_8 , VAR_3 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( resource ) ) ; METHOD_2 ( INT_1 ) ; METHOD_3 ( INT_1 ) ; METHOD_4 ( INT_1 ) ; METHOD_5 ( INT_2 ) ; METHOD_6 ( ) ; METHOD_7 ( METHOD_8 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_4 , VAR_5 [ 1 ] } ) ) ; METHOD_9 ( VAR_1 . METHOD_10 ( new TYPE_2 ( ) ) ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.compat.Guid > METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_2 = new java.util.ArrayList < > ( ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { for ( java.lang.String VAR_3 : VAR_1 ) { VAR_2 . add ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_3 ) ) ; } } return VAR_2 ; } 
private void METHOD_1 ( ) { TYPE_1 < TYPE_2 < TYPE_3 > , TYPE_4 > VAR_1 = new TYPE_1 < TYPE_2 < TYPE_3 > , TYPE_4 > ( ) { public TYPE_4 getModel ( ) { return METHOD_2 ( ) ; } public void METHOD_3 ( ) { } public void METHOD_4 ( ) { } } ; VAR_2 = new TYPE_5 ( VAR_1 , constants ) ; } 
public void METHOD_1 ( ) { resource . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( ) ; METHOD_7 ( resource . list ( ) . METHOD_8 ( ) ) ; } 
private void METHOD_1 ( ) throws TYPE_1 { try { if ( ! ( this . VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . METHOD_4 ( ) ) ) ) { METHOD_5 ( ) ; throw new TYPE_1 ( STRING_1 ) ; } } catch ( TYPE_2 e ) { METHOD_6 ( STRING_2 ) ; throw new TYPE_3 ( STRING_3 ) ; } } 
private static int METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , int VAR_2 ) { for ( TYPE_1 VAR_3 : VAR_1 ) { if ( TYPE_2 . METHOD_2 ( VAR_3 ) ) { if ( VAR_3 . METHOD_3 ( ) ) { VAR_3 . METHOD_4 ( ( ++ VAR_2 ) ) ; } break ; } } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false ) ; cmd . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( STRING_1 , cmd , VAR_1 ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_2 . METHOD_8 ( VAR_3 ) , TYPE_2 . any ( VAR_4 class ) ) ; org.mockito.Mockito . METHOD_5 ( cmd , org.mockito.Mockito . METHOD_6 ( 0 ) ) . METHOD_9 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , null ) ; TYPE_1 VAR_2 = METHOD_2 ( STRING_2 , null ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_3 , STRING_4 , STRING_5 , VAR_4 , null , null , TYPE_4 . METHOD_5 ( VAR_1 , VAR_2 ) ) ) ) ; METHOD_6 ( cmd , VAR_5 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
private static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , TYPE_1 VAR_1 , java.lang.Object VAR_2 , java.lang.Object value , java.util.List < TYPE_2 > VAR_3 ) { return TYPE_3 . METHOD_1 ( vmId , VAR_1 . METHOD_2 ( ) , VAR_1 . type ( ) , VAR_1 . METHOD_3 ( ) , VAR_2 , value , VAR_3 ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain a : VAR_2 ) { if ( ( a . METHOD_2 ( ) ) == ( VAR_4 ) ) { VAR_3 . add ( a ) ; } } VAR_1 . METHOD_3 ( VAR_3 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_4 . get ( TYPE_3 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( vm ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( VAR_3 ) ) . thenReturn ( TYPE_4 . METHOD_5 ( vm ) ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , TYPE_2 VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_3 . METHOD_3 ( VAR_1 . getName ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 . getId ( ) ) ; VAR_3 . METHOD_5 ( false ) ; TYPE_3 VAR_4 = TYPE_4 . METHOD_6 ( VAR_2 ) ; VAR_3 . METHOD_7 ( ( VAR_4 == null ? null : VAR_4 . getId ( ) ) ) ; return VAR_3 ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( new TYPE_1 ( ) { public void METHOD_8 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_2 ( ) ; } } ) ; } 
private void METHOD_1 ( TYPE_1 model ) { METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) . METHOD_4 ( ) ) ; assertEquals ( model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) , VAR_1 ) ; } 
static TYPE_1 . VM getModel ( int VAR_1 ) { TYPE_1 . VM model = new TYPE_1 . VM ( ) ; model . METHOD_1 ( VAR_2 [ VAR_1 ] ) ; model . METHOD_2 ( VAR_3 [ VAR_1 ] ) ; model . setId ( VAR_4 [ 0 ] . toString ( ) ) ; model . METHOD_3 ( new TYPE_2 ( ) ) ; model . METHOD_4 ( ) . setId ( VAR_4 [ 2 ] . toString ( ) ) ; return model ; } 
public void METHOD_1 ( ) { TYPE_1 . VdcActionParametersBase params = new TYPE_2 ( ) . METHOD_2 ( METHOD_3 ( ) , VAR_1 . VdcActionParametersBase class ) ; TYPE_3 . METHOD_4 ( params . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( params . METHOD_5 ( ) . METHOD_7 ( ) ) ; TYPE_3 . assertEquals ( params . METHOD_5 ( ) . METHOD_8 ( ) , VAR_2 ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) ; java.lang.String VAR_4 = null ; if ( ( VAR_2 . METHOD_3 ( ) ) && ( ( VAR_2 . METHOD_4 ( ) ) > 1 ) ) { VAR_4 = VAR_2 . METHOD_5 ( 2 ) ; return TYPE_2 . METHOD_1 ( VAR_4 . METHOD_6 ( ) ) ; } return null ; } 
private void METHOD_1 ( ) { VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 . VDS class ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_1 ) . getId ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_1 ) . getStoragePoolId ( ) ; org.mockito.Mockito.doReturn ( STRING_1 ) . when ( VAR_1 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_5 ( METHOD_6 ( VAR_3 , STRING_2 ) ) ) . when ( VAR_1 ) . METHOD_7 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; int VAR_3 = TYPE_2 . METHOD_3 ( VAR_2 ) ; int VAR_4 = ( VAR_1 . METHOD_4 ( ) ) - VAR_3 ; if ( VAR_4 > 0 ) { int VAR_5 = TYPE_3 . METHOD_5 ( VAR_4 , VAR_6 < java.lang.Integer > METHOD_6 ( VAR_7 ) ) ; VAR_8 . METHOD_7 ( STRING_1 , VAR_2 , VAR_4 , VAR_5 ) ; METHOD_8 ( VAR_2 , VAR_5 ) ; } } 
private TYPE_1 METHOD_1 ( java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > > VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_3 . HashMap class , VAR_4 class ) . map ( VAR_1 , null ) ; for ( TYPE_2 VAR_5 : VAR_2 . METHOD_3 ( ) ) { METHOD_4 ( VAR_5 ) ; } return VAR_2 ; } 
public boolean equals ( java.lang.Object obj ) { boolean returnValue = super . equals ( obj ) ; if ( ( ( ! returnValue ) && ( obj != null ) ) && ( obj instanceof TYPE_1 ) ) { returnValue = ( ( ( METHOD_1 ( ) ) != null ) && ( ! ( METHOD_1 ( ) . isEmpty ( ) ) ) ) && ( METHOD_1 ( ) . equals ( ( ( TYPE_1 ) ( obj ) ) . METHOD_1 ( ) ) ) ; } return returnValue ; } 
private org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network network ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , network . METHOD_4 ( ) , network . getName ( ) , network . METHOD_5 ( ) , network . METHOD_6 ( ) ) ; return nic ; } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.StorageDomain object ) { if ( ( object . METHOD_1 ( ) ) == ( VAR_1 ) ) { return TYPE_1 . METHOD_2 ( object . METHOD_3 ( ) ) ; } else { return TYPE_1 . METHOD_2 ( object . getStatus ( ) ) ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_2 . add ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( VAR_4 ) ) . thenReturn ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . METHOD_4 ( ) , VAR_1 , true , true , false , false , false , false , true , true , METHOD_5 ( ) ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 ; if ( VAR_1 instanceof TYPE_2 ) { VAR_2 = ( ( org.ovirt.engine.ui.frontend.Frontend . getConstants ( ) . METHOD_2 ( ) ) + STRING_1 ) + ( ( ( TYPE_2 ) ( VAR_1 ) ) . METHOD_3 ( ) ) ; } else { VAR_2 = ( ( org.ovirt.engine.ui.frontend.Frontend . getConstants ( ) . METHOD_4 ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_5 ( ) ) ; } org.ovirt.engine.ui.frontend.Frontend . METHOD_1 ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 . isEmpty ( ) ) { return true ; } for ( org.ovirt.engine.core.compat.Guid VAR_2 : VAR_1 ) { if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . get ( VAR_2 ) ) == null ) { METHOD_5 ( VAR_3 ) ; return false ; } } return true ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( ( ( VAR_2 ) + 1 ) ) ; VAR_3 . METHOD_4 ( VAR_4 , VAR_1 , INT_1 ) ; TYPE_1 . METHOD_5 ( VAR_5 . METHOD_6 ( vm ) , false , VAR_6 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.lang.String VAR_1 = vm . METHOD_2 ( ) ; int VAR_2 = VAR_3 < java.lang.Integer > METHOD_3 ( VAR_4 ) ; int VAR_5 = VAR_3 < java.lang.Integer > METHOD_3 ( VAR_6 ) ; int VAR_7 = ( vm . METHOD_4 ( ) . METHOD_5 ( ) ) ? VAR_2 : VAR_5 ; boolean VAR_8 = ( VAR_1 . length ( ) ) <= VAR_7 ; return VAR_8 ; } 
private void METHOD_1 ( ) { if ( ( TYPE_1 . getWindow ( ) ) != null ) { return ; } java.util.List < org.ovirt.engine.ui.uicommonweb.UICommand > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( org.ovirt.engine.ui.uicommonweb.UICommand . METHOD_2 ( STRING_1 , this ) ) ; VAR_1 . add ( org.ovirt.engine.ui.uicommonweb.UICommand . METHOD_3 ( STRING_2 , this ) ) ; TYPE_2 model = new TYPE_2 ( new TYPE_3 ( ) , this ) ; METHOD_4 ( model , VAR_2 , METHOD_5 ( ) , VAR_1 ) ; model . METHOD_6 ( null ) ; } 
public void METHOD_1 ( ) { for ( org.ovirt.engine.core.compat.Guid VAR_1 : METHOD_2 ( ) ) { if ( ! ( METHOD_3 ( ) . equals ( VAR_1 ) ) ) { TYPE_1 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 , new TYPE_2 ( VAR_1 ) ) ; } } } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { try { TYPE_2 VAR_2 = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; java.lang.Object VAR_4 = VAR_3 . METHOD_4 ( VAR_1 , node , VAR_5 ) ; if ( VAR_4 != null ) { return new TYPE_1 ( ( ( TYPE_4 ) ( VAR_4 ) ) ) ; } return null ; } catch ( TYPE_5 e ) { throw new TYPE_6 ( ( STRING_1 + VAR_1 ) , e ) ; } } 
static TYPE_1 METHOD_1 ( TYPE_1 entity , int VAR_1 ) { TYPE_2 . METHOD_2 ( entity . getId ( ) ) . METHOD_3 ( VAR_2 [ VAR_1 ] ) . METHOD_4 ( ) ; TYPE_2 . METHOD_2 ( entity . getName ( ) ) . METHOD_3 ( VAR_3 [ VAR_1 ] ) . METHOD_4 ( ) ; TYPE_2 . METHOD_2 ( entity . METHOD_5 ( ) ) . METHOD_3 ( VAR_4 [ VAR_1 ] ) . METHOD_4 ( ) ; return entity ; } 
private boolean METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : METHOD_2 ( ) ) { if ( ! ( vm . METHOD_3 ( ) ) ) { TYPE_1 result = METHOD_4 ( VAR_1 , METHOD_5 ( new TYPE_2 ( vm . getId ( ) , VAR_2 . NORMAL ) , TYPE_3 . METHOD_6 ( ) ) , TYPE_3 . METHOD_7 ( ) ) ; if ( ! ( result . getSucceeded ( ) ) ) { return false ; } } } return true ; } 
public boolean METHOD_1 ( ) { boolean VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( METHOD_3 ( ) . getSelectedItem ( ) ) == ( VAR_3 ) ; boolean VAR_4 = ( METHOD_4 ( ) . getSelectedItem ( ) ) == ( VAR_5 ) ; boolean VAR_6 = ( ( METHOD_5 ( ) ) != null ) && ( ( VAR_7 . METHOD_6 ( METHOD_5 ( ) . METHOD_7 ( ) ) ) <= 0 ) ; return ( ( VAR_1 && VAR_2 ) && VAR_4 ) && VAR_6 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . StorageDomain storageDomain = new TYPE_1 . StorageDomain ( ) ; storageDomain . setId ( VAR_1 [ 2 ] . toString ( ) ) ; TYPE_2 cluster = new TYPE_2 ( ) ; cluster . setId ( VAR_1 [ 1 ] . toString ( ) ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( storageDomain , cluster ) ; } 
protected boolean METHOD_1 ( ) { if ( ( ( TYPE_1 . getVdsGroup ( ) ) == null ) && ( TYPE_2 . equals ( super . METHOD_2 ( ) ) ) ) { return METHOD_3 ( VAR_1 ) ; } if ( ! ( TYPE_3 . METHOD_4 ( METHOD_2 ( ) . getValue ( ) , TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_1 . getReturnValue ( ) . METHOD_6 ( ) ) ) ) { return false ; } return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( result . METHOD_5 ( ) . getId ( ) , VAR_5 ) ; dao . METHOD_6 ( result . getId ( ) ) ; TYPE_2 . METHOD_7 ( dao . METHOD_3 ( VAR_3 , VAR_4 ) ) ; TYPE_2 . METHOD_7 ( VAR_1 . get ( VAR_5 ) ) ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( id ) == null ? 0 : id . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( VAR_3 ) == null ? 0 : VAR_3 . METHOD_1 ( ) ) ; return result ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new TYPE_1 < > ( ) ; VAR_2 . METHOD_2 ( VAR_3 , INT_1 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( ) ) . thenReturn ( new TYPE_2 ( ( ( new TYPE_3 ( ) . METHOD_4 ( ) ) - INT_2 ) ) ) ; boolean result = validator . METHOD_5 ( VAR_1 ) ; TYPE_4 . METHOD_6 ( result ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 . name ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM VAR_1 = METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; final TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 , org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; return VAR_2 ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { int VAR_2 = INT_1 ; while ( ( ( VAR_2 > 0 ) && ( ( VAR_3 ) == null ) ) && ( ! ( VAR_4 ) ) ) { VAR_2 -- ; try { TYPE_1 . getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_5 , new TYPE_2 ( VAR_1 ) ) ; } catch ( java.lang.Exception e ) { } } } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) . METHOD_3 ( ) ; METHOD_2 ( VAR_2 class ) . METHOD_3 ( ) ; METHOD_2 ( VAR_3 class ) . METHOD_4 ( VAR_4 class ) ; METHOD_2 ( VAR_5 class ) . METHOD_4 ( VAR_4 class ) ; METHOD_2 ( VAR_6 . ViewDef class ) . to ( VAR_7 class ) ; METHOD_2 ( VAR_8 class ) . METHOD_4 ( VAR_4 class ) ; bindPresenterWidget ( VAR_9 class , VAR_10 . ViewDef class , VAR_11 class ) ; } 
protected boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.ui.uicommonweb.models.EntityModel entity , TYPE_1 [ ] VAR_2 ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel VAR_3 = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; VAR_3 . METHOD_2 ( true ) ; VAR_3 . setEntity ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; if ( ! ( VAR_3 . METHOD_4 ( ) ) ) { entity . METHOD_5 ( VAR_3 . METHOD_6 ( ) ) ; entity . METHOD_2 ( false ) ; } return VAR_3 . METHOD_4 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public void METHOD_1 ( ) { quota = METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( VAR_1 ) ) . thenReturn ( quota ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( new TYPE_1 ( ) ) ; VAR_3 . add ( new TYPE_1 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( VAR_4 ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_5 ( TYPE_2 . any ( VAR_5 class ) ) ) . thenReturn ( false ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( METHOD_2 ( ) ) ; int VAR_2 = ( VAR_1 . METHOD_3 ( ) ) + 1 ; TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; dao . METHOD_8 ( VAR_1 ) ; dao . get ( METHOD_2 ( ) ) ; TYPE_4 . assertEquals ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; } 
protected void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( true ) ; return ; } METHOD_4 ( ) ; if ( ( ( METHOD_5 ( ) ) && ( TYPE_1 . getVm ( ) . METHOD_6 ( ) ) ) && ( TYPE_1 . getSucceeded ( ) ) ) { METHOD_7 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 0 , 1 ) ; METHOD_6 ( ) ; METHOD_7 ( 1 ) ; VAR_2 . METHOD_8 ( ) ; TYPE_1 vm = resource . get ( ) ; METHOD_9 ( vm . METHOD_10 ( ) ) ; METHOD_11 ( vm , 0 ) ; } finally { VAR_1 . METHOD_12 ( ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . String class ) ) ) . thenReturn ( null ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_2 ( VAR_3 , host , VAR_4 ) ; TYPE_3 . METHOD_4 ( validator . METHOD_1 ( ) , TYPE_4 . METHOD_5 ( ) ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { TYPE_2 VAR_3 = org.mockito.Mockito . METHOD_2 ( VAR_4 class ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( VAR_5 ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( VAR_5 ) ) . thenReturn ( VAR_2 ) ; TYPE_3 VAR_6 = TYPE_4 . METHOD_5 ( VAR_3 ) ; TYPE_5 . assertEquals ( VAR_1 , VAR_6 . METHOD_6 ( ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { return VAR_2 ; } return ! ( vm . METHOD_2 ( ) ) ? new TYPE_2 ( VAR_1 ) . METHOD_3 ( ) : VAR_2 ; } 
public void METHOD_1 ( final TYPE_1 model ) { super . METHOD_1 ( model ) ; model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 VAR_1 , java.lang.Object sender , TYPE_4 args ) { VAR_2 = model . METHOD_2 ( ) . getEntity ( ) ; } } ) ; } 
public void METHOD_1 ( TYPE_1 event ) { java.util.List VAR_1 = ( ( java.util.List ) ( object . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; java.lang.Object VAR_2 = ( ( VAR_3 . METHOD_4 ( ) ) >= 0 ) ? VAR_1 . get ( VAR_3 . METHOD_4 ( ) ) : null ; object . METHOD_2 ( ) . setSelectedItem ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( getEntity ( 2 ) ) ) ; VAR_1 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { VAR_1 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_2 . METHOD_3 ( null ) ; VAR_3 = new TYPE_1 ( ) ; vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; org.mockito.Mockito . METHOD_5 ( validator , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_2 . any ( VAR_2 . Boolean class ) , TYPE_2 . any ( VAR_3 class ) ) ; org.mockito.Mockito . METHOD_5 ( validator , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_8 ( TYPE_2 . any ( VAR_2 . Boolean class ) , TYPE_2 . any ( VAR_4 class ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_1 . add ( METHOD_3 ( STRING_1 , VAR_2 ) ) ; VAR_1 . add ( METHOD_3 ( STRING_2 , VAR_2 ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_3 ) . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ; TYPE_3 . assertEquals ( VAR_5 , validator . METHOD_5 ( METHOD_3 ( STRING_3 , VAR_2 ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { METHOD_1 ( ) . setEntity ( result ) ; } } 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( ) { java.util.List < TYPE_1 . DiskImage > VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_2 : TYPE_2 . getParameters ( ) . METHOD_1 ( ) ) { VAR_1 . add ( METHOD_2 ( VAR_2 ) ) ; } return VAR_1 ; } 
public static TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < TYPE_2 . DiskImage > VAR_2 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
private static final TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > source , final TYPE_3 type ) { return TYPE_4 . METHOD_2 ( source , new TYPE_5 < TYPE_2 > ( ) { public boolean METHOD_3 ( TYPE_2 VAR_1 ) { return VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( type ) ; } } ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 , new TYPE_2 ( VAR_3 . getId ( ) , METHOD_3 ( ) ) ) ; METHOD_4 ( VAR_1 . getSucceeded ( ) ) ; if ( ! ( getSucceeded ( ) ) ) { METHOD_5 ( VAR_4 , VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ; return ; } METHOD_8 ( ) ; METHOD_9 ( ) ; getReturnValue ( ) . METHOD_10 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { resource = new TYPE_1 ( VAR_1 [ 0 ] . toString ( ) , new TYPE_2 ( ) ) ; resource . METHOD_2 ( VAR_2 ) ; resource . METHOD_3 ( VAR_3 ) ; resource . METHOD_4 ( VAR_4 ) ; resource . METHOD_5 ( VAR_5 ) ; resource . METHOD_6 ( VAR_6 ) ; } 
private void METHOD_1 ( ) { TYPE_1 < TYPE_2 , TYPE_3 > VAR_1 = new TYPE_1 < TYPE_2 , TYPE_3 > ( ) { public TYPE_3 getModel ( ) { return METHOD_2 ( ) ; } public void METHOD_3 ( ) { } public void METHOD_4 ( ) { } } ; VAR_2 = new TYPE_4 ( VAR_1 , constants ) ; } 
public void METHOD_1 ( java.lang.Integer value ) { if ( ( ( VAR_1 ) == null ) && ( value == null ) ) { return ; } if ( ( ( VAR_1 ) == null ) || ( ! ( VAR_1 . equals ( value ) ) ) ) { VAR_1 = value ; METHOD_2 ( new TYPE_1 ( STRING_1 ) ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( null ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( int VAR_1 ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( STRING_1 ) ; VAR_3 . METHOD_5 ( 1 ) ; vm . METHOD_6 ( VAR_3 ) ; vm . METHOD_7 ( VAR_2 ) ; return vm ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM VAR_1 , TYPE_1 VAR_2 ) { if ( ( VAR_1 . getStatus ( ) ) != ( VAR_2 . METHOD_2 ( ) ) ) { VAR_3 . METHOD_3 ( STRING_1 , VAR_1 . getName ( ) , VAR_1 . getId ( ) , VAR_1 . getStatus ( ) . name ( ) , VAR_2 . METHOD_2 ( ) . name ( ) ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( ) . add ( VAR_5 ) ; TYPE_1 VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; return VAR_6 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { validator = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_1 = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( VAR_3 , VAR_4 ) ) . thenReturn ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( VAR_6 , VAR_4 ) ) . thenReturn ( VAR_7 ) ; TYPE_3 . METHOD_5 ( VAR_1 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network network = METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_1 = ( network == null ) ? null : network . getId ( ) ; return TYPE_2 . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 . Network , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( TYPE_1 object ) { VAR_1 . METHOD_1 ( object ) ; VAR_2 . METHOD_2 ( object . METHOD_3 ( ) ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; for ( java.lang.String VAR_4 : object . METHOD_4 ( ) ) { java.lang.String VAR_5 = TYPE_3 . METHOD_5 ( VAR_4 ) ; VAR_3 . append ( METHOD_6 ( VAR_5 , VAR_6 ) ) ; } VAR_7 . METHOD_7 ( VAR_3 . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; TYPE_2 . METHOD_2 ( VAR_2 , new TYPE_3 ( ) ) ; TYPE_4 VAR_3 = ( ( TYPE_4 ) ( model ) ) ; VAR_3 . setItems ( VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 event ) { int VAR_1 = event . METHOD_2 ( ) ; if ( VAR_2 . METHOD_3 ( ) ) { if ( VAR_1 != ( VAR_2 . METHOD_2 ( ) ) ) { VAR_2 . METHOD_4 ( ) ; VAR_2 . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( ) ; } } else { VAR_2 . METHOD_5 ( VAR_1 ) ; } } 
private void METHOD_1 ( ) { if ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { TYPE_1 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) ) ; TYPE_1 . METHOD_8 ( ) ; } TYPE_1 . METHOD_9 ( true ) ; } 
private boolean METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . Disk > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? VAR_2 . Linq < TYPE_1 . Disk > METHOD_3 ( METHOD_2 ( ) ) : new java.util.ArrayList < TYPE_1 . Disk > ( ) ; for ( TYPE_1 . Disk disk : VAR_1 ) { if ( ( METHOD_4 ( disk ) ) || ( ( ! ( METHOD_5 ( ) ) ) && ( disk . METHOD_6 ( ) ) ) ) { return false ; } } return true ; } 
public void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : METHOD_3 ( ) . METHOD_4 ( ) ) { if ( ( TYPE_1 . METHOD_5 ( cluster . METHOD_6 ( ) ) ) && ( cluster . METHOD_7 ( ) ) ) { try { METHOD_8 ( cluster ) ; } catch ( java.lang.Exception e ) { log . METHOD_9 ( STRING_2 , cluster . METHOD_10 ( ) , e ) ; } } } } 
public void setSelectedItem ( java.lang.Integer value ) { if ( ! ( TYPE_1 . METHOD_1 ( value ) ) ) { TYPE_2 VAR_1 = METHOD_2 ( ) . getSelectedItem ( ) ; org.ovirt.engine.core.common.businessentities.VDSGroup cluster = ( VAR_1 == null ) ? null : VAR_1 . METHOD_3 ( ) ; if ( cluster == null ) { return ; } super . setSelectedItem ( TYPE_1 . METHOD_4 ( cluster . METHOD_5 ( ) ) ) ; } else { super . setSelectedItem ( value ) ; } } 
protected java.lang.String METHOD_1 ( TYPE_1 < TYPE_2 , ? > column ) { if ( VAR_1 ) { return ( ( ( ( ( ( VAR_2 ) + STRING_1 ) + ( VAR_3 ) ) + STRING_1 ) + ( METHOD_2 ( ) ) ) + STRING_1 ) + ( METHOD_3 ( METHOD_4 ( column ) ) ) ; } return null ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( java.lang.Boolean . FALSE ) . when ( cmd ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( VAR_3 ) == null ? 0 : VAR_3 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( id . vmId ) == null ? 0 : VAR_4 . METHOD_1 ( ) ) ; return result ; } 
protected void METHOD_1 ( java.lang.Object sender , TYPE_1 e ) { super . METHOD_1 ( sender , e ) ; if ( ( ( METHOD_2 ( ) ) != null ) && ( ( METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) ) { TYPE_2 storage = ( ( TYPE_2 ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; setSelectedItem ( TYPE_3 . METHOD_4 ( VAR_2 . Linq < TYPE_2 > METHOD_5 ( METHOD_6 ( ) ) , new TYPE_4 ( storage . getId ( ) ) ) ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( VAR_1 ) ; METHOD_3 ( network ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_4 ( STRING_1 , network ) ; METHOD_5 ( iface ) ; iface . METHOD_6 ( METHOD_7 ( ) ) ; TYPE_1 VAR_2 = METHOD_8 ( METHOD_9 ( iface ) ) ; METHOD_10 ( VAR_2 , VAR_3 , VAR_1 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( METHOD_6 ( ) , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_7 ( ) , VAR_3 ) ; } 
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; assertEquals ( ( ( VAR_2 . length ) * 2 ) , VAR_1 . size ( ) ) ; for ( int i = 0 ; i < ( ( VAR_2 . length ) * 2 ) ; i ++ ) { METHOD_3 ( VAR_1 . get ( i ) , ( i % ( VAR_2 . length ) ) ) ; } } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { if ( ( ( vm . getStatus ( ) ) == ( VAR_1 ) ) && ( ( vm . METHOD_2 ( ) ) != null ) ) { org.ovirt.engine.core.common.businessentities.VDS vds = METHOD_3 ( ) . get ( new org.ovirt.engine.core.compat.Guid ( vm . METHOD_2 ( ) . toString ( ) ) ) ; if ( ( vds . getStatus ( ) ) != ( VAR_2 ) ) { return new TYPE_1 . ValidationResult ( VAR_3 , TYPE_2 . toString ( ) ) ; } } return VAR_4 ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 e ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_2 ( ) . METHOD_5 ( ) . METHOD_4 ( this ) ; METHOD_6 ( false ) ; if ( ( e . METHOD_7 ( ) ) > INT_1 ) { METHOD_8 ( ) . METHOD_9 ( this , e ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( cluster . METHOD_2 ( ) ) . thenReturn ( true ) ; validator = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( false ) . when ( validator ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( VAR_4 ) ) ; } 
protected boolean METHOD_1 ( ) { if ( ( ( getParameters ( ) ) == null ) || ( ( getParameters ( ) . METHOD_2 ( ) ) == null ) ) { addCanDoActionMessage ( VAR_1 ) ; return false ; } TYPE_1 quota = METHOD_3 ( ) ; if ( quota == null ) { addCanDoActionMessage ( VAR_1 ) ; return false ; } if ( METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( quota ) ) { addCanDoActionMessage ( VAR_2 ) ; return false ; } return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String version ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) : true ; } } ; TYPE_1 tempVar = new TYPE_1 ( VAR_1 ) ; tempVar . METHOD_3 ( version ) ; TYPE_2 . METHOD_4 ( tempVar , aQuery ) ; } 
private java.lang.String METHOD_1 ( java.lang.Object result ) { if ( ( result == null ) || ( ! ( result instanceof java.lang.Object [ ] ) ) ) { VAR_1 . METHOD_2 ( STRING_1 ) ; } java.lang.Object [ ] VAR_2 = ( ( java.lang.Object [ ] ) ( result ) ) ; if ( ( VAR_2 . length ) != 1 ) { VAR_1 . METHOD_2 ( STRING_2 ) ; } java.lang.String VAR_3 = STRING_3 + ( VAR_2 [ 0 ] . toString ( ) ) ; return VAR_3 ; } 
protected boolean METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , boolean VAR_2 ) { TYPE_2 returnValue = METHOD_2 ( VAR_3 , new TYPE_3 ( TYPE_4 . METHOD_3 ( ) , VAR_1 , VAR_2 ) ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { VAR_4 . log ( new TYPE_5 ( TYPE_4 . METHOD_3 ( ) ) , VAR_5 ) ; log . error ( STRING_1 , TYPE_4 . METHOD_4 ( ) . getName ( ) ) ; return false ; } return true ; } 
public boolean METHOD_1 ( TYPE_1 quota , java.util.List < java.lang.String > VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) . METHOD_3 ( quota . METHOD_4 ( ) ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . getId ( ) . equals ( quota . getId ( ) ) ) ) ) { VAR_1 . add ( TYPE_2 . toString ( ) ) ; return false ; } return true ; } 
private void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 , VAR_2 ) ) . when ( VAR_3 ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_4 , VAR_2 ) ) . when ( VAR_3 ) . METHOD_3 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_5 , VAR_2 ) ) . when ( VAR_3 ) . METHOD_3 ( VAR_5 ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_6 , VAR_2 ) ) . when ( VAR_7 ) . METHOD_5 ( VAR_6 ) ; } 
protected void METHOD_1 ( TYPE_1 value , TYPE_2 item , boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ! VAR_1 ) ) ; VAR_2 . METHOD_3 ( ) . METHOD_2 ( true ) ; if ( ! VAR_1 ) { VAR_3 . add ( value . METHOD_4 ( ) ) ; } VAR_4 += ( VAR_1 ) ? - 1 : 1 ; METHOD_5 ( ) ; } 
public < TYPE_1 > TYPE_1 get ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( ! ( VAR_1 . METHOD_1 ( ) . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ) ) { throw new TYPE_3 ( java.lang.String . METHOD_4 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_1 ) ) ; } TYPE_1 value = get ( VAR_1 ) ; if ( value == null ) { value = VAR_2 ; } return value ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; VAR_1 . getVm ( ) . setId ( VAR_3 ) ; TYPE_3 . METHOD_3 ( METHOD_4 ( ) , VAR_1 ) ; assertEquals ( VAR_4 , VAR_1 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; if ( ( model . METHOD_2 ( ) ) != null ) { return ; } model . METHOD_3 ( null ) ; METHOD_4 ( model ) ; new TYPE_2 ( this , model , getEntity ( ) ) . METHOD_5 ( ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { this . VAR_2 = new TYPE_3 ( VAR_3 , METHOD_2 ( this . client ) , VAR_1 ) ; this . VAR_2 . METHOD_3 ( ) ; int VAR_4 = VAR_5 ; VAR_6 . METHOD_4 ( ) ; VAR_7 = this . VAR_3 . METHOD_5 ( VAR_8 , ( VAR_4 |= VAR_9 ) , this ) ; } catch ( TYPE_4 | TYPE_5 e ) { VAR_10 . error ( STRING_1 , e ) ; throw new TYPE_2 ( e ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_5 ( ) , VAR_2 ) ; } 
private void METHOD_1 ( java.lang.Object sender , final TYPE_1 e ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ; METHOD_2 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ; METHOD_2 ( ) . METHOD_3 ( ) . METHOD_7 ( this ) ; METHOD_8 ( VAR_1 . System , null ) ; METHOD_9 ( STRING_1 ) ; METHOD_10 ( e . METHOD_11 ( ) . METHOD_12 ( ) ) ; METHOD_13 ( ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( VAR_3 , METHOD_4 ( ) . METHOD_5 ( ) , METHOD_6 ( ) . METHOD_7 ( ) ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( METHOD_8 ( ) . METHOD_9 ( ) ) . thenReturn ( VAR_1 ) ; METHOD_10 ( true ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 < TYPE_3 . DiskImage > VAR_1 ) { final java.util.Map < org.ovirt.engine.core.compat.Guid , java.util.List < TYPE_3 . DiskImage > > VAR_2 = METHOD_2 ( VAR_1 ) ; return METHOD_3 ( new TYPE_4 ( ) { public TYPE_1 . ValidationResult METHOD_4 ( TYPE_5 < org.ovirt.engine.core.compat.Guid , TYPE_6 > VAR_3 ) { org.ovirt.engine.core.compat.Guid VAR_4 = VAR_3 . METHOD_5 ( ) ; java.util.List < TYPE_3 . DiskImage > VAR_5 = VAR_2 . get ( VAR_4 ) ; return METHOD_6 ( VAR_3 ) . METHOD_7 ( VAR_5 ) ; } } ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 < TYPE_1 , java.lang.Integer > ( VAR_1 , 1 ) ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { if ( VAR_3 . get ( i ) . getId ( ) . equals ( VAR_1 . getId ( ) ) ) { VAR_3 . METHOD_2 ( VAR_1 ) ; break ; } } METHOD_3 ( null , false ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_4 ) ; } 
public static TYPE_1 < TYPE_2 , TYPE_3 > METHOD_1 ( long VAR_1 , TYPE_3 VAR_2 ) { TYPE_1 < TYPE_2 , TYPE_3 > result = new TYPE_1 < TYPE_2 , TYPE_3 > ( ) ; for ( TYPE_3 VAR_3 : VAR_4 ) { long VAR_5 = VAR_1 ; VAR_1 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; if ( VAR_1 >= 1 ) { result . METHOD_3 ( VAR_1 ) ; result . METHOD_4 ( VAR_3 ) ; break ; } VAR_1 = VAR_5 ; } return result ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( TYPE_2 . METHOD_2 ( ) . METHOD_2 ( ) , TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; VAR_1 . put ( TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) , TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 ) ) ; return VAR_1 ; } 
private static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.DiskImage disk ) { return new TYPE_1 ( new TYPE_2 ( disk . METHOD_2 ( ) , VAR_1 ) , VAR_2 , TYPE_3 . getName ( ) , STRING_1 , 1 , null , true , true , true , STRING_1 ) ; } 
public void METHOD_1 ( TYPE_1 model , java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 , TYPE_2 VAR_3 ) { if ( ( ( model . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( ( model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) != ( VAR_4 . System ) ) ) { METHOD_5 ( model , VAR_1 , VAR_2 , VAR_3 ) ; } else { METHOD_6 ( model , VAR_1 , VAR_2 , VAR_3 ) ; } } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 . METHOD_2 ( VAR_2 ) ) ) { VAR_1 . put ( VAR_2 , new TYPE_1 ( ) ) ; METHOD_3 ( ) . setItems ( new java.util.ArrayList < java.lang.String > ( VAR_1 . METHOD_4 ( ) ) ) ; } METHOD_3 ( ) . setSelectedItem ( VAR_2 ) ; } 
public static < TYPE_1 > java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel > METHOD_1 ( java.util.ArrayList < TYPE_1 > list ) { java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel > VAR_1 = new java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ; if ( list != null ) { for ( java.lang.Object item : list ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel model = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; model . setEntity ( item ) ; VAR_1 . add ( model ) ; } } return VAR_1 ; } 
public void onSuccess ( TYPE_1 result ) { VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_2 . METHOD_2 ( VAR_3 . getModel ( ) , result ) ; if ( ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) ) != null ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( ) ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( 0 ) ) . when ( VAR_1 ) . METHOD_3 ( VAR_2 [ 0 ] ) ; org.mockito.Mockito.doReturn ( METHOD_2 ( 1 ) ) . when ( VAR_1 ) . METHOD_3 ( VAR_2 [ 1 ] ) ; org.mockito.Mockito.doReturn ( new java.util.ArrayList < TYPE_1 > ( ) ) . when ( VAR_3 ) . METHOD_4 ( VAR_2 [ 0 ] ) ; org.mockito.Mockito.doReturn ( new java.util.ArrayList < TYPE_1 > ( ) ) . when ( VAR_3 ) . METHOD_4 ( VAR_2 [ 1 ] ) ; } 
private TYPE_1 METHOD_1 ( ) { ( VAR_1 ) ++ ; TYPE_1 quota = new TYPE_1 ( ) ; quota . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; quota . METHOD_3 ( VAR_2 . getId ( ) . getValue ( ) ) ; quota . METHOD_4 ( STRING_1 ) ; quota . METHOD_5 ( STRING_2 ) ; quota . METHOD_6 ( INT_1 ) ; quota . METHOD_7 ( INT_1 ) ; quota . METHOD_8 ( INT_2 ) ; quota . METHOD_9 ( INT_2 ) ; quota . METHOD_10 ( VAR_3 ) ; return quota ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 , VAR_4 , VAR_5 ) ; org.mockito.Mockito . METHOD_4 ( VAR_5 ) . METHOD_3 ( VAR_1 , VAR_4 ) ; org.mockito.Mockito . METHOD_4 ( VAR_4 , org.mockito.Mockito . METHOD_5 ( 1 ) ) . METHOD_6 ( ( ( TYPE_3 ) ( org.mockito.Mockito . any ( ) ) ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 ) . METHOD_7 ( VAR_6 , VAR_7 ) ; } 
protected void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; java.lang.String [ ] VAR_2 = VAR_1 . METHOD_3 ( new java.lang.String [ VAR_1 . size ( ) ] ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; TYPE_1 . METHOD_6 ( ) ; java.util.Map < java.lang.String , java.lang.Object > [ ] VAR_4 = VAR_5 ; TYPE_1 . METHOD_7 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_2 ( result ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( ) , 2 ) ; result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( ) , 0 ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { VAR_2 . put ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , VAR_1 . METHOD_3 ( ) ) ; VAR_2 . put ( VAR_5 , STRING_1 ) ; VAR_2 . put ( VAR_6 , VAR_7 ) ; VAR_2 . put ( VAR_8 , java.lang.String.valueOf ( VAR_1 . METHOD_4 ( ) ) ) ; VAR_2 . put ( VAR_9 , TYPE_2 . toString ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { METHOD_4 ( TYPE_1 . getVm ( ) . METHOD_5 ( ) , TYPE_1 . METHOD_6 ( ) ) ; } METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( true ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { for ( TYPE_2 VAR_2 : VAR_1 . METHOD_2 ( ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_3 == null ) { continue ; } for ( TYPE_2 VAR_4 : METHOD_2 ( ) ) { if ( VAR_3 . equals ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { VAR_4 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; break ; } } } } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( ( VAR_1 ) == ( VAR_2 ) ) { } else if ( ( VAR_1 ) == ( VAR_3 ) ) { METHOD_3 ( VAR_4 , VAR_5 ) ; } else if ( ( VAR_1 ) == ( VAR_6 ) ) { METHOD_3 ( VAR_5 ) ; } else if ( ( VAR_1 ) == ( VAR_7 ) ) { METHOD_3 ( VAR_8 ) ; } } 
public void METHOD_1 ( TYPE_1 result ) { java.util.List < TYPE_2 . VdcQueryReturnValue > VAR_1 = result . METHOD_2 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( VAR_1 . get ( 0 ) . getReturnValue ( ) ) ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( VAR_2 class ) ; java.util.List < java.lang.String > VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; VAR_4 . METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( STRING_2 , VAR_3 . METHOD_6 ( STRING_2 ) ) ; TYPE_4 . METHOD_5 ( STRING_3 , VAR_3 . METHOD_6 ( STRING_3 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_3 . assertEquals ( VAR_1 . getName ( ) , VAR_3 ) ; TYPE_3 . assertEquals ( VAR_1 . METHOD_3 ( ) , VAR_2 ) ; TYPE_3 . METHOD_4 ( VAR_1 . getId ( ) ) ; TYPE_3 . assertEquals ( VAR_1 . METHOD_5 ( ) , VAR_4 ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { for ( TYPE_3 < org.ovirt.engine.core.compat.Guid , TYPE_4 > VAR_2 : VAR_3 . METHOD_2 ( ) ) { TYPE_1 . ValidationResult VAR_4 = VAR_1 . METHOD_3 ( METHOD_4 ( VAR_2 ) ) ; if ( ! ( VAR_4 . METHOD_5 ( ) ) ) { return VAR_4 ; } } return VAR_5 ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid pool , TYPE_1 type ) { org.ovirt.engine.core.compat.Guid returnValue = VAR_1 ; java.util.List < TYPE_2 > VAR_2 = METHOD_2 ( pool ) ; for ( TYPE_2 domain : VAR_2 ) { if ( ( domain . METHOD_3 ( ) ) == type ) { returnValue = domain . getId ( ) ; break ; } } return returnValue ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 = METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_5 = METHOD_3 ( VAR_2 ) ; VAR_5 . METHOD_4 ( VAR_4 ) ; METHOD_5 ( VAR_6 , VAR_7 ) ; METHOD_6 ( VAR_8 , org.ovirt.engine.core.compat.Guid . METHOD_7 ( ) , VAR_6 ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_8 ( ) ; TYPE_1 . METHOD_9 ( command . validate ( ) ) ; } 
private java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_1 . METHOD_2 ( ) ) ; if ( ( TYPE_1 . METHOD_3 ( ) ) != null ) { VAR_1 . add ( TYPE_1 . METHOD_3 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { cmd . METHOD_2 ( VAR_1 ) ; METHOD_3 ( true , VAR_2 , true , null ) ; TYPE_1 . METHOD_4 ( cmd . validate ( ) ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( cmd ) . METHOD_7 ( TYPE_2 . METHOD_8 ( VAR_2 ) , TYPE_2 . METHOD_9 ( ) , TYPE_2 . METHOD_8 ( true ) ) ; org.mockito.Mockito . METHOD_6 ( cmd ) . METHOD_10 ( ) ; TYPE_1 . assertEquals ( VAR_3 , cmd . METHOD_11 ( ) ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 ) { if ( ( VAR_1 == null ) || ( VAR_1 . METHOD_2 ( ) . isEmpty ( ) ) ) { return false ; } return TYPE_1 . METHOD_3 ( VAR_1 ) ? TYPE_2 . METHOD_4 ( VAR_1 ) : TYPE_2 . METHOD_5 ( VAR_1 ) ; } 
private TYPE_1 . AuditLogType METHOD_1 ( ) { if ( ( TYPE_2 . METHOD_2 ( ) . getStatus ( ) ) == ( VAR_1 ) ) { return VAR_2 ; } if ( ( METHOD_3 ( ) ) == null ) { return VAR_3 ; } return VAR_4 ; } 
private static java.lang.String METHOD_1 ( TYPE_1 VAR_1 , java.lang.String name ) { if ( VAR_1 . METHOD_2 ( name ) ) { return ( ( java.lang.String ) ( ( VAR_1 . METHOD_3 ( name ) ) instanceof java.lang.String ? VAR_1 . METHOD_3 ( name ) : null ) ) ; } return null ; } 
public void METHOD_1 ( java.lang.String pool , java.lang.String user , java.lang.String VAR_1 , java.lang.String VAR_2 , java.util.Map < java.lang.String , java.lang.Object > VAR_3 ) throws java.lang.Exception { TYPE_1 VAR_4 = ( ( TYPE_1 ) ( METHOD_2 ( pool , VAR_3 ) . VAR_5 . METHOD_3 ( new TYPE_2 ( user , VAR_1 , VAR_2 ) ) ) ) ; if ( ( VAR_4 . METHOD_4 ( ) ) != ( VAR_6 ) ) { throw new TYPE_3 ( VAR_4 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = getEntity ( ) ; if ( ( VAR_1 != null ) && ( VAR_2 != null ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = VAR_2 . METHOD_4 ( ) ; for ( TYPE_2 VAR_4 : VAR_1 ) { if ( VAR_3 == null ? VAR_4 . METHOD_5 ( ) : VAR_3 . equals ( VAR_4 . getId ( ) ) ) { METHOD_2 ( ) . setSelectedItem ( VAR_4 ) ; break ; } } } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { TYPE_5 VAR_2 = TYPE_6 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , VAR_3 ) ; VAR_2 = METHOD_4 ( VAR_1 , response , VAR_2 , VAR_1 . METHOD_3 ( ) ) ; if ( VAR_2 == null ) { response . METHOD_5 ( VAR_4 ) ; } else { TYPE_6 . METHOD_6 ( VAR_1 , response , VAR_2 , type ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( false ) ; METHOD_4 ( ) ; command . METHOD_5 ( ) . METHOD_6 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( command . validate ( ) ) ; TYPE_2 . METHOD_9 ( command . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_3 . toString ( ) ) ) ; } 
void METHOD_1 ( ) { org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 = TYPE_1 . getModel ( ) . METHOD_2 ( ) ; TYPE_2 < ? > VAR_2 = METHOD_3 ( VAR_1 ) ; ( ( TYPE_2 < TYPE_3 > ) ( VAR_2 ) ) . METHOD_4 ( TYPE_1 . getModel ( ) . METHOD_5 ( ) ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( java.util.Map < TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > , java.lang.Boolean > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } 
public void setEntity ( java.lang.Object value ) { cluster = null ; super . setEntity ( value ) ; if ( ( getEntity ( ) ) != null ) { TYPE_1 . METHOD_1 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object returnValue ) { cluster = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; METHOD_2 ( ) ; } } ) , ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getEntity ( ) ) ) . METHOD_3 ( ) ) ; } } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; if ( ! ( VAR_2 . METHOD_2 ( ) ) ) { return VAR_3 ; } TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_5 = new TYPE_4 ( VAR_4 ) ; java.lang.String VAR_6 = VAR_5 . METHOD_3 ( ) ; try { VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_4 ( ) ; } catch ( java.lang.Exception e ) { } if ( VAR_6 == null ) { return VAR_3 ; } return VAR_6 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < java.lang.String > ( ( ( java.util.ArrayList < java.lang.String > ) ( source ) ) ) : new java.util.ArrayList < java.lang.String > ( ) ; } } ; TYPE_1 tempVar = new TYPE_1 ( ) ; tempVar . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , tempVar , aQuery ) ; } 
protected boolean METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = TYPE_1 . METHOD_3 ( ) ; if ( ! ( validate ( VAR_1 . METHOD_4 ( VAR_2 , VAR_3 , TYPE_1 . METHOD_5 ( ) ) ) ) ) { return false ; } METHOD_6 ( TYPE_1 . METHOD_7 ( ) . getStoragePoolId ( ) , TYPE_1 . getVm ( ) . METHOD_5 ( ) ) ; } return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 0 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , java.lang.Boolean . FALSE } , true , true ) ; METHOD_8 ( VAR_4 . METHOD_9 ( VAR_3 [ 0 ] . toString ( ) , new TYPE_1 ( ) { { } } ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public TYPE_3 METHOD_3 ( ) { METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( ) ; return null ; } } ) ; METHOD_10 ( ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , true , true , false , false , false , true , true , METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . assertEquals ( result . METHOD_4 ( ) . getId ( ) , VAR_3 ) ; dao . METHOD_5 ( result . getId ( ) ) ; TYPE_1 . METHOD_6 ( dao . METHOD_2 ( VAR_1 , VAR_2 ) ) ; TYPE_1 . METHOD_6 ( VAR_4 . get ( VAR_3 ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = new java.util.HashMap < TYPE_1 , TYPE_2 > ( ) ; VAR_2 = new TYPE_3 < TYPE_1 , TYPE_2 > ( VAR_1 ) ; VAR_3 = new TYPE_1 ( STRING_1 , 0 ) ; VAR_4 = new TYPE_2 ( VAR_5 , VAR_6 ) ; VAR_7 = new TYPE_1 ( STRING_2 , 0 ) ; VAR_8 = new TYPE_2 ( VAR_9 , VAR_10 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( false , VAR_2 ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_3 . any ( VAR_4 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_9 ( ) , VAR_5 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < TYPE_3 > VAR_1 = ( ( TYPE_4 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; for ( TYPE_3 VAR_2 : VAR_1 ) { model . METHOD_1 ( ) . setSelectedItem ( VAR_2 . METHOD_2 ( ) . name ( ) . METHOD_3 ( ) ) ; model . METHOD_4 ( ) . setSelectedItem ( VAR_2 . getModel ( ) . name ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . AddVmCommand < TYPE_2 > command = METHOD_2 ( 0 , 0 ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( TYPE_3 . any ( VAR_3 . StorageDomain class ) ) ; TYPE_4 . METHOD_5 ( command . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 , INT_1 ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_3 = METHOD_3 ( VAR_4 , VAR_5 ) ; VAR_3 . METHOD_4 ( INT_2 ) ; METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_6 ( VAR_3 ) ) . thenReturn ( VAR_3 ) ; } 
private java.util.List < TYPE_1 . Network > METHOD_1 ( java.lang.String VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = getEntity ( VAR_3 . VDSGroup class , VAR_4 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_1 ) ) , null ) . getStoragePoolId ( ) ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_2 ) ) ; return METHOD_3 ( VAR_5 , params ) ; } 
protected void METHOD_1 ( ) { getParameters ( ) . METHOD_2 ( new TYPE_1 ( VAR_1 . VM , TYPE_2 . METHOD_3 ( ) ) ) ; if ( ( TYPE_2 . getVm ( ) ) != null ) { METHOD_4 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) ) ; } } 
public static java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 model , java.util.List < TYPE_1 > template ) { if ( ( model . METHOD_2 ( ) ) != null ) { java.util.List < TYPE_1 > result = new java.util.ArrayList < > ( ) ; for ( java.lang.String VAR_1 : model . METHOD_2 ( ) ) { try { TYPE_3 source = TYPE_3 . METHOD_3 ( VAR_1 ) ; result . add ( TYPE_4 . map ( source , null ) ) ; } catch ( TYPE_5 VAR_2 ) { } } return result ; } return null ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 vm ) { java.lang.Object [ ] VAR_2 = ( ( java.lang.Object [ ] ) ( VAR_1 . METHOD_2 ( VAR_3 ) ) ) ; if ( VAR_2 != null ) { java.util.ArrayList < java.lang.Object > VAR_4 = new java.util.ArrayList < java.lang.Object > ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; vm . METHOD_4 ( TYPE_4 . METHOD_5 ( ) . METHOD_6 ( VAR_4 ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; if ( ( getModel ( ) . METHOD_7 ( ) . getSelectedItem ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = getModel ( ) . METHOD_7 ( ) . getSelectedItem ( ) ; METHOD_8 ( template . METHOD_9 ( ) , template . METHOD_10 ( ) ) ; } METHOD_11 ( ) ; METHOD_12 ( ) ; METHOD_13 ( ) ; METHOD_14 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = TYPE_3 . METHOD_3 ( VAR_2 , VAR_3 ) ; TYPE_4 . METHOD_4 ( STRING_1 , ( ( VAR_4 . METHOD_5 ( cluster , VAR_1 ) . size ( ) ) == 2 ) ) ; TYPE_4 . METHOD_4 ( TYPE_3 . METHOD_3 ( STRING_2 , STRING_3 ) . equals ( VAR_4 . METHOD_5 ( cluster , VAR_1 ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . VdcActionParametersBase VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 . VdcActionParametersBase class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( TYPE_2 . METHOD_5 ( VAR_4 ) ) ; TYPE_3 < TYPE_1 . VdcActionParametersBase > command = org.mockito.Mockito . METHOD_6 ( new TYPE_4 ( VAR_1 ) ) ; command . METHOD_7 ( ) ; command . METHOD_8 ( ) ; org.mockito.Mockito . METHOD_9 ( command ) . METHOD_10 ( ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storage ) { if ( ( storage . METHOD_2 ( ) . METHOD_3 ( ) ) && ( ! ( storage . METHOD_2 ( ) . equals ( VAR_1 ) ) ) ) { TYPE_1 VAR_2 = storage . METHOD_4 ( ) ; return ( VAR_2 . METHOD_5 ( ) ) && ( METHOD_6 ( storage ) ) ; } return false ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { switch ( TYPE_2 . METHOD_2 ( ) ) { case VAR_1 : if ( ! ( getParameters ( ) . METHOD_3 ( ) ) ) { return VAR_2 ; } if ( ( METHOD_4 ( ) ) && ( TYPE_2 . getSucceeded ( ) ) ) { return VAR_3 ; } break ; case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_2 ; } return VAR_7 ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( super . equals ( obj ) ) ) { return false ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > VAR_3 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; TYPE_3 . METHOD_2 ( VAR_3 , new TYPE_4 ( ) ) ; VAR_2 . setItems ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_4 ) { METHOD_8 ( VAR_4 , VAR_5 , new TYPE_2 ( VAR_6 ) ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; if ( ( getVm ( ) ) != null ) { METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( getVm ( ) ) ; METHOD_6 ( ) . METHOD_7 ( METHOD_8 ( ) ) ; METHOD_9 ( ) . METHOD_7 ( METHOD_8 ( ) ) ; METHOD_10 ( ) . METHOD_7 ( METHOD_8 ( ) ) ; METHOD_11 ( true ) ; } else { METHOD_2 ( getParameters ( ) . getVm ( ) ) ; getReturnValue ( ) . METHOD_12 ( false ) ; } } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return TYPE_1 . METHOD_2 ( vm , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , vm . getStoragePoolId ( ) , METHOD_4 ( ) . getValue ( ) , false , true , false , false , false , false , true , VAR_1 . Collections < org.ovirt.engine.core.common.businessentities . Disk > METHOD_5 ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { if ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) { METHOD_4 ( VAR_1 ) ; } else { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . METHOD_2 ( ) . METHOD_7 ( ) ) ; super . METHOD_1 ( ) ; } } } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , java.lang.String [ ] VAR_1 ) { java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_3 < java.lang.String > METHOD_4 ( VAR_4 , vds . METHOD_5 ( ) . getValue ( ) ) . METHOD_6 ( STRING_1 ) ) , VAR_1 ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { METHOD_7 ( vds , VAR_2 ) ; return true ; } return false ; } 
public void METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.VDS entity ) { model . METHOD_2 ( new TYPE_2 ( ) ) ; TYPE_3 VAR_1 = new TYPE_3 ( METHOD_3 ( model . getId ( ) ) ) ; java.util.List < TYPE_4 > VAR_2 = VAR_1 . METHOD_4 ( entity ) ; for ( TYPE_4 VAR_3 : VAR_2 ) { TYPE_5 . METHOD_5 ( VAR_4 , VAR_3 , VAR_1 . METHOD_6 ( ) ) ; } model . METHOD_4 ( ) . METHOD_4 ( ) . METHOD_7 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { host = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; host . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; final TYPE_1 VAR_1 = new TYPE_1 ( ) ; host . METHOD_3 ( VAR_1 ) ; VAR_2 = new TYPE_2 ( ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( TYPE_3 . any ( ) ) ) . thenReturn ( VAR_6 ) ; } 
public boolean METHOD_1 ( TYPE_1 a ) { return ( ( ( ( a . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( a . METHOD_2 ( ) ) != ( VAR_2 ) ) ) && ( ( a . METHOD_3 ( ) ) != null ) ) && ( ( a . METHOD_3 ( ) ) == ( VAR_3 ) ) ; } 
private < TYPE_1 extends TYPE_2 > org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { java.util.List < TYPE_3 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_2 = VAR_1 . METHOD_2 ( new TYPE_4 ( ) , hosts , vm , null ) ; VAR_2 . METHOD_3 ( TYPE_5 . METHOD_4 ( TYPE_6 : : METHOD_5 ) ) ; return VAR_2 . get ( 0 ) . METHOD_6 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getParameters ( ) . getStoragePoolId ( ) . getValue ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_4 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_5 ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 , VAR_1 , true ) ; VAR_2 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , VAR_2 . METHOD_3 ( VAR_3 , VAR_1 , false ) ) ; METHOD_6 ( ) ; } 
private void METHOD_1 ( TYPE_1 constants ) { VAR_1 . METHOD_2 ( constants . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( constants . METHOD_5 ( ) ) ; VAR_3 . METHOD_4 ( constants . METHOD_6 ( ) ) ; VAR_4 . METHOD_4 ( constants . METHOD_7 ( ) ) ; VAR_5 . METHOD_2 ( constants . METHOD_8 ( ) ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 VAR_1 , final java.util.List < java.lang.String > VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( java.util.List < java.lang.String > VAR_4 : TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , TYPE_4 . METHOD_5 ( VAR_4 , VAR_5 ) ) ) ; } return VAR_3 ; } 
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 , TYPE_2 VAR_2 ) { command . getParameters ( ) . METHOD_2 ( VAR_2 ) ; TYPE_3 VAR_3 = org.mockito.Mockito . METHOD_3 ( VAR_4 class ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_5 ( TYPE_4 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; } 
private java.util.Map < java.lang.String , java.util.List < org.ovirt.engine.core.compat.Guid > > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { java.util.Map < java.lang.String , java.util.List < org.ovirt.engine.core.compat.Guid > > map = new java.util.HashMap < > ( ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_2 . getId ( ) , map , new TYPE_4 < org.ovirt.engine.core.compat.Guid > ( ) ) ; } return map ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; if ( VAR_2 == null ) { METHOD_2 ( VAR_5 , VAR_4 class , new java.lang.String [ ] { } , new java.lang.Object [ ] { } , TYPE_1 . METHOD_4 ( ) ) ; } VAR_6 . METHOD_5 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_2 ( VAR_1 , VAR_3 ) , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 < TYPE_1 > cmd = TYPE_3 . METHOD_2 ( VAR_1 ) ; java.util.List < TYPE_4 > VAR_2 = new java.util.ArrayList < TYPE_4 > ( ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_2 . add ( VAR_3 ) ; java.util.List < TYPE_4 > VAR_5 = cmd . METHOD_4 ( VAR_2 ) ; TYPE_5 . METHOD_5 ( ( ! ( VAR_5 . isEmpty ( ) ) ) ) ; } 
protected void METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 , final java.util.List < TYPE_2 . VdcActionParametersBase > VAR_3 ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_4 , VAR_3 , new TYPE_3 ( ) { public void METHOD_3 ( TYPE_4 result ) { TYPE_5 VAR_5 = new TYPE_5 ( ) { public void METHOD_4 ( ) { METHOD_5 ( VAR_1 , VAR_2 ) ; } } ; VAR_5 . METHOD_6 ( INT_1 ) ; } } , this ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 , new TYPE_3 ( VAR_3 . METHOD_3 ( ) ) ) ; if ( VAR_1 . getSucceeded ( ) ) { VAR_4 = ( ( java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_4 > ) ( VAR_1 . getReturnValue ( ) ) ) ; METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( new TYPE_2 < TYPE_3 > ( ) ) ; VAR_2 = new TYPE_1 ( new TYPE_4 ( ) ) ; VAR_3 = new TYPE_1 < TYPE_5 > ( new TYPE_2 < TYPE_5 > ( ) ) ; VAR_4 = new TYPE_1 ( new TYPE_4 ( ) ) ; VAR_5 = new TYPE_1 ( new TYPE_6 < TYPE_7 > ( ) ) ; VAR_6 = new TYPE_1 ( new TYPE_6 < TYPE_8 > ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = VAR_2 . get ( VAR_4 ) ; VAR_5 = dao . get ( VAR_3 . getId ( ) ) ; VAR_6 = new TYPE_1 ( VAR_7 , VAR_8 , 1 ) ; } 
public void METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; try { if ( ! ( VAR_3 ) ) { METHOD_4 ( STRING_1 ) ; } for ( java.lang.String VAR_4 : VAR_1 ) { METHOD_5 ( VAR_4 ) ; } } finally { VAR_2 . METHOD_2 ( ) . METHOD_6 ( ) ; } } 
public void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 parameters = new TYPE_1 ( false , VAR_2 ) ; parameters . METHOD_2 ( VAR_1 ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_3 , parameters , TYPE_3 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( ) ; java.util.List < TYPE_2 > VAR_3 = ( VAR_1 != null ) ? new java.util.ArrayList < TYPE_2 > ( TYPE_3 . METHOD_3 ( VAR_1 ) ) : new java.util.ArrayList < TYPE_2 > ( ) ; this . METHOD_4 ( VAR_3 ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { METHOD_1 ( ) . setItems ( ( ( java.util.List < TYPE_1 > ) ( VAR_2 ) ) ) ; VAR_3 . METHOD_2 ( METHOD_1 ( ) , METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( true ) ; METHOD_6 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_2 ) , TYPE_3 . any ( VAR_3 class ) ) ) . thenReturn ( returnValue ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) : true ; } } ; TYPE_1 . METHOD_3 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_4 ( ) ) , aQuery ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel model ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.lang.Boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_2 . METHOD_2 ( VAR_3 , VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . toString ( ) ) ) ) ; return ( VAR_2 && ( VAR_1 . METHOD_5 ( ) ) ) && ( ! ( VAR_1 . METHOD_6 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 . IdQueryParameters class ) ; TYPE_3 entity = getEntity ( VAR_2 , true ) ; return METHOD_2 ( VAR_1 , entity , map ( entity ) , VAR_2 , VAR_5 , new TYPE_4 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { if ( VAR_2 ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_3 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) , TYPE_2 . any ( VAR_4 class ) , TYPE_2 . any ( VAR_5 class ) ) ; } else { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_3 ) . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) , TYPE_2 . any ( VAR_4 class ) ) ; } } 
protected boolean METHOD_1 ( ) { if ( ! ( validate ( TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) , TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) , TYPE_2 . getVm ( ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( ) . getId ( ) ) ) ) ) { return false ; } return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( TYPE_1 ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
protected void METHOD_1 ( ) { java.lang.String version = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( version ) ; java.util.HashMap < java.lang.String , java.util.HashMap < java.lang.String , java.lang.String > > map = VAR_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( map ) ; TYPE_1 . METHOD_4 ( ) . METHOD_6 ( ( ( map . size ( ) ) > 0 ) ) ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( TYPE_2 a : VAR_2 . Linq < TYPE_2 > METHOD_2 ( METHOD_3 ( ) ) ) { VAR_1 . add ( new TYPE_3 ( a . getId ( ) , getEntity ( ) . getId ( ) ) ) ; } org.ovirt.engine.ui.frontend.Frontend . METHOD_4 ( VAR_3 , VAR_1 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( METHOD_2 ( ) , ( ( java.lang.Integer ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) , VAR_1 ) ; if ( ! ( ( ( ( TYPE_2 ) ( model ) ) . METHOD_3 ( ) ) instanceof TYPE_3 ) ) { METHOD_1 ( METHOD_4 ( ) , ( ( java.lang.Integer ) ( METHOD_2 ( ) . getEntity ( ) ) ) , 1 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } return source ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , params , aQuery ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; dao . METHOD_4 ( result . getId ( ) ) ; result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_5 ( result ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( new TYPE_3 ( TYPE_4 . METHOD_3 ( ) . getId ( ) , TYPE_4 . getParameters ( ) . METHOD_4 ( ) ) , TYPE_4 . METHOD_3 ( ) . METHOD_5 ( ) , TYPE_4 . METHOD_3 ( ) . METHOD_6 ( ) ) ; TYPE_4 . METHOD_7 ( ) . METHOD_8 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , true , METHOD_4 ( iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , iface . METHOD_7 ( ) , iface . METHOD_8 ( ) ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( VAR_1 . size ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( VAR_3 . getName ( ) ) ; VAR_4 . setId ( VAR_3 . getId ( ) ) ; VAR_2 . add ( VAR_4 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , VAR_2 ) ) ) ; METHOD_3 ( cmd , false ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 cmd , boolean VAR_1 , TYPE_2 VAR_2 ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_2 ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_5 ( new TYPE_4 ( VAR_2 , STRING_1 ) ) ; } org.mockito.Mockito.when ( VAR_5 . METHOD_6 ( TYPE_5 . any ( VAR_6 class ) , TYPE_5 . any ( VAR_7 class ) ) ) . thenReturn ( VAR_4 ) ; } 
private org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( INT_1 ) ; VAR_2 . METHOD_4 ( STRING_2 ) ; VAR_2 . METHOD_5 ( STRING_3 ) ; VAR_2 . METHOD_6 ( STRING_4 ) ; VAR_2 . METHOD_7 ( new org.ovirt.engine.core.compat . Version ( STRING_5 ) ) ; VAR_2 . METHOD_8 ( org.ovirt.engine.core.compat.Guid . METHOD_9 ( ) ) ; VAR_2 . setId ( VAR_1 ) ; return VAR_2 ; } 
public void METHOD_1 ( long VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = null ; TYPE_3 VAR_3 = null ; try { VAR_2 = VAR_4 . METHOD_2 ( ) ; VAR_3 = VAR_2 . METHOD_3 ( ( STRING_1 + ( ( STRING_2 + STRING_3 ) + STRING_4 ) ) ) ; VAR_3 . METHOD_4 ( 1 , VAR_1 ) ; int VAR_5 = VAR_3 . METHOD_5 ( ) ; if ( VAR_5 != 1 ) { VAR_6 . error ( STRING_5 , VAR_1 ) ; } } finally { TYPE_4 . METHOD_6 ( VAR_3 , VAR_2 ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { boolean returnValue = ( ( java.lang.Boolean ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( returnValue ) { command . METHOD_1 ( ) ; } else { METHOD_2 ( command ) ; } } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) , VAR_1 ) ; command . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( ( ( command . METHOD_9 ( ) . size ( ) ) == 1 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( true ) ; TYPE_2 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( STRING_1 , STRING_2 ) ) ; TYPE_2 . METHOD_4 ( STRING_3 , VAR_1 . METHOD_3 ( STRING_4 , STRING_2 ) ) ; TYPE_2 . METHOD_4 ( STRING_5 , VAR_1 . METHOD_3 ( STRING_1 , STRING_6 ) ) ; TYPE_2 . METHOD_4 ( STRING_7 , VAR_1 . METHOD_3 ( STRING_1 , null ) ) ; TYPE_2 . METHOD_4 ( STRING_8 , VAR_1 . METHOD_3 ( null , STRING_2 ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 type ) { TYPE_3 VAR_1 = type . METHOD_2 ( ) ; TYPE_1 VAR_2 = METHOD_3 ( VAR_1 , true ) ; VAR_2 . METHOD_4 ( VAR_3 . List class ) ; VAR_2 . METHOD_5 ( ( ( STRING_1 + ( VAR_2 . METHOD_6 ( ) ) ) + STRING_2 ) ) ; return VAR_2 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Boolean ) ( source ) ) . METHOD_3 ( ) : true ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , aQuery ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( VAR_1 ) ; storageDomain . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( storageDomain ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( VAR_1 , VAR_2 ) ) . thenReturn ( storageDomain ) ; } 
public void METHOD_1 ( TYPE_1 result ) { getWindow ( ) . METHOD_2 ( ) ; TYPE_2 returnValue = result . getReturnValue ( ) ; if ( ( returnValue != null ) && ( returnValue . getSucceeded ( ) ) ) { METHOD_3 ( null ) ; METHOD_4 ( ) ; METHOD_5 ( returnValue ) ; } else { METHOD_6 ( ) ; } super . METHOD_1 ( result ) ; } 
static java.lang.String METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { java.lang.String returnValue = VAR_1 ; if ( VAR_2 != null ) { java.util.Map < java.lang.String , java.lang.String > map = TYPE_2 . METHOD_2 ( VAR_2 ) ; returnValue = TYPE_2 . METHOD_1 ( VAR_1 , map ) ; } return returnValue ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_1 ( METHOD_2 ( ) . getId ( ) , VAR_2 . Disk , VAR_3 ) ) ; } return VAR_1 ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_3 ) ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . Network VAR_5 = VAR_2 . METHOD_3 ( VAR_4 , null , VAR_1 ) ; if ( VAR_5 != null ) { return VAR_5 . getId ( ) . toString ( ) ; } return null ; } 
private void METHOD_1 ( TYPE_1 parameters , org.ovirt.engine.core.common.businessentities.VM VAR_1 ) { if ( TYPE_2 . METHOD_2 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) { TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_1 , ( parameters . METHOD_5 ( ) ? VAR_2 : VAR_3 ) ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . METHOD_4 ( ( ( result . size ( ) ) == 1 ) ) ; TYPE_1 . assertEquals ( result . get ( 0 ) . getId ( ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , vds . getId ( ) , vds . METHOD_3 ( ) ) ; TYPE_1 params = new TYPE_1 ( vds . getId ( ) , VAR_2 ) ; params . METHOD_4 ( VAR_3 ) ; TYPE_2 . getInstance ( ) . METHOD_5 ( VAR_4 , params , TYPE_3 . METHOD_6 ( ) ) ; METHOD_7 ( vds ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; cluster = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; VAR_2 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; VAR_3 = STRING_3 ; VAR_4 = new org.ovirt.engine.core.common.businessentities . network ( ) ; VAR_4 . METHOD_4 ( STRING_4 ) ; VAR_4 . METHOD_5 ( STRING_5 ) ; VAR_4 . METHOD_6 ( VAR_2 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_1 ( METHOD_2 ( ) . getId ( ) , VAR_2 . Disk , VAR_3 ) ) ; VAR_1 . add ( new TYPE_1 ( METHOD_2 ( ) . getId ( ) , VAR_2 . Disk , VAR_4 ) ) ; } return VAR_1 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . Disk ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , VAR_1 , aQuery ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ; METHOD_2 ( VAR_2 , getParameters ( ) . METHOD_4 ( ) ) ; METHOD_2 ( VAR_3 , getParameters ( ) . METHOD_5 ( ) ) ; METHOD_2 ( VAR_4 , getParameters ( ) . METHOD_6 ( ) ) ; METHOD_2 ( VAR_5 , TYPE_1 . name ( ) ) ; return super . METHOD_1 ( ) ; } 
private java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String ... VAR_1 ) { java.util.ArrayList < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( VAR_1 . length ) ; for ( java.lang.String e : VAR_1 ) { list . add ( e . METHOD_2 ( ) ) ; } return list ; } 
public void METHOD_1 ( ) { validator = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_1 , cluster , VAR_2 ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_3 ( TYPE_2 . any ( VAR_3 class ) ) ; TYPE_3 . METHOD_4 ( validator . METHOD_1 ( TYPE_4 . instance ( ) . METHOD_5 ( VAR_3 class ) ) , TYPE_5 . METHOD_6 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ( ( ( java.util.List < TYPE_1 > ) ( source ) ) . size ( ) ) > 0 ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS host = context . host ; if ( ( host . getStoragePoolId ( ) ) != null ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( returnValue ) ) ; METHOD_3 ( ) ; } } , VAR_2 ) , host . getStoragePoolId ( ) ) ; } else { METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; java.util.List < TYPE_1 . DiskImage > VAR_1 = TYPE_2 . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_3 . ValidationResult ( VAR_2 ) ) . when ( VAR_3 ) . METHOD_6 ( VAR_1 ) ; TYPE_4 . METHOD_7 ( cmd , VAR_4 ) ; org.mockito.Mockito . METHOD_8 ( VAR_3 ) . METHOD_6 ( VAR_1 ) ; } 
public synchronized void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; if ( ( METHOD_2 ( ) ) && ( VAR_1 ) ) { VAR_2 . METHOD_4 ( STRING_1 , VAR_3 < java.lang.Integer > METHOD_5 ( VAR_4 ) ) ; VAR_1 = false ; } if ( ( VAR_5 . size ( ) ) > 0 ) { METHOD_6 ( ) ; } } } 
public static void METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 ) { for ( int i = 0 ; i < VAR_2 ; i ++ ) { TYPE_2 . METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 . getId ( ) ) , VAR_3 , VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( VAR_1 ) , true , false ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { final java.util.Map < java.lang.Integer , TYPE_1 > VAR_1 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; if ( ( VAR_1 . get ( VAR_2 ) ) == null ) { throw new TYPE_3 ( STRING_1 ) ; } VAR_3 = TYPE_4 . METHOD_1 ( VAR_1 ) ; METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_3 ( ) ; cmd . getParameters ( ) . getVm ( ) . METHOD_4 ( VAR_1 ) ; cluster . METHOD_5 ( VAR_1 ) ; cluster . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { java.lang.String VAR_2 = METHOD_2 ( VAR_1 ) ; if ( null == VAR_2 ) { VAR_2 = METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; } TYPE_1 VAR_3 = TYPE_3 . METHOD_5 ( VAR_2 , true ) ; return VAR_3 ; } 
private static java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > returnValue = new java.util.HashMap < java.lang.String , java.lang.String > ( VAR_2 . METHOD_2 ( ) ) ; TYPE_2 < java.lang.String > VAR_3 = TYPE_3 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 != null ) && ( ( VAR_3 . size ( ) ) > 0 ) ) { TYPE_4 . METHOD_4 ( VAR_2 , VAR_3 , returnValue ) ; } return returnValue ; } 
private TYPE_1 . AddVmCommand < TYPE_2 > METHOD_1 ( final int VAR_1 , final int VAR_2 , final int VAR_3 ) { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_1 . AddVmCommand < TYPE_2 > cmd = METHOD_3 ( vm ) ; TYPE_3 . METHOD_4 ( cmd ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( ) ) . when ( cmd ) . METHOD_6 ( ) ; return cmd ; } 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 i : VAR_1 ) { if ( ! ( TYPE_2 . METHOD_2 ( i . METHOD_3 ( ) ) ) ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_2 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_2 ( VAR_1 , VAR_3 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 nic = new TYPE_1 ( ) ; nic . setId ( VAR_1 ) ; nic . METHOD_2 ( new TYPE_2 ( ) ) ; nic . getVm ( ) . setId ( VAR_2 ) ; TYPE_3 . METHOD_3 ( METHOD_4 ( ) , nic ) ; assertEquals ( VAR_3 , nic . METHOD_5 ( ) ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) { return true ; } if ( ! ( VAR_1 . METHOD_5 ( TYPE_2 . getVm ( ) . METHOD_6 ( ) . METHOD_7 ( ) , METHOD_8 ( ) ) ) ) { METHOD_9 ( STRING_1 , TYPE_2 . getVdsGroup ( ) . METHOD_10 ( ) ) ; return METHOD_11 ( VAR_2 ) ; } return true ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = resource . METHOD_2 ( ) . METHOD_2 ( ) . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( VAR_5 ) ; VAR_1 . METHOD_7 ( VAR_6 ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { if ( VAR_1 != null ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_4 : VAR_3 ) { if ( VAR_1 . equals ( VAR_4 . METHOD_4 ( ) ) ) { return true ; } } } return false ; } 
void METHOD_1 ( ) { TYPE_1 . VdcQueryReturnValue returnValue = new TYPE_1 . VdcQueryReturnValue ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . runQuery ( TYPE_2 . METHOD_4 ( VAR_3 ) , TYPE_3 . METHOD_5 ( VAR_4 class ) ) ) . thenReturn ( returnValue ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; if ( ( ( cluster != null ) && ( cluster . METHOD_1 ( ) ) ) && ( ! ( cluster . METHOD_2 ( ) ) ) ) { model . METHOD_3 ( ) . METHOD_4 ( true ) ; } model . METHOD_5 ( ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ; TYPE_2 . METHOD_1 ( METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) , VAR_2 , VAR_2 . METHOD_8 ( ) , true , VAR_1 , VAR_3 , VAR_4 , TYPE_3 . getParameters ( ) . METHOD_9 ( ) , TYPE_3 . getParameters ( ) . METHOD_10 ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 map = VAR_1 . METHOD_2 ( ) ; TYPE_3 . METHOD_3 ( ) . METHOD_4 ( map ) ; TYPE_3 . METHOD_3 ( ) . METHOD_5 ( ( ( map . METHOD_6 ( ) . size ( ) ) > 0 ) ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_1 . METHOD_3 ( ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_1 . getId ( ) ; return METHOD_4 ( VAR_4 , VAR_2 , VAR_3 , VAR_5 , VAR_6 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 parameters = null ; try { parameters = VAR_2 . METHOD_2 ( ) ; parameters . getParameters ( ) . add ( new TYPE_2 ( VAR_1 , null , VAR_3 , VAR_4 , 1 , 1 ) ) ; } catch ( TYPE_3 e ) { } return VAR_5 . METHOD_3 ( parameters ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( getVdsGroup ( ) , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_3 ) ; } 
protected static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 < TYPE_4 . DiskImage > VAR_1 ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_2 > VAR_2 = new java.util.HashMap < > ( ) ; for ( TYPE_4 . Disk diskImage : VAR_1 ) { VAR_2 . put ( diskImage . getId ( ) , diskImage ) ; } return new TYPE_5 ( VAR_2 . METHOD_2 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; VAR_3 = ( ( java.lang.Integer ) ( returnValue ) ) ; VAR_2 . METHOD_2 ( ) ; } 
public static void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; for ( TYPE_1 pool : VAR_1 ) { if ( ( pool . METHOD_4 ( ) ) == ( VAR_2 ) ) { TYPE_2 . METHOD_5 ( pool . getId ( ) , VAR_3 ) ; } } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) , TYPE_2 . METHOD_4 ( ) ) ; final boolean VAR_1 = ( VAR_2 . size ( ) ) > 0 ; if ( VAR_1 ) { TYPE_3 . METHOD_5 ( new TYPE_4 < TYPE_5 > ( ) { public TYPE_5 METHOD_6 ( ) { if ( METHOD_7 ( ) ) { TYPE_6 . METHOD_8 ( METHOD_9 ( ) ) ; METHOD_10 ( true ) ; } return null ; } } ) ; } else { METHOD_11 ( ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; if ( ( VAR_2 ) != null ) { METHOD_2 ( VAR_2 ) ; } VAR_3 = true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( STRING_1 , VAR_2 . StoragePool ) , aQuery ) ; } 
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; VAR_1 . add ( VAR_2 ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_6 ) ; VAR_2 . METHOD_3 ( VAR_7 ) ; VAR_2 . METHOD_4 ( VAR_5 ) ; VAR_1 . add ( VAR_2 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ( ! ( ( java.lang.Boolean ) ( model . METHOD_6 ( ) . getEntity ( ) ) ) ) ) ; } 
public TYPE_1 getValue ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_2 > VAR_1 ) { if ( ( VAR_1 . getEntity ( ) . METHOD_1 ( ) ) == ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } else if ( ( VAR_1 . getEntity ( ) . METHOD_1 ( ) ) == ( VAR_4 ) ) { return VAR_3 . METHOD_3 ( ) ; } else if ( ( VAR_1 . getEntity ( ) . METHOD_1 ( ) ) == ( VAR_5 ) ) { return VAR_3 . METHOD_4 ( ) ; } return null ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_3 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; TYPE_3 VAR_4 = TYPE_4 . map ( VAR_3 , null ) ; assertEquals ( VAR_4 . getStatus ( ) . METHOD_3 ( ) , VAR_2 . value ( ) ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_1 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) { { METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; } } ; } 
protected boolean METHOD_1 ( final TYPE_1 ... VAR_1 ) { boolean VAR_2 = false ; TYPE_1 status = METHOD_2 ( ) ; if ( status != null ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( status ) ; } if ( ! VAR_2 ) { if ( status . METHOD_5 ( ) ) { return METHOD_6 ( VAR_3 ) ; } METHOD_7 ( ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { int VAR_1 = 2 ; METHOD_2 ( VAR_2 , VAR_3 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 } , METHOD_3 ( VAR_1 ) ) ; TYPE_1 VAR_5 = METHOD_4 ( null ) ; VAR_6 . METHOD_5 ( VAR_5 ) ; VAR_7 . METHOD_6 ( ) ; java.util.List < TYPE_2 > VAR_8 = METHOD_7 ( ) ; METHOD_8 ( VAR_8 ) ; assertEquals ( VAR_1 , VAR_8 . size ( ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 iface , org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > VAR_2 = TYPE_2 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ) ; java.lang.String VAR_3 = iface . METHOD_5 ( ) ; return ( VAR_2 . METHOD_6 ( VAR_3 ) ) && ( VAR_2 . get ( VAR_3 ) . METHOD_7 ( ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > entity , TYPE_1 template ) { TYPE_1 result = ( template == null ) ? new TYPE_1 ( ) : template ; if ( entity != null ) { for ( TYPE_3 source : entity ) { TYPE_4 VAR_1 = TYPE_5 . map ( source , null ) ; result . METHOD_2 ( ) . add ( VAR_1 . name ( ) ) ; } } return result ; } 
public TYPE_1 < ? > METHOD_1 ( java.lang.String name , java.lang.String VAR_1 ) { TYPE_2 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_3 ( domain , name , VAR_1 ) ) ; TYPE_4 VAR_5 = ( ( TYPE_4 ) ( VAR_2 . getReturnValue ( ) ) ) ; return new TYPE_5 ( VAR_5 ) ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = false ; try { VAR_2 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; VAR_1 = TYPE_1 . METHOD_4 ( ) . getSucceeded ( ) ; } catch ( TYPE_2 VAR_3 ) { VAR_2 . error ( STRING_2 , VAR_3 ) ; } finally { METHOD_5 ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( ) . add ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = METHOD_2 ( VAR_1 . METHOD_5 ( ) ) ; VAR_4 = METHOD_2 ( VAR_1 . METHOD_6 ( ) ) ; VAR_5 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_7 ( STRING_2 ) ; VAR_6 . METHOD_8 ( STRING_3 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; if ( ( TYPE_1 . METHOD_3 ( ) ) == null ) { TYPE_1 . METHOD_4 ( false ) ; log . METHOD_5 ( STRING_1 , TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_7 ( ) ) ; TYPE_1 . getReturnValue ( ) . METHOD_8 ( false ) ; return ; } VAR_1 = METHOD_9 ( ) ; TYPE_1 . getReturnValue ( ) . METHOD_8 ( ( ( VAR_1 ) == ( VAR_2 ) ) ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 , TYPE_1 < ? > VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { return false ; } switch ( VAR_3 . METHOD_3 ( ) ) { case VAR_4 : case VAR_5 : case VAR_6 : case VAR_7 : case VAR_8 : VAR_2 . METHOD_4 ( VAR_9 ) ; return true ; case VAR_10 : VAR_2 . METHOD_4 ( VAR_11 ) ; return true ; } return true ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : INT_1 ; } } ; METHOD_4 ( new TYPE_1 ( VAR_1 , METHOD_5 ( ) ) , aQuery ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . getId ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 : VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_5 ( VAR_3 . getId ( ) ) ; } } 
protected void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == 0 ) { METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; } else { METHOD_3 ( VAR_3 ) ; METHOD_5 ( METHOD_2 ( ) ) ; } TYPE_1 . METHOD_6 ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , getEntity ( 0 ) ) ; METHOD_3 ( 1 ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 . StorageDomain model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_7 ( model ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_9 ( VAR_3 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ! ( ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) ) : false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( name ) , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( true ) ; TYPE_2 . assertEquals ( STRING_1 , STRING_2 , VAR_1 . METHOD_2 ( STRING_1 ) ) ; TYPE_2 . METHOD_3 ( STRING_3 , VAR_1 . METHOD_2 ( STRING_4 ) ) ; TYPE_2 . METHOD_3 ( STRING_5 , VAR_1 . METHOD_2 ( null ) ) ; } 
protected void METHOD_1 ( int VAR_1 , boolean VAR_2 , org.ovirt.engine.core.common.businessentities.VDS entity ) throws java.lang.Exception { while ( ( VAR_1 -- ) > 0 ) { METHOD_1 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , ( VAR_2 ? null : entity ) ) ; } if ( ! VAR_2 ) { METHOD_2 ( ) ; } } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , true ) ; TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , true ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( false , VAR_2 . METHOD_6 ( ) , 1 , VAR_1 ) ; METHOD_5 ( true , VAR_2 . METHOD_6 ( ) , 2 , 1 , VAR_1 ) ; METHOD_7 ( new java.util.ArrayList < TYPE_1 > ( TYPE_2 . METHOD_8 ( VAR_2 , VAR_3 ) ) , 1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { response . METHOD_2 ( STRING_1 ) ; TYPE_5 VAR_2 = response . METHOD_3 ( ) ; java.lang.String VAR_3 = VAR_4 < java.lang.String > METHOD_4 ( VAR_5 ) ; if ( TYPE_6 . isEmpty ( VAR_3 ) ) { METHOD_5 ( VAR_2 , STRING_2 ) ; } else { response . METHOD_6 ( VAR_3 ) ; } } 
private void METHOD_1 ( TYPE_1 list ) { METHOD_2 ( list . METHOD_3 ( ) ) ; METHOD_2 ( list . METHOD_3 ( ) . METHOD_4 ( ) ) ; METHOD_2 ( list . METHOD_3 ( ) . METHOD_4 ( ) . get ( 0 ) ) ; assertEquals ( list . METHOD_3 ( ) . METHOD_4 ( ) . get ( 0 ) . METHOD_5 ( ) , VAR_1 ) ; assertEquals ( list . METHOD_3 ( ) . METHOD_4 ( ) . get ( 0 ) . METHOD_6 ( ) , VAR_2 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; if ( METHOD_3 ( ) ) { java.lang.String VAR_1 = METHOD_4 ( ) . METHOD_5 ( this , STRING_1 , new TYPE_1 [ 0 ] , new java.lang.Object [ 0 ] , 0 , VAR_2 ) ; VAR_3 . put ( TYPE_2 . getParameters ( ) . METHOD_6 ( ) , VAR_1 ) ; } } 
public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VM object ) { if ( ( ( object . METHOD_1 ( ) ) == ( VAR_1 ) ) || ( ( object . METHOD_1 ( ) ) == ( VAR_2 ) ) ) return STRING_1 ; else return VAR_3 . METHOD_2 ( METHOD_3 ( object ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String name ) throws TYPE_2 { VAR_1 . METHOD_2 ( STRING_1 , name ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_3 ( name ) ; java.util.List < TYPE_1 > VAR_3 ; if ( ( VAR_2 . size ( ) ) == 1 ) { VAR_3 = VAR_2 ; } else { VAR_3 = new java.util.ArrayList < TYPE_1 > ( VAR_2 ) ; TYPE_3 . METHOD_4 ( VAR_3 , VAR_4 ) ; } VAR_1 . METHOD_2 ( STRING_2 , VAR_3 ) ; return VAR_3 ; } 
public boolean METHOD_1 ( TYPE_1 . VDS VAR_1 , TYPE_1 . VDS VAR_2 , TYPE_1 . VM vm ) { return ( ( VAR_1 . METHOD_2 ( ) ) - ( VAR_1 . METHOD_3 ( ) ) ) < ( ( VAR_2 . METHOD_2 ( ) ) - ( VAR_2 . METHOD_3 ( ) ) ) ; } 
public java.util.HashMap < java.lang.Integer , java.lang.String > METHOD_1 ( ) { java.util.HashMap < java.lang.Integer , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { java.lang.String name = METHOD_3 ( VAR_3 . get ( VAR_2 ) , STRING_1 , null ) ; if ( name != null ) { VAR_1 . put ( VAR_2 , name ) ; } } return VAR_1 ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster ) { VAR_1 . METHOD_2 ( STRING_1 , cluster . METHOD_3 ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = METHOD_4 ( ) . METHOD_5 ( cluster . getId ( ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_3 = METHOD_6 ( ) . METHOD_7 ( cluster . getId ( ) ) ; if ( VAR_3 == null ) { VAR_1 . METHOD_2 ( STRING_2 , cluster . METHOD_3 ( ) ) ; return ; } METHOD_8 ( cluster , VAR_3 , VAR_2 ) ; METHOD_9 ( cluster , VAR_3 , VAR_2 ) ; } 
public static < TYPE_1 extends org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > java.util.Map < java.lang.String , TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { if ( VAR_1 != null ) { java.util.Map < java.lang.String , TYPE_1 > map = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( TYPE_1 e : VAR_1 ) { map . put ( e . METHOD_2 ( ) , e ) ; } return map ; } else { return TYPE_3 . METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 . assertEquals ( STRING_1 , VAR_4 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; TYPE_2 . METHOD_5 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 . METHOD_6 ( STRING_2 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = METHOD_2 ( ) . METHOD_3 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_3 = TYPE_1 . METHOD_4 ( VAR_1 , VAR_2 ) ; TYPE_2 VAR_4 = METHOD_5 ( VAR_3 ) ; return ( ( validate ( VAR_4 . METHOD_6 ( ) ) ) && ( validate ( VAR_4 . METHOD_7 ( ) ) ) ) && ( validate ( VAR_4 . METHOD_8 ( VAR_1 , VAR_2 ) ) ) ; } 
private static java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.VM > vms , boolean VAR_1 , boolean VAR_2 ) { final java.util.List < org.ovirt.engine.core.compat.Guid > result = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { if ( VAR_1 ) { result . add ( vm . METHOD_2 ( ) . METHOD_3 ( ) ) ; } if ( VAR_2 ) { result . add ( vm . METHOD_2 ( ) . METHOD_4 ( ) ) ; } } return result ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities.network.Network VAR_2 = METHOD_2 ( STRING_2 ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_4 ( STRING_3 , VAR_1 ) ; METHOD_5 ( nic ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_3 = METHOD_6 ( nic . getName ( ) , INT_1 , VAR_2 . getName ( ) ) ; VAR_3 . METHOD_7 ( null ) ; TYPE_1 VAR_4 = METHOD_8 ( METHOD_9 ( nic , VAR_3 ) ) ; METHOD_10 ( VAR_4 , VAR_5 , nic . getName ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) . toString ( ) ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_2 domain = TYPE_1 . METHOD_6 ( VAR_2 ) ; domain . setId ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ; METHOD_7 ( domain ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 , new TYPE_1 ( vm . getId ( ) ) ) ) ; setItems ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public static java.lang.String METHOD_1 ( java.util.ArrayList < java.lang.String > VAR_1 , java.lang.String VAR_2 ) { if ( VAR_1 == null ) { return STRING_1 ; } TYPE_1 VAR_3 = new TYPE_1 ( ) ; TYPE_2 < java.lang.String > VAR_4 = VAR_1 . METHOD_2 ( ) ; while ( VAR_4 . METHOD_3 ( ) ) { VAR_3 . append ( VAR_4 . METHOD_4 ( ) ) ; if ( ! ( VAR_4 . METHOD_3 ( ) ) ) { break ; } VAR_3 . append ( VAR_2 ) ; } return VAR_3 . toString ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { TYPE_4 VAR_2 = new TYPE_5 ( VAR_3 ) . METHOD_2 ( ) ; this . VAR_4 = new TYPE_6 ( VAR_2 ) ; this . VAR_5 = new TYPE_7 ( VAR_2 , this . VAR_4 ) ; TYPE_8 . METHOD_3 ( VAR_2 . METHOD_4 ( ) , VAR_6 < TYPE_1 > get ( VAR_7 ) . < java.lang.String > get ( VAR_8 ) ) ; } 
protected void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { VAR_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; if ( ( VAR_2 . METHOD_4 ( ) ) == 0 ) { TYPE_1 . get ( ) . METHOD_5 ( new TYPE_2 ( ) { public void METHOD_6 ( ) { VAR_2 . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( 0 ) ; } } ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_3 VAR_4 = new TYPE_4 ( VAR_5 ) ; METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; try { METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_7 ) { METHOD_7 ( VAR_7 , VAR_8 , VAR_4 ) ; } finally { VAR_2 . METHOD_8 ( ) ; } } 
private java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , java.util.ArrayList < TYPE_2 . VdcActionParametersBase > parameters , boolean VAR_2 , boolean VAR_3 , boolean VAR_4 , TYPE_3 VAR_5 ) { TYPE_4 VAR_6 = VAR_7 . METHOD_2 ( VAR_1 , parameters , VAR_2 , VAR_5 ) ; VAR_6 . METHOD_3 ( VAR_3 ) ; VAR_6 . METHOD_4 ( VAR_4 ) ; return VAR_6 . METHOD_5 ( ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( ( ( TYPE_2 ) ( VAR_2 ) ) , new TYPE_3 < TYPE_4 > ( ) { public void onSuccess ( final TYPE_4 result ) { VAR_3 . METHOD_3 ( null ) ; VAR_4 . onSuccess ( result ) ; } public void METHOD_4 ( final TYPE_5 VAR_5 ) { VAR_3 . METHOD_3 ( null ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; } } ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; if ( VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_3 , TYPE_2 . getParameters ( ) . METHOD_6 ( ) . get ( 0 ) , new TYPE_3 ( TYPE_2 . METHOD_7 ( ) ) ) ; METHOD_8 ( VAR_2 . getSucceeded ( ) ) ; } else { super . METHOD_1 ( ) ; } } 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( ) ) . when ( VAR_3 ) . METHOD_6 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , METHOD_4 ( VAR_1 , 2 ) , 0 , INT_1 , false ) ) ; METHOD_5 ( cmd ) ; METHOD_6 ( cmd ) ; TYPE_1 . METHOD_7 ( cmd . validate ( ) ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) return true ; if ( ( obj == null ) || ( ( obj . METHOD_1 ( ) ) != ( this . METHOD_1 ( ) ) ) ) return false ; TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
protected void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; java.lang.String [ ] VAR_2 = VAR_1 . METHOD_3 ( new java.lang.String [ VAR_1 . size ( ) ] ) ; VAR_3 = TYPE_1 . METHOD_4 ( ) . list ( TYPE_2 . toString ( ) , VAR_2 ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_3 [ ] VAR_4 = VAR_5 ; METHOD_6 ( VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 entity = new TYPE_1 ( ) ; entity . METHOD_2 ( VAR_1 ) ; entity . METHOD_3 ( VAR_2 ) ; entity . setId ( VAR_3 ) ; TYPE_2 model = TYPE_3 . map ( entity , null ) ; TYPE_4 . METHOD_4 ( model ) ; TYPE_4 . assertEquals ( model . METHOD_5 ( ) , VAR_4 ) ; TYPE_4 . assertEquals ( model . getModel ( ) , VAR_5 ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( VAR_1 , METHOD_2 ( ) , TYPE_4 . instance ( ) . METHOD_3 ( ) , new TYPE_5 ( VAR_1 , TYPE_4 . instance ( ) . METHOD_3 ( ) , TYPE_4 . instance ( ) . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_5 = VAR_6 . METHOD_4 ( VAR_7 ) ; TYPE_2 . assertEquals ( STRING_1 , 2 , VAR_5 . size ( ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_5 . METHOD_6 ( VAR_3 ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_5 . METHOD_6 ( VAR_4 ) ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { METHOD_2 ( model ) ; assertEquals ( model . getId ( ) , java.lang.String.valueOf ( VAR_2 [ VAR_1 ] ) ) ; assertEquals ( model . METHOD_3 ( ) , TYPE_2 . value ( ) ) ; assertEquals ( model . METHOD_4 ( ) , VAR_3 [ VAR_1 ] ) ; assertEquals ( model . METHOD_5 ( ) , VAR_4 [ VAR_1 ] ) ; assertEquals ( model . METHOD_6 ( ) , VAR_5 [ VAR_1 ] ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( command . validate ( ) ) ; TYPE_2 . METHOD_5 ( command . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_3 . toString ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.DiskImage disk ) { return new TYPE_1 ( new TYPE_2 ( disk . getId ( ) , VAR_1 ) , VAR_2 , TYPE_3 . getName ( ) , STRING_1 , 1 , null , true , true , true , STRING_1 , null , disk . METHOD_2 ( ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; } else { TYPE_1 . METHOD_4 ( false ) ; } TYPE_1 . METHOD_5 ( ) . getTable ( ) . METHOD_6 ( ) ; TYPE_1 . METHOD_5 ( ) . getTable ( ) . METHOD_7 ( VAR_1 ) ; } 
public static void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) { if ( ! ( VAR_2 . METHOD_4 ( VAR_1 . getId ( ) ) ) ) { VAR_2 . put ( VAR_1 . getId ( ) , new TYPE_2 ( VAR_1 . getId ( ) ) ) ; } } } 
protected void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( VAR_1 != null ) { METHOD_2 ( ) . setItems ( VAR_1 ) ; METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_3 ( VAR_1 , new TYPE_2 < > ( vds . getStoragePoolId ( ) ) ) ) ; if ( ( METHOD_2 ( ) . getSelectedItem ( ) ) == null ) { METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_3 ( VAR_1 ) ) ; } } } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_2 : ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) { if ( ( VAR_2 . METHOD_2 ( ) ) == ( VAR_3 ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } return new TYPE_1 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object METHOD_2 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) : 0 ; } } ; VAR_1 . onSuccess ( aQuery . getModel ( ) , INT_1 ) ; } 
private void METHOD_1 ( ) { if ( TYPE_1 . getInstance ( ) . METHOD_2 ( ) ) { java.util.List < TYPE_2 < org.ovirt.engine.core.common.businessentities.StorageDomain > > VAR_1 = TYPE_3 . getInstance ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) { getTable ( ) . METHOD_5 ( new TYPE_4 < org.ovirt.engine.core.common.businessentities.StorageDomain > ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ) ; } } } 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { try { TYPE_2 . METHOD_2 ( VAR_2 , new TYPE_3 < TYPE_4 > ( ) { public TYPE_4 METHOD_3 ( ) { METHOD_4 ( VAR_3 , METHOD_5 ( VAR_1 ) ) ; return null ; } } ) ; } catch ( TYPE_5 e ) { METHOD_6 ( e ) ; } } 
public void METHOD_1 ( ) { for ( TYPE_1 action : TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = TYPE_3 . map ( action , null ) ; TYPE_4 . METHOD_3 ( VAR_1 ) ; TYPE_4 . assertEquals ( VAR_1 . name ( ) . METHOD_4 ( ) , action . name ( ) . METHOD_4 ( ) ) ; } } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > result ) { TYPE_1 . METHOD_2 ( result ) ; TYPE_1 . METHOD_3 ( result . isEmpty ( ) ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : result ) { TYPE_1 . assertEquals ( VAR_1 , iface . METHOD_4 ( ) ) ; } } 
private void METHOD_1 ( ) { if ( TYPE_1 . isEmpty ( TYPE_2 . METHOD_2 ( ) ) ) { TYPE_3 VAR_1 = METHOD_3 ( ) . get ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; if ( VAR_1 != null ) { METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; } } METHOD_7 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) ) ; } 
public void METHOD_1 ( ) { parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; command = org.mockito.Mockito . METHOD_4 ( new TYPE_2 < TYPE_1 > ( parameters , null ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_7 ( TYPE_3 . any ( VAR_3 class ) ) ; } 
private static int METHOD_1 ( ) { int VAR_1 = 0 ; java.lang.String VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 ) . toString ( ) . METHOD_3 ( STRING_1 , STRING_2 ) ; java.lang.String [ ] VAR_4 = VAR_2 . METHOD_4 ( STRING_3 ) ; for ( java.lang.String VAR_5 : VAR_4 ) { VAR_5 = VAR_5 . METHOD_5 ( ) ; if ( ( java.lang.Integer . valueOf ( VAR_5 ) ) > VAR_1 ) { VAR_1 = java.lang.Integer . valueOf ( VAR_5 ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 parameters ) { TYPE_1 validator = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( parameters ) ) ; parameters . METHOD_3 ( true ) ; java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList ( TYPE_3 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ) ; for ( TYPE_4 . DiskImage image : parameters . getVm ( ) . METHOD_6 ( ) ) { image . METHOD_7 ( VAR_1 ) ; } org.mockito.Mockito.doReturn ( VAR_2 ) . when ( validator ) . METHOD_8 ( TYPE_5 . METHOD_9 ( ) ) ; return validator ; } 
protected boolean METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = getReturnValue ( ) . METHOD_2 ( ) ; java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 > ( ) ; if ( ! ( METHOD_3 ( VAR_1 , VAR_2 ) ) ) { return METHOD_4 ( ) ; } if ( getParameters ( ) . METHOD_5 ( ) ) { METHOD_6 ( ) ; } if ( ! ( METHOD_7 ( VAR_1 , VAR_2 ) ) ) { return METHOD_4 ( ) ; } return true ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_3 , new TYPE_3 ( ) ) ; TYPE_4 VAR_4 = ( ( TYPE_4 ) ( model ) ) ; VAR_4 . setItems ( VAR_3 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 . VdcQueryReturnValue response = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( response . getSucceeded ( ) ) { java.util.List < TYPE_2 > VAR_1 = ( ( java.util.ArrayList < TYPE_2 > ) ( response . getReturnValue ( ) ) ) ; METHOD_1 ( VAR_2 . METHOD_2 ( VAR_1 ) ) ; } else { VAR_2 . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 != null ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 . getValue ( ) ) ; getModel ( ) . METHOD_2 ( ) . setItems ( TYPE_2 . METHOD_3 ( vds ) ) ; } super . METHOD_1 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( false , VAR_2 ) ; cmd . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_3 . any ( VAR_4 . Guid class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_9 ( ) , VAR_5 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( 1 , ( - INT_1 ) , ( - INT_2 ) , INT_2 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; assertEquals ( STRING_1 , 0 , VAR_3 ) ; assertEquals ( STRING_2 , INT_3 , VAR_4 ) ; assertEquals ( STRING_3 , INT_4 , VAR_5 ) ; assertEquals ( STRING_4 , INT_2 , VAR_6 ) ; assertEquals ( STRING_5 , 0 , VAR_7 ) ; } 
protected void METHOD_1 ( TYPE_1 status , TYPE_2 context ) { if ( ( ( TYPE_3 . METHOD_2 ( ) ) != null ) && ( ( TYPE_3 . METHOD_2 ( ) . getStoragePoolId ( ) ) != null ) ) { TYPE_4 map = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( context != null ) { context . METHOD_4 ( map ) ; } TYPE_3 . METHOD_2 ( ) . METHOD_5 ( status ) ; METHOD_6 ( ) . METHOD_7 ( map . getId ( ) , status ) ; } } 
public TYPE_1 add ( TYPE_2 . VM vm ) { TYPE_3 VAR_1 = getEntity ( ) ; VAR_1 . METHOD_1 ( ) . add ( TYPE_4 . METHOD_2 ( vm . getId ( ) ) ) ; return METHOD_3 ( VAR_2 , new TYPE_5 ( VAR_1 . getId ( ) , VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito . METHOD_2 ( VAR_1 , org.mockito.Mockito . METHOD_3 ( ) ) . METHOD_4 ( VAR_2 . Frontend class , VAR_3 ) ; org.mockito.Mockito . METHOD_2 ( VAR_4 , org.mockito.Mockito . METHOD_3 ( ) ) . METHOD_4 ( VAR_2 . Frontend class , VAR_3 ) ; TYPE_1 . assertEquals ( STRING_1 , org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( ) , STRING_2 ) ; TYPE_1 . assertEquals ( STRING_3 , 0 , VAR_5 . size ( ) ) ; TYPE_1 . assertEquals ( STRING_4 , 0 , VAR_6 . size ( ) ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( storageDomain . getId ( ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . METHOD_3 ( ) . equals ( VAR_3 . METHOD_3 ( ) ) ) { return true ; } } return false ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 . AuditLogType VAR_2 , java.lang.String VAR_3 , TYPE_3 . AuditLogSeverity VAR_4 ) { if ( VAR_1 . METHOD_2 ( ) ) { return VAR_1 . METHOD_1 ( VAR_2 , VAR_4 , VAR_3 ) ; } final java.lang.String VAR_5 = TYPE_4 . METHOD_3 ( VAR_2 ) ; if ( VAR_5 == null ) { return null ; } else { java.lang.String VAR_6 = METHOD_4 ( VAR_5 , VAR_1 ) ; return VAR_1 . METHOD_1 ( VAR_2 , VAR_4 , VAR_6 ) ; } } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; vm . METHOD_3 ( VAR_1 ) ; vm . METHOD_4 ( VAR_2 ) ; vm . METHOD_5 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( vm ) . when ( cmd ) . getVm ( ) ; } 
protected TYPE_1 . VdcActionType METHOD_1 ( ) { try { if ( ( VAR_1 ) == null ) { java.lang.String name = METHOD_2 ( ) . getName ( ) ; name = name . METHOD_3 ( 0 , ( ( name . length ( ) ) - INT_1 ) ) ; name = name . METHOD_3 ( ( ( name . METHOD_4 ( CHAR_1 ) ) + 1 ) ) ; VAR_1 = TYPE_2 . valueOf ( name ) ; } return VAR_1 ; } catch ( java.lang.Exception e ) { return VAR_2 ; } } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { log . error ( STRING_1 , METHOD_2 ( ) ) ; super . METHOD_1 ( VAR_1 , VAR_2 ) ; METHOD_3 ( ) . getParameters ( ) . METHOD_4 ( false ) ; METHOD_5 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_3 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_4 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; VAR_4 . METHOD_2 ( VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_4 , new TYPE_3 ( ) ) ; TYPE_4 VAR_5 = ( ( TYPE_4 ) ( VAR_1 ) ) ; VAR_5 . setItems ( VAR_4 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.String > > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( new TYPE_1 ( VAR_2 , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_4 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_3 ( ) ) . when ( VAR_5 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_6 ) . METHOD_5 ( TYPE_3 . any ( ) ) ; VAR_7 . METHOD_6 ( VAR_8 class , VAR_9 ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { VAR_2 . METHOD_1 ( VAR_1 ) ; TYPE_2 event = VAR_1 . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( ) . METHOD_4 ( event . METHOD_5 ( ) ) ; VAR_4 . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 ( ) . METHOD_6 ( event . METHOD_7 ( ) ) ) ; VAR_5 . METHOD_3 ( ) . METHOD_4 ( event . METHOD_8 ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; vms . add ( vm ) ; java.util.Map < java.lang.Boolean , java.util.List < org.ovirt.engine.core.common.businessentities.VM > > VAR_1 = new java.util.HashMap < java.lang.Boolean , java.util.List < org.ovirt.engine.core.common.businessentities.VM > > ( ) ; VAR_1 . put ( java.lang.Boolean . TRUE , vms ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( VAR_3 ) ) . thenReturn ( VAR_1 ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { VAR_1 = VAR_1 . METHOD_2 ( CHAR_1 , CHAR_2 ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; java.lang.String VAR_3 = ( ( VAR_2 . METHOD_3 ( INT_1 ) ) + INT_2 ) + STRING_1 ; java.lang.String VAR_4 = ( ( ( VAR_5 ) + VAR_3 ) + STRING_2 ) + VAR_1 ; return VAR_4 ; } 
protected void METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { if ( VAR_1 == null ) { METHOD_2 ( ) . setSelectedItem ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; } else { model . METHOD_2 ( ) . setSelectedItem ( TYPE_3 . METHOD_3 ( VAR_2 , new TYPE_4 ( ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_1 ) ) ) ) ) ; } } 
private void METHOD_1 ( TYPE_1 constants ) { VAR_1 . METHOD_2 ( constants . METHOD_3 ( ) ) ; VAR_2 . METHOD_2 ( constants . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( constants . METHOD_6 ( ) ) ; VAR_4 . METHOD_2 ( constants . METHOD_7 ( ) ) ; VAR_5 . METHOD_2 ( constants . METHOD_8 ( ) ) ; VAR_6 . METHOD_2 ( constants . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 . EngineMessage class , VAR_3 class ) ; try ( TYPE_3 VAR_4 = new TYPE_4 ( VAR_5 ) ) { VAR_1 . METHOD_2 ( VAR_4 ) ; } catch ( TYPE_5 VAR_6 ) { TYPE_6 . METHOD_3 ( ( ( ( STRING_1 + ( VAR_5 . METHOD_4 ( ) ) ) + STRING_2 ) + ( VAR_6 . METHOD_5 ( ) ) ) ) ; } } 
public static boolean METHOD_1 ( TYPE_1 user ) { java.util.List < TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( user . getId ( ) , TYPE_4 . METHOD_4 ( user . METHOD_5 ( ) , STRING_1 ) ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { VAR_2 . METHOD_6 ( STRING_2 , VAR_1 . get ( 0 ) . METHOD_7 ( ) ) ; return true ; } return false ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 . VdcQueryReturnValue VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( VAR_1 . getSucceeded ( ) ) { org.ovirt.engine.core.common.businessentities.VM vm = VAR_1 . getReturnValue ( ) ; METHOD_1 ( TYPE_2 . METHOD_2 ( vm ) ) ; } else { METHOD_3 ( VAR_2 . METHOD_4 ( METHOD_5 ( ) . getEntity ( ) ) ) ; } METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 [ 1 ] } , true , true , false ) ; VAR_1 = METHOD_4 ( VAR_1 , VAR_5 , VAR_4 [ 0 ] . toString ( ) ) ; METHOD_5 ( VAR_1 ) ; VAR_6 . METHOD_6 ( ) ; METHOD_7 ( resource . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < TYPE_2 > VAR_2 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; java.util.List < TYPE_2 > VAR_3 = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : VAR_2 ) { if ( ( a . METHOD_2 ( ) ) == ( VAR_4 ) ) { VAR_3 . add ( a ) ; } } VAR_1 . METHOD_3 ( VAR_3 ) ; } 
protected void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( STRING_1 , STRING_2 ) ; METHOD_5 ( new int [ ] { 0 , 0 } ) ; METHOD_6 ( new int [ ] { 0 , 0 } ) ; TYPE_1 . METHOD_7 ( new int [ ] { 0 , 0 } ) ; METHOD_8 ( 0 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( TYPE_1 . METHOD_3 ( ) ) ; org.mockito.Mockito.doReturn ( java.lang.Boolean . TRUE ) . when ( METHOD_4 ( ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( storageDomain ) ) ; org.mockito.Mockito.doReturn ( java.lang.Boolean . TRUE ) . when ( METHOD_4 ( ) ) . METHOD_7 ( TYPE_2 . METHOD_6 ( storageDomain ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network network , TYPE_2 VAR_1 ) { METHOD_2 ( network ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_3 ( STRING_1 , network ) ; iface . METHOD_4 ( true ) ; METHOD_5 ( iface ) ; iface . METHOD_6 ( VAR_1 ) ; return METHOD_7 ( METHOD_8 ( iface ) , VAR_2 ) ; } 
public void METHOD_1 ( ) { VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( 0 ) ; VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( 2 , INT_1 , INT_2 ) ) ; VAR_1 . METHOD_5 ( TYPE_1 . METHOD_4 ( INT_3 , INT_4 , INT_5 ) ) ; VAR_1 . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; dao . METHOD_8 ( VAR_1 ) ; TYPE_3 VAR_3 = dao . get ( VAR_2 ) ; TYPE_4 . METHOD_9 ( VAR_3 ) ; TYPE_4 . assertEquals ( VAR_1 , VAR_3 ) ; } 
protected void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( model ) ; VAR_2 . METHOD_3 ( java.lang.Integer . toString ( getModel ( ) . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_3 ( java.lang.Boolean . toString ( getModel ( ) . METHOD_5 ( ) ) ) ; VAR_4 . METHOD_3 ( java.lang.Boolean . toString ( getModel ( ) . METHOD_6 ( ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
protected void METHOD_1 ( TYPE_1 [ ] VAR_1 ) { TYPE_2 < TYPE_1 > VAR_2 = org.mockito.Mockito.when ( VAR_3 . METHOD_2 ( TYPE_3 . any ( VAR_4 class ) , TYPE_3 . any ( VAR_5 class ) ) ) ; for ( TYPE_1 result : VAR_1 ) { VAR_2 = VAR_2 . thenReturn ( result ) ; } } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_1 ) { if ( ( i . METHOD_2 ( ) ) == null ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( cluster . getStoragePoolId ( ) ) . thenReturn ( org.mockito.Mockito . METHOD_2 ( VAR_1 . Guid class ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( org.mockito.Mockito . METHOD_2 ( VAR_3 . StoragePool class ) ) ; validator = new TYPE_2 ( VAR_4 , VAR_2 , cluster , VAR_5 ) ; TYPE_3 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( ) ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( final java.lang.String name , final java.lang.String VAR_1 ) { final java.lang.String VAR_2 = ( ( java.lang.String ) ( METHOD_2 ( VAR_3 . String , name , VAR_1 ) ) ) ; if ( VAR_2 != null ) { return new TYPE_1 ( ) . METHOD_3 ( VAR_2 , VAR_4 . HashMap class ) ; } else { return null ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( new TYPE_2 ( STRING_1 , VAR_3 , STRING_1 , TYPE_3 . getValue ( ) , TYPE_4 . getValue ( ) ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_5 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( final TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( VAR_5 , VAR_6 , null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 ) ; VAR_7 . METHOD_4 ( VAR_4 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( VAR_5 , context ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; VAR_2 . put ( VAR_3 , VAR_1 . toString ( ) ) ; VAR_2 . put ( VAR_4 , TYPE_2 . METHOD_2 ( TYPE_3 . getParameters ( ) . METHOD_3 ( ) ) ) ; return METHOD_4 ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object VAR_1 ) { java.lang.Object returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; java.util.List < TYPE_2 > VAR_2 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; for ( TYPE_2 VAR_3 : VAR_2 ) { VAR_4 . add ( VAR_3 ) ; VAR_5 . put ( VAR_3 . METHOD_1 ( ) , new TYPE_2 ( VAR_3 ) ) ; } METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; if ( ( model . METHOD_2 ( ) ) != null ) { return ; } if ( ! ( model . validate ( ) ) ) { return ; } model . METHOD_3 ( null ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( getSelectedItem ( ) ) ) ; if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 . METHOD_2 ( ) , this ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 model , TYPE_2 type , java.lang.String VAR_1 ) { METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) . METHOD_4 ( ) ) ; assertEquals ( VAR_1 , model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; assertEquals ( type . value ( ) , model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_2 . RunVmCommand < TYPE_1 > ( VAR_1 ) ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( command ) . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; TYPE_2 VAR_3 = TYPE_3 . map ( VAR_1 , null ) ; assertEquals ( VAR_1 . METHOD_4 ( ) . name ( ) . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) ) ; assertEquals ( VAR_1 . METHOD_7 ( ) , VAR_3 . METHOD_7 ( ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = TYPE_1 . METHOD_2 ( this . METHOD_3 ( ) , TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) , METHOD_6 ( ) , TYPE_3 . METHOD_7 ( METHOD_6 ( ) , METHOD_8 ( VAR_3 ) ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( TYPE_3 . METHOD_2 ( new TYPE_2 [ ] { ( ( TYPE_2 ) ( result ) ) } ) ) ; TYPE_4 VAR_2 = ( ( TYPE_4 ) ( VAR_1 . getWindow ( ) ) ) ; VAR_2 . METHOD_3 ( ) . setItems ( list ) ; VAR_2 . METHOD_3 ( ) . setSelectedItem ( TYPE_5 . METHOD_4 ( list ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; cluster = new TYPE_2 ( ) ; cluster . METHOD_3 ( STRING_1 ) ; cluster . METHOD_4 ( ) . add ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_3 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( cluster ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . Guid class ) , TYPE_1 . any ( VAR_3 . Guid class ) ) ; cmd . getVm ( ) . METHOD_5 ( VAR_4 ) ; java.util.List < TYPE_2 . DiskImage > VAR_5 = METHOD_6 ( 2 ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( cmd ) . METHOD_7 ( ) ; TYPE_3 . METHOD_8 ( cmd ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) ; TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_3 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; TYPE_2 VAR_1 = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( METHOD_5 ( ) . getStoragePoolId ( ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . assertEquals ( STRING_1 , VAR_3 , METHOD_6 ( ) . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_4 ( ) ; command . METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( command . METHOD_7 ( ) ) ; TYPE_1 . METHOD_8 ( command . getReturnValue ( ) . METHOD_9 ( ) . METHOD_10 ( TYPE_2 . toString ( ) ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( disk . getId ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 ) { if ( vm . getId ( ) . equals ( TYPE_1 . METHOD_4 ( ) ) ) { return true ; } } return false ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { java.util.Map < org.ovirt.engine.core.compat.Guid , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > > VAR_2 = METHOD_2 ( VAR_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_3 = new TYPE_1 < > ( ) ; for ( TYPE_2 < org.ovirt.engine.core.compat.Guid , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > > VAR_4 : VAR_2 . METHOD_3 ( ) ) { VAR_3 . add ( METHOD_4 ( VAR_4 . getValue ( ) ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( sender ) ) ; java.lang.String VAR_2 = ( ( TYPE_4 ) ( args ) ) . VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { VAR_4 . METHOD_2 ( VAR_5 , model . METHOD_3 ( ) ) ; } else if ( STRING_2 . equals ( VAR_2 ) ) { VAR_6 . METHOD_4 ( model . METHOD_5 ( ) ) ; } } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( ) { public java.lang.String METHOD_2 ( TYPE_2 version ) { return version . METHOD_3 ( ) ; } } ) ; VAR_2 = new TYPE_4 ( STRING_1 ) ; VAR_3 = new TYPE_4 ( STRING_1 ) ; VAR_4 = new TYPE_5 ( ) ; VAR_5 = new TYPE_6 ( VAR_6 ) ; VAR_7 = new TYPE_6 ( VAR_6 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 0 ; } } ; VAR_1 . METHOD_3 ( aQuery . getModel ( ) , INT_1 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 . VdcActionType VAR_2 , TYPE_3 VAR_3 , TYPE_4 context ) { TYPE_2 . VdcActionParametersBase parameters = VAR_3 . METHOD_2 ( ) ; TYPE_5 < ? > command = TYPE_6 . getInstance ( ) . METHOD_3 ( VAR_2 , parameters ) ; command . METHOD_4 ( new TYPE_7 ( context ) ) ; return command . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , METHOD_3 ( ) ) ; METHOD_2 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] . toString ( ) } , METHOD_4 ( ) ) ; METHOD_5 ( METHOD_6 ( ) ) ; VAR_4 . METHOD_7 ( ) ; METHOD_8 ( resource . get ( ) ) ; } 
private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 map : METHOD_2 ( ) ) { VAR_1 . append ( STRING_1 ) ; VAR_1 . append ( map . METHOD_3 ( ) ) ; VAR_1 . append ( STRING_2 ) ; VAR_1 . append ( map . METHOD_4 ( ) . name ( ) ) ; VAR_1 . append ( STRING_3 ) ; } return VAR_1 . toString ( ) ; } 
public java.lang.String METHOD_1 ( ) { if ( ( ! ( getModel ( ) . METHOD_2 ( ) ) ) && ( ( getModel ( ) . getEntity ( ) ) != null ) ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_3 ( VAR_2 ) ; java.lang.String VAR_3 = ( VAR_1 != null ) ? VAR_1 . METHOD_4 ( ) . toString ( 2 ) : STRING_1 ; return VAR_4 . METHOD_5 ( VAR_3 ) ; } else { return this . METHOD_6 ( ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { METHOD_1 ( ) . setEntity ( result ) ; METHOD_2 ( true ) ; } else { METHOD_1 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; METHOD_2 ( false ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) , null ) ) ; METHOD_5 ( VAR_3 ) ; TYPE_4 . METHOD_6 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( returnValue ) ) ; model . METHOD_2 ( ) . setItems ( new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( TYPE_2 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VmTemplate [ ] { template } ) ) ) ; model . METHOD_2 ( ) . setSelectedItem ( template ) ; model . METHOD_2 ( ) . setIsChangable ( false ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < java.lang.String > list = new java.util.ArrayList < > ( ) ; if ( source != null ) { java.lang.String [ ] VAR_1 = ( ( java.lang.String ) ( source ) ) . METHOD_2 ( STRING_1 , ( - 1 ) ) ; for ( java.lang.String item : VAR_1 ) { list . add ( item ) ; } } return list ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 , false ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } ) ) ; TYPE_1 response = resource . METHOD_5 ( new TYPE_2 ( ) ) ; METHOD_6 ( response ) ; METHOD_7 ( ( ( TYPE_2 ) ( response . getEntity ( ) ) ) . getVm ( ) , 0 ) ; } 
private void METHOD_1 ( ) { if ( ( ( getEntity ( ) ) == null ) || ( ( getEntity ( ) . METHOD_2 ( ) ) == true ) ) { METHOD_3 ( ) . METHOD_4 ( false ) ; } else { METHOD_3 ( ) . METHOD_4 ( true ) ; } } 
public org.ovirt.engine.core.common.businessentities.VDS get ( TYPE_1 id , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { return METHOD_1 ( ) . METHOD_2 ( STRING_1 , VAR_3 . instance , METHOD_3 ( ) . addValue ( STRING_2 , id ) . addValue ( STRING_3 , VAR_1 ) . addValue ( STRING_4 , VAR_2 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( vmId , VAR_1 ) ; cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_2 ( params ) ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 . Disk > VAR_2 = ( ( java.util.ArrayList < TYPE_2 . Disk > ) ( returnValue ) ) ; METHOD_1 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; VAR_1 . METHOD_3 ( ) . add ( METHOD_4 ( ) ) ; VAR_1 . METHOD_3 ( ) . add ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , TYPE_3 { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( STRING_1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( ) ) . thenReturn ( this . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( STRING_2 ) . METHOD_7 ( ) . METHOD_8 ( ) ) ; VAR_3 . METHOD_9 ( VAR_1 , VAR_4 ) ; org.mockito.Mockito . METHOD_10 ( VAR_4 ) . METHOD_11 ( TYPE_4 . METHOD_12 ( STRING_3 ) , TYPE_4 . METHOD_13 ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { boolean VAR_2 = METHOD_2 ( ) . getEntity ( ) ; if ( VAR_2 ) { return ; } boolean VAR_3 = ( ( java.lang.Boolean ) ( TYPE_1 . METHOD_3 ( VAR_4 , VAR_1 . METHOD_4 ( ) . getValue ( ) ) ) ) ; METHOD_5 ( ) . setEntity ( VAR_3 ) ; METHOD_6 ( ( ! VAR_3 ? TYPE_2 . METHOD_7 ( ) : STRING_1 ) ) ; } 
protected void METHOD_1 ( ) { java.util.Map < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; if ( ! ( VAR_1 . METHOD_6 ( ) . isEmpty ( ) ) ) { METHOD_7 ( VAR_1 . METHOD_6 ( ) . METHOD_8 ( ) . METHOD_9 ( ) ) ; } TYPE_1 . METHOD_10 ( ) . METHOD_11 ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 , TYPE_3 { this . VAR_3 = new TYPE_4 ( VAR_4 ) . METHOD_2 ( ) ; this . VAR_5 = new TYPE_5 ( VAR_3 ) ; this . VAR_6 = new TYPE_6 ( VAR_3 , this . VAR_5 ) ; TYPE_7 . METHOD_3 ( VAR_3 . METHOD_4 ( ) , VAR_7 < TYPE_1 > get ( VAR_8 ) . < java.lang.String > get ( VAR_9 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; getModel ( ) . METHOD_1 ( ) . setEntity ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; getModel ( ) . METHOD_2 ( ( VAR_1 . isEmpty ( ) ? TYPE_1 . METHOD_3 ( ) : VAR_1 . get ( 0 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { java.lang.String VAR_3 = java.lang.String.valueOf ( VAR_1 . METHOD_2 ( ) ) ; if ( ( ! ( TYPE_2 . isEmpty ( VAR_3 ) ) ) && ( ! ( VAR_3 . equals ( STRING_1 ) ) ) ) { VAR_2 . put ( VAR_4 , VAR_3 ) ; } } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_3 ( ) ; if ( ( getEntity ( ) ) != null ) { METHOD_5 ( null ) ; if ( ! ( getEntity ( ) . METHOD_6 ( ) ) ) { METHOD_7 ( ) ; } else { METHOD_8 ( ) ; } } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > result = dao . METHOD_2 ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; TYPE_1 . assertEquals ( result . size ( ) , 1 ) ; TYPE_1 . assertEquals ( result . METHOD_3 ( ) . METHOD_4 ( ) . getId ( ) , new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . instance ( ) . METHOD_2 ( INT_1 ) ; org.mockito.Mockito.when ( METHOD_3 ( ) . getName ( ) ) . thenReturn ( VAR_1 ) ; boolean result = TYPE_1 . instance ( ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( result ) . when ( METHOD_5 ( ) ) . METHOD_6 ( ) ; METHOD_5 ( ) . METHOD_7 ( ) ; TYPE_2 . assertEquals ( STRING_1 , result , METHOD_5 ( ) . METHOD_8 ( ) . getReturnValue ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_1 , METHOD_4 ( ) , new TYPE_1 ( ) { public void METHOD_5 ( TYPE_2 result ) { METHOD_6 ( ) ; VAR_2 . METHOD_7 ( VAR_3 ) ; } } , this ) ; } 
private void METHOD_1 ( ) { final boolean VAR_1 = ( ( getModel ( ) . METHOD_2 ( ) ) != null ) && ( getModel ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; } 
private static void METHOD_1 ( TYPE_1 . AuditLogSeverity VAR_1 , java.lang.String VAR_2 ) { switch ( VAR_1 ) { case NORMAL : VAR_3 . METHOD_2 ( VAR_2 ) ; break ; case ERROR : VAR_3 . error ( VAR_2 ) ; break ; case VAR_4 : case VAR_5 : default : VAR_3 . METHOD_3 ( VAR_2 ) ; break ; } } 
public TYPE_1 < TYPE_2 > METHOD_1 ( java.lang.Integer VAR_1 , org.ovirt.engine.core.compat . Version version ) { TYPE_3 < java.lang.String > VAR_2 = METHOD_2 ( ) . get ( new TYPE_4 < java.lang.Integer , org.ovirt.engine.core.compat . Version > ( VAR_1 , version ) ) ; if ( VAR_2 == null ) { return TYPE_5 . METHOD_3 ( ) ; } TYPE_1 < TYPE_2 > VAR_3 = new TYPE_6 < TYPE_2 > ( ) ; for ( java.lang.String VAR_4 : VAR_2 ) { VAR_3 . add ( TYPE_2 . valueOf ( VAR_4 ) ) ; } return VAR_3 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList ( ( ( TYPE_2 < TYPE_1 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; VAR_1 . add ( VAR_2 ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_2 ( ) ; } 
public java.util.List < java.lang.String > METHOD_1 ( java.util.List < TYPE_1 > source ) { if ( source != null ) { java.util.ArrayList < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_2 : source ) { if ( METHOD_2 ( VAR_2 ) ) { VAR_1 . add ( METHOD_3 ( VAR_1 , VAR_2 ) ) ; } } TYPE_2 . METHOD_4 ( VAR_1 , new TYPE_3 ( ) ) ; return VAR_1 ; } return new java.util.ArrayList < > ( ) ; } 
private static TYPE_1 METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 , boolean VAR_4 ) { if ( VAR_2 == null ) { return TYPE_2 . METHOD_2 ( VAR_1 , VAR_4 ) ; } TYPE_1 VAR_5 = TYPE_3 . METHOD_3 ( VAR_1 , new TYPE_4 ( VAR_2 , VAR_3 ) ) ; return VAR_5 != null ? VAR_5 : TYPE_2 . METHOD_2 ( VAR_1 , VAR_4 ) ; } 
protected < TYPE_1 extends TYPE_2 > void METHOD_1 ( TYPE_1 command , TYPE_3 status ) { org.mockito.Mockito.when ( command . METHOD_2 ( ) ) . thenReturn ( cluster ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( status ) . when ( vds ) . getStatus ( ) ; METHOD_4 ( true ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_5 ( ) ; } 
protected boolean METHOD_1 ( ) { java.util.Map < TYPE_1 . DiskImage , org.ovirt.engine.core.compat.Guid > map = new java.util.HashMap < > ( ) ; for ( TYPE_1 . DiskImage diskImage : TYPE_2 . getVm ( ) . METHOD_2 ( ) ) { map . put ( diskImage , TYPE_2 . METHOD_3 ( ) ) ; } return validate ( TYPE_3 . METHOD_1 ( map , TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) ) ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_3 class ) , TYPE_1 . METHOD_4 ( VAR_4 class ) ) ) . METHOD_5 ( new TYPE_2 ( ) { protected TYPE_3 METHOD_3 ( TYPE_3 model , TYPE_4 entity ) { model . METHOD_6 ( VAR_5 ) ; model . METHOD_7 ( VAR_6 ) ; return model ; } } ) . METHOD_8 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , getStoragePoolId ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_3 ( ) , VAR_2 ) ; for ( TYPE_3 iface : VAR_3 . METHOD_4 ( ) ) { VAR_1 . METHOD_5 ( iface , TYPE_2 . METHOD_6 ( ) . getId ( ) ) ; } VAR_1 . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; super . METHOD_1 ( ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) { return true ; } if ( ! ( VAR_1 . METHOD_5 ( TYPE_2 . getVm ( ) . METHOD_6 ( ) . METHOD_7 ( ) , TYPE_2 . getVdsGroup ( ) . METHOD_8 ( ) ) ) ) { METHOD_9 ( STRING_1 , TYPE_2 . getVdsGroup ( ) . METHOD_10 ( ) ) ; return METHOD_11 ( VAR_2 ) ; } return true ; } 
public TYPE_1 get ( TYPE_2 id , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 ) { TYPE_3 VAR_3 = METHOD_1 ( ) . addValue ( STRING_1 , id ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) ; return METHOD_2 ( ) . METHOD_3 ( STRING_4 , VAR_4 . instance , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , false ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { TYPE_3 resource = ( ( TYPE_3 ) ( this . resource ) ) ; resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } 
private void METHOD_1 ( final TYPE_1 response , final TYPE_2 VAR_1 , final TYPE_3 VAR_2 ) { TYPE_4 VAR_3 = new TYPE_4 ( VAR_4 , VAR_2 . toString ( ) ) ; VAR_3 . METHOD_2 ( VAR_5 ) ; VAR_3 . METHOD_3 ( VAR_6 ) ; VAR_3 . METHOD_4 ( true ) ; response . METHOD_5 ( VAR_3 ) ; } 
private void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ; METHOD_2 ( new TYPE_1 ( ) , VAR_1 ) ; for ( org.ovirt.engine.core.compat.Guid VAR_2 : VAR_1 ) { TYPE_2 tempVar = new TYPE_2 ( VAR_2 , VAR_3 ) ; tempVar . METHOD_3 ( true ) ; tempVar . METHOD_4 ( TYPE_3 . METHOD_5 ( ) . getId ( ) ) ; tempVar . METHOD_6 ( VAR_4 ) ; TYPE_3 . METHOD_7 ( ) . METHOD_8 ( VAR_5 , tempVar , TYPE_4 . METHOD_9 ( ) ) ; } } 
public TYPE_1 add ( TYPE_2 . Network network ) { METHOD_1 ( network , METHOD_2 ( ) ) ; org.ovirt.engine.core.common.businessentities . network entity = map ( network ) ; TYPE_3 params = METHOD_3 ( network , entity ) ; return METHOD_4 ( VAR_1 , params , new TYPE_4 ( network . getName ( ) , params . getStoragePoolId ( ) . toString ( ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( command . METHOD_2 ( parameters . METHOD_3 ( ) . METHOD_4 ( ) ) ) . thenReturn ( TYPE_1 . METHOD_5 ( ) ) ; command . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( command . getReturnValue ( ) . getSucceeded ( ) ) ; } 
protected void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities . Network a : VAR_1 ) { java.lang.String VAR_2 = ( a == null ) ? null : a . METHOD_2 ( ) ; if ( TYPE_1 . METHOD_3 ( VAR_2 , METHOD_4 ( ) . METHOD_5 ( ) ) ) { METHOD_6 ( ) . setSelectedItem ( a ) ; return ; } } if ( ( METHOD_4 ( ) . METHOD_5 ( ) ) == null ) { METHOD_6 ( ) . setSelectedItem ( null ) ; } } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > list = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object item : TYPE_2 . METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( item ) ) ; list . add ( new TYPE_3 ( vds . getId ( ) , VAR_1 ) ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , list , new TYPE_4 ( ) { public void METHOD_4 ( TYPE_5 result ) { } } , null ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate template , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 , boolean VAR_3 ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( template . getStoragePoolId ( ) . getValue ( ) ) ; TYPE_1 . METHOD_1 ( template , VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . StoragePool ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . METHOD_4 ( ( ( VAR_5 ) == ( VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ) ) ; } 
private void METHOD_1 ( ) { final java.util.List < java.lang.String > VAR_1 = ( ( java.util.List < java.lang.String > ) ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) ; final java.util.ArrayList < java.lang.String > VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 . add ( null ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . setItems ( VAR_3 ) ; METHOD_4 ( ) . METHOD_5 ( METHOD_6 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = new TYPE_3 < TYPE_2 > ( VAR_1 , null , VAR_3 ) { protected void METHOD_2 ( ) { METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) , VAR_4 ) ; } } ; VAR_2 . METHOD_6 ( true ) ; VAR_2 . METHOD_7 ( VAR_5 ) ; VAR_1 . METHOD_8 ( VAR_2 ) ; return VAR_2 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( ( ( STRING_1 + name ) + STRING_2 ) , VAR_2 . StoragePool ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { storageDomain = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; storageDomain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; storageDomain . METHOD_3 ( VAR_1 ) ; storageDomain . METHOD_4 ( VAR_2 ) ; VAR_3 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_3 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_3 . METHOD_5 ( TYPE_1 . get ( 0 ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_6 ( storageDomain . getId ( ) ) ) . thenReturn ( TYPE_2 . METHOD_7 ( ) ) ; METHOD_8 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_3 = VAR_2 . get ( STRING_1 ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_4 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; VAR_6 = dao . get ( new TYPE_3 ( STRING_3 , VAR_3 . METHOD_6 ( ) ) ) ; VAR_7 = new TYPE_4 ( VAR_8 , VAR_3 . METHOD_6 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { TYPE_2 map = METHOD_2 ( domain ) ; TYPE_3 context = METHOD_3 ( ) ; context . METHOD_4 ( map , map . METHOD_5 ( ) ) ; METHOD_6 ( map , status ) ; METHOD_3 ( ) . METHOD_7 ( ) ; } return null ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( ( ( VAR_1 ) == ( VAR_2 ) ) && ( TYPE_2 . equals ( METHOD_1 ( ) , other . METHOD_1 ( ) ) ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; TYPE_1 result = new TYPE_1 ( ) ; result . METHOD_5 ( VAR_5 ) ; result . METHOD_6 ( TYPE_3 . METHOD_7 ( VAR_1 ) ) ; return result ; } 
protected void METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_1 < ? > VAR_2 , TYPE_2 VAR_3 , java.lang.Object ... params ) { assert VAR_1 instanceof TYPE_3 ; assert VAR_2 == null ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_3 . METHOD_2 ( VAR_4 . METHOD_3 ( ) ) ; TYPE_4 . METHOD_4 ( VAR_4 , VAR_3 ) ; TYPE_4 . METHOD_5 ( VAR_4 , VAR_3 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) ) ) ; METHOD_3 ( cmd , VAR_1 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( vds ) . getStatus ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( vds ) . getStatus ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { resource . METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) ) ; METHOD_5 ( 1 ) ; VAR_1 . METHOD_6 ( ) ; TYPE_1 VAR_2 = resource . get ( ) ; assertEquals ( TYPE_2 . toString ( ) , VAR_2 . getId ( ) ) ; METHOD_7 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ VAR_4 ] } , getEntity ( VAR_5 ) ) ; TYPE_1 model = TYPE_2 . getModel ( 0 ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . setId ( null ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 [ VAR_4 ] ) ; METHOD_6 ( model , 0 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 VAR_1 , java.lang.String VAR_2 ) { if ( context == null ) { return null ; } TYPE_1 VAR_3 = null ; if ( context . METHOD_2 ( ) ) { TYPE_1 VAR_4 = context . METHOD_3 ( ) ; if ( VAR_4 != null ) { VAR_3 = TYPE_4 . METHOD_4 ( VAR_4 , VAR_1 , VAR_2 ) ; } } return VAR_3 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( command . METHOD_2 ( parameters . METHOD_3 ( ) . METHOD_4 ( ) ) ) . thenReturn ( TYPE_1 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_6 ( ) ) . when ( command ) . METHOD_7 ( ) ; parameters . METHOD_3 ( ) . METHOD_8 ( VAR_1 ) ; TYPE_3 . METHOD_9 ( command . METHOD_10 ( ) ) ; TYPE_4 . METHOD_11 ( STRING_1 , command , VAR_2 ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM VAR_1 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) , TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_2 , VAR_4 ) , TYPE_3 . METHOD_5 ( VAR_3 , VAR_5 ) ) ) ; TYPE_1 . METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 , VAR_3 ) , TYPE_2 . METHOD_6 ( 2 ) ) ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) , TYPE_3 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; VAR_1 . put ( TYPE_2 . METHOD_2 ( ) . METHOD_5 ( ) , TYPE_3 . METHOD_4 ( VAR_2 , VAR_3 ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( command . METHOD_6 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String value ) { final char VAR_3 = CHAR_1 ; final char VAR_4 = CHAR_2 ; if ( ( VAR_1 . length ( ) ) > 0 ) { VAR_1 . append ( VAR_3 ) ; } VAR_1 . append ( VAR_2 ) . append ( VAR_4 ) . append ( value ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_2 ( VAR_3 , VAR_1 ) ; } else if ( VAR_4 ) { VAR_2 . METHOD_2 ( VAR_3 , TYPE_1 . METHOD_3 ( ) ) ; } else { VAR_2 . METHOD_4 ( ) ; } return null ; } 
public void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( ) ; } } ) ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_1 ) { if ( ( i . METHOD_2 ( ) ) == null ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
public boolean METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { return METHOD_2 ( new TYPE_1 < java.lang.Boolean > ( ) { public java.lang.Boolean METHOD_3 ( ) { try { VAR_2 . METHOD_1 ( VAR_1 . toString ( ) ) ; return true ; } catch ( TYPE_2 VAR_3 ) { if ( ( VAR_3 . getStatus ( ) ) == ( VAR_4 ) ) { return false ; } throw VAR_3 ; } } } ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 vm ) { TYPE_1 VAR_1 = null ; if ( ( vm . METHOD_2 ( ) ) && ( vm . METHOD_3 ( ) . METHOD_4 ( ) ) ) { VAR_1 = METHOD_5 ( VAR_2 class , VAR_3 class ) . map ( vm . METHOD_3 ( ) . METHOD_1 ( ) . get ( 0 ) , new TYPE_1 ( ) ) ; } return VAR_1 ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) . setEntity ( ( ( METHOD_3 ( ) . METHOD_4 ( ) ) != 0 ) ) ; METHOD_4 ( ) . setEntity ( ( ( METHOD_3 ( ) . METHOD_4 ( ) ) != 0 ? java.lang.String.valueOf ( METHOD_3 ( ) . METHOD_4 ( ) ) : null ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = VAR_2 ; METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; command . getParameters ( ) . METHOD_3 ( VAR_1 ) ; command . METHOD_3 ( VAR_1 ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( command , VAR_3 ) ; } 
private boolean METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) . size ( ) ; return ( ( METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) . getId ( ) ) . size ( ) ) > VAR_1 ) || ( ( METHOD_6 ( ) . METHOD_7 ( TYPE_1 . METHOD_5 ( ) . getId ( ) ) . size ( ) ) > VAR_1 ) ; } 
private void METHOD_1 ( ) throws TYPE_1 { for ( TYPE_2 VAR_1 : TYPE_3 . getInstance ( ) . METHOD_2 ( VAR_2 ) ) { METHOD_3 ( new TYPE_4 ( new TYPE_5 ( VAR_1 ) , new TYPE_6 ( TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) . < TYPE_7 > get ( VAR_3 ) . METHOD_6 ( VAR_4 ) ) ) ) ) ; } } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getParameters ( ) . getStoragePoolId ( ) . getValue ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_4 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { METHOD_3 ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( VAR_1 ) ) ) ; } } ) , METHOD_4 ( ) . getId ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 class , VAR_2 ) ; METHOD_3 ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = STRING_1 ; VAR_5 = STRING_2 ; VAR_6 = new TYPE_2 ( vm , VAR_3 , version , VAR_4 , VAR_5 ) ; } 
protected boolean METHOD_1 ( TYPE_1 storageDomain ) { if ( ( ( ( storageDomain . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( storageDomain . METHOD_2 ( ) ) != ( VAR_2 ) ) ) && ( ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) ) != ( storageDomain . METHOD_5 ( ) ) ) ) { addCanDoActionMessage ( VAR_3 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . getName ( ) ) . thenReturn ( METHOD_2 ( ) ) ; org.mockito.Mockito.when ( host . getName ( ) ) . thenReturn ( METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ) . thenReturn ( org.mockito.Mockito . METHOD_5 ( VAR_3 . VDS class ) ) ; TYPE_2 . METHOD_6 ( validator . METHOD_7 ( ) , TYPE_3 . METHOD_8 ( VAR_4 ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; VAR_1 . METHOD_2 ( ) . setItems ( VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 from ) { while ( ( from . METHOD_2 ( ) ) == 0 ) { from . METHOD_3 ( TYPE_2 . METHOD_4 ( INT_1 ) ) ; } from . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_1 class ) . value ( ) ) ; from . METHOD_7 ( ) . METHOD_8 ( INT_2 ) ; from . METHOD_9 ( ) . METHOD_10 ( new TYPE_3 ( ) ) ; return from ; } 
private void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 = TYPE_1 . METHOD_2 ( getVm ( ) . METHOD_3 ( ) . METHOD_4 ( ) , true , false ) ; for ( org.ovirt.engine.core.common.businessentities.DiskImage image : VAR_1 ) { image . METHOD_5 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_6 ( TYPE_3 . getParameters ( ) . METHOD_7 ( ) ) ) ) ; image . METHOD_8 ( TYPE_3 . getParameters ( ) . getStoragePoolId ( ) ) ; } METHOD_9 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; METHOD_3 ( VAR_2 , VAR_3 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 [ 1 ] } , METHOD_4 ( 1 ) ) ; METHOD_5 ( STRING_2 , null , VAR_5 ) ; VAR_6 . METHOD_6 ( VAR_1 ) ; METHOD_7 ( METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; VAR_1 = METHOD_3 ( VAR_1 , STRING_1 , STRING_2 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( getVm ( ) ) ; VAR_2 . METHOD_6 ( ) ; TYPE_2 VAR_3 = resource . get ( ) ; METHOD_7 ( VAR_3 ) ; } 
private void METHOD_1 ( ) { for ( TYPE_1 . VdcActionParametersBase VAR_1 : TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( VAR_1 ) ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_2 . METHOD_3 ( ) ; org.ovirt.engine.core.compat.Guid VAR_4 = VAR_2 . METHOD_4 ( ) ; METHOD_5 ( VAR_3 , VAR_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; METHOD_7 ( 1 ) ; METHOD_8 ( 1 ) ; VAR_1 . METHOD_9 ( ) ; TYPE_1 nic = resource . get ( ) ; TYPE_2 . METHOD_10 ( nic , 1 ) ; METHOD_11 ( nic ) ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = TYPE_1 . METHOD_2 ( ) ; if ( VAR_1 ) { VAR_1 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( ! VAR_1 ) { addCanDoActionMessage ( VAR_2 ) ; } else { VAR_1 = TYPE_1 . METHOD_5 ( ) ; } } if ( ! VAR_1 ) { TYPE_1 . METHOD_6 ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( final TYPE_1 < java.lang.String > model ) { VAR_1 . METHOD_1 ( model ) ; model . METHOD_2 ( ) . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 VAR_2 , java.lang.Object sender , TYPE_4 args ) { TYPE_5 . METHOD_5 ( VAR_3 this , model ) ; } } ) ; } 
protected boolean validate ( ) { if ( ! ( TYPE_1 . getParameters ( ) . METHOD_1 ( ) ) ) { TYPE_2 VAR_1 = new TYPE_2 ( TYPE_1 . METHOD_2 ( ) ) ; if ( ( ! ( validate ( VAR_1 . METHOD_3 ( ) ) ) ) || ( ! ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) ) { return false ; } } return true ; } 
public TYPE_1 METHOD_1 ( TYPE_2 model ) { if ( ( ( java.lang.Boolean ) ( model . METHOD_2 ( ) . getEntity ( ) ) ) || ( ( java.lang.Boolean ) ( model . METHOD_3 ( ) . getEntity ( ) ) ) ) { return METHOD_4 ( model . METHOD_5 ( ) , ( ( java.lang.String ) ( model . METHOD_6 ( ) . getEntity ( ) ) ) ) ; } else { return null ; } } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; METHOD_3 ( VAR_1 . METHOD_4 ( ) . toString ( ) ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) . name ( ) ) ; METHOD_7 ( VAR_1 . METHOD_8 ( ) . name ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 ; TYPE_2 quota = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; VAR_2 = new TYPE_1 ( ) ; if ( quota != null ) { VAR_2 . setId ( quota . getStoragePoolId ( ) ) ; VAR_2 . METHOD_4 ( quota . METHOD_5 ( ) ) ; } else { VAR_2 . setId ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; } return VAR_2 ; } 
public static org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface entity = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; entity . setId ( VAR_1 ) ; entity . METHOD_2 ( VAR_2 ) ; entity . METHOD_3 ( VAR_3 ) ; entity . METHOD_4 ( VAR_4 ) ; entity . METHOD_5 ( VAR_5 ) ; return TYPE_1 . METHOD_6 ( entity , VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ; METHOD_4 ( ) . METHOD_5 ( ) . put ( image . getId ( ) , image ) ; } 
protected TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_3 . getParameters ( ) . METHOD_3 ( ) ) ; if ( ( VAR_2 == null ) || ( ( VAR_2 . METHOD_4 ( ) ) == ( VAR_3 ) ) ) { return new TYPE_4 ( VAR_1 ) ; } return super . METHOD_1 ( VAR_1 ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > list , TYPE_1 VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : list ) { if ( ( template . getId ( ) . equals ( VAR_3 ) ) || ( template . METHOD_2 ( ) . equals ( VAR_1 ) ) ) { VAR_2 . add ( template ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( command . METHOD_2 ( ) . get ( TYPE_1 . any ( VAR_1 . Guid class ) ) ) . thenReturn ( null ) ; TYPE_2 VAR_2 = command . METHOD_3 ( ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_3 ( VAR_2 , VAR_2 . getId ( ) ) ) . when ( command ) . METHOD_5 ( TYPE_1 . any ( VAR_3 class ) ) ; TYPE_4 . METHOD_6 ( command ) ; } 
public TYPE_1 [ ] METHOD_1 ( ) { try { TYPE_2 VAR_1 = TYPE_2 . getInstance ( STRING_1 ) ; VAR_1 . METHOD_2 ( this . VAR_2 , this . VAR_3 . METHOD_3 ( ) ) ; TYPE_3 VAR_4 = TYPE_3 . getInstance ( TYPE_3 . METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( VAR_1 ) ; return VAR_4 . METHOD_6 ( ) ; } catch ( TYPE_4 | TYPE_5 | TYPE_6 | TYPE_7 VAR_5 ) { throw new TYPE_8 ( VAR_5 ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = TYPE_2 . getSelectedItem ( ) ; if ( VAR_1 == null ) { return ; } TYPE_3 params = new TYPE_3 ( VAR_1 . METHOD_2 ( ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , params , new TYPE_4 ( ) { public void METHOD_4 ( TYPE_5 result ) { VAR_3 this . METHOD_5 ( ) ; } } ) ; } 
protected void METHOD_1 ( ) { if ( ! ( TYPE_1 . isEmpty ( vm . METHOD_2 ( ) ) ) ) { VAR_1 . add ( VAR_2 , vm . METHOD_2 ( ) ) ; } if ( ! ( TYPE_1 . isEmpty ( vm . METHOD_3 ( ) ) ) ) { VAR_1 . add ( VAR_3 , vm . METHOD_3 ( ) ) ; if ( ! ( TYPE_1 . isEmpty ( vm . METHOD_4 ( ) ) ) ) { VAR_1 . add ( VAR_4 , vm . METHOD_4 ( ) ) ; } } } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) throws TYPE_3 , TYPE_4 { TYPE_1 result = new TYPE_1 ( new TYPE_5 ( ) ) ; result . METHOD_2 ( TYPE_6 . METHOD_3 ( VAR_1 ) ) ; result . METHOD_4 ( TYPE_6 . METHOD_5 ( result , VAR_1 ) ) ; result . METHOD_6 ( TYPE_6 . METHOD_7 ( VAR_1 ) ) ; TYPE_6 . METHOD_8 ( result , VAR_1 ) ; TYPE_7 . METHOD_9 ( result . METHOD_10 ( ) , VAR_1 ) ; return result ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 . METHOD_3 ( ) ) . getStoragePoolId ( ) ; TYPE_2 . METHOD_4 ( VAR_1 . getValue ( ) ) ; java.util.List < TYPE_3 > result = dao . METHOD_5 ( VAR_1 . getValue ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . METHOD_6 ( result . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_2 , true , STRING_1 , VAR_1 , false ) ) ; METHOD_5 ( true ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; TYPE_2 response = VAR_3 . add ( METHOD_7 ( ) ) ; assertEquals ( INT_1 , response . getStatus ( ) ) ; METHOD_8 ( ( ( response . getEntity ( ) ) instanceof TYPE_3 ) ) ; METHOD_9 ( ( ( TYPE_3 ) ( response . getEntity ( ) ) ) , 1 ) ; } 
public TYPE_1 METHOD_1 ( int VAR_1 , TYPE_2 VAR_2 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_3 = VAR_4 . METHOD_1 ( VAR_1 , VAR_2 . METHOD_2 ( ) ) ; TYPE_1 VAR_5 = new TYPE_1 ( VAR_3 ) ; return VAR_5 ; } catch ( TYPE_3 VAR_6 ) { throw new TYPE_4 ( VAR_6 ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { boolean VAR_2 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; if ( VAR_2 ) { return ; } boolean VAR_3 = ( ( java.lang.Boolean ) ( TYPE_2 . METHOD_3 ( VAR_4 , VAR_1 . METHOD_4 ( ) . getValue ( ) ) ) ) ; METHOD_5 ( ) . setEntity ( VAR_3 ) ; METHOD_6 ( ( ! VAR_3 ? TYPE_3 . METHOD_7 ( ) : STRING_1 ) ) ; } 
private TYPE_1 METHOD_1 ( ) { switch ( ( ( TYPE_2 ) ( item ) ) . getStatus ( ) ) { case VAR_1 : return VAR_2 . METHOD_2 ( ) ; case VAR_3 : return VAR_2 . METHOD_3 ( ) ; case VAR_4 : return VAR_2 . METHOD_4 ( ) ; default : return VAR_2 . METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; TYPE_2 . assertEquals ( result . get ( 0 ) . getId ( ) , VAR_4 . getId ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( METHOD_2 ( ) ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_2 ) . METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) . METHOD_6 ( ) ; TYPE_1 . VdcQueryReturnValue returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( METHOD_5 ( ) . getReturnValue ( ) ) ) ; TYPE_2 . assertEquals ( TYPE_3 . toString ( ) , returnValue . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > VAR_1 = METHOD_2 ( ) . getSelectedItem ( ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . getEntity ( ) ) != ( VAR_2 ) ) ) { METHOD_3 ( ) . setSelectedItem ( 1 ) ; METHOD_3 ( ) . setIsChangable ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . setId ( VAR_1 ) ; cluster . METHOD_2 ( new TYPE_2 ( ) ) ; cluster . METHOD_3 ( ) . setId ( VAR_2 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , cluster ) ; assertEquals ( VAR_3 , cluster . METHOD_6 ( ) ) ; assertEquals ( VAR_4 , cluster . METHOD_3 ( ) . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_3 . any ( VAR_4 class ) ) ) . thenReturn ( VAR_2 ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; TYPE_1 . METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( false ) ; VAR_3 . error ( STRING_1 , METHOD_4 ( ) ) ; TYPE_1 . METHOD_2 ( ) . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_2 ) ; } 
public synchronized boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid id , TYPE_1 . VdcActionType type ) { boolean VAR_1 = false ; if ( ( VAR_2 ) != null ) { for ( TYPE_2 VAR_3 : VAR_2 . METHOD_2 ( ) ) { if ( ( METHOD_3 ( id , VAR_3 ) ) && ( type . equals ( VAR_3 . getParameters ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ) ) { VAR_1 = true ; break ; } } } return VAR_1 ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; TYPE_2 result = new TYPE_2 ( ) ; if ( vds != null ) { result = TYPE_3 . METHOD_4 ( vds . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_6 ( ) . METHOD_7 ( result ) ; } 
public void METHOD_1 ( java.util.ArrayList parameters ) { super . METHOD_1 ( parameters ) ; if ( ! ( ( parameters . get ( INT_1 ) ) instanceof java.lang.Boolean ) ) { throw new TYPE_1 ( ) ; } VAR_1 = ( ( java.lang.Boolean ) ( parameters . get ( INT_1 ) ) ) ; if ( ! ( ( parameters . get ( INT_2 ) ) instanceof TYPE_2 . Guid ) ) { throw new TYPE_1 ( ) ; } VAR_2 = ( ( TYPE_2 . Guid ) ( parameters . get ( INT_2 ) ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( VAR_1 ) . when ( ( ( ( ( cluster . METHOD_3 ( ) ) > INT_1 ) || ( ( cluster . METHOD_3 ( ) ) <= 0 ) ) && ( ! ( ( cluster . METHOD_4 ( ) ) || ( cluster . METHOD_5 ( ) ) ) ) ) ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , TYPE_2 status , java.lang.Object VAR_3 ) { TYPE_3 VAR_4 = null ; if ( ( VAR_4 = VAR_5 . get ( VAR_1 ) ) != null ) { return VAR_4 . METHOD_2 ( status , VAR_2 , VAR_3 ) ; } return true ; } 
protected void METHOD_1 ( TYPE_1 model ) { VAR_1 . METHOD_2 ( model ) ; VAR_2 . METHOD_3 ( java.lang.Integer . toString ( getModel ( ) . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_3 ( TYPE_2 . METHOD_5 ( getModel ( ) . METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , VAR_2 ) , null ) ) ; METHOD_4 ( ) ; METHOD_5 ( true , null , VAR_3 ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_4 , org.mockito.Mockito . METHOD_8 ( 2 ) ) . METHOD_9 ( TYPE_3 . any ( VAR_5 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_10 ( ) , VAR_6 ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( VAR_3 [ VAR_1 ] , model . getName ( ) ) ; assertEquals ( TYPE_2 . name ( ) . METHOD_2 ( ) , model . METHOD_3 ( ) ) ; assertEquals ( VAR_4 . toString ( ) , model . METHOD_4 ( ) . getId ( ) ) ; METHOD_5 ( model ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_2 VAR_3 , boolean VAR_4 ) { java.util.List < TYPE_1 > VAR_5 = null ; if ( ! ( METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ) ) { return null ; } VAR_5 = METHOD_3 ( VAR_1 , VAR_2 ) ; return VAR_5 ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( storageDomain , command . getParameters ( ) . METHOD_4 ( ) ) ) . thenReturn ( new TYPE_2 < java.lang.Boolean , TYPE_3 > ( true , null ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( storageDomain , command . getParameters ( ) . METHOD_4 ( ) ) ) . thenReturn ( true ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_6 ( storageDomain ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } if ( ( VAR_2 ) == null ) { VAR_2 = TYPE_1 . METHOD_5 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 < TYPE_3 < ? > > VAR_1 = METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_2 ) ) ; if ( ( event . METHOD_4 ( ) ) != null ) { event . METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) . METHOD_7 ( ) ) ; } METHOD_8 ( VAR_3 , event . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( final java.lang.String name , final java.lang.String value , final java.lang.String VAR_1 ) { TYPE_1 . METHOD_2 ( VAR_1 , STRING_1 ) ; final java.lang.String VAR_2 = name . METHOD_3 ( ) ; java.lang.String VAR_3 = value ; METHOD_4 ( ) ; if ( VAR_4 . METHOD_5 ( VAR_2 ) ) { VAR_3 = java.lang.String . METHOD_6 ( STRING_2 , VAR_4 . get ( VAR_2 ) , VAR_1 , value ) ; } VAR_4 . put ( name . METHOD_3 ( ) , VAR_3 ) ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters , java.util.List < java.lang.String > VAR_1 ) { if ( ( vm . METHOD_2 ( ) ) == ( VAR_2 ) ) { for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( host . getId ( ) . equals ( vm . METHOD_3 ( ) ) ) { return TYPE_1 . METHOD_4 ( host ) ; } } } return hosts ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { TYPE_1 VAR_2 = TYPE_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_2 == null ) { VAR_4 . METHOD_3 ( ( STRING_1 + VAR_1 ) ) ; VAR_2 = VAR_5 ; } return VAR_2 ; } catch ( java.lang.Exception e ) { return VAR_5 ; } } 
public java.lang.String METHOD_1 ( final TYPE_1 VAR_1 , final java.lang.String VAR_2 ) { return METHOD_2 ( new TYPE_2 < java.lang.String > ( ) { public java.lang.String METHOD_3 ( ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) . toString ( ) ) ; VAR_3 . METHOD_6 ( VAR_2 ) ; return VAR_4 . METHOD_1 ( VAR_3 ) ; } } ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { return ( ( ( ( VAR_1 . METHOD_2 ( ) ) + ( METHOD_3 ( VAR_1 ) ) ) < VAR_2 ) && ( ( VAR_1 . METHOD_4 ( ) ) >= VAR_3 ) ) && ( ( ( VAR_1 . METHOD_5 ( ) ) == null ) || ( ( ( METHOD_6 ( ) . METHOD_6 ( ) ) - ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ) ) < ( TYPE_1 . METHOD_7 ( VAR_4 ) ) ) ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( name , other . name ) ) && ( TYPE_2 . equals ( value , other . value ) ) ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( METHOD_3 ( ) . getSelectedItem ( ) ) ; METHOD_3 ( ) . setItems ( new java.util.ArrayList < java.lang.String > ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_3 ( ) . setSelectedItem ( TYPE_1 . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( METHOD_2 ( ) . METHOD_3 ( ) ) ) { return ; } boolean VAR_1 = METHOD_4 ( ) ; if ( ( ( ( METHOD_5 ( ) ) && ( VAR_2 ) ) && VAR_1 ) && ( METHOD_6 ( ) ) ) { METHOD_2 ( ) . METHOD_7 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_8 ( ) ) ; METHOD_2 ( ) . METHOD_9 ( false ) ; METHOD_10 ( ) ; } } 
public boolean METHOD_1 ( TYPE_1 < ? > args , TYPE_2 VAR_1 ) { METHOD_2 ( ) ; return VAR_2 . METHOD_3 ( args , VAR_3 , new TYPE_3 < java.lang.Boolean > ( ) { public void METHOD_4 ( java.lang.Boolean result ) { VAR_4 this . VAR_5 = result ; VAR_4 this . VAR_6 = VAR_3 ; } } , VAR_1 ) ; } 
public static org.ovirt.engine.core.common.businessentities . network METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . network > VAR_1 , java.lang.String name ) { for ( org.ovirt.engine.core.common.businessentities . network VAR_2 : VAR_1 ) { if ( TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , name ) ) { return VAR_2 ; } } return null ; } 
public java.lang.String METHOD_1 ( final TYPE_1 VAR_1 ) { return METHOD_2 ( new TYPE_2 < java.lang.String > ( ) { public java.lang.String METHOD_3 ( ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; VAR_2 . METHOD_8 ( ( ( int ) ( VAR_1 . METHOD_9 ( ) ) ) ) ; VAR_2 . METHOD_10 ( VAR_1 . METHOD_11 ( ) ) ; return VAR_3 . METHOD_12 ( VAR_2 ) ; } } ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( null , METHOD_3 ( ) , VAR_1 ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . getReturnValue ( ) ) ) ; return METHOD_4 ( VAR_5 ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.lang.Object returnValue ) { if ( returnValue instanceof java.util.ArrayList ) { return ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; } if ( returnValue instanceof TYPE_1 ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( ( ( TYPE_1 ) ( returnValue ) ) ) ; return VAR_1 ; } throw new TYPE_2 ( ( STRING_1 + ( returnValue . METHOD_2 ( ) . getName ( ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . assertEquals ( true , ( ( VAR_1 . size ( ) ) == 1 ) ) ; TYPE_1 VAR_4 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_3 ( VAR_4 ) ; TYPE_2 . assertEquals ( VAR_4 . METHOD_4 ( ) , VAR_5 ) ; TYPE_2 . assertEquals ( true , VAR_4 . METHOD_5 ( ) . equals ( INT_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( STRING_2 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; client . METHOD_3 ( STRING_3 , VAR_2 , VAR_3 , VAR_4 ) ; TYPE_4 . assertEquals ( VAR_1 , new java.lang.String ( VAR_4 . METHOD_4 ( ) , STRING_2 ) ) ; TYPE_4 . assertEquals ( 0 , VAR_3 . size ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( VAR_3 ) ; VAR_4 = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( METHOD_4 ( ) , METHOD_5 ( ) , null ) ) ; org.mockito.Mockito . METHOD_6 ( ) . when ( VAR_4 ) . METHOD_7 ( TYPE_2 . any ( VAR_5 . VDS class ) , TYPE_2 . any ( VAR_6 class ) , TYPE_2 . any ( ) ) ; } 
protected static java.lang.String METHOD_1 ( byte VAR_1 , byte VAR_2 , byte VAR_3 , int VAR_4 ) { TYPE_1 result = new TYPE_1 ( ) ; int VAR_5 = ( ( ( VAR_1 & INT_1 ) < < INT_2 ) | ( ( VAR_2 & INT_1 ) < < INT_3 ) ) | ( VAR_3 & INT_1 ) ; while ( ( VAR_4 -- ) > 0 ) { result . append ( VAR_6 [ ( VAR_5 & INT_4 ) ] ) ; VAR_5 = VAR_5 > > INT_5 ; } return result . toString ( ) ; } 
public static int METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.util.Map < java.lang.String , java.lang.Integer > VAR_1 = TYPE_1 . METHOD_2 ( vm . METHOD_3 ( ) ) ; return ( ( ( VAR_1 . METHOD_4 ( VAR_2 , 0 ) ) + ( VAR_1 . METHOD_4 ( VAR_3 , 0 ) ) ) + INT_1 ) / INT_2 ; } 
private static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_3 < TYPE_1 > type , TYPE_3 < ? > ... VAR_1 ) { TYPE_2 < TYPE_1 > VAR_2 = TYPE_4 . METHOD_2 ( type , VAR_1 ) ; if ( VAR_2 == null ) { VAR_3 . METHOD_3 ( VAR_4 , type . getName ( ) , TYPE_5 . toString ( VAR_1 ) ) ; throw new TYPE_6 ( TYPE_7 . METHOD_4 ( VAR_5 , type ) ) ; } return VAR_2 ; } 
protected java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { if ( TYPE_1 . isEmpty ( VAR_1 ) ) { return VAR_1 ; } java.lang.String VAR_3 = new TYPE_2 ( VAR_1 ) . getName ( ) ; return java.lang.String . METHOD_2 ( STRING_1 , VAR_2 , VAR_3 ) ; } 
private void METHOD_1 ( ) { VAR_1 = new java.util.ArrayList < java.lang.Integer > ( VAR_2 . METHOD_2 ( ) ) ; TYPE_1 . METHOD_3 ( VAR_1 , new TYPE_2 < java.lang.Integer > ( ) { public int METHOD_4 ( java.lang.Integer VAR_3 , java.lang.Integer VAR_4 ) { return VAR_2 . get ( VAR_3 ) . METHOD_5 ( VAR_2 . get ( VAR_4 ) ) ; } } ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { java.util.Map < java.lang.String , java.lang.String > VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; if ( ( VAR_3 . size ( ) ) > 0 ) { VAR_2 . add ( VAR_4 , VAR_3 ) ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.ovirt.engine.core.common.businessentities.VDSGroup value = new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) ; value . METHOD_3 ( STRING_1 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( value ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( value ) ; return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 < TYPE_2 , ? > column , boolean VAR_1 ) { if ( METHOD_2 ( column ) ) { VAR_2 . put ( column , VAR_1 ) ; java.lang.String VAR_3 = ( ( METHOD_3 ( column ) ) != null ) ? METHOD_3 ( column ) : VAR_4 . get ( column ) ; METHOD_4 ( column , VAR_1 ) ; METHOD_5 ( column , null , VAR_1 , VAR_3 , false ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; final TYPE_2 . EngineMessage VAR_2 = VAR_3 ; TYPE_3 . ValidationResult VAR_4 = new TYPE_3 . ValidationResult ( VAR_2 , TYPE_4 . METHOD_3 ( VAR_2 , VAR_1 . getName ( ) ) ) ; METHOD_4 ( VAR_1 , VAR_5 , VAR_4 , VAR_4 , VAR_5 ) ; } 
public static void METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; try { VAR_3 . METHOD_2 ( VAR_2 ) ; } catch ( java.lang.Exception VAR_4 ) { TYPE_5 . METHOD_3 ( ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) + ( VAR_4 . METHOD_4 ( ) ) ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( ) ; final TYPE_1 VAR_1 = METHOD_3 ( ) . get ( VAR_2 ) ; TYPE_2 . METHOD_5 ( VAR_1 ) ; final TYPE_1 VAR_3 = METHOD_3 ( ) . get ( VAR_4 ) ; TYPE_2 . METHOD_6 ( VAR_3 ) ; METHOD_2 ( ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_3 . add ( VAR_1 ) ; if ( VAR_2 . isEmpty ( ) ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_2 . log ( VAR_4 , VAR_5 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) { TYPE_1 storageDomain = VAR_1 . METHOD_2 ( ) . get ( VAR_2 ) ; TYPE_2 . METHOD_3 ( storageDomain ) ; java.lang.String name = storageDomain . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( name . equals ( VAR_1 . METHOD_6 ( VAR_2 , VAR_3 ) ) ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > result ) { TYPE_1 . METHOD_2 ( result ) ; TYPE_1 . METHOD_3 ( result . isEmpty ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 : result ) { TYPE_1 . assertEquals ( VAR_2 . getId ( ) , VAR_1 . METHOD_4 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_1 , TYPE_3 > VAR_2 ) { new TYPE_4 ( VAR_2 , new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( new TYPE_8 ( ) . METHOD_2 ( ) , new TYPE_9 ( new TYPE_10 ( ) , new TYPE_11 ( ) ) . METHOD_2 ( ) ) ) . METHOD_3 ( VAR_1 , getModel ( ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM result = null ; TYPE_1 . VdcQueryReturnValue VAR_1 = TYPE_2 . getInstance ( ) . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_3 . getId ( ) ) ) ; if ( VAR_1 . getSucceeded ( ) ) { result = VAR_1 . getReturnValue ( ) ; } return result ; } 
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { try { synchronized ( VAR_2 . instance ) { VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_1 = true ; java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( host . METHOD_5 ( ) ) { METHOD_1 ( host ) ; } } VAR_3 . METHOD_2 ( STRING_2 ) ; } } finally { VAR_1 = false ; } } } 
private static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.ArrayList < java.lang.String > VAR_1 ) { if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vmId ) . size ( ) ) > 0 ) { VAR_1 . add ( TYPE_1 . toString ( ) ) ; return true ; } return false ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { TYPE_2 tempVar = new TYPE_2 ( METHOD_2 ( ) . getId ( ) , VAR_1 , VAR_2 ) ; tempVar . METHOD_3 ( true ) ; TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_3 , tempVar , TYPE_4 . METHOD_5 ( ) ) ; } 
private static void METHOD_1 ( TYPE_1 result ) { if ( ! ( result . METHOD_2 ( ) ) ) { VAR_1 . error ( result . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( result . METHOD_3 ( ) ) ; TYPE_2 . METHOD_5 ( result . METHOD_6 ( ) ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) ) ; if ( ( VAR_1 ) == ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) { METHOD_5 ( ) ; METHOD_6 ( ) ; } else { METHOD_7 ( ) ; } } 
private static boolean METHOD_1 ( TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; if ( ! ( TYPE_3 . equals ( VAR_1 . METHOD_3 ( ) ) ) ) { return false ; } TYPE_4 target = VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ; return STRING_1 . equals ( target . METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface VAR_2 : VAR_3 ) { if ( ! ( VAR_4 . METHOD_2 ( VAR_2 . getName ( ) ) ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 event ) { if ( user . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( STRING_1 , TYPE_2 . METHOD_4 ( user . METHOD_5 ( ) , user . METHOD_6 ( ) . toString ( ) ) ) ; } else { VAR_1 . METHOD_3 ( STRING_2 , null ) ; } } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . METHOD_3 ( VAR_2 , new TYPE_1 ( getVm ( ) . METHOD_4 ( ) ) ) . getReturnValue ( ) ) ) ; if ( VAR_1 ) { addCanDoActionMessage ( VAR_3 ) ; } return ! VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_1 ( VAR_2 ) ; METHOD_2 ( VAR_3 , VAR_1 ) ; } catch ( TYPE_4 VAR_4 ) { throw new TYPE_5 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; return VAR_1 . isEmpty ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( ( STRING_1 + name ) , VAR_3 . StorageDomain ) , aQuery ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network VAR_2 ) { final boolean VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; final boolean VAR_4 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_3 == VAR_4 ) { return VAR_5 . METHOD_1 ( VAR_1 . getName ( ) , VAR_2 . getName ( ) ) ; } else { return VAR_3 ? - 1 : 1 ; } } 
public static void METHOD_1 ( TYPE_1 < java.lang.String , java.lang.String > VAR_1 ) { VAR_1 . put ( STRING_1 , TYPE_2 . toString ( ( ( VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ) * INT_1 ) ) ) ; VAR_1 . put ( STRING_2 , TYPE_2 . toString ( ( ( VAR_2 < java.lang.Integer > METHOD_2 ( VAR_4 ) ) * INT_1 ) ) ) ; } 
protected boolean METHOD_1 ( ) { boolean result = true ; if ( ( TYPE_1 . METHOD_2 ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; result = false ; } else if ( ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_2 ) ) || ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { addCanDoActionMessage ( VAR_4 ) ; result = false ; } return result ; } 
public java.lang.String getValue ( TYPE_1 object ) { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( object . METHOD_2 ( ) ) ; java.util.ArrayList < java.lang.String > VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 . METHOD_3 ( ) ) { VAR_3 . add ( network . getName ( ) ) ; } ( ( TYPE_3 ) ( METHOD_4 ( ) ) ) . METHOD_5 ( VAR_3 ) ; return VAR_3 . isEmpty ( ) ? STRING_1 : VAR_3 . get ( 0 ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_1 ) { if ( ( cluster . getStoragePoolId ( ) ) != null ) { if ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( cluster . getId ( ) , vm . METHOD_3 ( ) . getValue ( ) ) ) { return true ; } } } return false ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_4 ( ( ( java.lang.String ) ( returnValue ) ) ) ; } } ) ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; java.util.List < TYPE_3 > VAR_4 = ( ( java.util.List < TYPE_3 > ) ( returnValue ) ) ; VAR_2 . METHOD_2 ( VAR_3 , VAR_4 , VAR_5 ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.Object item : METHOD_2 ( ) ) { TYPE_2 < TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( TYPE_2 < TYPE_1 , org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( item ) ) ; VAR_1 . add ( VAR_2 . METHOD_3 ( ) ) ; } TYPE_3 model = new TYPE_3 ( this , VAR_1 , true ) ; METHOD_4 ( model ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String id , java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) { TYPE_1 VAR_7 = new TYPE_1 ( ) ; VAR_7 . METHOD_2 ( id ) ; VAR_7 . METHOD_3 ( VAR_1 ) ; VAR_7 . METHOD_4 ( VAR_2 ) ; VAR_7 . METHOD_5 ( VAR_5 ) ; VAR_7 . METHOD_6 ( VAR_6 ) ; VAR_7 . METHOD_7 ( VAR_3 ) ; VAR_7 . METHOD_8 ( VAR_4 ) ; dao . METHOD_9 ( VAR_7 ) ; return VAR_7 ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( command . getStoragePoolId ( ) ) . thenReturn ( VAR_5 ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( VAR_1 ) { TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; if ( ! ( VAR_3 < java.lang.Boolean > METHOD_4 ( VAR_4 ) ) ) { TYPE_1 . getInstance ( ) . METHOD_5 ( TYPE_2 . getParameters ( ) . METHOD_6 ( ) . METHOD_3 ( ) ) ; } } } 
public void METHOD_1 ( ) { validator = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_1 , VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( false ) . when ( validator ) . METHOD_3 ( TYPE_2 . any ( ) ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( TYPE_4 . instance ( ) . METHOD_6 ( VAR_4 class ) ) , TYPE_5 . METHOD_7 ( VAR_5 ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = ( ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) == null ) ? null : TYPE_2 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ; return TYPE_3 . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 . Network , TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 context , TYPE_3 VAR_1 , java.lang.String VAR_2 ) { if ( context == null ) { return null ; } TYPE_1 VAR_3 = null ; if ( ( context != null ) && ( context . METHOD_2 ( ) ) ) { TYPE_1 VAR_4 = context . METHOD_3 ( ) ; if ( VAR_4 != null ) { VAR_3 = TYPE_4 . METHOD_4 ( VAR_4 , VAR_1 , VAR_2 ) ; } } return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , ( ( iface . METHOD_6 ( ) ) + 1 ) , iface . METHOD_7 ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 storageDomain ) { int VAR_1 = METHOD_2 ( storageDomain ) ; if ( VAR_1 > 0 ) { java.util.List < TYPE_2 > list = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( storageDomain . METHOD_5 ( ) ) ; for ( TYPE_2 VAR_2 : METHOD_6 ( list , storageDomain . METHOD_5 ( ) ) ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; } } return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.HashMap < org.ovirt.engine.core.common.businessentities.network.Network , TYPE_1 < org.ovirt.engine.core.compat.Guid > > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , VAR_2 ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( true , null , VAR_3 ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_4 , org.mockito.Mockito . METHOD_8 ( 2 ) ) . METHOD_9 ( TYPE_3 . any ( VAR_5 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_10 ( ) , VAR_6 ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > result = dao . METHOD_2 ( VAR_1 . getId ( ) ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup VAR_2 : result ) { TYPE_1 . assertEquals ( VAR_1 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.String > VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String VAR_3 = VAR_2 . get ( VAR_4 ) ; if ( TYPE_2 . isEmpty ( VAR_3 ) ) { return new TYPE_1 ( ) . error ( ) . METHOD_3 ( VAR_5 , STRING_1 ) ; } for ( TYPE_3 VAR_6 : VAR_7 ) { VAR_6 . METHOD_4 ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( VAR_8 ) ) ; } return null ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; super . METHOD_2 ( VAR_1 , new TYPE_1 ( vm . METHOD_3 ( ) ) ) ; } 
public TYPE_1 . ValidationResult validate ( java.lang.Object value ) { TYPE_1 . ValidationResult VAR_1 = TYPE_2 . validate ( value ) ; if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { return VAR_1 ; } TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; if ( ( value != null ) && ( value instanceof java.lang.String ) ) { result . METHOD_2 ( METHOD_3 ( ( ( java.lang.String ) ( value ) ) ) ) ; result . METHOD_4 ( VAR_2 ) ; } return result ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) throws TYPE_4 { final TYPE_5 VAR_2 = new TYPE_5 ( VAR_1 ) ; this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; try { this . METHOD_3 ( ) . METHOD_4 ( TYPE_6 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) ; } finally { METHOD_7 ( VAR_1 , VAR_2 ) ; } return VAR_2 ; } 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object VAR_2 : METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( VAR_2 ) ) ; VAR_1 . add ( new TYPE_2 ( template . getId ( ) , getEntity ( ) . getId ( ) , pool . getId ( ) ) ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_3 , VAR_1 ) ; METHOD_4 ( ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( ) . get ( iface . getName ( ) ) ; return ( VAR_1 == null ) || ( ! ( iface . METHOD_3 ( ) . equals ( VAR_1 . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true , VAR_1 ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_6 ) . METHOD_4 ( VAR_3 ) ; TYPE_4 . METHOD_5 ( VAR_7 . METHOD_6 ( cluster , VAR_2 ) . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network VAR_1 = METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( false ) ; org.ovirt.engine.core.common.businessentities.network.Network VAR_2 = METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_4 ( INT_1 ) ; METHOD_5 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_6 ( STRING_3 , VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_1 VAR_3 = METHOD_8 ( METHOD_9 ( nic , METHOD_10 ( nic . getName ( ) , VAR_2 . METHOD_11 ( ) , VAR_2 . getName ( ) ) ) ) ; METHOD_12 ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; final TYPE_1 model = TYPE_2 . getModel ( 0 ) ; model . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_2 [ 2 ] ) ) ; model . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ; try { METHOD_7 ( resource . METHOD_8 ( model ) , 0 ) ; METHOD_9 ( STRING_1 ) ; } catch ( TYPE_4 VAR_3 ) { METHOD_10 ( VAR_3 , VAR_4 ) ; } } 
public boolean METHOD_1 ( java.lang.Object VAR_1 ) { if ( ! ( VAR_1 instanceof java.util.ArrayList ) ) { return false ; } java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ) ( VAR_1 ) ) ; return ( ( VAR_2 != null ) && ( ( VAR_2 . size ( ) ) == ( VAR_3 . size ( ) ) ) ) && ( VAR_3 . METHOD_2 ( VAR_2 ) ) ; } 
protected boolean validate ( TYPE_1 . ValidationResult VAR_1 , java.util.List < java.lang.String > VAR_2 ) { if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { VAR_2 . add ( VAR_1 . METHOD_2 ( ) . name ( ) ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { for ( java.lang.String VAR_3 : VAR_1 . METHOD_3 ( ) ) { VAR_2 . add ( VAR_3 ) ; } } } return VAR_1 . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = ( ( TYPE_2 ) ( dao ) ) . METHOD_2 ( true , false , STRING_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 ) ; TYPE_3 . assertEquals ( 1 , VAR_1 . size ( ) ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_1 . get ( 0 ) . getId ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_1 == null ) { java.util.List < TYPE_2 > VAR_2 = new TYPE_3 < TYPE_2 > ( ) ; VAR_2 . add ( METHOD_4 ( ) ) ; METHOD_2 ( ) . setItems ( VAR_2 ) ; } else { for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_3 . METHOD_5 ( METHOD_6 ( ) . METHOD_7 ( ) , false , METHOD_6 ( ) . getId ( ) , null ) ; } } } 
public TYPE_1 METHOD_1 ( java.lang.String name ) throws TYPE_2 { if ( name == null ) { throw new TYPE_2 ( java.lang.String . METHOD_2 ( STRING_1 ) ) ; } TYPE_3 VAR_1 = VAR_2 . get ( name ) ; if ( VAR_1 == null ) { throw new TYPE_2 ( java.lang.String . METHOD_2 ( STRING_2 , name ) ) ; } return VAR_3 ; } 
public void setEntity ( java.lang.Object value ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( value ) ) ; VAR_1 = ( ( ( vds == null ) || ( ( getEntity ( ) ) == null ) ) || ( ! ( vds . getId ( ) . equals ( getEntity ( ) . getId ( ) ) ) ) ) || ( ! ( vds . METHOD_1 ( ) . equals ( getEntity ( ) . METHOD_1 ( ) ) ) ) ; super . setEntity ( value ) ; } 
public TYPE_1 add ( TYPE_2 . Network network ) { METHOD_1 ( network , METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 . Network class , network ) ; TYPE_2 . Network entity = map ( network ) ; TYPE_3 params = METHOD_4 ( network , entity ) ; return METHOD_5 ( VAR_2 , params , new TYPE_4 ( network . getName ( ) , params . getStoragePoolId ( ) . toString ( ) ) ) ; } 
public void METHOD_1 ( final TYPE_1 model ) { VAR_1 . METHOD_1 ( model ) ; VAR_2 . METHOD_2 ( model . METHOD_3 ( ) . METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( ) ; model . getName ( ) . METHOD_6 ( ) . METHOD_7 ( new TYPE_2 ( ) { public void METHOD_8 ( TYPE_3 VAR_4 , java.lang.Object sender , TYPE_4 args ) { TYPE_5 . METHOD_9 ( VAR_5 this , model ) ; } } ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { resource . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , getEntity ( 0 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_1 VAR_5 = resource . list ( ) ; METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( VAR_5 . METHOD_7 ( ) . size ( ) , INT_1 ) ; } 
private boolean METHOD_1 ( TYPE_1 parameters , java.util.List < TYPE_2 > VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , parameters . METHOD_3 ( ) . getId ( ) ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; return true ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; METHOD_3 ( ) ; if ( ( ( TYPE_1 . getVm ( ) ) != null ) && ( ( TYPE_1 . getVm ( ) . METHOD_4 ( ) ) == ( VAR_1 ) ) ) { METHOD_5 ( null ) ; super . METHOD_1 ( ) ; } else { METHOD_6 ( METHOD_7 ( ) . getId ( ) ) ; VAR_2 = true ; TYPE_1 . METHOD_8 ( false ) ; TYPE_1 . log ( ) ; } } 
private boolean METHOD_1 ( java.lang.String VAR_1 ) { VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_3 , VAR_1 ) ; if ( VAR_2 . isEmpty ( ) ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; TYPE_2 . log ( VAR_4 , VAR_5 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; java.util.Map < java.lang.String , java.lang.Object > VAR_3 = new java.util.HashMap ( ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; dao . METHOD_2 ( VAR_4 , VAR_3 ) ; java.lang.String result = dao . get ( VAR_4 , VAR_1 ) ; TYPE_1 . assertEquals ( result , VAR_2 ) ; VAR_5 . METHOD_3 ( VAR_4 ) ; java.lang.String VAR_6 = dao . get ( VAR_4 , VAR_1 ) ; TYPE_1 . METHOD_4 ( VAR_6 ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . VdcActionType VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_1 , new TYPE_4 ( VAR_2 , VAR_4 , VAR_5 , VAR_1 . METHOD_2 ( ) , TYPE_5 . getParameters ( ) , VAR_1 . METHOD_3 ( ) , TYPE_5 . METHOD_4 ( ) ) ) ; VAR_3 . METHOD_5 ( TYPE_5 . getParameters ( ) . METHOD_6 ( ) ) ; org.ovirt.engine.core.compat.Guid VAR_6 = TYPE_6 . getInstance ( ) . METHOD_7 ( VAR_7 , VAR_3 , false ) ; return VAR_6 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( VAR_1 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( ) ; try { VAR_3 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 = new TYPE_1 < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_3 = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; VAR_3 . METHOD_2 ( STRING_1 ) ; VAR_2 . add ( VAR_3 ) ; METHOD_3 ( VAR_4 , VAR_5 class , new java.lang.String [ ] { STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_6 , VAR_1 } , VAR_2 ) ; } 
public void setEntity ( java.lang.Object value ) { super . setEntity ( value ) ; if ( METHOD_1 ( ) . METHOD_2 ( ) ) { METHOD_3 ( ( ( java.lang.Boolean ) ( value ) ) ) ; if ( ! ( ( java.lang.Boolean ) ( value ) ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > VAR_3 = VAR_2 . METHOD_1 ( ) ; while ( VAR_3 . METHOD_2 ( ) ) { if ( ( VAR_3 . METHOD_3 ( ) . getStatus ( ) ) != ( VAR_4 ) ) { VAR_3 . METHOD_4 ( ) ; } } VAR_1 . METHOD_5 ( VAR_2 ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( super . equals ( obj ) ) ) { return false ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; if ( ( METHOD_1 ( ) ) != ( other . METHOD_1 ( ) ) ) { return false ; } return true ; } 
void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ( ( command . METHOD_4 ( ) ) && ( command . METHOD_5 ( ) ) ) ) ; METHOD_2 ( ) . METHOD_6 ( command . METHOD_7 ( ) ) ; METHOD_2 ( ) . METHOD_8 ( command . METHOD_9 ( ) ) ; METHOD_2 ( ) . setTitle ( command . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { synchronized ( VAR_2 ) { try { int length = 0 ; this . VAR_3 = METHOD_2 ( VAR_1 ) ; this . VAR_4 = METHOD_2 ( VAR_1 ) ; this . VAR_5 = METHOD_3 ( VAR_1 ) ; } catch ( TYPE_2 e ) { throw new TYPE_3 ( e ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( TYPE_3 . equals ( VAR_1 . METHOD_4 ( ) ) ) ; VAR_1 . METHOD_5 ( VAR_3 ) ; VAR_1 . METHOD_6 ( STRING_1 ) ; dao . METHOD_7 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_2 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; java.util.List < TYPE_1 . DiskImage > VAR_1 = TYPE_2 . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_6 ( VAR_1 ) ; TYPE_3 . METHOD_7 ( cmd ) ; org.mockito.Mockito . METHOD_8 ( VAR_3 ) . METHOD_6 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) . get ( METHOD_3 ( ) . getId ( ) ) ) ; return ( ( ( ( validate ( validator . METHOD_4 ( ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ) && ( validate ( validator . METHOD_7 ( ) ) ) ) && ( validate ( validator . METHOD_8 ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . getId ( ) ) == null ) { TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( VAR_2 != null ) { VAR_1 . setId ( VAR_2 . getId ( ) ) ; } } } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( VAR_3 ) == null ? 0 : VAR_3 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( source ) == null ? 0 : source . METHOD_1 ( ) ) ; return result ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { boolean VAR_3 = ( ! ( METHOD_2 ( ) . isEmpty ( ) ) ) || ( VAR_2 . METHOD_3 ( ) ) ; return new TYPE_3 ( ) . METHOD_4 ( VAR_1 , getParameters ( ) . METHOD_5 ( ) , ( VAR_3 ? VAR_4 : VAR_5 ) , getParameters ( ) . METHOD_6 ( ) , TYPE_4 . getVm ( ) , true , VAR_2 . METHOD_7 ( ) , TYPE_4 . METHOD_8 ( ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( 2 ) ; VAR_1 . METHOD_3 ( new TYPE_2 ( 2 , TYPE_3 . toString ( ) ) ) ; VAR_1 . METHOD_4 ( 0 ) ; VAR_1 . METHOD_5 ( 0 ) ; VAR_1 . METHOD_6 ( METHOD_7 ( ) ) ; VAR_1 . METHOD_8 ( METHOD_9 ( ) ) ; return TYPE_4 . METHOD_10 ( VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( TYPE_1 . METHOD_2 ( ) ) ) { return false ; } TYPE_2 < TYPE_3 > validator = METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; return ( ( super . METHOD_1 ( ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; TYPE_2 VAR_2 = new TYPE_3 ( VAR_3 ) ; METHOD_3 ( 1 , VAR_2 ) ; VAR_4 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( VAR_1 ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_6 ) { METHOD_8 ( VAR_6 , VAR_7 , VAR_2 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 ) . get ( 0 ) ; TYPE_2 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( TYPE_3 . METHOD_6 ( VAR_3 ) ) ) ; dao . METHOD_7 ( VAR_4 , VAR_5 , VAR_3 ) ; VAR_1 = dao . METHOD_2 ( VAR_2 ) . get ( 0 ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_1 . METHOD_4 ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } , new java.lang.Object [ ] { VAR_4 [ 0 ] , VAR_4 [ 1 ] , java.lang.Boolean . FALSE } , true , true , false ) ; VAR_1 = METHOD_4 ( VAR_1 , VAR_5 , VAR_4 [ 1 ] . toString ( ) ) ; METHOD_5 ( VAR_1 ) ; VAR_6 . METHOD_6 ( ) ; METHOD_7 ( resource . METHOD_8 ( ) ) ; } 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , java.util.Map < java.lang.String , java.lang.Object > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_1 = new java.util.ArrayList < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : hosts ) { VAR_1 . add ( new TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > ( vds . getId ( ) , vds . METHOD_2 ( ) ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( java.lang.String name , java.lang.String value ) { TYPE_1 VAR_1 = new TYPE_1 ( name , value ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; java.util.List < TYPE_1 > VAR_3 = VAR_4 . get ( name ) ; if ( VAR_3 == null ) { VAR_4 . put ( name , new TYPE_2 < TYPE_1 > ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ) ; } else { VAR_3 . add ( VAR_1 ) ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_5 ( TYPE_1 . any ( VAR_4 class ) ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( command ) . METHOD_7 ( ) ; } 
TYPE_1 < org.ovirt.engine.core.common.businessentities.VM , TYPE_2 > METHOD_1 ( ) { TYPE_1 < org.ovirt.engine.core.common.businessentities.VM , TYPE_2 > VAR_1 = METHOD_2 ( METHOD_3 ( ) , METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 ) ; VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_8 ( VAR_3 ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( STRING_1 ) , TYPE_1 . METHOD_5 ( new TYPE_2 [ ] { } ) , TYPE_1 . METHOD_5 ( new java.lang.Object [ ] { } ) , TYPE_1 . METHOD_5 ( INT_1 ) , TYPE_1 . METHOD_6 ( ) , TYPE_1 . METHOD_5 ( VAR_2 ) ) ; } 
public void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( VAR_1 ? VAR_3 . METHOD_3 ( ) : VAR_3 . METHOD_4 ( ) ) ) ; VAR_4 . METHOD_5 ( ( VAR_1 ? VAR_5 . METHOD_6 ( ) : VAR_5 . METHOD_7 ( ) ) ) ; VAR_4 . METHOD_8 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 result ; if ( VAR_1 ) { result = new TYPE_1 ( VAR_2 , VAR_3 ) ; } else { result = new TYPE_1 ( VAR_4 . ERROR , VAR_5 ) ; } org.mockito.Mockito.doReturn ( result ) . when ( VAR_6 ) . METHOD_2 ( TYPE_2 . any ( VAR_7 class ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 ) ; VAR_3 . METHOD_8 ( org.ovirt.engine.core.compat.Guid . METHOD_9 ( ) ) ; TYPE_2 . METHOD_10 ( command ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . setItems ( ( ( TYPE_2 ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; TYPE_1 . METHOD_2 ( new TYPE_2 ( VAR_1 , TYPE_1 . METHOD_3 ( ) ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { disk . METHOD_2 ( STRING_1 ) ; disk . METHOD_3 ( STRING_2 ) ; METHOD_4 ( disk , TYPE_1 . METHOD_5 ( STRING_1 ) , TYPE_1 . METHOD_6 ( TYPE_1 . METHOD_7 ( STRING_2 ) ) , TYPE_1 . METHOD_8 ( 2 ) ) ; TYPE_1 . METHOD_9 ( disk ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String value = VAR_2 . METHOD_1 ( VAR_1 ) ; if ( value == null ) { java.lang.String VAR_3 = ( STRING_1 + VAR_1 ) + STRING_2 ; VAR_4 . error ( VAR_3 ) ; throw new TYPE_1 ( VAR_3 ) ; } return VAR_2 . METHOD_1 ( VAR_1 ) ; } 
protected < TYPE_1 > void METHOD_1 ( TYPE_2 context , TYPE_3 value , TYPE_4 VAR_1 , TYPE_5 < TYPE_3 , TYPE_1 > VAR_2 ) { TYPE_6 < TYPE_1 > VAR_3 = VAR_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; VAR_3 . METHOD_1 ( context , VAR_2 . getValue ( value ) , VAR_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , org.ovirt.engine.core.compat . Version VAR_2 ) { if ( ( ( VAR_1 == null ) || ( ! ( VAR_1 . METHOD_2 ( ) ) ) ) || ( ! ( VAR_1 . METHOD_3 ( ) ) ) ) { return VAR_3 ; } else { TYPE_3 VAR_4 = TYPE_4 . METHOD_4 ( VAR_1 ) ; if ( VAR_4 == null ) { return TYPE_4 . METHOD_5 ( VAR_2 ) ; } else { return TYPE_4 . METHOD_6 ( VAR_4 ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( new int [ ] { 0 , 0 , 0 } ) ; METHOD_4 ( new int [ ] { 0 } ) ; METHOD_5 ( new java.lang.Integer [ ] { 0 , 0 } ) ; METHOD_6 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 1 ] } , METHOD_7 ( VAR_3 [ 1 ] ) ) ; super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = METHOD_2 ( ) ; if ( VAR_1 == null ) { return ; } boolean VAR_2 = ( ( java.lang.Boolean ) ( TYPE_2 . METHOD_3 ( VAR_3 , VAR_1 . METHOD_4 ( ) . toString ( ) ) ) ) ; METHOD_5 ( VAR_2 ) ; boolean VAR_4 = ( ( java.lang.Boolean ) ( TYPE_2 . METHOD_3 ( VAR_5 , VAR_1 . METHOD_4 ( ) . toString ( ) ) ) ) ; METHOD_6 ( VAR_4 ) ; } 
protected boolean METHOD_1 ( ) { java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 < TYPE_4 > VAR_2 = TYPE_3 . METHOD_4 ( VAR_3 ) ; java.util.List < TYPE_5 . DiskImage > VAR_4 = TYPE_6 . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , true , false , false ) ; VAR_5 = TYPE_6 . METHOD_7 ( VAR_4 , VAR_1 , VAR_2 ) ; return validate ( new TYPE_7 ( VAR_4 ) . METHOD_8 ( VAR_5 , VAR_1 , VAR_6 , VAR_2 ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , null , VAR_1 , VAR_2 ) , null ) ) ; METHOD_4 ( ) ; METHOD_5 ( true , null , VAR_3 ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_4 , org.mockito.Mockito . METHOD_8 ( INT_1 ) ) . METHOD_9 ( TYPE_3 . any ( VAR_5 class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_10 ( ) , VAR_6 ) ; } 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , TYPE_1 . VdcActionParametersBase parameters ) { TYPE_1 . VdcActionParametersBase VAR_2 = parameters . METHOD_2 ( ) ; if ( ( VAR_1 == ( VAR_3 ) ) || ( VAR_2 == null ) ) { return parameters ; } VAR_2 . METHOD_3 ( parameters . METHOD_4 ( ) ) ; return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.util.HashMap < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > map = ( ( java.util.HashMap < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( ) ; VAR_3 . add ( map . get ( true ) ) ; VAR_2 . setItems ( VAR_3 ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( VAR_1 . METHOD_2 ( this . VAR_2 ) ) { return ( this . VAR_3 ) + VAR_1 ; } return ( ( ( this . VAR_3 ) + ( VAR_4 ) ) + ( this . VAR_2 ) ) + VAR_1 ; } 
void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_3 ) . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 ) , TYPE_2 . any ( VAR_5 class ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( VAR_6 , VAR_4 ) ; VAR_7 . METHOD_4 ( VAR_1 ) ; try { METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_8 ) { METHOD_7 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_8 ( ) ; } } 
public void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; } finally { if ( ( user ) != null ) { VAR_1 . METHOD_3 ( VAR_4 . METHOD_4 ( new TYPE_1 ( user . METHOD_5 ( ) ) ) ) ; } VAR_4 . METHOD_6 ( ) ; } } 
protected java.lang.Object METHOD_1 ( java.lang.Object entity ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( entity ) ) ; TYPE_2 storageDomain = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; return ( ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( VAR_1 . METHOD_3 ( ) ) ) . METHOD_4 ( ) . toString ( ) ) + ( storageDomain . getId ( ) . toString ( ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = METHOD_2 ( VAR_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = diskImage . METHOD_3 ( ) . get ( 0 ) ; TYPE_1 validator = METHOD_4 ( VAR_2 , TYPE_2 . getStoragePoolId ( ) . getValue ( ) ) ; return validate ( validator . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_2 ) ) == ( - 1 ) ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) ) == 1 ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( new org.ovirt.engine.core.compat . Version ( STRING_1 ) ) ) == 0 ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { METHOD_2 ( ) . setEntity ( result ) ; METHOD_3 ( true ) ; } else { METHOD_2 ( ) . setEntity ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; METHOD_3 ( false ) ; } } 
private void METHOD_1 ( java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 , TYPE_1 < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 , TYPE_2 VAR_3 , TYPE_3 VAR_4 ) { org.ovirt.engine.core.common.businessentities.network.Network network = VAR_2 . get ( VAR_4 . METHOD_2 ( ) ) ; TYPE_4 VAR_5 = VAR_3 . get ( network . METHOD_3 ( ) ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_4 ( VAR_1 , VAR_2 , VAR_4 ) ; if ( nic != null ) { TYPE_5 VAR_6 = METHOD_5 ( network , VAR_5 , nic ) . METHOD_6 ( ) ; VAR_4 . METHOD_7 ( VAR_6 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , null ) ; TYPE_1 VAR_2 = METHOD_2 ( STRING_2 , null ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_3 , STRING_4 , STRING_5 , VAR_4 , null , null , TYPE_4 . METHOD_5 ( VAR_1 , VAR_2 ) ) , null ) ) ; METHOD_6 ( cmd , VAR_5 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) ; METHOD_8 ( TYPE_1 . getParameters ( ) . getStoragePoolId ( ) ) ; METHOD_9 ( TYPE_1 . getParameters ( ) . METHOD_10 ( ) ) ; } 
private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_4 ) ; METHOD_3 ( METHOD_4 ( VAR_5 , VAR_6 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 } , VAR_1 , VAR_2 ) ) ; TYPE_1 . Network model = getModel ( 0 ) ; try { ( ( TYPE_2 ) ( VAR_7 ) ) . add ( model ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_3 VAR_8 ) { METHOD_6 ( VAR_8 , VAR_3 ) ; } } 
private org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( org.ovirt.engine.core.compat . Version VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_3 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_3 . setId ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_5 . get ( VAR_2 ) ) . thenReturn ( VAR_3 ) ; return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . StorageDomain storageDomain = new TYPE_1 . StorageDomain ( ) ; storageDomain . setId ( VAR_1 ) ; storageDomain . METHOD_2 ( new TYPE_2 ( ) ) ; storageDomain . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) ; TYPE_3 . METHOD_5 ( METHOD_6 ( ) , storageDomain ) ; assertEquals ( VAR_2 , storageDomain . METHOD_7 ( ) ) ; METHOD_8 ( storageDomain . METHOD_3 ( ) . METHOD_7 ( ) ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String url , int VAR_1 ) { TYPE_2 VAR_2 = METHOD_2 ( url , VAR_1 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; VAR_3 . METHOD_5 ( new TYPE_4 ( new TYPE_5 ( METHOD_6 ( url ) , METHOD_7 ( url , VAR_1 ) ) ) , VAR_6 ) ; new TYPE_6 ( VAR_3 , VAR_7 , VAR_8 ) . METHOD_8 ( ) ; return VAR_3 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { return getParameters ( ) . METHOD_2 ( ) ? TYPE_2 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) . toString ( ) , TYPE_4 . METHOD_5 ( VAR_1 . VM , METHOD_6 ( ) ) ) : null ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new TYPE_1 < > ( ) ; boolean result = validator . METHOD_2 ( null , VAR_1 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_1 . get ( 0 ) , STRING_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; METHOD_3 ( ) ; if ( ( ( TYPE_1 . getVm ( ) ) != null ) && ( ( TYPE_1 . getVm ( ) . getStatus ( ) ) == ( VAR_1 ) ) ) { METHOD_4 ( null ) ; super . METHOD_1 ( ) ; } else { TYPE_1 . METHOD_5 ( ) ; VAR_2 = true ; } } 
protected boolean METHOD_1 ( final TYPE_1 ... VAR_1 ) { boolean VAR_2 = false ; TYPE_1 status = METHOD_2 ( ) ; if ( status != null ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_1 ) . METHOD_4 ( METHOD_2 ( ) ) ; } if ( ! VAR_2 ) { if ( status == ( VAR_3 ) ) { return METHOD_5 ( VAR_4 ) ; } METHOD_6 ( ) ; } return VAR_2 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 , java.lang.String VAR_3 ) { TYPE_2 . AuditLogSeverity VAR_4 = VAR_2 . METHOD_2 ( ) ; TYPE_3 VAR_5 = METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_5 == null ) { VAR_6 . METHOD_4 ( STRING_1 ) ; } else { TYPE_4 . METHOD_5 ( VAR_1 , VAR_5 ) ; TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( VAR_5 ) ; METHOD_9 ( VAR_4 , TYPE_4 . METHOD_10 ( VAR_3 , VAR_5 ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; VAR_7 . METHOD_5 ( ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_8 ) { METHOD_8 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_9 ( ) ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_1 . METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; } METHOD_7 ( TYPE_1 . METHOD_8 ( ) . getId ( ) ) ; } 
public boolean METHOD_1 ( ) { if ( METHOD_2 ( ) ) { java.lang.String VAR_1 = METHOD_3 ( ) ; if ( ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 , this , this . METHOD_6 ( ) , VAR_2 ) ) == null ) { return true ; } return false ; } return true ; } 
TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ; return ( VAR_1 != null ) && ( ( VAR_1 . METHOD_4 ( ) ) != null ) ? VAR_1 . METHOD_4 ( ) : new java.util.ArrayList < TYPE_2 > ( ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { return true ; } return false ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( VAR_2 ) . METHOD_4 ( VAR_1 ) ; VAR_2 . getParameters ( ) . METHOD_5 ( VAR_1 ) ; VAR_2 . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_8 ( ) ) . METHOD_9 ( ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_10 ( 1 ) ) . METHOD_4 ( VAR_1 ) ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 < TYPE_2 > ( new TYPE_3 < TYPE_2 > ( ) { public java.lang.String METHOD_2 ( TYPE_2 VAR_2 ) { if ( VAR_2 != null ) { return VAR_2 . METHOD_3 ( ) ; } return null ; } } ) ; VAR_3 = new TYPE_4 ( ) ; VAR_4 = new TYPE_5 < TYPE_2 > ( VAR_1 , VAR_3 ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( VAR_3 [ VAR_1 ] . toString ( ) . METHOD_2 ( ) , model . METHOD_3 ( ) ) ; METHOD_4 ( model ) ; } 
private TYPE_1 METHOD_1 ( ) { for ( TYPE_1 VAR_1 : getVm ( ) . METHOD_2 ( ) ) { if ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_2 ) ) return VAR_1 ; } VAR_3 . METHOD_4 ( STRING_1 , METHOD_5 ( ) ) ; return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 . Network > ( ) ) ; VAR_4 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_2 . getModel ( 0 ) ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_3 VAR_5 ) { METHOD_8 ( VAR_5 ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = null ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_4 = VAR_1 . METHOD_6 ( ) ; TYPE_3 . METHOD_7 ( VAR_4 ) ; } 
private TYPE_1 < TYPE_2 . DiskImage > METHOD_1 ( ) { TYPE_1 < TYPE_2 . DiskImage > VAR_1 = new TYPE_3 < > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_2 : TYPE_4 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) { TYPE_2 . DiskImage diskImage = new TYPE_2 . DiskImage ( ) ; diskImage . METHOD_4 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_5 . METHOD_5 ( VAR_2 ) ) ) ; VAR_1 . add ( diskImage ) ; } return VAR_1 ; } 
private void METHOD_1 ( TYPE_1 < TYPE_2 . DiskImage > value ) { java.util.ArrayList < TYPE_2 . DiskImage > VAR_1 = ( value != null ) ? VAR_2 . Linq < TYPE_2 . DiskImage > METHOD_2 ( value ) : new java.util.ArrayList < TYPE_2 . DiskImage > ( ) ; TYPE_3 . METHOD_3 ( VAR_1 , new TYPE_4 ( ) ) ; super . setItems ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( diskImage . METHOD_4 ( ) , VAR_1 ) ; METHOD_2 ( ) . METHOD_5 ( ) ; diskImage . METHOD_6 ( VAR_2 ) ; TYPE_2 . METHOD_7 ( diskImage . METHOD_8 ( ) , VAR_2 ) ; return null ; } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_2 ( result ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( ) , 1 ) ; result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( ) , 0 ) ; } 
private boolean METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : VAR_1 ) { if ( ( vm . METHOD_2 ( ) ) != ( VAR_2 ) ) { TYPE_1 VAR_3 = METHOD_3 ( ) . get ( new TYPE_2 ( disk . getId ( ) , vm . getId ( ) ) ) ; if ( VAR_3 . METHOD_4 ( ) ) { addCanDoActionMessage ( VAR_4 ) ; return false ; } } } return true ; } 
private void METHOD_1 ( ) { java.lang.String VAR_1 ; int VAR_2 = INT_1 ; for ( int i = - 2 ; i > ( - INT_2 ) ; i -- ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( i ) . METHOD_4 ( ) . toString ( ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; VAR_4 . put ( VAR_1 , VAR_1 ) ; VAR_2 ++ ; } } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_2 other = ( ( TYPE_2 ) ( obj ) ) ; return ( ( super . equals ( obj ) ) && ( TYPE_3 . equals ( VAR_1 , VAR_2 ) ) ) && ( TYPE_3 . equals ( VAR_3 , VAR_4 ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . add ( VAR_2 ) ; VAR_3 . METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( VAR_4 ) ; try { METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_7 ( VAR_5 , VAR_6 , new TYPE_3 ( VAR_7 ) ) ; } finally { VAR_1 . METHOD_8 ( ) ; } } 
public static boolean METHOD_1 ( TYPE_1 disk , org.ovirt.engine.core.common.businessentities.VM vm ) { if ( disk == null ) { VAR_1 . METHOD_2 ( STRING_1 ) ; return false ; } java.lang.String VAR_2 = STRING_2 ; int VAR_3 = 1 ; if ( vm != null ) { VAR_2 = vm . METHOD_3 ( ) ; VAR_3 = ( vm . METHOD_4 ( ) ) + 1 ; } disk . METHOD_1 ( TYPE_2 . METHOD_5 ( disk , VAR_2 , VAR_3 ) ) ; return true ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( METHOD_2 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( cmd . METHOD_4 ( ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; VAR_2 . METHOD_7 ( ) ; TYPE_1 nic = resource . get ( ) ; METHOD_8 ( nic . METHOD_9 ( ) ) ; METHOD_10 ( nic , 1 ) ; METHOD_11 ( nic ) ; } finally { VAR_1 . METHOD_12 ( ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId , java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_2 ) { TYPE_1 VAR_3 = TYPE_2 . get ( VAR_4 class ) ; VAR_3 . METHOD_2 ( VAR_1 , vmId , new TYPE_3 < java.lang.String > ( VAR_2 . METHOD_3 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; TYPE_1 image = new TYPE_1 ( ) ; image . METHOD_3 ( VAR_2 ) ; image . METHOD_4 ( VAR_3 ) ; TYPE_2 params = new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , image ) ; METHOD_5 ( VAR_1 , params ) ; TYPE_3 . METHOD_6 ( command . METHOD_7 ( ) ) ; TYPE_3 . METHOD_8 ( command . getReturnValue ( ) . METHOD_9 ( ) . METHOD_10 ( STRING_1 ) ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( VAR_2 , VAR_3 ) ; VAR_1 . put ( VAR_4 , VAR_3 ) ; VAR_1 . put ( VAR_5 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . put ( VAR_6 , vm . METHOD_3 ( ) . toString ( ) ) ; VAR_1 . put ( VAR_7 , vm . getId ( ) . toString ( ) ) ; VAR_8 . add ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( STRING_1 , VAR_1 . METHOD_3 ( STRING_2 ) . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( STRING_3 ) ) ; TYPE_1 . METHOD_2 ( STRING_4 , VAR_1 . METHOD_3 ( STRING_2 ) . METHOD_7 ( ) . equals ( STRING_5 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 . METHOD_3 ( cmd . METHOD_4 ( ) ) ; org.mockito.Mockito . METHOD_5 ( VAR_1 , org.mockito.Mockito . METHOD_6 ( VAR_2 ) ) . METHOD_7 ( TYPE_2 . METHOD_8 ( ) ) ; org.mockito.Mockito . METHOD_5 ( VAR_1 , org.mockito.Mockito . METHOD_9 ( ) ) . METHOD_10 ( TYPE_2 . METHOD_8 ( ) ) ; } 
protected < TYPE_1 > TYPE_2 METHOD_1 ( TYPE_3 result , TYPE_4 < TYPE_1 , TYPE_2 > VAR_1 ) { try { return VAR_1 . METHOD_2 ( ( ( TYPE_1 ) ( result . METHOD_3 ( ) ) ) ) ; } catch ( java.lang.Exception e ) { return TYPE_5 . METHOD_4 ( e , false ) ; } } 
protected boolean METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { return METHOD_3 ( VAR_2 ) ; } if ( ! ( METHOD_4 ( ) ) ) { return METHOD_3 ( VAR_3 ) ; } if ( ! ( TYPE_1 . METHOD_5 ( VAR_4 ) . METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ) ) { return METHOD_3 ( VAR_6 ) ; } return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( java.lang.Boolean ) ( source ) ) ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( name ) , aQuery ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( INT_1 ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_4 VAR_5 = VAR_4 . METHOD_3 ( VAR_1 , true ) ; TYPE_5 . METHOD_4 ( ( STRING_2 + VAR_1 ) , VAR_5 . METHOD_5 ( ) ) ; java.lang.String VAR_6 = VAR_3 . METHOD_6 ( VAR_5 , true ) ; TYPE_5 . assertEquals ( VAR_2 , VAR_6 ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) { VAR_2 = new TYPE_3 ( VAR_3 class ) ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) { VAR_2 = new TYPE_3 ( VAR_4 class ) ; } else { } return VAR_2 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_2 ) { domain . setId ( domain . getStoragePoolId ( ) ) ; } TYPE_2 . METHOD_1 ( VAR_2 , new TYPE_3 ( ) ) ; setItems ( VAR_2 ) ; METHOD_2 ( ( ( METHOD_3 ( ) . size ( ) ) == 0 ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_4 , VAR_5 . METHOD_3 ( ) , new java.lang.String [ ] { VAR_6 } , new java.lang.Object [ ] { VAR_7 [ 1 ] } , METHOD_4 ( VAR_3 ) , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > list = ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ; return METHOD_2 ( list , VAR_1 , VAR_2 ) ; } return new java.util.ArrayList < TYPE_1 > ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : STRING_1 ; } } ; TYPE_1 parameters = new TYPE_1 ( VAR_1 ) ; parameters . METHOD_2 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , parameters , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( VAR_1 ) ; resource . METHOD_6 ( METHOD_7 ( ) ) ; VAR_4 . METHOD_8 ( ) ; resource . get ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false , false ) ; TYPE_1 host = new TYPE_1 ( ) ; host . METHOD_3 ( new TYPE_2 ( ) ) ; host . METHOD_4 ( ) . setId ( STRING_1 ) ; VAR_1 . METHOD_5 ( ) ; resource . METHOD_6 ( host ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_5 ( VAR_4 , VAR_2 ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_2 ( ) ; METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) , new java.lang.String [ ] { VAR_6 } , new java.lang.Object [ ] { VAR_7 [ 1 ] } , VAR_3 , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 model = TYPE_2 . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) , getEntity ( ) . METHOD_4 ( ) , ( ( java.util.ArrayList < TYPE_3 > ) ( METHOD_5 ( ) ) ) , this ) ; METHOD_6 ( model ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.Boolean VAR_1 = ( ( java.lang.Boolean ) ( returnValue ) ) ; if ( ! VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_2 ) { if ( TYPE_1 . METHOD_2 ( i . METHOD_3 ( ) , VAR_3 . getName ( ) ) ) { VAR_4 . add ( i ) ; } } } VAR_5 . append ( VAR_3 . getName ( ) ) ; VAR_6 . METHOD_1 ( VAR_7 , VAR_4 ) ; } 
private boolean METHOD_1 ( boolean VAR_1 ) { return ( ( ( ( METHOD_2 ( ) ) != null ) && ( ( METHOD_2 ( ) . size ( ) ) > 0 ) ) && ( METHOD_3 ( VAR_1 ) ) ) && ( ( METHOD_4 ( ) ) || ( ( METHOD_5 ( ) ) && ( METHOD_6 ( ) ) ) ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 id , TYPE_3 VAR_1 , TYPE_4 type , java.util.Map < java.lang.String , java.lang.Object > VAR_2 , boolean VAR_3 , java.lang.Boolean VAR_4 ) { return TYPE_5 . METHOD_1 ( id , VAR_1 , type , VAR_2 , VAR_3 , VAR_4 , STRING_1 , null , false ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . METHOD_8 ( ) , TYPE_1 . getParameters ( ) . METHOD_9 ( ) ) ) ; } 
public void METHOD_1 ( ) { double VAR_1 = INT_1 * ( TYPE_1 . METHOD_2 ( INT_2 , INT_3 ) ) ; int VAR_2 = TYPE_2 . METHOD_3 ( ( ( long ) ( VAR_1 ) ) , VAR_3 , VAR_4 ) . METHOD_4 ( ) ; TYPE_3 . assertEquals ( VAR_2 , INT_1 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = METHOD_2 ( ) . get ( getParameters ( ) . METHOD_3 ( ) ) ; METHOD_4 ( ) . METHOD_5 ( VAR_1 , VAR_1 . getStatus ( ) ) ; METHOD_2 ( ) . METHOD_6 ( getParameters ( ) . METHOD_3 ( ) , VAR_2 ) ; METHOD_4 ( ) . METHOD_7 ( ) ; return null ; } 
protected java.lang.String METHOD_1 ( ) { java.lang.String VAR_1 = ( ( METHOD_2 ( ) ) == null ) ? STRING_1 : METHOD_2 ( ) ; java.lang.String VAR_2 = ( ( TYPE_1 . getVdsGroup ( ) ) == null ) ? STRING_1 : TYPE_1 . getVdsGroup ( ) . getName ( ) ; return ( VAR_1 + STRING_2 ) + VAR_2 ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 ) { int VAR_3 = ( VAR_1 . METHOD_2 ( ) ) ? TYPE_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , INT_1 ) : VAR_2 . METHOD_5 ( ) ; if ( VAR_3 > 0 ) { VAR_1 . METHOD_6 ( ( ( TYPE_4 . METHOD_7 ( ) ) + ( TYPE_5 . METHOD_8 ( VAR_3 ) ) ) ) ; VAR_1 . METHOD_9 ( TYPE_6 . METHOD_10 ( VAR_1 , VAR_2 ) ) ; } } 
protected void METHOD_1 ( ) { org.mockito.Mockito . METHOD_2 ( ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { TYPE_1 entity = new TYPE_1 ( ) ; entity . setId ( METHOD_2 ( rs , STRING_1 ) ) ; entity . METHOD_3 ( rs.getString ( STRING_2 ) ) ; entity . METHOD_4 ( rs.getString ( STRING_3 ) ) ; entity . METHOD_5 ( rs.getString ( STRING_4 ) ) ; entity . METHOD_6 ( ( ( rs.getString ( STRING_5 ) ) != null ? TYPE_4 . METHOD_7 ( rs.getString ( STRING_5 ) . METHOD_8 ( STRING_6 ) ) : null ) ) ; return entity ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( new TYPE_1 ( ) { public void METHOD_5 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_6 ( ) ; } } ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { command . getParameters ( ) . METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_2 , null , VAR_1 ) ; command . METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( ( ( command . METHOD_8 ( ) . size ( ) ) == 1 ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface , org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( source ) ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { return true ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , new TYPE_1 ( VAR_1 , iface ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( STRING_1 + ( VAR_1 [ 2 ] ) ) , VAR_2 . StorageDomain , METHOD_3 ( 2 ) ) ; METHOD_4 ( VAR_3 ) ; TYPE_1 . StorageDomain storageDomain = new TYPE_1 . StorageDomain ( ) ; storageDomain . METHOD_5 ( VAR_1 [ 2 ] ) ; TYPE_2 cluster = new TYPE_2 ( ) ; cluster . setId ( VAR_4 [ 1 ] . toString ( ) ) ; METHOD_6 ( storageDomain , cluster ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { java.lang.String VAR_4 = VAR_1 . METHOD_2 ( ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_3 ( STRING_1 , VAR_2 ) ; VAR_5 . METHOD_3 ( STRING_2 , VAR_4 ) ; VAR_5 . METHOD_3 ( STRING_3 , VAR_3 ) ; TYPE_3 . log ( VAR_5 , VAR_6 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { return validate ( new TYPE_2 < TYPE_1 . ValidationResult > ( ) { public TYPE_1 . ValidationResult METHOD_2 ( ) { for ( TYPE_3 disk : VAR_1 ) { TYPE_4 . Disk VAR_2 = METHOD_3 ( ) . get ( disk . getId ( ) ) ; if ( VAR_2 != null ) { return new TYPE_1 . ValidationResult ( VAR_3 , java.lang.String . METHOD_4 ( STRING_1 , VAR_2 . METHOD_5 ( ) ) ) ; } } return VAR_4 ; } } ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_4 ; if ( VAR_3 == null ) { VAR_4 = VAR_5 . METHOD_1 ( STRING_1 , VAR_2 ) ; } else { VAR_4 = VAR_5 . METHOD_1 ( VAR_3 , VAR_2 ) ; } TYPE_1 VAR_6 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_4 ) ; return VAR_6 ; } catch ( TYPE_2 VAR_7 ) { throw new TYPE_3 ( VAR_7 ) ; } } 
public java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( java.lang.Object item : METHOD_2 ( ) . METHOD_3 ( ) ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( item ) ) ; if ( VAR_2 . METHOD_4 ( ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( getParameters ( ) . METHOD_2 ( ) , METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( VAR_3 , false , VAR_1 ) ; METHOD_5 ( ) . METHOD_6 ( METHOD_7 ( ) . getId ( ) , METHOD_7 ( ) . METHOD_8 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network VAR_4 : METHOD_9 ( ) ) { TYPE_3 . METHOD_10 ( METHOD_11 ( ) , VAR_4 ) ; } return null ; } 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( VAR_2 ) . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( VAR_1 ) ) . thenReturn ( METHOD_6 ( VAR_6 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { for ( TYPE_1 item : ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) { return item ; } } return null ; } } ; TYPE_2 VAR_2 = new TYPE_2 ( ( STRING_1 + VAR_1 ) , VAR_3 . VDS ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_2 , aQuery ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 type , java.lang.String VAR_2 , java.lang.String VAR_3 ) { org.ovirt.engine.core.compat.Guid id = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; TYPE_1 VAR_4 = METHOD_3 ( id , VAR_1 , type ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; return VAR_4 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { true , false } , METHOD_5 ( ) ) ; METHOD_6 ( 1 ) ; VAR_3 . METHOD_7 ( ) ; METHOD_8 ( resource . get ( ) , 0 ) ; } 
protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_4 ) ; METHOD_3 ( 2 , false , false , false ) ; METHOD_4 ( METHOD_5 ( VAR_5 , VAR_6 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 } , VAR_1 , VAR_2 ) ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_1 VAR_7 ) { METHOD_8 ( VAR_7 , VAR_3 ) ; } } 
private static void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 , org.ovirt.engine.core.common.businessentities . Network network , org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( ( VAR_1 . size ( ) ) != 1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( vds . getId ( ) ) ; VAR_2 . METHOD_3 ( STRING_1 , network . getName ( ) ) ; VAR_2 . METHOD_3 ( STRING_2 , TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 ) , STRING_3 ) ) ; TYPE_4 . log ( VAR_2 , VAR_3 ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( new TYPE_3 ( ) ) ) ; TYPE_4 . ValidationResult VAR_3 = validator . METHOD_4 ( ) ; TYPE_5 . METHOD_5 ( VAR_3 , TYPE_6 . METHOD_6 ( VAR_4 ) ) ; } 
protected void METHOD_1 ( ) { try { METHOD_2 ( ) ; METHOD_3 ( ) ; TYPE_1 . METHOD_4 ( TYPE_2 . getVm ( ) . METHOD_5 ( ) ) ; } catch ( TYPE_3 e ) { TYPE_2 . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; throw e ; } TYPE_2 . METHOD_8 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( METHOD_5 ( ) ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( METHOD_5 ( ) . METHOD_7 ( ) . get ( VAR_1 . getId ( ) ) ) . thenReturn ( VAR_1 ) ; TYPE_2 . METHOD_8 ( METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public static void METHOD_1 ( TYPE_1 . DiskImage diskImage , org.ovirt.engine.core.compat.Guid vmId ) { try { TYPE_2 . METHOD_2 ( vmId , diskImage . getId ( ) ) ; TYPE_2 . METHOD_3 ( diskImage ) ; } catch ( TYPE_3 VAR_1 ) { VAR_2 . error ( STRING_1 , VAR_1 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( STRING_2 , VAR_1 ) ; throw new TYPE_4 ( VAR_3 , VAR_1 ) ; } } 
public static void METHOD_1 ( TYPE_1 . DiskImage image , boolean VAR_1 , TYPE_2 VAR_2 , org.ovirt.engine.core.compat.Guid vmId ) { try { TYPE_3 . METHOD_2 ( image , VAR_1 , VAR_2 ) ; TYPE_3 . METHOD_3 ( image , vmId ) ; } catch ( TYPE_4 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 . METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( STRING_2 , VAR_3 ) ; throw new TYPE_5 ( VAR_5 , VAR_3 ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; if ( ( VAR_1 == null ) || ( ( VAR_1 . size ( ) ) != 1 ) ) { return ; } org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = VAR_1 . get ( 0 ) ; METHOD_1 ( VAR_2 ) ; VAR_3 . onSuccess ( model , returnValue ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? TYPE_1 . METHOD_2 ( ( ( java.lang.Integer ) ( source ) ) . METHOD_3 ( ) ) : VAR_1 ; } } ; TYPE_2 . METHOD_4 ( new TYPE_3 ( VAR_2 , TYPE_2 . METHOD_5 ( ) ) , aQuery ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( version . getValue ( ) ) . thenReturn ( VAR_1 ) ; validator = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( nic , version ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( validator ) . METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , null ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = TYPE_1 . METHOD_3 ( METHOD_4 ( STRING_1 , null ) ) ; METHOD_5 ( VAR_1 , VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( METHOD_7 ( VAR_1 , VAR_3 ) ) ; METHOD_8 ( VAR_4 , VAR_5 , VAR_1 . getName ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = null ; if ( TYPE_2 . equals ( VAR_1 ) ) { VAR_2 = new TYPE_3 ( VAR_3 class ) ; } else if ( TYPE_4 . equals ( VAR_1 ) ) { VAR_2 = new TYPE_3 ( VAR_4 class ) ; } else if ( TYPE_5 . equals ( VAR_1 ) ) { VAR_2 = new TYPE_6 ( ) ; } else { } return VAR_2 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_2 ) ( model ) ) ; java.util.List < TYPE_3 > VAR_3 = ( ( TYPE_4 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; if ( VAR_3 != null ) { TYPE_5 . METHOD_1 ( VAR_3 , VAR_4 ) ; } METHOD_2 ( true ) ; VAR_2 . setItems ( VAR_3 ) ; METHOD_2 ( false ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; java.util.List < TYPE_3 > VAR_2 = TYPE_4 . METHOD_4 ( new TYPE_3 ( ) , new TYPE_3 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_2 ( TYPE_1 . any ( ) ) ) . thenReturn ( VAR_2 ) ; cmd . METHOD_5 ( ) . METHOD_6 ( true ) ; TYPE_5 . METHOD_7 ( cmd , VAR_4 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_3 ( VAR_3 [ 1 ] ) ; METHOD_4 ( ) ; VAR_4 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_6 class ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM entity ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getWindow ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { final TYPE_2 model = ( ( TYPE_2 ) ( target ) ) ; final java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; TYPE_3 . METHOD_1 ( model , VAR_1 , VAR_2 ) ; } } ) , entity . getId ( ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = ( ( org.ovirt.engine.core.compat.Guid ) ( TYPE_1 . METHOD_2 ( ) ) ) ; METHOD_3 ( true ) ; TYPE_2 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( ( VAR_2 == null ) || ( ( VAR_2 . getStatus ( ) ) != ( VAR_4 ) ) ) { return ; } VAR_2 . METHOD_4 ( VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; TYPE_1 . METHOD_6 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . get ( VAR_3 ) ; TYPE_2 . METHOD_2 ( VAR_1 ) ; java.lang.String name = VAR_1 . getName ( ) ; TYPE_2 . METHOD_3 ( name . equals ( VAR_4 . METHOD_4 ( VAR_5 , VAR_6 . VM ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( VAR_1 , VAR_2 ) ; METHOD_4 ( VAR_3 , org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) , VAR_1 ) ; org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_4 ) ) . when ( VAR_5 ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; TYPE_3 . METHOD_8 ( command . validate ( ) ) ; TYPE_3 . METHOD_9 ( command . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_4 . name ( ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_1 ( ) . METHOD_2 ( ) ; METHOD_3 ( ( ( TYPE_1 < TYPE_2 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; METHOD_1 ( ) . METHOD_4 ( ) ; } 
protected void METHOD_1 ( TYPE_1 model ) { java.lang.String VAR_1 = model . METHOD_2 ( ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 ) ; org.ovirt.engine.ui.uicommonweb.UICommand VAR_2 = model . METHOD_5 ( ) ; if ( VAR_2 != null ) { boolean VAR_3 = ( ( model . METHOD_6 ( ) . METHOD_7 ( ) ) && ( VAR_1 != null ) ) && ( ( TYPE_3 . METHOD_8 ( VAR_1 ) ) != null ) ; VAR_2 . METHOD_9 ( VAR_3 ) ; METHOD_10 ( ( VAR_3 ? VAR_2 : null ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 model = new TYPE_1 ( ) ; model . METHOD_2 ( null ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; try { VAR_2 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_7 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
private void METHOD_1 ( java.lang.String id ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; resource . id = id ; VAR_2 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_6 ( VAR_3 ) ; } resource . id = STRING_2 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 ) { TYPE_2 VAR_4 = METHOD_2 ( ) ; VAR_4 . addValue ( STRING_1 , VAR_1 ) ; VAR_4 . addValue ( STRING_2 , VAR_2 ) ; VAR_4 . addValue ( STRING_3 , VAR_3 ) ; java.util.List < TYPE_1 > VAR_5 = METHOD_3 ( ) . METHOD_4 ( STRING_4 , METHOD_5 ( ) , VAR_4 ) ; return VAR_5 ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; org.ovirt.engine.core.common.businessentities.VDSGroup VAR_2 = TYPE_1 . getVdsGroup ( ) ; VAR_1 . put ( VAR_3 , ( VAR_2 == null ? null : VAR_2 . METHOD_2 ( ) ) ) ; } return VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.network.Network VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) . equals ( METHOD_5 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) && ( ! ( VAR_1 . getId ( ) . equals ( METHOD_6 ( ) . getId ( ) ) ) ) ) && ( METHOD_6 ( ) . METHOD_7 ( ) . equals ( VAR_1 . METHOD_7 ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 status ) { TYPE_2 domain = new TYPE_2 ( ) ; domain . METHOD_2 ( status ) ; domain . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_3 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( domain ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_3 . any ( VAR_2 . Guid class ) , TYPE_3 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( domain ) ; } 
public void setItems ( TYPE_1 value ) { if ( ( VAR_1 ) != value ) { if ( ( VAR_1 ) != null ) { for ( TYPE_2 VAR_2 : ( ( TYPE_1 < TYPE_2 > ) ( VAR_1 ) ) ) { VAR_2 . METHOD_1 ( ) ; } } METHOD_2 ( value , VAR_1 ) ; VAR_1 = value ; METHOD_3 ( ) . METHOD_4 ( this , VAR_3 ) ; METHOD_5 ( new TYPE_3 ( STRING_1 ) ) ; } } 
private java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { if ( ! ( TYPE_1 . isEmpty ( vm . METHOD_2 ( ) ) ) ) { return vm . METHOD_2 ( ) ; } if ( VAR_1 . METHOD_3 ( vm . METHOD_4 ( ) ) ) { return VAR_2 < java.lang.String > METHOD_5 ( VAR_3 ) ; } else { return STRING_1 ; } } 
protected void METHOD_1 ( ) { if ( ! ( METHOD_2 ( ) . getEntity ( ) ) ) { METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; METHOD_3 ( ) . METHOD_6 ( false ) ; METHOD_3 ( ) . setEntity ( false ) ; return ; } METHOD_3 ( ) . METHOD_6 ( METHOD_7 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_1 , METHOD_2 ( id ) ) ; return inject ( new TYPE_5 < TYPE_6 , org.ovirt.engine.core.common.businessentities.VDS > ( VAR_5 , VAR_6 , VAR_4 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_1 . METHOD_4 ( ) , STRING_1 ) ; dao . METHOD_5 ( VAR_2 , VAR_3 , VAR_4 , STRING_2 ) ; TYPE_1 VAR_5 = dao . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; TYPE_2 . METHOD_3 ( VAR_5 ) ; TYPE_2 . assertEquals ( VAR_5 . METHOD_4 ( ) , STRING_2 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid id , TYPE_1 VAR_1 ) { return ( ( ( VAR_1 instanceof TYPE_2 ) && ( id . equals ( VAR_1 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ) ) ) && ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_2 ) ) ) && ( ( VAR_1 . METHOD_3 ( ) ) != ( VAR_3 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( TYPE_1 . METHOD_1 ( domain ) ) { VAR_2 . add ( domain ) ; } } if ( METHOD_2 ( ) . METHOD_3 ( ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 < TYPE_2 > command = METHOD_2 ( METHOD_3 ( ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 . Guid class , VAR_2 . StorageDomain class ) ) ; org.mockito.Mockito.when ( command . METHOD_6 ( ) . METHOD_7 ( TYPE_3 . METHOD_8 ( VAR_3 . DiskImage class ) ) ) . thenReturn ( new TYPE_4 . ValidationResult ( VAR_4 ) ) ; TYPE_5 . METHOD_9 ( command , VAR_5 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter < java.lang.Boolean > ( ) { public java.lang.Boolean Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return ( ( java.lang.Boolean ) ( source ) ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) ; final TYPE_1 model = METHOD_3 ( null ) ; model . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; model . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_2 [ 2 ] ) ) ; try { VAR_3 . add ( model ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_3 VAR_4 ) { METHOD_9 ( VAR_4 , VAR_5 ) ; } } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 returnValue = result . getReturnValue ( ) ; if ( ( returnValue != null ) && ( returnValue . getSucceeded ( ) ) ) { VAR_1 . METHOD_2 ( ( ( VAR_2 ) == null ? ( ( org.ovirt.engine.core.compat.Guid ) ( returnValue . METHOD_3 ( ) ) ) : VAR_2 ) , VAR_3 . METHOD_4 ( ) . METHOD_5 ( ) , VAR_3 . METHOD_6 ( ) ) ; } else { VAR_1 . METHOD_7 ( ) . METHOD_8 ( ) ; } } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 2 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . assertEquals ( cluster . getStoragePoolId ( ) , VAR_3 . METHOD_3 ( ) ) ; TYPE_2 . assertEquals ( VAR_4 . StoragePool , VAR_3 . METHOD_4 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( getStoragePoolId ( ) . getValue ( ) ) ; for ( final org.ovirt.engine.core.common.businessentities.network.Network VAR_2 : VAR_1 ) { METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_6 ( VAR_2 . getId ( ) ) ; } METHOD_4 ( ) . METHOD_7 ( ) ; return null ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_3 ( TYPE_1 . any ( ) ) ; org.mockito.Mockito.when ( cmd . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_1 ) ) ; METHOD_7 ( TYPE_3 . METHOD_8 ( ) ) ; TYPE_4 . METHOD_9 ( cmd , VAR_2 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; TYPE_1 . when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; METHOD_7 ( false ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . METHOD_2 ( VAR_1 . isEmpty ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_3 class , VAR_4 ) ; org.mockito.Mockito.doReturn ( org.mockito.Mockito . METHOD_4 ( VAR_5 class ) ) . when ( cmd ) . METHOD_5 ( ) ; validator = org.mockito.Mockito . METHOD_6 ( new TYPE_2 ( cmd . getParameters ( ) ) ) ; org.mockito.Mockito.doReturn ( validator ) . when ( cmd ) . METHOD_7 ( ) ; METHOD_8 ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( validator ) . METHOD_9 ( ) ; cmd . METHOD_10 ( ) ; } 
public boolean METHOD_1 ( java.lang.String sql ) { sql = METHOD_2 ( sql ) ; if ( ( sql . length ( ) ) > 0 ) { sql = sql . METHOD_3 ( STRING_1 , STRING_2 ) ; for ( java.lang.String VAR_1 : VAR_2 ) { if ( sql . METHOD_4 ( VAR_1 ) ) { return true ; } } } return false ; } 
protected boolean METHOD_1 ( TYPE_1 status ) { boolean returnValue = false ; TYPE_2 VAR_1 = TYPE_3 . METHOD_2 ( ) ; if ( VAR_1 != null ) { returnValue = ( VAR_1 . METHOD_3 ( ) ) == status ; if ( ( ! returnValue ) && ( ! ( TYPE_3 . getReturnValue ( ) . METHOD_4 ( ) . METHOD_5 ( TYPE_4 . toString ( ) ) ) ) ) { addCanDoActionMessage ( TYPE_4 ) ; } } return returnValue ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > models = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( true ) ; models . add ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; models . add ( VAR_2 ) ; TYPE_4 . METHOD_3 ( VAR_3 , models ) ; return models ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 context , java.lang.String VAR_1 , java.lang.String value ) { TYPE_1 VAR_2 = null ; for ( TYPE_1 VAR_3 : TYPE_3 . METHOD_2 ( context ) . METHOD_3 ( VAR_4 class . getName ( ) ) ) { if ( value . equals ( VAR_3 . METHOD_4 ( ) . < TYPE_4 > get ( VAR_5 ) . METHOD_5 ( VAR_1 ) ) ) { VAR_2 = VAR_3 ; break ; } } return VAR_2 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.lang.Object result = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; if ( result != null ) { model . METHOD_2 ( ( ( java.util.ArrayList < TYPE_3 > ) ( result ) ) ) ; } else { METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } model . METHOD_5 ( ) . METHOD_6 ( ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.HashMap < > ( ) ; VAR_1 . put ( TYPE_1 . name ( ) . METHOD_2 ( ) , ( ( TYPE_2 . METHOD_3 ( ) ) == null ? STRING_1 : TYPE_2 . METHOD_3 ( ) ) ) ; VAR_1 . put ( TYPE_3 . name ( ) . METHOD_2 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { validator = TYPE_1 . METHOD_2 ( ) ; TYPE_2 VAR_1 = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . getValue ( VAR_3 , VAR_4 ) ) . thenReturn ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_1 . getValue ( VAR_6 , VAR_4 ) ) . thenReturn ( VAR_7 ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; } 
private static java.lang.Boolean METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , java.lang.String name ) { if ( VAR_1 . METHOD_2 ( name ) ) { if ( ( VAR_1 . get ( name ) ) instanceof java.lang.Boolean ) { return ( ( java.lang.Boolean ) ( VAR_1 . get ( name ) ) ) ; } return java.lang.Boolean . METHOD_3 ( VAR_1 . get ( name ) . toString ( ) ) ; } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { resource . METHOD_5 ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_8 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_6 ( VAR_4 , java.lang.Boolean . FALSE ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( VAR_5 ) ; } 
private TYPE_1 METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = TYPE_2 . list ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) ; TYPE_1 result = null ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) == 1 ) ) { result = new TYPE_1 ( VAR_1 . get ( 0 ) ) ; } return result ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( VAR_2 ) , VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_4 , VAR_1 . getStatus ( ) ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; dao . METHOD_6 ( VAR_1 ) ; VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( VAR_2 ) , VAR_3 ) ; TYPE_2 . METHOD_4 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_5 , VAR_1 . getStatus ( ) ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( obj == null ) { return false ; } if ( ( METHOD_1 ( ) ) != ( obj . METHOD_1 ( ) ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; if ( ( VAR_1 ) != ( VAR_2 ) ) return false ; return true ; } 
protected void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VmTemplate VAR_2 : VAR_1 ) { TYPE_2 . METHOD_6 ( VAR_2 ) ; } TYPE_1 . METHOD_7 ( ) . METHOD_8 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( true , new org.ovirt.engine.core.common.businessentities.VDS ( ) , true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 . Guid class ) , TYPE_1 . METHOD_4 ( VAR_3 ) ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_5 ( command . validate ( ) ) ; } 
static TYPE_1 getModel ( int VAR_1 ) { TYPE_1 model = new TYPE_1 ( ) ; model . setId ( java.lang.String.valueOf ( VAR_2 [ VAR_1 ] ) ) ; model . METHOD_1 ( TYPE_2 . value ( ) ) ; model . METHOD_2 ( VAR_3 [ VAR_1 ] ) ; model . METHOD_3 ( VAR_4 [ VAR_1 ] ) ; model . METHOD_4 ( VAR_5 [ VAR_1 ] ) ; model . METHOD_5 ( INT_1 ) ; return model ; } 
public TYPE_1 . Network METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String name ) { for ( TYPE_1 . Network entity : METHOD_2 ( VAR_1 , METHOD_3 ( ) ) ) { if ( ( ( id != null ) && ( id . equals ( entity . getId ( ) ) ) ) || ( ( name != null ) && ( name . equals ( entity . METHOD_4 ( ) ) ) ) ) { return entity ; } } return null ; } 
private boolean METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.VM > list = METHOD_2 ( ) ; if ( list == null ) { return false ; } for ( org.ovirt.engine.core.common.businessentities.VM vm : list ) { if ( VAR_1 . METHOD_3 ( vm ) . METHOD_4 ( ) ) { return true ; } } return false ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; cmd . getVm ( ) . METHOD_3 ( STRING_1 ) ; METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_5 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_5 ) ) . thenReturn ( new TYPE_2 ( ) ) ; TYPE_3 . METHOD_6 ( cmd , VAR_6 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_4 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 , STRING_4 ) ; VAR_3 . add ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_3 ( VAR_1 ) ) . thenReturn ( VAR_3 ) ; boolean VAR_6 = command . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( VAR_6 ) ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 event , TYPE_4 < TYPE_2 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 ) { TYPE_1 < TYPE_2 > VAR_4 = new TYPE_1 < TYPE_2 > ( VAR_1 ) ; TYPE_5 < TYPE_3 , TYPE_1 < TYPE_2 > > VAR_5 = new TYPE_5 < TYPE_3 , TYPE_1 < TYPE_2 > > ( event , VAR_4 ) ; if ( VAR_3 ) { METHOD_2 ( VAR_2 ) . METHOD_3 ( VAR_5 ) ; } else { METHOD_2 ( VAR_2 ) . add ( VAR_5 ) ; } return VAR_4 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_1 = ( ( java.util.List < java.lang.String > ) ( returnValue ) ) ; METHOD_2 ( ) . setItems ( VAR_1 ) ; if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) && ( ( METHOD_2 ( ) . getSelectedItem ( ) ) == null ) ) { METHOD_2 ( ) . setSelectedItem ( TYPE_1 . METHOD_4 ( VAR_1 ) ) ; } } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.VDS VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_3 ( ) ; } } ) , VAR_4 . getName ( ) ) ; } 
public boolean METHOD_1 ( ) { if ( ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) || ( ( METHOD_2 ( ) ) == ( VAR_2 ) ) ) { return true ; } boolean VAR_3 = true ; for ( TYPE_1 VAR_4 : METHOD_3 ( ) ) { VAR_4 . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 [ ] { new TYPE_3 ( ) } ) ; VAR_3 &= VAR_4 . METHOD_4 ( ) . METHOD_6 ( ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; VAR_1 . METHOD_3 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_4 ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_6 ( VAR_3 ) ; } } 
private void METHOD_1 ( TYPE_1 . Disk model , TYPE_1 . Disk entity ) { model . METHOD_2 ( new TYPE_2 ( ) ) ; TYPE_3 VAR_1 = new TYPE_3 ( METHOD_3 ( model . getId ( ) ) ) ; java.util.List < TYPE_4 > VAR_2 = VAR_1 . METHOD_4 ( entity ) ; for ( TYPE_4 VAR_3 : VAR_2 ) { TYPE_5 . METHOD_5 ( VAR_4 , VAR_3 , VAR_1 . METHOD_6 ( ) ) ; } model . METHOD_4 ( ) . METHOD_4 ( ) . METHOD_7 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { try { returnValue = TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 , VAR_2 ) ; } catch ( TYPE_2 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 ) ; } finally { VAR_5 . METHOD_3 ( ) ; } } 
public TYPE_1 getValue ( TYPE_2 item ) { java.lang.String VAR_1 = TYPE_3 . METHOD_1 ( ) . get ( VAR_2 . METHOD_2 ( item ) ) ; TYPE_4 resource = TYPE_5 . METHOD_3 ( ) . METHOD_4 ( ( VAR_1 + STRING_1 ) ) ; if ( ( resource == null ) || ( ! ( resource instanceof TYPE_1 ) ) ) { resource = TYPE_5 . METHOD_3 ( ) . METHOD_5 ( ) ; } return ( ( TYPE_1 ) ( resource ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; VAR_1 . METHOD_3 ( null ) ; final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; VAR_1 . METHOD_5 ( VAR_2 ) ; final TYPE_2 VAR_4 = VAR_1 . getStoragePoolId ( ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_1 = new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( ) { public org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface METHOD_2 ( org.ovirt.engine.core.compat.Guid VAR_2 ) throws TYPE_3 { return VAR_3 . METHOD_3 ( id ) ; } } ; TYPE_4 VAR_4 = new TYPE_4 ( VAR_1 , METHOD_4 ( id ) ) ; return inject ( new TYPE_5 < TYPE_6 , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ( VAR_5 , VAR_2 , VAR_4 ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ; model . METHOD_6 ( TYPE_2 . METHOD_3 ( VAR_4 class ) ) ; model . METHOD_7 ( null ) ; return model ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( true , null ) ; cmd . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_1 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_1 . any ( VAR_2 class ) ) ; TYPE_2 . assertEquals ( VAR_3 , cmd . METHOD_8 ( ) ) ; } 
protected boolean METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 ) == null ) || ( VAR_2 . isEmpty ( ) ) ) { VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; } return ( ( VAR_2 ) != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { TYPE_1 entity = new TYPE_1 ( ) ; entity . setId ( METHOD_2 ( rs , STRING_1 ) ) ; entity . METHOD_3 ( rs.getString ( STRING_2 ) ) ; entity . METHOD_4 ( rs.getString ( STRING_3 ) ) ; entity . METHOD_5 ( rs.getString ( STRING_4 ) ) ; entity . METHOD_6 ( TYPE_4 . METHOD_7 ( rs.getString ( STRING_5 ) . METHOD_8 ( STRING_6 ) ) ) ; return entity ; } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = METHOD_2 ( METHOD_3 ( ) ) ; return ( ( super . METHOD_1 ( ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; params . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( params , null ) ) ; cmd . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_8 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_9 ( ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( VAR_1 , TYPE_1 . METHOD_3 ( STRING_1 ) ) ; METHOD_2 ( VAR_2 , TYPE_1 . METHOD_3 ( STRING_2 ) ) ; METHOD_2 ( VAR_3 , TYPE_1 . METHOD_3 ( STRING_3 ) ) ; METHOD_2 ( VAR_4 , TYPE_1 . METHOD_3 ( STRING_4 ) ) ; METHOD_2 ( VAR_5 , TYPE_1 . METHOD_3 ( STRING_5 ) ) ; METHOD_2 ( VAR_6 , TYPE_1 . METHOD_3 ( STRING_6 ) ) ; METHOD_2 ( VAR_7 , STRING_7 ) ; } 
private static org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.DiskImage diskImage = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; diskImage . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; diskImage . METHOD_4 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_1 . METHOD_5 ( new org.ovirt.engine.core.compat.Guid ( ) ) ) ) ; return diskImage ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 = METHOD_4 ( VAR_3 , VAR_1 . getName ( ) ) ; VAR_2 . METHOD_5 ( VAR_4 ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_5 = METHOD_6 ( VAR_2 . getName ( ) ) ; METHOD_7 ( VAR_2 , VAR_5 ) ; VAR_2 . METHOD_5 ( VAR_6 ) ; TYPE_1 VAR_7 = METHOD_8 ( METHOD_9 ( VAR_2 , VAR_5 ) ) ; METHOD_10 ( VAR_7 , VAR_1 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . add ( TYPE_1 . METHOD_3 ( 1 , VAR_2 ) ) ; METHOD_4 ( ) ; command . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( VAR_1 ) , TYPE_2 . any ( VAR_4 . Guid class ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_1 . METHOD_1 ( ( ( TYPE_1 < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ) ; TYPE_2 . METHOD_2 ( VAR_1 , new TYPE_3 ( ) ) ; TYPE_4 . METHOD_3 ( VAR_2 , VAR_3 . getId ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_2 = TYPE_2 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_5 ( VAR_2 . METHOD_6 ( ) , VAR_2 . METHOD_7 ( ) ) ) . thenReturn ( VAR_2 ) ; TYPE_4 < java.lang.String , java.lang.String > VAR_4 = VAR_5 . METHOD_8 ( VAR_2 . METHOD_6 ( ) , VAR_1 ) ; TYPE_2 . METHOD_9 ( VAR_4 , VAR_1 . METHOD_10 ( ) , VAR_1 . METHOD_11 ( ) ) ; } 
public boolean METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.VM > VAR_1 = METHOD_2 ( ) ; final org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = METHOD_3 ( ) . getSelectedItem ( ) ; if ( ( VAR_1 . isEmpty ( ) ) || ( VAR_2 == null ) ) { return false ; } return ( METHOD_4 ( VAR_1 ) ) && ( METHOD_5 ( VAR_1 . get ( 0 ) . METHOD_6 ( ) , VAR_2 ) ) ; } 
public static boolean METHOD_1 ( java.lang.Boolean VAR_1 , TYPE_1 VAR_2 , org.ovirt.engine.core.compat . Version VAR_3 ) { return ( ( VAR_1 == null ) && ( VAR_4 . METHOD_2 ( VAR_2 . METHOD_3 ( ) , VAR_3 ) ) ) && ( ( VAR_2 . METHOD_4 ( ) ) == ( VAR_5 ) ) ; } 
public void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } if ( ( VAR_2 ) == null ) { TYPE_2 VAR_3 = TYPE_1 . METHOD_5 ( ) . get ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; VAR_2 = new TYPE_3 ( VAR_3 ) ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = METHOD_3 ( ) ; if ( ( VAR_1 != null ) && ( VAR_1 . getSucceeded ( ) ) ) { METHOD_4 ( ) ; METHOD_5 ( VAR_2 ) ; METHOD_6 ( VAR_2 ) ; TYPE_1 . METHOD_7 ( true ) ; } } } 
private void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = null ; TYPE_3 rs = null ; try { VAR_1 = VAR_2 . METHOD_2 ( ) ; rs = VAR_1 . METHOD_3 ( STRING_1 ) ; rs . METHOD_4 ( ) ; } finally { if ( rs != null ) { rs . METHOD_5 ( ) ; } if ( VAR_1 != null ) { VAR_1 . METHOD_5 ( ) ; } } } 
protected boolean validate ( ) { METHOD_1 ( ) . validate ( ) ; METHOD_2 ( ) . validate ( ) ; METHOD_3 ( ( ( METHOD_1 ( ) . METHOD_4 ( ) ) && ( METHOD_2 ( ) . METHOD_4 ( ) ) ) ) ; return METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ( STRING_1 + ( VAR_1 [ 1 ] ) ) , VAR_2 , METHOD_3 ( 1 ) ) ; TYPE_1 . StorageDomain storageDomain = new TYPE_1 . StorageDomain ( ) ; storageDomain . setId ( VAR_3 [ 2 ] . toString ( ) ) ; TYPE_2 cluster = new TYPE_2 ( ) ; cluster . METHOD_4 ( VAR_1 [ 1 ] ) ; METHOD_5 ( VAR_4 ) ; METHOD_6 ( storageDomain , cluster ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( getModel ( 0 ) ) ; TYPE_1 . METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( VAR_2 , STRING_1 , VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_5 = METHOD_2 ( VAR_2 , STRING_2 , VAR_6 ) ; org.mockito.Mockito.when ( VAR_7 . METHOD_4 ( TYPE_1 . any ( VAR_8 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( VAR_5 , VAR_1 ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; TYPE_3 . assertEquals ( VAR_5 , cmd . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_1 : VAR_2 . METHOD_2 ( VAR_3 ) ) { parameters . add ( new TYPE_2 ( VAR_1 ) ) ; } VAR_4 . METHOD_3 ( VAR_5 , parameters ) ; VAR_6 . METHOD_4 ( ) ; } 
private TYPE_1 < java.lang.String , java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; return ( VAR_2 . size ( ) ) == 2 ? new TYPE_1 ( VAR_2 . get ( 0 ) , VAR_2 . get ( 1 ) ) : null ; } 
protected org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { org.ovirt.engine.core.common.businessentities.DiskImage image = TYPE_1 . METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; if ( image != null ) { VAR_1 = image ; } else { image = TYPE_1 . METHOD_2 ( ) . METHOD_4 ( METHOD_3 ( ) ) ; if ( image != null ) { VAR_1 = image ; } } } return VAR_1 ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { if ( ( ( ( storageDomain . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( storageDomain . METHOD_2 ( ) ) != ( VAR_2 ) ) ) && ( ( TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ) != ( storageDomain . METHOD_5 ( ) ) ) ) { addCanDoActionMessage ( VAR_3 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; VAR_2 . METHOD_7 ( ) ; TYPE_1 nic = resource . get ( ) ; METHOD_8 ( nic . METHOD_9 ( ) ) ; TYPE_2 . METHOD_10 ( nic , 1 ) ; METHOD_11 ( nic ) ; } finally { VAR_1 . METHOD_12 ( ) ; } } 
protected java.lang.Object METHOD_1 ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 . VdcQueryReturnValue result = VAR_4 . METHOD_3 ( VAR_1 , VAR_2 ) ; return result . getSucceeded ( ) ? result . getReturnValue ( ) : null ; } 
private TYPE_1 < TYPE_2 > METHOD_1 ( ) { return new TYPE_3 < TYPE_2 > ( new TYPE_4 < TYPE_2 > ( ) { TYPE_5 VAR_1 = new TYPE_5 ( ) ; public int METHOD_2 ( TYPE_2 VAR_2 , TYPE_2 VAR_3 ) { return VAR_1 . METHOD_2 ( VAR_2 . getEntity ( ) . METHOD_3 ( ) , VAR_3 . getEntity ( ) . METHOD_3 ( ) ) ; } } ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 < TYPE_4 > VAR_2 = getModel ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_2 . METHOD_4 ( ) ) { TYPE_4 VAR_3 = getModel ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ; METHOD_7 ( TYPE_5 . METHOD_8 ( VAR_3 ) ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ; if ( ( VAR_2 . size ( ) ) == 1 ) { for ( TYPE_2 VAR_3 : METHOD_5 ( VAR_1 . METHOD_6 ( ) , STRING_1 , VAR_1 . METHOD_7 ( ) ) ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_8 ( ) . METHOD_9 ( VAR_3 . METHOD_10 ( ) ) ; } } } 
private boolean METHOD_1 ( TYPE_1 nic , TYPE_2 VAR_1 , boolean VAR_2 ) { TYPE_3 parameters = new TYPE_3 ( nic , VAR_1 , VAR_2 ) ; parameters . METHOD_2 ( TYPE_4 . getParameters ( ) . METHOD_3 ( ) ) ; TYPE_5 returnValue = METHOD_4 ( VAR_3 , parameters , TYPE_4 . METHOD_5 ( ) ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { METHOD_6 ( returnValue ) ; } return returnValue . getSucceeded ( ) ; } 
private void METHOD_1 ( ) { parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; parameters . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; command = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( parameters ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_7 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( TYPE_2 . getParameters ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( TYPE_2 . getParameters ( ) . METHOD_5 ( ) . METHOD_8 ( ) ) ; VAR_2 . METHOD_9 ( VAR_1 ) ; TYPE_2 . METHOD_10 ( true ) ; } 
public void onSuccess ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { java.lang.Object [ ] VAR_3 = ( ( java.lang.Object [ ] ) ( VAR_1 ) ) ; TYPE_1 VAR_4 = ( ( TYPE_1 ) ( VAR_3 [ 0 ] ) ) ; TYPE_2 VAR_5 = ( ( TYPE_2 ) ( VAR_3 [ 1 ] ) ) ; boolean VAR_6 = ( ( VAR_5 . METHOD_1 ( ) ) == ( VAR_7 ) ) && ( VAR_2 == null ) ; VAR_4 . METHOD_2 ( VAR_5 , VAR_6 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 returnValue = METHOD_2 ( ) . METHOD_3 ( VAR_1 , new TYPE_2 ( TYPE_3 . getParameters ( ) . METHOD_4 ( ) , METHOD_5 ( TYPE_3 . getParameters ( ) . METHOD_4 ( ) ) , METHOD_6 ( TYPE_3 . getParameters ( ) . METHOD_7 ( ) ) ) ) ; TYPE_3 . METHOD_8 ( ) . METHOD_9 ( returnValue . getReturnValue ( ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { TYPE_1 . VM entity = org.mockito.Mockito . METHOD_2 ( VAR_1 . VM class ) ; org.mockito.Mockito.when ( entity . getId ( ) ) . thenReturn ( VAR_2 [ 0 ] ) ; org.mockito.Mockito.when ( entity . METHOD_3 ( ) ) . thenReturn ( new TYPE_2 ( ) ) ; org.mockito.Mockito.when ( entity . METHOD_4 ( ) ) . thenReturn ( TYPE_3 . METHOD_5 ( ) ) ; return entity ; } 
protected org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { org.ovirt.engine.core.common.businessentities.DiskImage image = METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; if ( image != null ) { VAR_1 = image ; } else { image = METHOD_2 ( ) . METHOD_4 ( METHOD_3 ( ) ) ; if ( image != null ) { image . METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 = image ; } } } return VAR_1 ; } 
private java.util.List < java.lang.String > METHOD_1 ( ) { java.util.List < java.lang.String > list = ( ( VAR_1 ) == null ) ? new TYPE_1 < java.lang.String > ( ) : new TYPE_1 < > ( VAR_1 ) ; list . METHOD_2 ( METHOD_3 ( ) ) ; if ( ( list . size ( ) ) > 0 ) { list . add ( 0 , VAR_2 ) ; } else { list . add ( VAR_3 ) ; } return list ; } 
protected boolean METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; METHOD_4 ( ) . METHOD_3 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; METHOD_5 ( ) . METHOD_6 ( new TYPE_1 [ ] { new TYPE_2 ( ) } ) ; return ( ( METHOD_2 ( ) . METHOD_7 ( ) ) && ( METHOD_4 ( ) . METHOD_7 ( ) ) ) && ( METHOD_5 ( ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( VAR_2 , VAR_3 , false ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_2 ( VAR_1 ) ) ; org.mockito.Mockito.doReturn ( validator ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_1 ) { VAR_2 . add ( METHOD_2 ( cluster ) ) ; } METHOD_3 ( ) . setItems ( VAR_2 ) ; if ( VAR_3 ) { VAR_3 = false ; METHOD_4 ( ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_3 < ? extends TYPE_2 . VdcActionParametersBase > VAR_2 , java.lang.String [ ] VAR_3 , java.lang.Object [ ] VAR_4 , java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_5 , java.util.ArrayList < TYPE_4 > VAR_6 ) { java.lang.String VAR_7 = ( VAR_8 ) + STRING_1 ; return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , true , true , null , VAR_5 , VAR_6 , VAR_7 , true ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_1 ) { if ( ( ( i . METHOD_2 ( ) ) != null ) && ( TYPE_1 . METHOD_3 ( i . getName ( ) , iface . getName ( ) ) ) ) { return true ; } } return false ; } 
public < TYPE_1 > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { int VAR_2 = super . METHOD_2 ( VAR_1 . size ( ) ) ; TYPE_3 < TYPE_1 > VAR_3 = VAR_1 . METHOD_3 ( ) ; for ( int i = 0 ; i < VAR_2 ; ++ i ) { VAR_3 . METHOD_4 ( ) ; } return VAR_3 . METHOD_4 ( ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { if ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vm . getId ( ) , VAR_1 ) ) { log . METHOD_4 ( STRING_1 , vm . getId ( ) ) ; TYPE_1 VAR_2 = new TYPE_1 ( vm . getId ( ) ) ; VAR_2 . METHOD_5 ( VAR_3 ) ; TYPE_2 . getInstance ( ) . METHOD_6 ( VAR_4 , VAR_2 , new TYPE_3 ( TYPE_4 . METHOD_7 ( ) , TYPE_4 . METHOD_8 ( ) ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_1 . any ( VAR_3 . Guid class ) , TYPE_1 . any ( VAR_3 . Guid class ) ) ; cmd . getVm ( ) . METHOD_4 ( VAR_4 ) ; TYPE_2 . METHOD_5 ( cmd , VAR_5 ) ; } 
public TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; TYPE_1 domain = new TYPE_1 ( ) ; domain . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_5 ( VAR_5 , VAR_6 ) ; return domain ; } 
protected boolean validate ( ) { if ( ! ( super . validate ( ) ) ) { return false ; } TYPE_1 VAR_1 = new TYPE_1 ( ) ; return validate ( VAR_1 . METHOD_1 ( getParameters ( ) . METHOD_2 ( ) , METHOD_3 ( ) , getParameters ( ) . METHOD_4 ( ) , false ) ) ; } 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { if ( TYPE_4 . METHOD_2 ( VAR_1 . getName ( ) , STRING_1 ) ) { return VAR_2 . get ( ) ; } return super . METHOD_1 ( source , VAR_1 ) ; } 
private void METHOD_1 ( ) { if ( ( ! ( VAR_1 ) ) && ( METHOD_2 ( ) ) ) { VAR_1 = true ; METHOD_3 ( ) . setSelectedItem ( null ) ; for ( TYPE_1 a : METHOD_3 ( ) . METHOD_4 ( ) ) { if ( TYPE_2 . METHOD_5 ( a . METHOD_6 ( ) , getEntity ( ) . METHOD_7 ( ) ) ) { METHOD_3 ( ) . setSelectedItem ( a ) ; break ; } } } } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ; if ( vm == null ) { return ; } METHOD_1 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } } 
private void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else { java.util.Map < java.lang.String , java.lang.String > VAR_1 = TYPE_1 . METHOD_5 ( STRING_1 , TYPE_2 . METHOD_6 ( ) ) ; METHOD_7 ( VAR_2 , VAR_1 ) ; } } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < java.lang.Integer > VAR_1 = new java.util.ArrayList < > ( ) ; if ( source != null ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( source ) ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; while ( VAR_3 . METHOD_3 ( ) ) { VAR_1 . add ( java.lang.Integer . METHOD_4 ( VAR_3 . METHOD_5 ( ) . toString ( ) ) ) ; } } return VAR_1 ; } 
private void METHOD_1 ( ) { TYPE_1 model = new TYPE_1 ( this , VAR_1 , false ) ; model . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; model . METHOD_3 ( STRING_1 ) ; model . METHOD_4 ( VAR_2 ) ; model . setEntity ( ( ( TYPE_2 ) ( getSelectedItem ( ) ) ) ) ; METHOD_5 ( model ) ; } 
public TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; final org.ovirt.engine.core.common.businessentities.VDSGroup VAR_3 = new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_4 ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( VAR_4 ) ) . thenReturn ( VAR_3 ) ; return VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; VAR_2 . METHOD_1 ( ) . setItems ( VAR_1 ) ; if ( VAR_2 instanceof TYPE_1 ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_3 = METHOD_2 ( VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) , VAR_1 ) ; VAR_2 . METHOD_1 ( ) . setSelectedItem ( VAR_3 ) ; } else { VAR_2 . METHOD_1 ( ) . setSelectedItem ( TYPE_2 . METHOD_5 ( VAR_1 ) ) ; } } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 < TYPE_2 . ValidationResult > VAR_2 ) { org.ovirt.engine.core.common.businessentities.network.Network network = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; network . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_3 ( null ) ; VAR_3 . METHOD_4 ( network . getId ( ) ) ; METHOD_1 ( VAR_1 , VAR_2 , network , VAR_3 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 id ) { java.lang.String name = null ; try { name = new java.lang.String ( id . METHOD_2 ( ) , STRING_1 ) ; } catch ( TYPE_3 e ) { return null ; } return new TYPE_1 ( this , id , name ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( null , VAR_2 ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . assertEquals ( true , ( ( VAR_1 . size ( ) ) == 2 ) ) ; TYPE_2 . METHOD_3 ( VAR_3 ) ; } 
protected boolean METHOD_1 ( ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == ( VAR_1 ) ) { return true ; } return validate ( TYPE_2 . METHOD_1 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) , TYPE_1 . getVdsGroup ( ) . METHOD_4 ( ) ) ) ; } 
public void METHOD_1 ( ) { boolean VAR_1 = ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) == ( VAR_2 ) ; boolean VAR_3 = ( getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) ) == ( VAR_4 ) ; getModel ( ) . METHOD_3 ( ) . setEntity ( ( VAR_1 || VAR_3 ? null : getModel ( ) . METHOD_2 ( ) . getSelectedItem ( ) . getValue ( ) ) ) ; } 
protected void METHOD_1 ( ) { VAR_1 = new TYPE_1 < java.lang.String , TYPE_2 > ( ) ; VAR_1 . addColumn ( new TYPE_3 < java.lang.String > ( ) { public java.lang.String getValue ( java.lang.String object ) { return object ; } } , constants . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_2 ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; VAR_3 . add ( VAR_1 ) ; VAR_4 . add ( VAR_3 , constants . METHOD_6 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 , int VAR_3 , java.lang.Integer VAR_4 ) { org.ovirt.engine.core.common.businessentities . Network network = new org.ovirt.engine.core.common.businessentities . Network ( ) ; network . METHOD_2 ( VAR_2 ) ; network . METHOD_3 ( VAR_3 ) ; network . METHOD_4 ( VAR_4 ) ; return TYPE_1 . METHOD_5 ( VAR_1 , network ) ; } 
public void METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 parameters = new TYPE_1 ( false , VAR_2 ) ; parameters . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( VAR_1 ) ) ; VAR_3 . METHOD_3 ( VAR_4 , parameters , TYPE_2 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_4 ( ) ; TYPE_1 . when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( null ) ; TYPE_2 . METHOD_5 ( command . METHOD_6 ( ) ) ; TYPE_2 . METHOD_7 ( command . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_3 . toString ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 parameters ) { switch ( parameters . METHOD_2 ( ) ) { case VAR_1 : case VAR_2 : case VAR_3 : { TYPE_3 < ? > command = TYPE_4 . METHOD_3 ( parameters . METHOD_2 ( ) , parameters ) ; return command . METHOD_4 ( ) ; } default : { return TYPE_5 . METHOD_5 ( ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_2 ) ) . METHOD_5 ( VAR_1 ) ; resource . METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( true , true ) ; VAR_3 . METHOD_9 ( ) ; resource . get ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = METHOD_1 ( ) . METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( VAR_1 , ( VAR_2 != null ? VAR_2 : new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ) ) ; METHOD_5 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } 
public java.lang.String METHOD_1 ( long VAR_1 ) { java.lang.String VAR_2 = null ; for ( TYPE_1 VAR_3 : VAR_4 . METHOD_2 ( ) ) { if ( ( VAR_5 . get ( VAR_6 ) ) == VAR_1 ) { VAR_2 = ( ( java.lang.String ) ( VAR_5 . get ( VAR_7 ) ) ) ; break ; } } return VAR_2 ; } 
private static void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result ) { TYPE_1 . METHOD_2 ( result ) ; TYPE_1 . METHOD_3 ( result . isEmpty ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : result ) { TYPE_1 . assertEquals ( VAR_1 , domain . METHOD_4 ( ) ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( model . METHOD_2 ( ) ) ) { METHOD_3 ( model ) ; METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( model . getModel ( ) ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) , model . getModel ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = TYPE_3 . getInstance ( ) . METHOD_2 ( TYPE_4 . METHOD_3 ( ) . get ( TYPE_4 . getParameters ( ) . getVm ( ) . METHOD_4 ( ) ) . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; VAR_1 . METHOD_9 ( VAR_2 . METHOD_10 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { try { TYPE_2 client = new TYPE_2 ( ) ; client . METHOD_2 ( VAR_1 ) ; java.lang.Object result = client . METHOD_3 ( VAR_2 , VAR_3 ) ; return METHOD_4 ( result ) ; } catch ( TYPE_3 e ) { VAR_4 . error ( ( STRING_1 + e ) ) ; return null ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getModel ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { getModel ( ) . METHOD_3 ( ) . setEntity ( returnValue ) ; } } ) , id ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( ( ( VAR_1 . METHOD_5 ( ) ) != null ) ) ; TYPE_2 . METHOD_4 ( ( ( VAR_1 . METHOD_6 ( ) ) == null ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_3 ) . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_3 . METHOD_10 ( ( ( VAR_4 . getValue ( ) . size ( ) ) == 0 ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { if ( model . equals ( METHOD_2 ( ) ) ) { this . setItems ( ( ( java.util.List < TYPE_1 < TYPE_2 , org.ovirt.engine.core.common.businessentities.VM > > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } } 
public java.lang.String METHOD_1 ( java.lang.String type , java.lang.String name ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String VAR_2 = VAR_1 . METHOD_1 ( type , name ) ; TYPE_2 VAR_3 = new TYPE_2 ( METHOD_1 ( ) , true ) ; VAR_3 . METHOD_2 ( STRING_1 , VAR_2 ) ; return VAR_3 . toString ( ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_5 ( VAR_2 . METHOD_6 ( ) , TYPE_2 . METHOD_4 ( ) ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { if ( ! ( METHOD_1 ( ) . getSelectedItem ( ) . getId ( ) . equals ( cluster . getId ( ) ) ) ) { return ; } if ( ( ( java.lang.Boolean ) ( returnValue ) ) ) { METHOD_2 ( ) . METHOD_3 ( true ) ; METHOD_4 ( null ) ; } else { METHOD_2 ( ) . METHOD_3 ( false ) ; METHOD_4 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_5 ( ) ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = VAR_3 ; if ( VAR_2 . equals ( STRING_1 ) ) { METHOD_2 ( object ) ; } else if ( VAR_2 . equals ( STRING_2 ) ) { METHOD_3 ( object ) ; } } 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) != null ) { return VAR_1 ; } VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 type : TYPE_1 . METHOD_2 ( ) ) { if ( type . METHOD_3 ( ) ) { VAR_1 . add ( type ) ; } } return VAR_1 ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_1 . getId ( ) . equals ( VAR_3 ) ) { java.lang.Integer VAR_4 = TYPE_3 . METHOD_2 ( VAR_2 ) ; if ( VAR_4 != null ) { METHOD_3 ( VAR_4 . METHOD_4 ( ) ) ; } } else { METHOD_3 ( VAR_1 . METHOD_5 ( ) ) ; } } 
public TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 cluster , TYPE_3 VAR_1 ) { TYPE_4 source = VAR_1 . METHOD_2 ( ) ; boolean VAR_2 = ( ( cluster != null ) && ( METHOD_3 ( cluster . METHOD_4 ( ) ) ) ) && ( cluster . METHOD_5 ( ) . METHOD_6 ( source ) ) ; if ( ! VAR_2 ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; TYPE_2 VAR_2 = METHOD_3 ( ) ; TYPE_3 VAR_3 = new TYPE_4 ( VAR_4 , VAR_2 , this , true ) ; VAR_3 . METHOD_4 ( METHOD_5 ( ) ) . METHOD_4 ( METHOD_6 ( ) ) . METHOD_7 ( VAR_1 ) ; VAR_3 . METHOD_8 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( false ) ; try { command . METHOD_3 ( ) ; } catch ( TYPE_1 VAR_1 ) { org.mockito.Mockito . METHOD_4 ( VAR_2 ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_3 ) , TYPE_2 . any ( VAR_4 class ) ) ; return ; } TYPE_3 . METHOD_7 ( ) ; } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) . value ( ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) . value ( ) ) ; model . METHOD_6 ( TYPE_3 . METHOD_7 ( TYPE_2 . METHOD_3 ( VAR_4 class ) ) ) ; model . METHOD_8 ( null ) ; return model ; } 
private static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , java.lang.Object [ ] VAR_1 ) { vds . METHOD_2 ( ) . add ( iface ) ; if ( VAR_1 != null ) { for ( java.lang.Object name : VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 : vds . METHOD_2 ( ) ) { if ( VAR_2 . getName ( ) . equals ( name . toString ( ) ) ) { VAR_2 . METHOD_3 ( iface . getName ( ) ) ; break ; } } } } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( new TYPE_2 ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . setId ( TYPE_4 . toString ( ) ) ; VAR_1 . METHOD_3 ( ) . METHOD_3 ( ) . add ( VAR_2 ) ; TYPE_5 VAR_3 = VAR_4 ; TYPE_6 . assertEquals ( VAR_3 , TYPE_7 . map ( VAR_1 , null ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) { try { TYPE_3 . getInstance ( ) . METHOD_2 ( response . METHOD_3 ( ) ) ; VAR_2 = TYPE_3 . getInstance ( ) . METHOD_4 ( ) ; VAR_3 = TYPE_3 . getInstance ( ) . METHOD_5 ( ) ; VAR_4 = TYPE_3 . getInstance ( ) . METHOD_6 ( ) ; } catch ( TYPE_4 e ) { } finally { METHOD_7 ( ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_2 ( new TYPE_3 ( VAR_2 , VAR_3 , VAR_4 , VAR_1 ) ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( TYPE_4 . METHOD_4 ( ) ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , TYPE_1 . METHOD_5 ( ) ) ; VAR_4 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_8 ( VAR_5 ) ; } } 
private boolean METHOD_1 ( ) { if ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) != null ) && ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) != null ) ) { return METHOD_5 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) , TYPE_1 . getReturnValue ( ) . METHOD_6 ( ) ) ; } return true ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_2 . RunVmCommand < TYPE_1 > ( VAR_1 ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = ( ( org.ovirt.engine.core.common.businessentities.VDSGroup ) ( returnValue ) ) ; if ( ( ( cluster != null ) && ( cluster . METHOD_2 ( ) ) ) && ( ! ( cluster . METHOD_3 ( ) ) ) ) { model . METHOD_4 ( ) . METHOD_5 ( true ) ; } model . METHOD_6 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 dao = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = dao . METHOD_3 ( VAR_1 . METHOD_4 ( ) . getName ( ) , VAR_1 . getId ( ) ) ; if ( VAR_2 != null ) { dao . METHOD_5 ( VAR_2 ) ; } else { VAR_2 = new TYPE_1 ( VAR_1 ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; dao . METHOD_7 ( VAR_2 ) ; } return VAR_2 ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; model . METHOD_1 ( model , VAR_1 , ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) , null ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , false ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( false ) ; METHOD_10 ( false ) ; TYPE_3 . METHOD_11 ( command ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( METHOD_1 ( host ) ) { VAR_2 . add ( host ) ; } } VAR_1 . METHOD_2 ( ) . setItems ( VAR_2 ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ; VAR_3 . add ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_2 ) ) ; VAR_3 . add ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_3 ) ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_2 ) ; } 
private static void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 , org.ovirt.engine.core.common.businessentities.network.Network network , org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( ( VAR_1 . size ( ) ) != 1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( vds . getId ( ) ) ; VAR_2 . METHOD_3 ( STRING_1 , network . getName ( ) ) ; VAR_2 . METHOD_3 ( STRING_2 , TYPE_2 . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_1 ) , STRING_3 ) ) ; TYPE_4 . log ( VAR_2 , VAR_3 ) ; } } 
public TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = null ; if ( ( ( ! ( getModel ( ) . METHOD_2 ( ) ) ) && ( getModel ( ) . METHOD_3 ( ) ) ) && ( ! ( getModel ( ) . METHOD_4 ( ) ) ) ) { VAR_1 = VAR_2 . METHOD_5 ( ) ; } else { VAR_1 = this . METHOD_6 ( ) ; } return TYPE_2 . METHOD_7 ( VAR_1 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . add ( VAR_2 , java.lang.Boolean . toString ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ) ; if ( ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) >= 0 ) { VAR_1 . add ( VAR_3 , TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { return ( ( ( ( ( VAR_1 . METHOD_2 ( ) ) + ( METHOD_3 ( VAR_1 ) ) ) >= VAR_2 ) && ( ( VAR_1 . METHOD_4 ( ) ) != null ) ) && ( ( ( new TYPE_1 ( ) . METHOD_5 ( ) ) - ( VAR_1 . METHOD_4 ( ) . METHOD_5 ( ) ) ) >= ( TYPE_2 . METHOD_6 ( VAR_3 ) ) ) ) && ( ( VAR_1 . METHOD_7 ( ) ) > 0 ) ; } 
private void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 . METHOD_3 ( ( ( java.lang.Boolean ) ( returnValue ) ) ) ; } } ) ) ; } 
public static java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage image ) { java.lang.String VAR_1 = STRING_1 ; if ( ( image . METHOD_2 ( ) ) != null ) { VAR_1 += image . METHOD_2 ( ) . getValue ( ) . toString ( ) ; } else { VAR_1 += VAR_2 ; } VAR_1 += STRING_2 + ( image . METHOD_3 ( ) . toString ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false ) ; TYPE_1 host = new TYPE_1 ( ) ; host . METHOD_3 ( new TYPE_2 ( ) ) ; host . METHOD_4 ( ) . setId ( STRING_1 ) ; VAR_1 . METHOD_5 ( ) ; resource . METHOD_6 ( host ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == null ) { return ; } if ( ( METHOD_2 ( ) . getEntity ( ) ) == true ) { METHOD_3 ( ) . METHOD_4 ( true ) ; } if ( ( METHOD_2 ( ) . getEntity ( ) ) == false ) { METHOD_3 ( ) . METHOD_4 ( false ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { final java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; final java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( TYPE_1 . equals ( host . getStatus ( ) ) ) { VAR_1 . add ( host ) ; } } METHOD_1 ( ) . setItems ( VAR_1 ) ; if ( VAR_1 . isEmpty ( ) ) { METHOD_2 ( false ) ; } } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 < java.lang.String , java.util.List < org.ovirt.engine.core.compat.Guid > > > VAR_1 , java.util.ArrayList < TYPE_2 . DiskImage > VAR_2 ) { java.lang.String VAR_3 = METHOD_2 ( vm , VAR_2 ) ; VAR_1 . put ( vm . getId ( ) , new TYPE_1 ( VAR_3 , vm . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) . map ( TYPE_3 : : getId ) . METHOD_6 ( TYPE_4 . METHOD_7 ( ) ) ) ) ; return VAR_3 ; } 
private void METHOD_1 ( boolean VAR_1 ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( METHOD_2 ( ) . getId ( ) ) . thenReturn ( VAR_3 ) ; METHOD_4 ( VAR_2 , VAR_1 ) ; METHOD_5 ( ) ; METHOD_6 ( VAR_4 ) ; METHOD_7 ( VAR_5 ) ; METHOD_8 ( ) . METHOD_9 ( true ) ; METHOD_8 ( ) . METHOD_10 ( ) ; TYPE_1 . METHOD_11 ( METHOD_8 ( ) , true ) ; METHOD_12 ( METHOD_8 ( ) ) ; } 
protected java.util.Map < java.lang.String , TYPE_1 < java.lang.String , java.lang.String > > METHOD_1 ( ) { if ( ! ( TYPE_2 . METHOD_2 ( getParameters ( ) . getVm ( ) . getName ( ) ) ) ) { return TYPE_3 . METHOD_3 ( getParameters ( ) . getVm ( ) . getName ( ) , TYPE_4 . METHOD_4 ( VAR_1 , VAR_2 ) ) ; } return null ; } 
public void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = METHOD_3 ( ) . METHOD_4 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_1 ) { if ( cluster . METHOD_5 ( ) ) { try { METHOD_6 ( cluster ) ; } catch ( java.lang.Exception e ) { log . METHOD_7 ( STRING_2 , cluster . METHOD_8 ( ) , e ) ; } } } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { if ( TYPE_2 . equals ( VAR_1 ) ) { VAR_3 . error ( VAR_2 ) ; } else if ( TYPE_3 . equals ( VAR_1 ) ) { VAR_3 . METHOD_2 ( VAR_2 ) ; } else if ( TYPE_4 . equals ( VAR_1 ) ) { VAR_3 . METHOD_3 ( VAR_2 ) ; } else { VAR_3 . METHOD_4 ( VAR_2 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_4 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; METHOD_7 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 . getId ( ) ) ; dao . METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = dao . get ( VAR_2 . getId ( ) ) ; TYPE_2 . METHOD_3 ( TYPE_3 . equals ( VAR_1 . METHOD_4 ( ) , VAR_3 . METHOD_4 ( ) ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 context = METHOD_2 ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { for ( TYPE_3 map : METHOD_3 ( domain ) ) { context . METHOD_4 ( map , map . getStatus ( ) ) ; METHOD_5 ( map , status ) ; } } METHOD_2 ( ) . METHOD_6 ( ) ; return null ; } 
private void METHOD_1 ( java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.VM > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.VM VAR_2 : VAR_1 . METHOD_2 ( ) ) { if ( ! ( VAR_3 . METHOD_3 ( VAR_2 . getId ( ) ) ) ) { VAR_4 . add ( new TYPE_1 < org.ovirt.engine.core.common.businessentities.VM , TYPE_2 > ( VAR_2 , null ) ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . setId ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( VAR_2 ) ; final TYPE_2 VAR_3 = org.mockito.Mockito . METHOD_4 ( VAR_4 class ) ; TYPE_3 command = org.mockito.Mockito . METHOD_5 ( new TYPE_3 ( params , null ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( command . validate ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.common.businessentities.VM vm , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = vm . METHOD_2 ( ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; TYPE_2 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_4 , new TYPE_3 ( VAR_1 , VAR_3 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . METHOD_3 ( from . METHOD_4 ( ) ) ; } if ( from . METHOD_5 ( ) ) { to . METHOD_6 ( from . getValue ( ) ) ; } return to ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( 1 , 0 , true ) ; VAR_1 . METHOD_5 ( ) ; try { resource . get ( ) ; TYPE_1 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_7 ( VAR_2 ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 quota ) { boolean VAR_1 = false ; if ( quota instanceof TYPE_3 ) { VAR_1 = METHOD_2 ( ( ( TYPE_3 ) ( quota ) ) ) ; } else if ( quota instanceof TYPE_4 ) { VAR_1 = METHOD_2 ( ( ( TYPE_4 ) ( quota ) ) ) ; } if ( VAR_1 ) { return TYPE_5 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; } return null ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.util.List < java.lang.String > VAR_3 ) { TYPE_1 . METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = TYPE_3 . getInstance ( ) ; TYPE_4 VAR_5 = VAR_4 . METHOD_3 ( VAR_1 ) ; TYPE_4 VAR_6 = VAR_4 . METHOD_3 ( VAR_2 ) ; for ( java.lang.String VAR_7 : VAR_3 ) { VAR_5 . METHOD_4 ( VAR_7 ) ; VAR_6 . METHOD_5 ( VAR_7 ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( ) . setEntity ( VAR_2 . METHOD_3 ( ) ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } final TYPE_1 validator = new TYPE_1 ( METHOD_2 ( ) ) ; return ( ( validate ( validator . METHOD_3 ( ) ) ) && ( validate ( validator . METHOD_4 ( ) ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 value , TYPE_2 widget , boolean VAR_1 ) { VAR_2 . METHOD_2 ( ( ( ! VAR_1 ) && ( value . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ; VAR_3 . METHOD_2 ( ( ( ! VAR_1 ) && ( value . METHOD_5 ( ) . METHOD_4 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( cluster . METHOD_2 ( ) ) . thenReturn ( true ) ; validator = org.mockito.Mockito . METHOD_3 ( new TYPE_1 ( VAR_1 , VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ; } } ; TYPE_1 params = new TYPE_1 ( VAR_1 ) ; params . METHOD_2 ( vmId ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , params , aQuery ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new TYPE_3 < TYPE_4 > ( ) { public TYPE_4 METHOD_3 ( ) { METHOD_4 ( ) . METHOD_5 ( getVm ( ) . METHOD_6 ( ) , getVm ( ) . METHOD_7 ( ) ) ; METHOD_8 ( getVm ( ) . METHOD_6 ( ) ) ; METHOD_4 ( ) . METHOD_9 ( ) ; return null ; } } ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 event = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( TYPE_2 . getParameters ( ) . getId ( ) ) ; if ( event == null ) { return METHOD_3 ( VAR_1 ) ; } if ( TYPE_3 . METHOD_4 ( event . METHOD_5 ( ) ) ) { return METHOD_3 ( VAR_2 ) ; } if ( ( event . METHOD_6 ( ) ) == ( VAR_3 ) ) { return METHOD_3 ( VAR_4 ) ; } return true ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) { TYPE_1 pool = VAR_1 . get ( 0 ) ; TYPE_3 . METHOD_2 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } } 
void METHOD_1 ( TYPE_1 constants ) { this . VAR_1 = new TYPE_2 < java.lang.Integer > ( constants ) ; this . VAR_2 = new TYPE_2 < java.lang.Integer > ( constants ) ; this . VAR_3 = new TYPE_2 < java.lang.Integer > ( constants ) ; this . VAR_4 = new TYPE_2 < TYPE_3 > ( constants ) ; this . VAR_5 = new TYPE_2 < TYPE_3 > ( constants ) ; this . VAR_6 = new TYPE_2 < TYPE_3 > ( constants ) ; this . VAR_7 = new TYPE_2 < TYPE_4 > ( constants ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } VAR_1 = METHOD_2 ( ) . get ( METHOD_3 ( ) ) ; return ( ( validate ( new TYPE_1 ( VAR_1 ) . METHOD_4 ( ) ) ) && ( validate ( new TYPE_1 ( METHOD_5 ( ) ) . METHOD_6 ( ) ) ) ) && ( validate ( TYPE_2 . METHOD_7 ( VAR_1 , METHOD_5 ( ) ) ) ) ; } 
private org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.DiskImage disk = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( VAR_2 ) ; disk . METHOD_4 ( true ) ; disk . METHOD_5 ( vmId ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_1 ) ) . thenReturn ( disk ) ; return disk ; } 
protected void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( model . METHOD_2 ( ) ) ) { METHOD_3 ( model ) ; METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 . METHOD_6 ( model . getModel ( ) , model . METHOD_7 ( ) ) ; TYPE_1 . METHOD_8 ( METHOD_9 ( ) , model . getModel ( ) ) ; } } 
private TYPE_1 < TYPE_2 > METHOD_1 ( final int VAR_1 , final int VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( vm ) ; TYPE_1 < TYPE_2 > cmd = METHOD_4 ( vm , VAR_3 ) ; TYPE_3 . METHOD_5 ( cmd ) ; return cmd ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { if ( returnValue != null ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; METHOD_1 ( ) . METHOD_2 ( VAR_1 ) ; METHOD_1 ( ) . METHOD_3 ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; METHOD_4 ( ) ; } METHOD_5 ( ) ; } 
public static org.ovirt.engine.core.common.businessentities.VDSGroup map ( TYPE_1 pool , org.ovirt.engine.core.common.businessentities.VDSGroup template ) { org.ovirt.engine.core.common.businessentities.VDSGroup entity = ( template != null ) ? template : new org.ovirt.engine.core.common.businessentities.VDSGroup ( ) ; if ( ( pool . METHOD_1 ( ) ) != null ) { entity . METHOD_2 ( pool . METHOD_1 ( ) ) ; } return entity ; } 
private void METHOD_1 ( TYPE_1 . EngineMessage VAR_1 , TYPE_2 < java.lang.String > VAR_2 ) { TYPE_3 . ValidationResult VAR_3 = ( VAR_2 . isEmpty ( ) ) ? VAR_4 : new TYPE_3 . ValidationResult ( VAR_1 , VAR_2 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_2 ( TYPE_4 . any ( ) ) ) . thenReturn ( VAR_3 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } } ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new TYPE_2 < TYPE_1 > ( ) ; for ( java.lang.Object item : VAR_2 ) { TYPE_3 VAR_3 = ( ( TYPE_3 ) ( item ) ) ; if ( ( ! ( VAR_3 . METHOD_2 ( ) ) ) && ( VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) { VAR_1 . add ( VAR_3 . METHOD_3 ( ) ) ; } } return VAR_1 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { org.ovirt.engine.core.common.businessentities . Network network = METHOD_2 ( model ) ; model . METHOD_3 ( ) . setId ( network . getId ( ) . toString ( ) ) ; model . METHOD_3 ( ) . METHOD_4 ( null ) ; return model ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 response ) throws TYPE_3 , TYPE_4 { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( runQuery ( VAR_1 , response , VAR_2 ) ) { response . METHOD_3 ( VAR_4 ) ; VAR_5 . METHOD_4 ( STRING_1 , VAR_2 ) ; } else { response . METHOD_3 ( VAR_6 ) ; VAR_5 . METHOD_4 ( STRING_2 , VAR_2 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 dao = TYPE_2 . METHOD_2 ( ) ; TYPE_3 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_3 ( ) ; TYPE_3 VAR_2 = dao . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ; if ( VAR_2 == null ) { dao . METHOD_7 ( VAR_1 ) ; } else { dao . METHOD_8 ( VAR_2 ) ; } METHOD_9 ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_10 ( true ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = new java.util.ArrayList < > ( ) ; for ( java.lang.String VAR_3 : VAR_1 ) { try { if ( ! ( VAR_2 . METHOD_2 ( VAR_3 ) ) ) { vms . add ( VAR_2 . METHOD_3 ( VAR_3 ) ) ; } } catch ( TYPE_2 VAR_4 ) { METHOD_4 ( VAR_4 . getName ( ) , VAR_4 . METHOD_5 ( ) ) ; } } return vms ; } 
public TYPE_1 METHOD_1 ( TYPE_2 parameters ) { switch ( parameters . METHOD_2 ( ) ) { case VAR_1 : case VAR_2 : case VAR_3 : TYPE_3 < ? > command = TYPE_4 . METHOD_3 ( parameters . METHOD_2 ( ) , parameters ) ; return command . METHOD_4 ( ) ; default : return METHOD_5 ( VAR_4 ) ; } } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { TYPE_1 VAR_1 = null ; try { VAR_1 = new TYPE_1 ( vds . METHOD_2 ( ) , STRING_1 , true ) ; } catch ( TYPE_2 e ) { VAR_2 . METHOD_3 ( STRING_2 , vds . getId ( ) , vds . METHOD_4 ( ) , vds . METHOD_2 ( ) , TYPE_3 . METHOD_5 ( e ) ) ; } return VAR_1 ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; cluster = new TYPE_2 ( ) ; cluster . METHOD_3 ( STRING_1 ) ; cluster . METHOD_4 ( ) . add ( VAR_3 ) ; cluster . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_3 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( cluster ) ; return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_2 ( STRING_2 ) ) ; TYPE_3 VAR_3 = new TYPE_3 ( ) ; TYPE_3 VAR_4 = new TYPE_3 ( ) ; client . METHOD_3 ( STRING_3 , VAR_2 , VAR_3 , VAR_4 ) ; TYPE_4 . assertEquals ( VAR_1 , new java.lang.String ( VAR_3 . METHOD_4 ( ) , STRING_2 ) ) ; TYPE_4 . assertEquals ( 0 , VAR_4 . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( ) ) . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_1 , org.mockito.Mockito . METHOD_5 ( ) ) . setId ( TYPE_2 . any ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) { public TYPE_3 . Disk METHOD_2 ( org.ovirt.engine.core.compat.Guid VAR_2 ) throws TYPE_4 { return VAR_3 . METHOD_2 ( VAR_2 ) ; } } ; TYPE_5 VAR_4 = new TYPE_5 ( VAR_1 , METHOD_3 ( id ) ) ; return inject ( new TYPE_6 < TYPE_3 . Disk , TYPE_3 . Disk > ( VAR_5 , VAR_2 , VAR_4 ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; java.util.List < TYPE_1 > VAR_3 = METHOD_2 ( ) ; METHOD_3 ( VAR_4 , VAR_5 . METHOD_4 ( ) , new java.lang.String [ ] { VAR_6 } , new java.lang.Object [ ] { VAR_7 [ 1 ] } , VAR_3 , VAR_2 ) ; VAR_8 . METHOD_5 ( ) ; } 
private boolean METHOD_1 ( ) { TYPE_1 < TYPE_2 < TYPE_3 > > VAR_1 = VAR_2 . validate ( getParameters ( ) ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { returnValue . METHOD_2 ( VAR_1 . toString ( ) ) ; return false ; } return true ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_1 , TYPE_3 > VAR_2 ) { new TYPE_4 ( VAR_2 , new TYPE_5 ( ) , new TYPE_6 ( ) , new TYPE_7 ( new TYPE_8 ( ) , new TYPE_9 ( new TYPE_10 ( ) , new TYPE_11 ( ) . METHOD_2 ( ) ) . METHOD_2 ( ) ) ) . METHOD_3 ( VAR_1 , getModel ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private boolean METHOD_1 ( ) { if ( ( disk . METHOD_2 ( ) ) == ( VAR_1 . VM ) ) { for ( org.ovirt.engine.core.common.businessentities.VM vm : METHOD_3 ( ) ) { if ( ( vm . METHOD_4 ( ) ) != ( VAR_2 ) ) { TYPE_1 VAR_3 = METHOD_5 ( ) . get ( new TYPE_2 ( disk . getId ( ) , vm . getId ( ) ) ) ; if ( VAR_3 . METHOD_6 ( ) ) { addCanDoActionMessage ( VAR_4 ) ; return false ; } } } } return true ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) ) ) ; METHOD_3 ( cmd , VAR_1 ) ; METHOD_4 ( false ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; METHOD_4 ( true ) ; METHOD_6 ( VAR_2 ) ; TYPE_3 . METHOD_5 ( cmd . validate ( ) ) ; } 
public final boolean METHOD_1 ( java.lang.Object source , java.lang.Object VAR_1 , TYPE_1 < java.lang.String > VAR_2 ) { java.util.ArrayList < java.lang.String > VAR_3 = TYPE_2 . METHOD_2 ( source , VAR_1 ) ; for ( java.lang.String VAR_4 : VAR_2 ) { if ( VAR_3 . METHOD_3 ( VAR_4 ) ) { return true ; } } return false ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 [ 1 ] = new java.util.HashMap < java.lang.String , java.lang.String > ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( METHOD_5 ( ) , VAR_1 , VAR_2 ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 command , TYPE_3 VAR_2 , TYPE_4 . VdcActionType VAR_3 ) { TYPE_5 VAR_4 = new TYPE_5 ( VAR_2 , METHOD_2 ( VAR_1 , command , VAR_2 , VAR_3 ) ) ; VAR_4 . METHOD_3 ( command . getParameters ( ) . METHOD_4 ( ) ) ; return METHOD_5 ( command . METHOD_6 ( ) , VAR_4 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final java.lang.String VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_4 ) ; } 
public void METHOD_1 ( ) { for ( TYPE_1 type : TYPE_1 . METHOD_2 ( ) ) { TYPE_2 model = TYPE_3 . map ( type , null ) ; TYPE_4 . METHOD_3 ( model ) ; TYPE_4 . assertEquals ( model . name ( ) . METHOD_4 ( ) , type . name ( ) . METHOD_4 ( ) ) ; } } 
protected TYPE_1 METHOD_1 ( ) { if ( ( ( VAR_1 ) == null ) && ( ! ( METHOD_2 ( ) . equals ( VAR_2 ) ) ) ) { TYPE_2 VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( METHOD_2 ( ) ) ; TYPE_3 VAR_4 = TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_3 . METHOD_5 ( ) ) ; VAR_1 = VAR_4 . METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new TYPE_1 < > ( ) ; VAR_2 . METHOD_2 ( VAR_3 , INT_1 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( ) ) . thenReturn ( new TYPE_2 ( new TYPE_3 ( ) ) ) ; boolean result = validator . METHOD_4 ( VAR_1 ) ; TYPE_4 . assertEquals ( 1 , VAR_1 . size ( ) ) ; TYPE_4 . assertEquals ( STRING_1 , VAR_1 . get ( 0 ) ) ; TYPE_4 . METHOD_5 ( result ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . VdcActionType VAR_2 , TYPE_3 VAR_3 ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( VAR_2 , VAR_4 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 0 ] , VAR_3 } ) ) ; TYPE_4 action = new TYPE_4 ( ) ; action . METHOD_4 ( VAR_1 . value ( ) ) ; METHOD_5 ( resource . METHOD_6 ( action ) ) ; } 
private static java.lang.String METHOD_1 ( java.lang.String source , TYPE_1 VAR_1 ) throws TYPE_2 , TYPE_3 { java.lang.String result = null ; byte [ ] VAR_2 = source . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; TYPE_4 VAR_3 = TYPE_4 . getInstance ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 , VAR_1 . METHOD_5 ( ) ) ; byte [ ] VAR_6 = VAR_3 . METHOD_6 ( VAR_2 ) ; result = TYPE_5 . METHOD_7 ( VAR_6 ) ; return result ; } 
private boolean METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . DiskImage > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? VAR_2 . Linq < TYPE_1 . DiskImage > METHOD_3 ( METHOD_2 ( ) ) : new java.util.ArrayList < TYPE_1 . DiskImage > ( ) ; for ( TYPE_1 . DiskImage disk : VAR_1 ) { if ( ( ( disk . METHOD_4 ( ) ) != ( VAR_3 ) ) || ( ( disk . METHOD_5 ( ) ) != ( VAR_4 ) ) ) { return false ; } } return true ; } 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( TYPE_2 VAR_1 , boolean VAR_2 ) { java.util.ArrayList < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( TYPE_3 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) ; list . METHOD_4 ( VAR_3 ) ; if ( TYPE_4 . METHOD_5 ( VAR_1 ) ) { list . METHOD_4 ( VAR_4 ) ; if ( ( VAR_1 == ( VAR_5 ) ) && VAR_2 ) { list . add ( VAR_3 ) ; } } return list ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) ; java.lang.String VAR_3 = ( ( VAR_2 != null ) && ( ! ( getParameters ( ) . METHOD_3 ( ) ) ) ) ? VAR_2 . METHOD_4 ( ) : VAR_4 ; return VAR_5 . METHOD_1 ( VAR_1 , getVm ( ) , VAR_3 , TYPE_2 . METHOD_5 ( ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.Object returnValue ) { if ( returnValue == null ) { return new java.util.ArrayList < > ( ) ; } java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_2 . METHOD_3 ( ( ( TYPE_3 < TYPE_1 > ) ( returnValue ) ) , VAR_2 ) ) ; TYPE_4 . METHOD_4 ( VAR_1 , new TYPE_5 ( ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ; METHOD_3 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ; METHOD_4 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ; METHOD_3 ( ) . setEntity ( ( VAR_1 ? STRING_1 : null ) ) ; METHOD_4 ( ) . setEntity ( ( VAR_1 ? STRING_1 : null ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( false ) ; TYPE_1 . METHOD_5 ( command . METHOD_6 ( ) ) ; TYPE_1 . METHOD_7 ( command . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_2 . toString ( ) ) ) ; } 
public java.lang.String getValue ( TYPE_1 object ) { if ( ( object . METHOD_1 ( ) ) == ( VAR_1 ) ) { return TYPE_2 . METHOD_2 ( object . METHOD_3 ( ) ) ; } else { return TYPE_2 . METHOD_2 ( object . METHOD_4 ( ) ) ; } } 
protected TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_3 < ? extends TYPE_2 . VdcActionParametersBase > VAR_2 , java.lang.String [ ] VAR_3 , java.lang.Object [ ] VAR_4 , java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_5 , java.util.ArrayList < TYPE_4 > VAR_6 ) { java.lang.String VAR_7 = ( ( ( STRING_1 + ( VAR_8 ) ) + STRING_2 ) + ( VAR_9 ) ) + STRING_3 ; return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , true , true , null , VAR_5 , VAR_6 , VAR_7 , true ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { return ( ( VAR_1 . METHOD_2 ( ) . equals ( vm . METHOD_3 ( ) ) ) && ( TYPE_1 . METHOD_4 ( VAR_1 , vm ) ) ) && ( TYPE_1 . METHOD_5 ( VAR_1 , vm ) ) ; } 
private boolean METHOD_1 ( ) { return TYPE_1 . equals ( ( ( ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) && ( VAR_1 . METHOD_3 ( ) ) ) && ( ( TYPE_2 . getVm ( ) . METHOD_4 ( ) ) != ( VAR_2 ) ) ) ) ; } 
private static java.util.List < java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 ) { java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface i : VAR_2 ) { if ( VAR_1 . getName ( ) . equals ( i . METHOD_2 ( ) ) ) { VAR_3 . add ( i . getName ( ) ) ; } } return VAR_3 ; } 
public static TYPE_1 map ( TYPE_2 entity , TYPE_1 template ) { if ( template == null ) { template = new TYPE_1 ( ) ; } TYPE_3 VAR_1 = TYPE_4 . map ( entity . METHOD_1 ( ) , null ) ; template . METHOD_2 ( ( VAR_1 == null ? STRING_1 : VAR_1 . value ( ) ) ) ; template . METHOD_3 ( entity . METHOD_4 ( ) ) ; return template ; } 
public static synchronized java.lang.String [ ] METHOD_1 ( TYPE_1 . StorageDomain storageDomain ) { return TYPE_2 . METHOD_2 ( storageDomain ) ? new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 , STRING_5 } : TYPE_2 . METHOD_3 ( storageDomain ) ? new java.lang.String [ ] { STRING_6 , STRING_4 , STRING_5 } : TYPE_2 . METHOD_4 ( storageDomain ) ? new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_6 , STRING_3 , STRING_4 } : new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_6 , STRING_5 } ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , false ) ; VAR_2 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; assertEquals ( VAR_3 . METHOD_7 ( ) . getStatus ( ) , INT_1 ) ; } } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . getParameters ( ) . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( ) . METHOD_7 ( METHOD_8 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Disk model = TYPE_2 . getModel ( 0 ) ; model . METHOD_2 ( null ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_1 . METHOD_5 ( ) ; try { VAR_2 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_7 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
private void METHOD_1 ( ) { if ( METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_1 ) ) { VAR_2 . METHOD_5 ( STRING_1 , TYPE_1 . METHOD_4 ( ) ) ; METHOD_6 ( VAR_3 , new TYPE_2 ( TYPE_1 . METHOD_4 ( ) ) , TYPE_3 . METHOD_7 ( TYPE_1 . METHOD_8 ( ) , TYPE_1 . METHOD_9 ( ) ) ) ; } } 
public TYPE_1 getStoragePoolId ( ) { if ( ( VAR_1 ) == null ) { if ( ( VAR_2 ) != null ) { VAR_1 = VAR_2 . getId ( ) ; } else if ( ( METHOD_1 ( ) ) != null ) { VAR_1 = METHOD_1 ( ) . METHOD_2 ( ) ; } } return VAR_1 ; } 
protected void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage VAR_1 , TYPE_1 . VdcActionParametersBase parameters , TYPE_2 result ) { TYPE_3 . getParameters ( ) . METHOD_2 ( ) . add ( parameters ) ; if ( ! ( result . getSucceeded ( ) ) ) { throw new TYPE_4 ( VAR_2 ) ; } else { TYPE_5 . METHOD_3 ( VAR_1 ) ; TYPE_3 . METHOD_4 ( ) . METHOD_5 ( result . METHOD_6 ( ) ) ; VAR_3 . add ( VAR_1 ) ; } } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 ) { java.lang.String VAR_2 = VAR_1 . METHOD_2 ( ) ; java.lang.String [ ] VAR_3 = ( ( vds . METHOD_3 ( ) ) != null ) ? vds . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) : new java.lang.String [ ] { STRING_2 } ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { return METHOD_5 ( vds , VAR_3 ) ; } else { return TYPE_1 . METHOD_6 ( VAR_3 ) . METHOD_7 ( VAR_2 ) ; } } 
protected TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_2 . METHOD_4 ( VAR_1 ) ; VAR_2 . METHOD_5 ( VAR_5 ) ; VAR_2 . setId ( VAR_6 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , VAR_3 . Collections < TYPE_3 > METHOD_3 ( ) ) ) ) ; METHOD_4 ( cmd , VAR_4 ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { disk . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_1 = STRING_2 ; disk . METHOD_3 ( VAR_1 ) ; METHOD_4 ( disk , TYPE_2 . METHOD_5 ( TYPE_2 . METHOD_6 ( STRING_1 ) ) , TYPE_2 . METHOD_7 ( TYPE_2 . METHOD_6 ( VAR_1 . METHOD_8 ( 0 , INT_1 ) ) ) , TYPE_2 . METHOD_9 ( INT_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = VAR_3 ; if ( VAR_4 . METHOD_2 ( VAR_2 ) ) { METHOD_3 ( source , VAR_5 , false , VAR_2 ) ; } else if ( VAR_6 . METHOD_2 ( VAR_2 ) ) { METHOD_3 ( source , VAR_7 , true , VAR_2 ) ; } } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , true , true , true , null ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( VAR_3 class ) . to ( VAR_4 class ) ; METHOD_2 ( VAR_5 class ) . to ( VAR_6 class ) ; METHOD_2 ( VAR_7 class ) . to ( VAR_8 class ) ; METHOD_2 ( VAR_9 class ) . to ( VAR_10 class ) ; METHOD_2 ( VAR_11 class ) . to ( VAR_12 class ) ; } 
public void log ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 , java.lang.String VAR_3 ) { if ( ! ( VAR_2 . METHOD_1 ( ) ) ) { return ; } TYPE_3 VAR_4 = new TYPE_3 ( VAR_1 , VAR_2 ) ; VAR_4 . METHOD_2 ( ) ; if ( VAR_4 . METHOD_3 ( ) ) { METHOD_4 ( VAR_1 , VAR_2 , VAR_3 ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , METHOD_3 ( ) . METHOD_4 ( ) ) ; java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > getValue ( VAR_4 ) ; if ( VAR_2 > 0 ) { TYPE_1 . getInstance ( ) . METHOD_5 ( this , STRING_2 , new TYPE_2 [ ] { } , new java.lang.Object [ ] { } , VAR_2 , VAR_2 , VAR_5 ) ; VAR_1 . METHOD_2 ( STRING_3 , METHOD_3 ( ) . METHOD_4 ( ) ) ; } } 
private boolean METHOD_1 ( TYPE_1 storageDomain ) { if ( storageDomain == null ) { return false ; } boolean VAR_1 = ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_2 ) ) || ( ( storageDomain . METHOD_2 ( ) ) == ( VAR_3 ) ) ; boolean VAR_4 = storageDomain . METHOD_3 ( ) . METHOD_4 ( ) ; return VAR_4 ? true : VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( ) . put ( VAR_2 . getId ( ) , VAR_2 ) ; VAR_1 . METHOD_3 ( ) . add ( VAR_2 ) ; VAR_3 . METHOD_4 ( VAR_1 , VAR_4 ) ; for ( TYPE_1 . Disk diskImage : VAR_1 . METHOD_2 ( ) . METHOD_5 ( ) ) { TYPE_2 . assertEquals ( ( ( TYPE_1 . DiskImage ) ( diskImage ) ) . METHOD_6 ( ) , VAR_5 ) ; } } 
private static java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_1 < ? extends org.ovirt.engine.core.common.businessentities . Disk > VAR_1 ) { if ( VAR_1 == null ) { return TYPE_2 . METHOD_2 ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( vm . getId ( ) ) , true , false ) ; } return TYPE_2 . METHOD_2 ( VAR_1 , true , false ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( 2 ) ; METHOD_5 ( VAR_2 , VAR_1 ) ; VAR_3 . METHOD_6 ( ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_8 ( VAR_4 ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( VAR_1 != null ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; METHOD_2 ( ) . METHOD_4 ( METHOD_2 ( ) . getId ( TYPE_1 . METHOD_5 ( ) , VAR_2 ) , VAR_1 ) ; } TYPE_1 . METHOD_6 ( false ) ; } 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( org.mockito.Mockito . METHOD_4 ( VAR_2 ) , TYPE_2 . any ( VAR_3 class ) ) ) . thenReturn ( returnValue ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_6 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( new java.util.ArrayList < > ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( true ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . AuditLogType VAR_2 , java.lang.String VAR_3 ) { TYPE_2 . AuditLogSeverity VAR_4 = VAR_2 . METHOD_2 ( ) ; TYPE_3 VAR_5 = METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; if ( VAR_5 == null ) { VAR_6 . METHOD_4 ( STRING_1 ) ; } else { METHOD_5 ( VAR_1 , VAR_5 ) ; TYPE_4 . METHOD_6 ( ) . METHOD_7 ( ) . METHOD_8 ( VAR_5 ) ; METHOD_9 ( VAR_4 , METHOD_10 ( VAR_3 , VAR_5 ) ) ; } } 
public void METHOD_1 ( ) { cmd . getParameters ( ) . METHOD_2 ( VAR_1 ) ; cmd . getParameters ( ) . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; cmd . getParameters ( ) . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; cmd . METHOD_3 ( cmd . getParameters ( ) . METHOD_6 ( ) ) ; cmd . METHOD_7 ( cmd . getParameters ( ) . METHOD_8 ( ) ) ; METHOD_9 ( cmd ) ; TYPE_1 . METHOD_10 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( result ) ) ; if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ; } else { METHOD_3 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; } METHOD_4 ( ) ; } 
private void METHOD_1 ( ) { final org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { final TYPE_1 VAR_3 = ( ( TYPE_1 ) ( model ) ) ; VAR_3 . METHOD_3 ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( result ) ) ) ; METHOD_4 ( ) ; } } ; TYPE_2 . METHOD_5 ( VAR_1 ) ; } 
private boolean METHOD_1 ( ) { if ( ( VAR_1 ) == ( VAR_2 . METHOD_2 ( ) ) ) { if ( ! ( ( ( org.ovirt.engine.core.common.businessentities.DiskImage ) ( VAR_2 ) ) . METHOD_3 ( ) . equals ( TYPE_1 . METHOD_3 ( ) ) ) ) { return true ; } } return false ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( ( ( VAR_2 ) + 1 ) ) ; vm . METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; TYPE_1 . METHOD_6 ( VAR_4 . METHOD_7 ( vm ) , false , VAR_5 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 host = new TYPE_3 ( ) ; host . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( host ) ; TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_3 ( map ( VAR_1 , null ) ) ; return params ; } 
private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( ( ! ( TYPE_3 . getReturnValue ( ) . METHOD_5 ( ) . isEmpty ( ) ) ) ) ; return METHOD_6 ( VAR_3 , TYPE_3 . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } } ) ) ; } 
protected void METHOD_1 ( ) { final java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . getId ( ) , VAR_2 ) ; java.util.List < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( VAR_1 . size ( ) ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { result . add ( VAR_3 . METHOD_4 ( ) ) ; } TYPE_2 . METHOD_5 ( ) . METHOD_6 ( result ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( VAR_3 ) ; VAR_4 = dao . get ( VAR_5 ) ; VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_4 ( STRING_1 ) ; VAR_6 . METHOD_5 ( STRING_2 ) ; VAR_6 . METHOD_6 ( VAR_7 ) ; VAR_8 = dao . METHOD_7 ( new org.ovirt.engine.core.compat.Guid ( STRING_3 ) ) ; VAR_9 = new TYPE_2 ( VAR_10 , VAR_2 . METHOD_8 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 rs , TYPE_3 < ? > entity ) throws TYPE_4 { switch ( entity . METHOD_2 ( ) ) { case VAR_1 : TYPE_5 VAR_2 = new TYPE_5 ( ) ; VAR_2 . METHOD_3 ( rs.getString ( STRING_1 ) ) ; VAR_2 . METHOD_4 ( TYPE_6 . valueOf ( rs.getString ( STRING_2 ) ) ) ; return VAR_2 ; default : return null ; } } 
public TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 < TYPE_3 . DiskImage > VAR_1 , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.compat.Guid > VAR_2 ) { if ( ( ! ( params . METHOD_2 ( ) ) ) && ( ! ( params . METHOD_3 ( ) ) ) ) { return new TYPE_4 ( VAR_1 ) . METHOD_4 ( VAR_2 ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , METHOD_5 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { TYPE_1 . toString ( ) } , getEntity ( 0 ) ) ; VAR_3 . METHOD_6 ( ) ; TYPE_2 model = resource . get ( ) ; assertEquals ( VAR_4 [ 0 ] . toString ( ) , model . getId ( ) ) ; METHOD_7 ( model ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . EngineMessage VAR_1 = VAR_2 ; TYPE_2 . ValidationResult VAR_3 = new TYPE_2 . ValidationResult ( VAR_1 , TYPE_3 . METHOD_2 ( VAR_1 , STRING_1 ) , TYPE_3 . METHOD_3 ( VAR_4 , STRING_2 ) ) ; TYPE_4 VAR_5 = METHOD_4 ( ) ; VAR_5 . METHOD_5 ( TYPE_5 . METHOD_6 ( STRING_1 , STRING_3 ) ) ; METHOD_7 ( VAR_5 , VAR_6 , VAR_6 , VAR_3 , VAR_3 ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > map = null ; if ( ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) != null ) && ( TYPE_2 . METHOD_3 ( METHOD_4 ( ) . METHOD_5 ( ) ) ) ) { map = new java.util.HashMap < > ( ) ; if ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_6 ( ) ) { map . put ( VAR_1 , METHOD_7 ( ) ) ; } } return map ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > source = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; TYPE_2 . assertEquals ( STRING_2 , TYPE_3 . METHOD_3 ( source , STRING_2 , STRING_5 ) ) ; TYPE_2 . assertEquals ( STRING_2 , TYPE_3 . METHOD_3 ( source , STRING_5 , STRING_2 ) ) ; } 
public void METHOD_1 ( ) { host . METHOD_2 ( VAR_1 ) ; final TYPE_1 VAR_2 = org.mockito.Mockito . METHOD_3 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_5 ) , TYPE_2 . any ( VAR_6 class ) , TYPE_2 . any ( VAR_7 class ) ) ) . thenReturn ( METHOD_7 ( false ) ) ; METHOD_8 ( VAR_2 , VAR_8 ) ; } 
private void METHOD_1 ( TYPE_1 < java.lang.String > VAR_1 , java.util.List < java.lang.Object > VAR_2 ) { TYPE_2 < java.lang.String > VAR_3 = VAR_1 . METHOD_2 ( ) ; while ( VAR_3 . METHOD_3 ( ) ) { java.lang.String VAR_4 = VAR_3 . METHOD_4 ( ) ; for ( int i = VAR_5 ; i < ( VAR_2 . size ( ) ) ; i ++ ) { TYPE_3 . METHOD_5 ( VAR_4 . METHOD_6 ( METHOD_7 ( i ) ) ) ; } } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( null ) ; final org.ovirt.engine.core.compat.Guid VAR_2 = null ; VAR_1 . METHOD_3 ( vds ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_3 = VAR_1 . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( VAR_3 ) ; } 
public org.ovirt.engine.core.common.businessentities.StoragePool METHOD_1 ( ) { if ( ( ( ( VAR_1 ) == null ) && ( ( getStoragePoolId ( ) ) != null ) ) && ( ! ( TYPE_1 . equals ( getStoragePoolId ( ) ) ) ) ) { VAR_1 = METHOD_2 ( ) . get ( getStoragePoolId ( ) . getValue ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( args instanceof TYPE_3 ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_3 ) ) { ( ( TYPE_4 . ViewDef ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ( ( TYPE_5 ) ( model . METHOD_4 ( ) . getSelectedItem ( ) ) ) . METHOD_5 ( ) ) ; } } } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 . RunVmCommand < TYPE_2 > VAR_1 ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( command . getParameters ( ) . METHOD_4 ( ) ) ) . thenReturn ( vm ) ; return vm ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( java.util.List < TYPE_1 . DiskImage > VAR_1 ) { if ( ( VAR_2 . equals ( VAR_3 ) ) && ( ( TYPE_2 . getVm ( ) ) != null ) ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_3 . getInstance ( ) . METHOD_2 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , METHOD_3 ( ) ) ; if ( storageDomain != null ) { VAR_2 = storageDomain . getId ( ) ; } } return VAR_2 ; } 
public TYPE_1 getValue ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 . METHOD_2 ( ) ) ; switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; case VAR_4 : case VAR_5 : case VAR_6 : return METHOD_3 ( ) . METHOD_6 ( ) ; case VAR_7 : return METHOD_3 ( ) . METHOD_7 ( ) ; default : break ; } return null ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( STRING_2 , VAR_1 ) ; METHOD_3 ( nic ) ; nic . METHOD_4 ( null ) ; TYPE_1 VAR_2 = METHOD_5 ( METHOD_6 ( nic ) ) ; METHOD_7 ( VAR_2 ) ; METHOD_8 ( VAR_2 ) ; METHOD_9 ( VAR_2 ) ; METHOD_10 ( VAR_2 , VAR_1 ) ; METHOD_11 ( VAR_2 ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( final org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_2 VAR_1 , boolean VAR_2 ) { VAR_1 . append ( STRING_1 ) . append ( vds . METHOD_2 ( ) ) . append ( STRING_2 ) . append ( vds . getId ( ) ) . append ( STRING_2 ) ; for ( TYPE_3 validator : this . VAR_3 ) { TYPE_4 . VdcBllMessages result = validator . validate ( vds , VAR_1 , VAR_2 ) ; if ( result != null ) { return new TYPE_1 . ValidationResult ( result ) ; } } return VAR_4 ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( new TYPE_3 ( TYPE_4 . getParameters ( ) . METHOD_3 ( ) . getId ( ) , TYPE_4 . getParameters ( ) . METHOD_4 ( ) ) , TYPE_4 . getParameters ( ) . METHOD_3 ( ) . METHOD_5 ( ) ) ; TYPE_4 . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { int VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? METHOD_2 ( ) . size ( ) : 0 ; METHOD_3 ( ) . METHOD_4 ( ( VAR_1 == 1 ) ) ; METHOD_5 ( ) . METHOD_4 ( ( VAR_1 > 0 ) ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( true ) ; dao . METHOD_5 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_6 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . getId ( ) , result . getId ( ) ) ; TYPE_2 . assertEquals ( true , result . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( result . METHOD_9 ( ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface ) { if ( VAR_1 . METHOD_2 ( iface . getName ( ) ) ) { METHOD_3 ( VAR_2 , iface . getName ( ) ) ; return false ; } VAR_1 . add ( iface . getName ( ) ) ; return true ; } 
public TYPE_1 METHOD_1 ( TYPE_2 rs , int VAR_1 ) throws TYPE_3 { TYPE_1 entity = new TYPE_1 ( ) ; entity . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( rs.getString ( STRING_1 ) ) ) ; entity . METHOD_4 ( TYPE_4 . METHOD_3 ( rs.getString ( STRING_2 ) ) ) ; entity . METHOD_5 ( TYPE_5 . METHOD_6 ( rs . METHOD_7 ( STRING_3 ) ) ) ; entity . METHOD_8 ( TYPE_6 . METHOD_6 ( rs . METHOD_7 ( STRING_4 ) ) ) ; return entity ; } 
protected void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ( ( TYPE_2 < TYPE_1 > ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) ) ; VAR_2 . add ( 1 , VAR_3 ) ; METHOD_2 ( ) . setItems ( VAR_2 ) ; METHOD_2 ( ) . setSelectedItem ( VAR_3 ) ; } super . METHOD_1 ( VAR_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { if ( ( ( ( vds . METHOD_2 ( ) ) != ( VAR_1 ) ) && ( ( vds . METHOD_2 ( ) ) != ( VAR_2 ) ) ) && ( ( vds . METHOD_2 ( ) ) != ( VAR_3 ) ) ) { METHOD_3 ( VAR_4 , new TYPE_1 ( vds . getId ( ) , VAR_1 ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = METHOD_6 ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_7 ( model ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_9 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_2 ( STRING_1 , null ) ; METHOD_3 ( nic ) ; java.lang.String VAR_1 = STRING_2 ; TYPE_1 VAR_2 = METHOD_4 ( METHOD_5 ( nic , METHOD_6 ( nic . getName ( ) , INT_1 , VAR_1 ) ) ) ; METHOD_7 ( VAR_2 , VAR_3 , VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new TYPE_2 < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : VAR_1 ) { VAR_2 . METHOD_2 ( vds . METHOD_3 ( ) ) ; } org.ovirt.engine.core.common.businessentities.VDS vds = VAR_1 . get ( 0 ) ; vds . METHOD_4 ( VAR_2 ) ; return vds ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; java.lang.String name = VAR_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( name . equals ( VAR_2 . METHOD_6 ( VAR_3 , VAR_4 ) ) ) ; } 
private java.util.List < TYPE_1 . Network > METHOD_1 ( java.lang.String VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = getEntity ( VAR_3 class , VAR_4 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_1 ) ) , null ) . getStoragePoolId ( ) ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_2 ) ; return METHOD_3 ( VAR_5 , params ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getParameters ( ) . getStoragePoolId ( ) , getParameters ( ) . METHOD_2 ( ) ) ; TYPE_2 . VdcQueryReturnValue VAR_2 = TYPE_3 . METHOD_3 ( ) . METHOD_4 ( VAR_3 , VAR_1 ) ; return VAR_2 . getSucceeded ( ) ? VAR_4 < java.util.List < org.ovirt.engine.core.common.businessentities.VM > > getReturnValue ( ) : null ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , boolean VAR_3 ) throws TYPE_2 { TYPE_1 VAR_4 = VAR_1 . METHOD_2 ( ) ; if ( VAR_4 == null ) { throw new TYPE_2 ( ( STRING_1 + VAR_4 ) ) ; } VAR_4 . METHOD_3 ( ) ; try ( TYPE_3 VAR_5 = new TYPE_4 ( VAR_1 ) ) { VAR_5 . METHOD_4 ( VAR_2 . METHOD_5 ( STRING_2 ) ) ; VAR_1 . METHOD_6 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) { if ( ! ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ) ) org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( ) . METHOD_5 ( this ) ; if ( ! ( org.ovirt.engine.ui.frontend.Frontend . METHOD_6 ( ) . METHOD_3 ( ) . METHOD_4 ( this ) ) ) org.ovirt.engine.ui.frontend.Frontend . METHOD_6 ( ) . METHOD_5 ( this ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_4 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . get ( TYPE_2 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . METHOD_6 ( validator . METHOD_7 ( ) , TYPE_4 . METHOD_8 ( VAR_6 ) ) ; } 
public void METHOD_1 ( ) { try { command . METHOD_2 ( ) ; } catch ( TYPE_1 VAR_1 ) { org.mockito.Mockito . METHOD_3 ( VAR_2 ) . METHOD_4 ( org.mockito.Mockito . METHOD_5 ( VAR_3 ) , TYPE_2 . any ( VAR_4 class ) ) ; return ; } TYPE_3 . METHOD_6 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; TYPE_1 tempVar = new TYPE_1 ( VAR_1 ) ; tempVar . METHOD_2 ( TYPE_2 . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( tempVar , aQuery ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( TYPE_2 . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_3 . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) ) ) . thenReturn ( new java.util.ArrayList ( VAR_2 ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 context = METHOD_2 ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { for ( TYPE_3 map : METHOD_3 ( domain ) ) { context . METHOD_4 ( map , map . METHOD_5 ( ) ) ; METHOD_6 ( map , status ) ; } } METHOD_2 ( ) . METHOD_7 ( ) ; return null ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; log . METHOD_3 ( STRING_1 , TYPE_1 . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_1 . METHOD_6 ( ) ; log . error ( STRING_2 , TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( cluster . getStoragePoolId ( ) ) . thenReturn ( org.mockito.Mockito . METHOD_2 ( VAR_1 . Guid class ) ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = org.mockito.Mockito . METHOD_2 ( VAR_3 . StoragePool class ) ; org.mockito.Mockito.when ( VAR_4 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( VAR_2 ) ; validator = new TYPE_2 ( VAR_5 , VAR_4 , cluster , VAR_6 ) ; TYPE_3 . METHOD_3 ( validator . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 model = ( ( TYPE_1 ) ( getWindow ( ) ) ) ; TYPE_2 VAR_1 = ( ( TYPE_2 ) ( model . getSelectedItem ( ) ) ) ; org.ovirt.engine.core.common.businessentities.VDS host = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( model . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; java.util.ArrayList < java.lang.String > VAR_2 = VAR_1 . METHOD_3 ( ) ; if ( VAR_2 . isEmpty ( ) ) { METHOD_4 ( ) ; } else { METHOD_5 ( VAR_2 ) ; } } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; java.lang.String VAR_3 = VAR_1 . getName ( ) ; TYPE_3 . EngineMessage VAR_4 = VAR_5 ; return VAR_6 . METHOD_2 ( VAR_1 . getName ( ) , VAR_2 , VAR_3 , VAR_4 , VAR_7 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { boolean VAR_1 = false ; java.util.ArrayList < TYPE_1 > VAR_2 = ( ( java.util.ArrayList < TYPE_1 > ) ( returnValue ) ) ; for ( TYPE_1 VAR_3 : VAR_2 ) { if ( ( VAR_3 . METHOD_1 ( ) ) == ( VAR_4 ) ) { VAR_1 = true ; break ; } } VAR_5 . METHOD_2 ( VAR_1 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 == ( VAR_3 ) ) { METHOD_3 ( VAR_1 ) ; } else if ( VAR_2 == ( VAR_4 ) ) { METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } else { VAR_5 . error ( STRING_1 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_5 ( ) ) ; } return VAR_2 ; } 
public TYPE_1 list ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 . StorageDomain entity : METHOD_1 ( VAR_2 . StorageDomain class , VAR_3 , new TYPE_3 ( VAR_4 ) ) ) { VAR_1 . METHOD_2 ( ) . add ( METHOD_3 ( map ( entity ) , METHOD_4 ( entity ) ) ) ; } return VAR_1 ; } 
protected boolean METHOD_1 ( ) { boolean result = true ; if ( ( TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . length ( ) ) > ( VAR_1 < java.lang.Integer > METHOD_4 ( VAR_2 ) ) ) { addCanDoActionMessage ( VAR_3 ) ; result = false ; } return result ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm != null ) { VAR_1 . METHOD_2 ( vm ) ; } } } 
public TYPE_1 list ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; for ( TYPE_2 . Version VAR_2 : METHOD_1 ( ) ) { VAR_1 . METHOD_2 ( ) . add ( METHOD_3 ( VAR_2 ) ) ; } VAR_1 . METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( METHOD_7 ( ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { java.lang.Object VAR_1 = model . getModel ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = ( VAR_1 instanceof TYPE_1 ) ? ( ( TYPE_1 ) ( VAR_1 ) ) : null ; if ( VAR_3 . METHOD_3 ( ) . getValue ( ) ) { VAR_2 . METHOD_4 ( VAR_4 ) ; } else { VAR_2 . METHOD_4 ( VAR_5 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_8 ( ) ) . when ( command ) . METHOD_9 ( ) ; TYPE_3 . METHOD_10 ( command ) ; } 
public java.lang.Boolean METHOD_1 ( java.lang.Integer VAR_1 , org.ovirt.engine.core.compat . Version version ) { TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > VAR_2 = new TYPE_1 < java.lang.Integer , org.ovirt.engine.core.compat . Version > ( VAR_1 , version ) ; if ( METHOD_2 ( ) . METHOD_3 ( VAR_2 ) ) { return METHOD_2 ( ) . get ( VAR_2 ) ; } return false ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . getName ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_1 . getId ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . getStoragePoolId ( ) ) . thenReturn ( VAR_5 ) ; VAR_6 = new TYPE_1 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_7 . METHOD_3 ( ) ) . thenReturn ( VAR_8 ) ; TYPE_2 . METHOD_4 ( VAR_7 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } return source ; } } ; TYPE_2 params = new TYPE_2 ( ) ; params . METHOD_2 ( VAR_1 ) ; params . METHOD_3 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , params , aQuery ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_3 ( cluster ) ; TYPE_1 VAR_3 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_4 ( VAR_3 ) ; VAR_4 . METHOD_5 ( VAR_3 ) ; VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; dao . METHOD_7 ( VAR_4 ) ; org.ovirt.engine.core.common.businessentities.network.Network result = dao . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_4 , result ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { VAR_2 . put ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , VAR_1 . METHOD_3 ( ) ) ; VAR_2 . put ( VAR_5 , STRING_1 ) ; VAR_2 . put ( VAR_6 , VAR_7 ) ; VAR_2 . put ( VAR_8 , TYPE_2 . toString ( ) ) ; VAR_2 . put ( VAR_9 , TYPE_3 . toString ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; java.lang.String [ ] VAR_2 = new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 } ; TYPE_2 result = VAR_1 . METHOD_2 ( VAR_2 , STRING_4 ) ; int VAR_3 = result . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_3 , INT_1 ) ; java.lang.String [ ] VAR_4 = result . METHOD_4 ( ) ; for ( java.lang.String VAR_5 : VAR_4 ) { VAR_6 . METHOD_5 ( VAR_5 ) ; } } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( ( ( ( VAR_1 ) != null ) && ( VAR_1 . equals ( VAR_2 ) ) ) && ( ( METHOD_2 ( ) ) != null ) ) { VAR_1 = METHOD_2 ( ) . METHOD_1 ( ) ; } return VAR_1 ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 status ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_2 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , status . getValue ( ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( METHOD_4 ( VAR_4 , VAR_5 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 } , VAR_1 , VAR_2 ) ) ; try { resource . METHOD_5 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_6 ( STRING_2 ) ; } catch ( TYPE_2 VAR_7 ) { METHOD_7 ( VAR_7 , VAR_3 ) ; } } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.util.ArrayList < TYPE_3 > VAR_2 = getModel ( ) . METHOD_2 ( ) ; if ( ( VAR_2 != null ) && ( ! ( VAR_2 . isEmpty ( ) ) ) ) { VAR_3 . METHOD_3 ( VAR_2 . get ( 0 ) , true ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( true , null ) ; TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_8 ( ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_9 ( VAR_2 ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_10 ( VAR_2 ) ; TYPE_1 . assertEquals ( cmd . METHOD_11 ( ) , VAR_3 ) ; } 
public boolean METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ( ( java.lang.Integer ) ( TYPE_2 . getValue ( VAR_3 ) ) ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; if ( ! ( ( VAR_2 . METHOD_5 ( VAR_4 ) ) || ( VAR_2 . equals ( VAR_4 ) ) ) ) { VAR_1 . add ( TYPE_3 . name ( ) ) ; return false ; } else { return true ; } } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 ) { if ( VAR_2 . METHOD_2 ( ) ) { return VAR_3 ; } else if ( VAR_2 . METHOD_3 ( ) ) { switch ( VAR_1 ) { case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_3 ; default : return VAR_7 ; } } else { return VAR_7 ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { true , false } , METHOD_4 ( ) ) ; METHOD_5 ( METHOD_6 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_3 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , true , true ) ) ; METHOD_7 ( resource . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( null ) ; VAR_1 . METHOD_5 ( ) ; try { TYPE_1 VAR_2 = METHOD_6 ( VAR_3 ) ; resource . METHOD_7 ( VAR_2 ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_9 ( VAR_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , VAR_3 [ 1 ] } ) ) ; TYPE_1 action = new TYPE_1 ( ) ; action . METHOD_5 ( TYPE_2 . value ( ) ) ; METHOD_6 ( resource . METHOD_7 ( action ) ) ; } 
protected void METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.network.Network a : VAR_1 ) { java.lang.String VAR_2 = ( a == null ) ? null : a . METHOD_2 ( ) ; if ( TYPE_1 . METHOD_3 ( VAR_2 , METHOD_4 ( ) . METHOD_5 ( ) ) ) { METHOD_6 ( ) . setSelectedItem ( a ) ; return ; } } if ( ( METHOD_4 ( ) . METHOD_5 ( ) ) == null ) { METHOD_6 ( ) . setSelectedItem ( null ) ; } } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( 1 , INT_1 , INT_2 , 2 , 1 ) ; TYPE_2 . assertEquals ( 1 , VAR_1 . size ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( nic ) ) ) ; } 
public static boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , TYPE_1 status , java.lang.Object VAR_3 ) { TYPE_2 type = null ; if ( ( type = VAR_4 . get ( VAR_1 ) ) != null ) { return TYPE_3 . METHOD_1 ( type , VAR_2 , status , VAR_3 ) ; } else { throw new TYPE_4 ( java.lang.String . METHOD_2 ( STRING_1 , type ) ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( true , 0 ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( VAR_3 class ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_5 class ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = model . METHOD_1 ( ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ) ; model . METHOD_2 ( ) . setItems ( VAR_1 ) ; model . METHOD_2 ( ) . METHOD_3 ( VAR_1 . isEmpty ( ) ) ; model . METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object VAR_1 ) { return ( ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) . getName ( ) ) + STRING_1 ) + ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_3 ( ) . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , TYPE_1 VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; java.lang.String VAR_3 = TYPE_2 . METHOD_2 ( VAR_1 ) ; if ( METHOD_3 ( VAR_3 ) ) { java.util.Map < java.lang.String , java.lang.Object > VAR_4 = VAR_1 . METHOD_4 ( ) ; VAR_5 . METHOD_5 ( ( VAR_2 + STRING_2 ) , TYPE_3 . METHOD_6 ( VAR_3 ) , vmId , VAR_4 ) ; } else { VAR_5 . METHOD_5 ( VAR_2 , TYPE_3 . METHOD_6 ( VAR_3 ) , vmId ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < java.lang.String > ( ( ( java.util.ArrayList < java.lang.String > ) ( source ) ) ) : new java.util.ArrayList < java.lang.String > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_4 ( STRING_2 ) ; VAR_3 . METHOD_5 ( STRING_3 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; VAR_3 . METHOD_7 ( false ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { try { TYPE_3 VAR_3 = TYPE_3 . METHOD_2 ( ) ; TYPE_4 VAR_4 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; java.lang.Object VAR_5 = VAR_4 . METHOD_5 ( VAR_1 , VAR_6 , VAR_7 ) ; return new TYPE_1 ( ( ( TYPE_5 ) ( VAR_5 ) ) ) ; } catch ( TYPE_6 e ) { throw new TYPE_7 ( ( STRING_1 + VAR_1 ) , e ) ; } } 
public void METHOD_1 ( ) { cmd . getParameters ( ) . METHOD_2 ( VAR_1 ) ; cmd . getParameters ( ) . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; cmd . METHOD_3 ( cmd . getParameters ( ) . METHOD_5 ( ) ) ; METHOD_6 ( cmd ) ; TYPE_1 . METHOD_7 ( cmd . validate ( ) ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < > ( ) ; VAR_2 . put ( VAR_3 , VAR_1 . METHOD_2 ( ) ) ; VAR_2 . put ( VAR_4 , ( TYPE_2 . isEmpty ( VAR_1 . METHOD_3 ( ) ) ? STRING_1 : VAR_1 . METHOD_3 ( ) ) ) ; VAR_2 . put ( VAR_5 , VAR_1 . METHOD_4 ( ) ) ; VAR_2 . put ( VAR_6 , STRING_2 ) ; return VAR_2 ; } 
private TYPE_1 METHOD_1 ( TYPE_2 nic ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . list ( ) . METHOD_4 ( ) . METHOD_5 ( ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { if ( ( TYPE_3 . equals ( VAR_2 . METHOD_6 ( ) ) ) && ( nic . getId ( ) . toString ( ) . equals ( VAR_2 . METHOD_7 ( ) ) ) ) { return VAR_2 ; } } return null ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms ) { METHOD_2 ( ) ; java.util.List < org.ovirt.engine.ui.uicommonweb.models.EntityModel < org.ovirt.engine.core.common.businessentities.VM > > VAR_1 = new java.util.ArrayList < > ( ) ; TYPE_1 . METHOD_3 ( vms , new TYPE_2 ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { VAR_1 . add ( new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( vm ) ) ; } VAR_2 . setItems ( VAR_1 ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network network = new TYPE_1 . Network ( ) ; network . setId ( VAR_1 ) ; network . METHOD_2 ( new TYPE_2 ( ) ) ; network . METHOD_3 ( ) . setId ( VAR_2 ) ; TYPE_3 . METHOD_4 ( METHOD_5 ( ) , network ) ; assertEquals ( VAR_3 , network . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( METHOD_3 ( ) . getStoragePoolId ( ) , getParameters ( ) . METHOD_4 ( ) ) ; METHOD_5 ( ) . METHOD_6 ( getParameters ( ) . METHOD_4 ( ) ) ; getReturnValue ( ) . METHOD_7 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_5 . METHOD_3 ( ) ) ) . thenReturn ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_6 . METHOD_3 ( ) ) ) . thenReturn ( VAR_6 ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( VAR_1 . getId ( ) ) , TYPE_4 . METHOD_6 ( VAR_7 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , VAR_2 , null ) ; METHOD_2 ( VAR_1 , VAR_3 , VAR_4 ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_5 = dao . METHOD_3 ( false ) ; TYPE_1 . METHOD_4 ( VAR_5 . METHOD_5 ( VAR_6 ) ) ; TYPE_1 . METHOD_4 ( VAR_5 . METHOD_5 ( VAR_7 ) ) ; TYPE_1 . METHOD_4 ( VAR_5 . METHOD_5 ( VAR_1 ) ) ; TYPE_1 . METHOD_6 ( VAR_5 . METHOD_5 ( VAR_8 ) ) ; } 
protected boolean validate ( ) { if ( ! ( super . validate ( ) ) ) { return false ; } if ( METHOD_1 ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) { return METHOD_4 ( VAR_1 ) ; } TYPE_1 VAR_2 = new TYPE_1 ( ) ; return validate ( VAR_2 . METHOD_5 ( getParameters ( ) . METHOD_6 ( ) , METHOD_1 ( ) , getParameters ( ) . METHOD_7 ( ) , true ) ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ; java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 storageDomain : VAR_1 ) { if ( ( storageDomain . METHOD_1 ( ) ) == ( VAR_3 ) ) { VAR_2 . add ( storageDomain ) ; } } return VAR_2 ; } return new java.util.ArrayList < TYPE_1 > ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , true ) ; TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , true ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; METHOD_5 ( false , VAR_2 . METHOD_6 ( ) , 1 , VAR_1 ) ; METHOD_5 ( true , VAR_2 . METHOD_6 ( ) , 2 , 1 , VAR_1 ) ; METHOD_7 ( TYPE_2 . METHOD_8 ( VAR_2 , VAR_3 ) , 1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = METHOD_2 ( VAR_1 . METHOD_4 ( ) ) ; VAR_3 = VAR_2 . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_4 = dao . get ( new TYPE_1 ( VAR_5 , VAR_3 . getId ( ) ) ) ; VAR_6 = new TYPE_2 ( VAR_7 , VAR_3 . getId ( ) , VAR_8 ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . get ( VAR_1 . METHOD_2 ( ) ) ; if ( VAR_2 == null ) { VAR_2 = new java.util.HashMap < > ( ) ; VAR_3 . put ( VAR_1 . METHOD_2 ( ) , VAR_2 ) ; } VAR_2 . put ( VAR_1 . METHOD_3 ( ) , TYPE_2 . getValue ( VAR_1 ) ) ; } 
public static java.lang.String METHOD_1 ( java.lang.String source ) throws TYPE_1 { if ( ( source == null ) || ( ( source . METHOD_2 ( ) . length ( ) ) == 0 ) ) { return STRING_1 ; } else { TYPE_2 VAR_1 = TYPE_2 . getInstance ( STRING_2 ) ; VAR_1 . METHOD_3 ( VAR_2 , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ; return new java.lang.String ( VAR_1 . METHOD_6 ( new TYPE_4 ( ) . METHOD_7 ( source ) ) , TYPE_5 . METHOD_8 ( STRING_3 ) ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) ; TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_3 ( ) , aQuery ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , new TYPE_3 ( TYPE_4 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ) , null , null ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . METHOD_8 ( ) ) ; } 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( int VAR_1 ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = new java.util.ArrayList < > ( VAR_1 ) ; for ( int VAR_3 = 0 ; VAR_3 < VAR_1 ; VAR_3 ++ ) { TYPE_1 . DiskImage image = METHOD_2 ( VAR_4 ) ; VAR_2 . add ( image ) ; } org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_4 ( ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 VAR_1 = new TYPE_1 ( this ) ; VAR_1 . setEntity ( ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > ) ( getSelectedItem ( ) ) ) . METHOD_2 ( ) ) ; METHOD_3 ( VAR_1 ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.common.businessentities . Network network ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( VAR_1 , network . METHOD_3 ( ) , network . getName ( ) ) ; nic . METHOD_4 ( network . METHOD_5 ( ) ) ; nic . METHOD_6 ( network . METHOD_7 ( ) ) ; return nic ; } 
public TYPE_1 list ( ) { if ( TYPE_2 . METHOD_1 ( METHOD_2 ( ) , VAR_1 ) ) { return METHOD_3 ( METHOD_4 ( VAR_2 , new TYPE_3 ( VAR_3 , METHOD_5 ( VAR_3 ) ) ) ) ; } else { return METHOD_3 ( METHOD_4 ( VAR_4 , new TYPE_4 ( this . VAR_3 ) ) ) ; } } 
private void METHOD_1 ( ) { VAR_1 = new TYPE_1 < org.ovirt.engine.core.common.businessentities.VDSGroup > ( VAR_2 , METHOD_2 ( ) , METHOD_3 ( ) , VAR_3 , VAR_4 ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_5 = new TYPE_2 < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) { public java.lang.String getValue ( org.ovirt.engine.core.common.businessentities.VDSGroup object ) { return object . getName ( ) ; } } ; VAR_1 . addColumn ( VAR_5 , VAR_6 . METHOD_4 ( ) ) ; } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , false , true , true , true , true , true , TYPE_2 . METHOD_4 ( ) . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { ( ( TYPE_2 ) ( model ) ) . setItems ( ( ( TYPE_3 ) ( returnValue ) ) ) ; } } ) , METHOD_3 ( ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( ( vm . METHOD_2 ( ) ) == ( VAR_1 ) ) || ( ( vm . METHOD_2 ( ) ) == ( VAR_2 ) ) ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
protected static java.lang.String METHOD_1 ( TYPE_1 . AuditLogType VAR_1 ) { final java.lang.String VAR_2 = VAR_1 . name ( ) ; try { return VAR_3 . getString ( VAR_2 ) ; } catch ( java.lang.Exception e ) { VAR_4 . error ( STRING_1 , VAR_2 , TYPE_2 . METHOD_2 ( ) ) ; return null ; } } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { TYPE_2 result = METHOD_2 ( VAR_4 , new TYPE_3 ( VAR_1 . getId ( ) , VAR_2 , VAR_3 , null , false ) ) ; return result . getSucceeded ( ) ? ( ( TYPE_1 ) ( result . getReturnValue ( ) ) ) : null ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_3 VAR_1 ) throws TYPE_4 { final TYPE_5 VAR_2 = new TYPE_5 ( VAR_1 ) ; this . VAR_3 . METHOD_2 ( VAR_1 , VAR_2 ) ; this . METHOD_3 ( ) . METHOD_4 ( TYPE_6 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ) ; METHOD_7 ( VAR_1 , VAR_2 ) ; return VAR_2 ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ( STRING_1 + ( METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ; TYPE_1 . getInstance ( ) . METHOD_5 ( this , STRING_2 , new TYPE_2 < ? > [ ] { } , new java.lang.Object [ ] { } , VAR_2 < java.lang.String > METHOD_6 ( VAR_3 ) ) ; VAR_1 . METHOD_2 ( ( STRING_3 + ( METHOD_3 ( ) . METHOD_4 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; TYPE_2 . getInstance ( ) . METHOD_4 ( this , VAR_4 , new TYPE_3 [ ] { } , new java.lang.Object [ ] { } , 0 , VAR_5 < java.lang.Integer > METHOD_5 ( VAR_6 ) , VAR_7 ) ; VAR_1 . METHOD_2 ( STRING_2 ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) { VAR_3 . METHOD_2 ( STRING_1 ) ; java.lang.Integer VAR_4 = VAR_1 < java.lang.Integer > getValue ( VAR_5 ) ; TYPE_1 . get ( VAR_6 class ) . METHOD_3 ( this , STRING_2 , new TYPE_2 [ ] { } , new java.lang.Object [ ] { } , VAR_4 , VAR_4 , VAR_7 ) ; VAR_3 . METHOD_2 ( STRING_3 ) ; } } 
private static TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId , TYPE_2 type , java.lang.String VAR_2 , boolean VAR_3 ) { return new TYPE_1 ( new TYPE_3 ( VAR_1 , vmId ) , type , VAR_2 , STRING_1 , 0 , TYPE_4 . METHOD_2 ( ) , VAR_3 , true , false , STRING_1 , TYPE_4 . METHOD_2 ( ) , null , null ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { switch ( METHOD_2 ( ) . METHOD_3 ( ) ) { case VAR_2 : return null ; case VAR_3 : VAR_1 = METHOD_4 ( ) . METHOD_5 ( ) ; break ; case VAR_4 : VAR_1 = METHOD_6 ( ) . METHOD_7 ( ) ; break ; default : VAR_1 = METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 . METHOD_8 ( METHOD_6 ( ) . METHOD_7 ( ) ) ; break ; } } return VAR_1 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object result ) { final TYPE_1 VAR_1 = ( ( TYPE_1 ) ( result ) ) ; VAR_2 . METHOD_2 ( ) . setItems ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ; VAR_2 . METHOD_2 ( ) . setSelectedItem ( VAR_1 ) ; } 
private boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 , TYPE_1 < ? > VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( VAR_1 ) ; if ( VAR_3 != null ) { switch ( VAR_3 . METHOD_3 ( ) ) { case VAR_4 : case VAR_5 : return false ; case VAR_6 : case VAR_7 : case VAR_8 : VAR_2 . METHOD_4 ( VAR_9 ) ; return true ; case VAR_10 : VAR_2 . METHOD_4 ( VAR_11 ) ; return true ; } } return false ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { final java.lang.String VAR_3 = VAR_1 . METHOD_2 ( ) ; if ( VAR_3 . isEmpty ( ) ) { return true ; } if ( VAR_2 ) { METHOD_3 ( ) . METHOD_1 ( VAR_1 . getId ( ) ) ; } return METHOD_4 ( VAR_3 , METHOD_5 ( ) , false ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; if ( ! ( METHOD_2 ( ) ) ) { VAR_1 = false ; getModel ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_1 ( ) ) ; } METHOD_5 ( false ) ; getModel ( ) . METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 ) ; org.mockito.Mockito.when ( METHOD_3 ( ) . METHOD_4 ( ) ) . thenReturn ( VAR_4 ) ; METHOD_5 ( ) . METHOD_6 ( ) ; java.lang.String result = ( ( java.lang.String ) ( METHOD_5 ( ) . METHOD_7 ( ) . getReturnValue ( ) ) ) ; TYPE_1 . METHOD_8 ( ( STRING_1 + result ) , result . equals ( VAR_3 ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 params ) { TYPE_4 < TYPE_1 > VAR_2 = TYPE_5 . METHOD_2 ( VAR_3 , params , TYPE_6 . METHOD_3 ( ) ) ; try { return VAR_2 . get ( ) ; } catch ( TYPE_7 | TYPE_8 e ) { e . METHOD_4 ( ) ; log . error ( STRING_1 ) ; } return null ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 < java.lang.Boolean > METHOD_3 ( VAR_2 , STRING_1 ) ) ; TYPE_1 . METHOD_4 ( VAR_1 < java.lang.Boolean > METHOD_3 ( VAR_2 , STRING_2 ) ) ; TYPE_1 . METHOD_4 ( VAR_1 < java.lang.Boolean > METHOD_3 ( VAR_2 , STRING_3 ) ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 , vds . getId ( ) , vds . METHOD_3 ( ) ) ; TYPE_1 params = new TYPE_1 ( vds . getId ( ) , VAR_2 ) ; TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_3 , params , TYPE_3 . METHOD_5 ( ) ) ; METHOD_6 ( vds ) ; } 
public static org.ovirt.engine.core.common.businessentities.StorageDomain map ( TYPE_1 model , TYPE_2 . StorageDomain template ) { TYPE_2 . StorageDomain entity = ( template != null ) ? template : new TYPE_2 . StorageDomain ( ) ; entity . METHOD_1 ( model . getId ( ) ) ; if ( model . METHOD_2 ( ) ) { TYPE_3 VAR_1 = TYPE_3 . METHOD_3 ( model . METHOD_4 ( ) ) ; if ( VAR_1 != null ) { entity . METHOD_5 ( TYPE_4 . map ( VAR_1 , null ) ) ; } } return entity ; } 
public TYPE_1 < TYPE_2 , org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_3 > > METHOD_1 ( final TYPE_4 VAR_1 , final TYPE_5 < TYPE_6 > VAR_2 , final TYPE_5 < TYPE_2 > VAR_3 , final TYPE_5 < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_3 > > VAR_4 ) { TYPE_1 < TYPE_2 , org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_3 > > result = new TYPE_1 < TYPE_2 , org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_3 > > ( VAR_1 , VAR_2 ) ; result . METHOD_2 ( VAR_3 ) ; result . METHOD_3 ( VAR_4 ) ; return result ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 < ? > command , final TYPE_3 VAR_1 ) { TYPE_4 VAR_2 = command . METHOD_2 ( ) ; TYPE_1 result = TYPE_5 . METHOD_3 ( VAR_3 . log ) . METHOD_4 ( command , ( VAR_1 != null ? VAR_1 . METHOD_5 ( ) : null ) ) ; METHOD_6 ( command , result ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_7 ( result ) ; } return result ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 ; if ( ( ( ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_1 ) ) || ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_2 ) ) ) || ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_3 ) ) ) || ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_4 ) ) ) { VAR_2 = VAR_3 ; } else if ( TYPE_2 . METHOD_2 ( VAR_1 , STRING_5 ) ) { VAR_2 = VAR_4 ; } else { VAR_2 = VAR_5 ; } return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 , java.lang.Integer > VAR_1 = new TYPE_1 < TYPE_2 , java.lang.Integer > ( ) { protected java.lang.String METHOD_2 ( ) { return STRING_1 ; } } ; VAR_1 . setItems ( TYPE_3 . METHOD_3 ( 1 , 2 , INT_1 ) ) ; VAR_1 . setSelectedItem ( 2 ) ; VAR_1 . setItems ( TYPE_3 . METHOD_3 ( 1 , 2 ) ) ; TYPE_4 . assertEquals ( ( ( java.lang.Integer ) ( 2 ) ) , VAR_1 . getSelectedItem ( ) ) ; } 
protected void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { TYPE_2 VAR_4 = null ; if ( VAR_2 != null ) { VAR_4 = TYPE_3 . METHOD_2 ( ) . get ( VAR_2 ) ; if ( VAR_4 != null ) { if ( ( ( VAR_4 . METHOD_3 ( ) ) == ( VAR_5 ) ) || ( ( VAR_4 . METHOD_3 ( ) ) == ( VAR_6 ) ) ) { VAR_1 . add ( new TYPE_1 ( VAR_3 , VAR_7 , VAR_8 ) ) ; } } } } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( result . METHOD_2 ( ) ) ) ; TYPE_3 VAR_2 = result . getReturnValue ( ) ; org.ovirt.engine.core.compat.Guid Guid = ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_2 . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_4 ( Guid ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 0 ) ; METHOD_6 ( ) ; VAR_2 . METHOD_7 ( ) ; TYPE_1 . VM vm = resource . get ( ) ; METHOD_8 ( vm . METHOD_9 ( ) ) ; METHOD_10 ( vm , 0 ) ; } finally { VAR_1 . METHOD_11 ( ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( VAR_1 == ( TYPE_1 . VM ) ) ? true : false ; TYPE_2 tempVar = new TYPE_2 ( ) ; tempVar . METHOD_3 ( METHOD_4 ( ) ) ; tempVar . METHOD_5 ( VAR_1 ) ; tempVar . METHOD_6 ( VAR_2 ) ; tempVar . METHOD_7 ( TYPE_3 . METHOD_8 ( ) ) ; tempVar . METHOD_9 ( METHOD_10 ( ) ) ; super . METHOD_1 ( VAR_3 , tempVar ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( ( METHOD_2 ( ) . getEntity ( ) ) != null ) && ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) { METHOD_3 ( ) . setIsChangable ( true ) ; METHOD_4 ( ) . setIsChangable ( true ) ; } else { METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { boolean VAR_1 = ( ( java.lang.Boolean ) ( returnValue ) ) ; if ( ! VAR_1 ) { model . METHOD_1 ( ) . METHOD_2 ( ) ; model . getName ( ) . METHOD_1 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; model . getName ( ) . METHOD_4 ( false ) ; model . METHOD_4 ( false ) ; model . METHOD_5 ( ) ; } else { METHOD_6 ( vm ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 2 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , true , true ) ) ; METHOD_5 ( VAR_4 . METHOD_6 ( VAR_3 [ 0 ] . toString ( ) ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final org.ovirt.engine.core.common.businessentities.VDS vds = null ; final org.ovirt.engine.core.common.businessentities.VM vm = null ; final org.ovirt.engine.core.compat.Guid VAR_2 = null ; VAR_1 . METHOD_2 ( vds ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_3 = VAR_1 . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( VAR_3 ) ; } 
private java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities . network VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . getValue ( ) ; java.util.Map < java.lang.String , java.lang.String > VAR_4 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( VAR_2 . METHOD_2 ( VAR_1 . getName ( ) ) ) ) ; TYPE_2 . METHOD_3 ( ( ( STRING_1 + ( VAR_1 . getName ( ) ) ) + STRING_2 ) , VAR_4 ) ; return VAR_4 ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.VM entity ) { TYPE_2 < java.lang.String > VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_1 , model ) ; if ( VAR_1 . METHOD_4 ( STRING_1 ) ) { METHOD_5 ( model , entity ) ; } TYPE_4 . METHOD_6 ( this , model ) ; TYPE_4 . METHOD_7 ( this , model ) ; TYPE_5 . METHOD_8 ( model , this ) ; return model ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . add ( STRING_1 ) ) ; TYPE_1 . METHOD_2 ( VAR_1 . add ( STRING_2 ) ) ; TYPE_1 . METHOD_3 ( METHOD_4 ( ) , new java.lang.String [ ] { STRING_1 , STRING_2 } ) ; TYPE_1 . assertEquals ( VAR_1 . METHOD_5 ( ) , 0 ) ; TYPE_1 . assertEquals ( VAR_1 . size ( ) , 2 ) ; TYPE_1 . METHOD_6 ( VAR_1 . isEmpty ( ) ) ; TYPE_1 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : STRING_1 ; } } ; TYPE_1 parameters = new TYPE_1 ( VAR_1 ) ; parameters . METHOD_2 ( VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , parameters , aQuery ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 < TYPE_3 > VAR_2 = TYPE_4 . METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_4 ) ; for ( TYPE_3 VAR_5 : VAR_2 ) { VAR_3 . METHOD_3 ( VAR_5 . METHOD_4 ( ) , VAR_5 . METHOD_5 ( ) ) ; } if ( VAR_3 . METHOD_6 ( ) ) { return VAR_3 ; } else { throw new TYPE_5 ( VAR_6 ) ; } } 
public void METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = TYPE_2 . METHOD_2 ( INT_1 ) ; disk . METHOD_3 ( VAR_1 ) ; disk . METHOD_4 ( STRING_1 ) ; METHOD_5 ( disk , TYPE_2 . METHOD_6 ( VAR_1 . METHOD_7 ( 0 , VAR_2 ) ) ) ; } 
private TYPE_1 METHOD_1 ( ) { return new TYPE_1 ( new TYPE_2 ( VAR_1 , vm . getId ( ) ) , VAR_2 , STRING_1 , STRING_2 , 1 , new java.util.HashMap < > ( ) , true , true , true , STRING_3 , new java.util.HashMap < > ( ) , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , STRING_4 ) ; } 
protected void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_2 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_5 ( new TYPE_3 ( VAR_2 , STRING_1 ) ) ; } org.mockito.Mockito.when ( VAR_5 . METHOD_6 ( TYPE_4 . any ( VAR_6 class ) , TYPE_4 . any ( VAR_7 class ) ) ) . thenReturn ( VAR_4 ) ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) == null ? 0 : VAR_2 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( id ) == null ? 0 : id . METHOD_1 ( ) ) ; return result ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { super . METHOD_1 ( VAR_1 , sender , args ) ; if ( METHOD_2 ( ) . equals ( sender ) ) { METHOD_3 ( ) ; } else if ( METHOD_4 ( ) . equals ( sender ) ) { METHOD_5 ( ) ; } else if ( METHOD_6 ( ) . equals ( sender ) ) { METHOD_7 ( ) ; } else if ( METHOD_8 ( ) . equals ( sender ) ) { METHOD_9 ( ) ; } } 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? VAR_2 . Linq < TYPE_1 > METHOD_3 ( METHOD_2 ( ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_4 ( ) . METHOD_5 ( ( ( VAR_1 . size ( ) ) == 1 ) ) ; } 
public static TYPE_1 < TYPE_2 > METHOD_1 ( final java.lang.String VAR_1 , final TYPE_1 < TYPE_3 > VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 VAR_4 : VAR_2 ) { VAR_3 . add ( TYPE_4 . METHOD_2 ( VAR_1 , VAR_4 ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , null ) ; VAR_1 . METHOD_3 ( false ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_2 , STRING_2 , STRING_3 , VAR_3 , null , null , TYPE_4 . METHOD_5 ( VAR_1 ) ) , null ) ) ; METHOD_6 ( cmd , VAR_4 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
public static TYPE_1 . DiskImage METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 . DiskImage image = new TYPE_1 . DiskImage ( ) ; image . METHOD_2 ( VAR_2 ) ; image . METHOD_3 ( VAR_3 ) ; image . METHOD_4 ( VAR_4 ) ; image . METHOD_5 ( VAR_5 ) ; image . METHOD_6 ( VAR_1 ) ; return image ; } 
public boolean METHOD_1 ( TYPE_1 source ) { if ( ( ( source . METHOD_2 ( ) ) == null ) || ( ( source . METHOD_3 ( ) ) == null ) ) { return false ; } return ( source . METHOD_2 ( ) . getId ( ) . equals ( VAR_1 ) ) && ( source . METHOD_3 ( ) . getId ( ) . equals ( VAR_2 ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; org.mockito.Mockito.when ( cmd . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_1 ) ) ; TYPE_3 . METHOD_8 ( cmd , VAR_2 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { METHOD_2 ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 . getId ( ) ) . addValue ( STRING_3 , VAR_2 . getId ( ) ) . addValue ( STRING_4 , VAR_2 . METHOD_5 ( ) ) . addValue ( STRING_5 , VAR_2 . METHOD_6 ( ) ) . addValue ( STRING_6 , TYPE_2 . METHOD_7 ( VAR_2 . getStatus ( ) ) ) ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_1 , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > list = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_3 : VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_1 . METHOD_2 ( VAR_3 , VAR_2 ) ; if ( storageDomain != null ) { list . add ( TYPE_1 . METHOD_2 ( VAR_3 , VAR_2 ) ) ; } } return list ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_6 ( ) , VAR_2 ) ; } 
public int METHOD_1 ( TYPE_1 type , TYPE_2 VAR_1 ) { int VAR_2 = 0 ; for ( TYPE_3 e : VAR_3 ) { if ( ( ( e . METHOD_2 ( ) ) == type ) && ( ( e . METHOD_3 ( ) ) == VAR_1 ) ) { VAR_2 ++ ; } } return VAR_2 ; } 
public boolean METHOD_1 ( TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > event ) { TYPE_2 VAR_1 = event . METHOD_2 ( ) ; if ( ! ( STRING_1 . equals ( VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ) { return false ; } TYPE_3 target = VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ; return STRING_2 . equals ( target . METHOD_7 ( ) . METHOD_4 ( ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_3 ( ) ; org.ovirt.engine.core.compat.Guid vmId = VAR_1 . METHOD_4 ( ) ; org.ovirt.engine.core.common.businessentities.DiskImage diskImage = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; diskImage . METHOD_5 ( vmId ) ; diskImage . setId ( VAR_2 ) ; diskImage . METHOD_6 ( VAR_3 ) ; return diskImage ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) ; if ( ( ( METHOD_4 ( ) ) != null ) && ( ! ( METHOD_4 ( ) . getId ( ) . equals ( VAR_1 ) ) ) ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( METHOD_4 ( ) . getId ( ) ) ; METHOD_6 ( null ) ; } } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = model . getVm ( ) ; if ( vm == null ) { return ; } boolean VAR_1 = TYPE_1 . METHOD_2 ( vm ) ; VAR_2 . METHOD_3 ( ( VAR_1 && ( vm . METHOD_4 ( ) ) ) ) ; if ( ! ( VAR_2 . METHOD_5 ( ) ) ) { model . METHOD_6 ( ) . setEntity ( false ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String id , boolean VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( TYPE_1 ) ( source ) ) : null ; } } ; TYPE_2 params = new TYPE_2 ( id ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; } 
private static java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ; for ( TYPE_1 storageDomain : VAR_1 ) { VAR_2 . add ( storageDomain . getId ( ) ) ; } return VAR_2 ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > models = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; models . add ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; models . add ( VAR_2 ) ; TYPE_4 . METHOD_2 ( VAR_3 , models ) ; return models ; } 
protected boolean METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 = TYPE_1 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) , true , false ) ; TYPE_3 VAR_2 = new TYPE_3 ( VAR_1 ) ; return ( validate ( VAR_2 . METHOD_6 ( ) ) ) && ( TYPE_1 . METHOD_7 ( TYPE_2 . getReturnValue ( ) . METHOD_8 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , true , true , true , VAR_1 ) ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) == null ) { return ; } super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getEntity ( ) ) ) ; super . METHOD_1 ( VAR_1 , new TYPE_1 ( template . getId ( ) ) ) ; } 
private boolean METHOD_1 ( ) { return ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) || ( ! ( TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . METHOD_4 ( ) , TYPE_1 . getParameters ( ) . METHOD_5 ( ) , TYPE_1 . getVm ( ) . getStatus ( ) ) ) ) ) || ( ! ( TYPE_2 . METHOD_6 ( METHOD_7 ( ) , TYPE_1 . getParameters ( ) ) ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 resource ) { METHOD_2 ( resource , VAR_1 ) ; org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_3 ( resource ) ; if ( network != null ) { resource . METHOD_4 ( ) . METHOD_5 ( network . METHOD_6 ( ) ) ; resource . METHOD_4 ( ) . setId ( null ) ; } return METHOD_7 ( resource , VAR_2 , VAR_3 , VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; for ( org.ovirt.engine.ui.uicommonweb.models.EntityModel a : METHOD_2 ( ) ) { if ( a . METHOD_3 ( ) ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( a . getEntity ( ) ) ) ; VAR_1 += VAR_2 . toString ( ) ; } } return TYPE_1 . valueOf ( VAR_1 ) ; } 
public static java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . Network > VAR_1 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > VAR_2 = new java.util.HashMap < java.lang.String , org.ovirt.engine.core.common.businessentities . Network > ( ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_3 : VAR_1 ) { VAR_2 . put ( VAR_3 . METHOD_2 ( ) , VAR_3 ) ; } return VAR_2 ; } else { return TYPE_1 . METHOD_3 ( ) ; } } 
protected void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; if ( VAR_1 <= 0 ) { METHOD_3 ( VAR_2 ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } else { METHOD_3 ( VAR_3 ) ; TYPE_1 . METHOD_5 ( METHOD_6 ( METHOD_2 ( ) ) ) ; } } 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . DiskImage > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? VAR_2 . Linq < TYPE_1 . DiskImage > METHOD_3 ( METHOD_2 ( ) ) : new java.util.ArrayList < TYPE_1 . DiskImage > ( ) ; METHOD_4 ( ) . METHOD_5 ( ( ( ( VAR_1 . size ( ) ) > 0 ) && ( METHOD_6 ( VAR_1 ) ) ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( VAR_3 ) ) . thenReturn ( VAR_2 ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts = TYPE_1 . METHOD_2 ( VAR_1 , VAR_2 ) ; java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.Integer > VAR_3 = METHOD_3 ( VAR_4 . METHOD_4 ( cluster , hosts , VAR_5 , null ) ) ; TYPE_2 . assertEquals ( ( ( java.lang.Integer ) ( 1 ) ) , VAR_3 . get ( VAR_1 . getId ( ) ) ) ; TYPE_2 . assertEquals ( ( ( java.lang.Integer ) ( 1 ) ) , VAR_3 . get ( VAR_2 . getId ( ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd , false ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_4 . toString ( ) ) ) ; } 
void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_4 ) , TYPE_2 . any ( VAR_5 . IdQueryParameters class ) ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( VAR_2 ) . getReturnValue ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( command , VAR_4 ) ; } 
public final TYPE_1 getValue ( TYPE_2 object ) { java.lang.Integer VAR_1 = METHOD_1 ( object ) ; int VAR_2 = ( VAR_1 != null ) ? VAR_1 : 0 ; java.lang.String VAR_3 = METHOD_2 ( object ) ; java.lang.String VAR_4 = ( VAR_2 < INT_1 ) ? STRING_1 : VAR_2 < INT_2 ? STRING_2 : STRING_3 ; return TYPE_3 . instance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , VAR_3 , VAR_4 ) ; } 
public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } final java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) ; return TYPE_1 . METHOD_1 ( list , VAR_1 , VAR_2 ) ; } 
public TYPE_1 add ( TYPE_2 event ) { METHOD_1 ( event , STRING_1 , STRING_2 , STRING_3 , STRING_4 ) ; METHOD_2 ( VAR_1 class , event ) ; return METHOD_3 ( VAR_2 , new TYPE_3 ( map ( event ) ) , new TYPE_4 < TYPE_5 > ( VAR_3 , VAR_4 class ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) != ( VAR_2 ) ) { return ; } boolean VAR_3 = ( ( java.lang.Boolean ) ( TYPE_1 . getInstance ( ) . METHOD_3 ( VAR_4 , VAR_1 . METHOD_4 ( ) . getValue ( ) ) ) ) ; METHOD_5 ( ) . setEntity ( VAR_3 ) ; METHOD_6 ( ( ! VAR_3 ? VAR_5 . METHOD_7 ( ) : STRING_1 ) ) ; METHOD_8 ( ) . setEntity ( ( ! VAR_3 ) ) ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { switch ( TYPE_2 . METHOD_2 ( ) ) { case VAR_1 : if ( ! ( getParameters ( ) . METHOD_3 ( ) ) ) { return VAR_2 ; } if ( ( ( getParameters ( ) . METHOD_4 ( ) ) == 0 ) && ( TYPE_2 . getSucceeded ( ) ) ) { return VAR_3 ; } break ; case VAR_4 : return VAR_5 ; case VAR_6 : return VAR_2 ; } return VAR_7 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.ArrayList < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( INT_1 , null ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . size ( ) ) == 2 ) ) ; for ( java.lang.String model : TYPE_3 . METHOD_4 ( STRING_1 ) ) { TYPE_2 . METHOD_3 ( VAR_1 . METHOD_5 ( model . METHOD_6 ( ) ) ) ; } } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( true ) ; METHOD_2 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_4 ( ) . getEntity ( ) ) ) ) ; METHOD_5 ( ) . METHOD_3 ( true ) ; METHOD_5 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_4 ( ) . getEntity ( ) ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 from ) { from . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) . value ( ) ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; VAR_2 . setId ( from . getId ( ) ) ; from . METHOD_4 ( ) ; from . METHOD_5 ( ) . add ( VAR_2 ) ; return from ; } 
protected boolean validate ( ) { super . validate ( ) ; getName ( ) . METHOD_1 ( new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( ) } ) ; METHOD_2 ( ( ( METHOD_3 ( ) ) && ( getName ( ) . METHOD_3 ( ) ) ) ) ; return METHOD_3 ( ) ; } 
protected void METHOD_1 ( ) { java.util.Map < org.ovirt.engine.core.compat.Guid , java.util.List < TYPE_1 . DiskImage > > VAR_1 = VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; super . METHOD_1 ( ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_2 . METHOD_4 ( VAR_1 , VAR_3 ) ; } 
public void onSuccess ( java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( true ) ; METHOD_4 ( ) . METHOD_2 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_2 ) ) { METHOD_4 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_3 ) ) { METHOD_5 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_4 ) ) { METHOD_6 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 , true ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , new java.util.ArrayList < TYPE_1 . Network > ( ) , null ) ; VAR_4 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_2 ) ; } catch ( TYPE_2 VAR_5 ) { METHOD_6 ( VAR_5 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return ( ( ! ( TYPE_1 . METHOD_2 ( ( ( java.lang.String ) ( TYPE_2 . METHOD_3 ( VAR_1 ) ) ) ) ) ) || ( ! ( TYPE_1 . METHOD_2 ( vm . METHOD_4 ( ) ) ) ) ) || ( ! ( TYPE_1 . METHOD_2 ( vm . METHOD_5 ( ) ) ) ) ; } 
private void METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.util.List < java.lang.String > VAR_2 ) { if ( ! ( VAR_1 . isEmpty ( ) ) ) { addCanDoActionMessage ( VAR_3 ) ; TYPE_1 . getReturnValue ( ) . METHOD_2 ( ) . add ( java.lang.String . METHOD_3 ( STRING_1 , TYPE_2 . METHOD_4 ( VAR_2 , STRING_2 ) ) ) ; TYPE_1 . getReturnValue ( ) . METHOD_2 ( ) . add ( java.lang.String . METHOD_3 ( STRING_3 , TYPE_2 . METHOD_4 ( VAR_1 , STRING_2 ) ) ) ; } } 
protected void METHOD_1 ( final TYPE_1 VAR_1 ) { TYPE_2 . getInstance ( ) . METHOD_2 ( ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_3 < TYPE_4 > ( ) { public void METHOD_5 ( TYPE_5 < ? extends TYPE_4 > VAR_2 , java.lang.Object sender , TYPE_4 args ) { METHOD_6 ( ) ; } } ) ; METHOD_7 ( VAR_1 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 ) { org.ovirt.engine.core.compat.Guid VAR_3 = METHOD_2 ( VAR_1 ) ; if ( VAR_3 == null ) { log . error ( STRING_1 , VAR_2 , VAR_1 , METHOD_3 ( ) ) ; return ; } TYPE_2 . DiskImage VAR_4 = TYPE_3 . METHOD_4 ( ) . METHOD_5 ( VAR_3 ) ; VAR_4 . METHOD_6 ( VAR_2 ) ; METHOD_7 ( ) . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_1 . METHOD_3 ( ) ; TYPE_2 VAR_3 = VAR_2 . get ( STRING_1 ) ; VAR_4 = dao . get ( new TYPE_3 ( STRING_2 , VAR_3 . METHOD_4 ( ) ) ) ; VAR_5 = new TYPE_4 ( VAR_6 , VAR_3 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 , org.mockito.Mockito . METHOD_9 ( VAR_3 ) ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_2 , org.mockito.Mockito . METHOD_10 ( ) ) . METHOD_11 ( TYPE_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > list = VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.VDS > METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( ) ; if ( ( getVm ( ) ) != null ) { TYPE_1 . METHOD_4 ( getVm ( ) . getId ( ) ) ; METHOD_5 ( ) ; } else { METHOD_6 ( false ) ; VAR_1 . METHOD_7 ( STRING_1 ) ; } METHOD_8 ( true ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_3 = METHOD_3 ( true ) ; VAR_4 = METHOD_3 ( true ) ; VAR_5 = METHOD_3 ( false ) ; VAR_5 . METHOD_4 ( VAR_2 ) ; VAR_5 . METHOD_5 ( false ) ; VAR_6 = METHOD_3 ( false ) ; VAR_6 . METHOD_4 ( VAR_2 ) ; VAR_6 . METHOD_5 ( false ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = null ; try { VAR_1 = new TYPE_1 ( new TYPE_2 ( STRING_1 ) ) ; } catch ( TYPE_3 e ) { e . METHOD_2 ( ) ; } TYPE_4 . METHOD_3 ( VAR_1 ) ; VAR_1 . METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; } 
protected void METHOD_1 ( TYPE_1 . Network model , int VAR_1 ) { METHOD_2 ( model . METHOD_3 ( ) ) ; assertEquals ( model . METHOD_4 ( ) , true ) ; METHOD_2 ( model . METHOD_5 ( ) ) ; METHOD_6 ( model . METHOD_7 ( ) . METHOD_7 ( ) ) ; METHOD_2 ( model . METHOD_7 ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_2 . name ( ) ) ) ; METHOD_2 ( model . METHOD_9 ( ) ) ; assertEquals ( model . METHOD_10 ( ) , true ) ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = null ; java.lang.String VAR_3 = VAR_1 . METHOD_2 ( VAR_4 ) ; if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_3 ( TYPE_2 ) ) ) { VAR_2 = VAR_3 . METHOD_4 ( STRING_1 . length ( ) ) . METHOD_5 ( ) ; } return VAR_2 ; } 
private void METHOD_1 ( ) { TYPE_1 pool = new TYPE_1 ( ) ; pool . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; pool . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( pool ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) throws TYPE_2 { VAR_2 . METHOD_2 ( VAR_3 , VAR_4 . METHOD_3 ( VAR_1 . get ( VAR_5 , VAR_6 . String class ) , VAR_1 . get ( VAR_7 , VAR_6 . Integer class , VAR_8 ) ) ) . METHOD_2 ( VAR_9 , VAR_10 ) . METHOD_2 ( VAR_11 , VAR_12 ) ; } 
public void METHOD_1 ( final TYPE_1 < TYPE_2 . VdcActionType , TYPE_3 > VAR_1 , final TYPE_4 VAR_2 ) { if ( METHOD_2 ( VAR_2 ) ) { return ; } VAR_3 . log ( VAR_4 , ( STRING_1 + VAR_2 ) , VAR_2 ) ; METHOD_3 ( ) . METHOD_4 ( null ) ; METHOD_5 ( VAR_2 ) ; METHOD_6 ( ) ; if ( VAR_5 . METHOD_7 ( ) ) { METHOD_8 ( null ) ; VAR_5 . METHOD_9 ( ) . onSuccess ( VAR_5 . getModel ( ) , null ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_2 < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_1 ) { if ( ( VAR_1 . getValue ( ) ) == null ) { VAR_1 . METHOD_2 ( new TYPE_1 ( METHOD_3 ( ) . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_2 ) ) ) ; } return VAR_1 . getValue ( ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 < TYPE_2 > ( VAR_1 , TYPE_3 . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ) { protected void METHOD_6 ( ) { } protected void METHOD_7 ( ) { } } ) ; return command ; } 
private void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( VAR_1 ) ; command = new TYPE_2 ( params ) ; command . METHOD_3 ( VAR_2 ) ; command = org.mockito.Mockito . METHOD_4 ( command ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_5 ( TYPE_3 . any ( VAR_4 . VDS class ) , TYPE_3 . any ( VAR_5 class ) ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( command ) . METHOD_6 ( ) ; command . METHOD_7 ( VAR_7 ) ; } 
public java.lang.String METHOD_1 ( java.lang.Object [ ] VAR_1 ) { java.lang.Object entity = VAR_1 [ 0 ] ; org.ovirt.engine.core.compat.Guid VAR_2 = ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_1 [ 1 ] ) ) ; if ( TYPE_1 . METHOD_2 ( entity ) . equals ( VAR_2 ) ) { return STRING_1 ; } java.lang.String VAR_3 = ( ( java.lang.String ) ( VAR_1 [ 2 ] ) ) ; return VAR_3 ; } 
private void METHOD_1 ( ) { final java.util.Map < java.lang.Integer , java.lang.String > VAR_1 = TYPE_1 . getInstance ( ) . get ( VAR_2 class ) . METHOD_2 ( ) ; for ( TYPE_2 < java.lang.Integer , java.lang.String > VAR_3 : VAR_1 . METHOD_3 ( ) ) { final TYPE_3 VAR_4 = TYPE_4 . METHOD_4 ( VAR_3 . getValue ( ) ) ; if ( VAR_4 != null ) { VAR_5 . put ( VAR_3 . METHOD_5 ( ) , VAR_4 ) ; } } } 
public static org.ovirt.engine.core.common.businessentities.network.Network METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { return null ; } org.ovirt.engine.core.common.businessentities.network.Network VAR_2 = null ; if ( ( VAR_1 . METHOD_2 ( ) ) != null ) { VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . get ( VAR_1 . METHOD_2 ( ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; TYPE_1 VAR_2 = TYPE_2 . getModel ( 2 ) ; VAR_2 . METHOD_5 ( ) . METHOD_6 ( null ) ; try { VAR_3 . add ( VAR_2 ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 e ) { METHOD_8 ( e . METHOD_9 ( ) ) ; assertEquals ( INT_1 , e . METHOD_9 ( ) . getStatus ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = VAR_2 . METHOD_2 ( ) ; if ( VAR_3 == null ) { VAR_4 . METHOD_3 ( ( STRING_1 + STRING_2 ) , VAR_2 . getName ( ) ) ; return ; } METHOD_4 ( VAR_1 , VAR_3 ) ; METHOD_5 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( METHOD_5 ( ) ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( METHOD_5 ( ) . METHOD_7 ( ) . get ( VAR_1 . METHOD_8 ( ) ) ) . thenReturn ( VAR_1 ) ; TYPE_2 . METHOD_9 ( METHOD_5 ( ) ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_3 = ( ( java.util.ArrayList < TYPE_2 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; VAR_2 . METHOD_2 ( VAR_4 ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 domain = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . getStoragePoolId ( ) ) ; if ( ( domain != null ) && ( ( domain . METHOD_5 ( ) ) == ( VAR_1 ) ) ) { return true ; } return false ; } 
private java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; for ( char VAR_3 : TYPE_2 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) { if ( ( VAR_4 . METHOD_4 ( VAR_3 ) ) != ( - 1 ) ) { VAR_2 . append ( VAR_3 ) ; } } VAR_1 = VAR_2 . toString ( ) ; } return VAR_1 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( returnValue ) ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( ) , aQuery ) ; } 
protected boolean METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = METHOD_2 ( ) . METHOD_3 ( VAR_2 . getId ( ) ) ; boolean VAR_3 = false ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_1 ) { if ( cluster . getId ( ) . equals ( TYPE_1 . METHOD_4 ( VAR_4 ) ) ) { VAR_3 = true ; break ; } } return VAR_3 ; } 
private void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 VAR_2 , java.lang.String VAR_3 , TYPE_1 VAR_4 ) { TYPE_2 tempVar = new TYPE_2 ( ) ; tempVar . METHOD_2 ( VAR_1 ) ; tempVar . METHOD_3 ( VAR_2 ) ; TYPE_2 VAR_5 = new TYPE_2 ( ) ; VAR_5 . METHOD_2 ( VAR_3 ) ; VAR_5 . METHOD_3 ( VAR_4 ) ; java.util.ArrayList < TYPE_2 > VAR_6 = new java.util.ArrayList < TYPE_2 > ( TYPE_3 . METHOD_4 ( new TYPE_2 [ ] { tempVar , VAR_5 } ) ) ; METHOD_5 ( ) . add ( VAR_6 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 0 ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( false ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( ( VAR_1 ? true : false ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( org.mockito.Mockito . METHOD_4 ( VAR_5 ) , TYPE_2 . any ( VAR_6 class ) ) ) . thenReturn ( VAR_2 ) . thenReturn ( VAR_3 ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities . Network VAR_3 = METHOD_3 ( VAR_2 , null , VAR_1 ) ; if ( VAR_3 != null ) { return VAR_3 . getId ( ) . toString ( ) ; } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 log = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.when ( log . METHOD_3 ( ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_4 ( log , id , new TYPE_3 ( ) , new java.lang.Object ( ) ) ; org.mockito.Mockito . METHOD_5 ( log ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( id ) } ) ; } 
public int METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( VAR_2 . METHOD_2 ( ) ) ; if ( VAR_3 != 0 ) { return VAR_3 ; } return VAR_1 . METHOD_4 ( ) . getName ( ) . METHOD_3 ( VAR_2 . METHOD_4 ( ) . getName ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 template = new TYPE_1 ( ) ; template . setId ( VAR_1 ) ; template . METHOD_2 ( new TYPE_2 . StorageDomain ( ) ) ; template . METHOD_3 ( ) . setId ( VAR_2 ) ; template = TYPE_3 . METHOD_4 ( METHOD_5 ( ) , template ) ; assertEquals ( VAR_3 , template . METHOD_6 ( ) ) ; assertEquals ( VAR_4 , template . METHOD_3 ( ) . METHOD_6 ( ) ) ; } 
public static boolean METHOD_1 ( final org.ovirt.engine.core.compat . Version VAR_1 ) { boolean result = true ; if ( ( VAR_1 == null ) || ( ! ( VAR_2 < TYPE_1 < org.ovirt.engine.core.compat . Version > > METHOD_2 ( VAR_3 ) . METHOD_3 ( VAR_1 ) ) ) ) { result = false ; } return result ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { if ( METHOD_2 ( host ) ) { VAR_2 . add ( host ) ; } } VAR_1 . METHOD_3 ( ) . setItems ( VAR_2 ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } final TYPE_1 VAR_1 = new TYPE_1 ( this ) ; METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( ) . setItems ( TYPE_2 . METHOD_4 ( getEntity ( ) ) ) ; VAR_1 . METHOD_3 ( ) . setSelectedItem ( getEntity ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . size ( ) ) == 1 ) ) ; TYPE_2 . METHOD_4 ( VAR_1 . isEmpty ( ) ) ; dao . METHOD_5 ( VAR_2 , VAR_3 ) ; java.util.List < TYPE_1 > VAR_4 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_4 . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) , null ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; } 
public static TYPE_1 map ( TYPE_2 VAR_1 , TYPE_1 template ) { TYPE_1 result = null ; if ( VAR_1 != null ) { switch ( VAR_1 ) { case VAR_2 : result = VAR_3 ; break ; case VAR_4 : result = VAR_5 ; break ; case VAR_6 : default : result = VAR_7 ; break ; } } return result ; } 
private void METHOD_1 ( TYPE_1 . VdcActionType action , TYPE_1 . VdcActionParametersBase VAR_1 ) { if ( ( METHOD_2 ( ) ) == null ) { return ; } final TYPE_2 model = ( ( TYPE_2 ) ( METHOD_2 ( ) ) ) ; model . METHOD_3 ( null ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_1 ( action , VAR_1 , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_4 result ) { model . METHOD_5 ( ) ; METHOD_6 ( null ) ; } } ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_1 ( ) { public void METHOD_5 ( TYPE_2 VAR_1 , java.lang.Object sender , TYPE_3 args ) { METHOD_6 ( ) . METHOD_7 ( ( ( ( METHOD_2 ( ) . METHOD_8 ( ) ) != null ) && ( ! ( METHOD_2 ( ) . METHOD_8 ( ) . isEmpty ( ) ) ) ) ) ; } } ) ; } 
public void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( VAR_1 class , VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( ) ) . thenReturn ( TYPE_2 . METHOD_4 ( ) ) ; METHOD_5 ( ) ; VAR_3 = new java.util.ArrayList < > ( ) ; VAR_4 = STRING_1 ; VAR_5 = STRING_2 ; VAR_6 = new TYPE_3 ( vm , VAR_3 , version , VAR_4 , VAR_5 ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.String value ) { TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; if ( ( value != null ) && ( ( value . length ( ) ) > ( METHOD_2 ( ) ) ) ) { result . METHOD_3 ( false ) ; result . METHOD_4 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( METHOD_2 ( ) ) ) ; } return result ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( ) ) . thenReturn ( false ) ; VAR_2 = org.mockito.Mockito . METHOD_5 ( new TYPE_1 ( VAR_1 , vds , org.mockito.Mockito . METHOD_6 ( VAR_3 class ) , VAR_4 , VAR_5 , VAR_6 ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( java.lang.Object value ) { TYPE_1 . ValidationResult result = new TYPE_1 . ValidationResult ( ) ; result . METHOD_2 ( false ) ; result . METHOD_3 ( ) . METHOD_4 ( ) ; result . METHOD_3 ( ) . add ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_5 ( ) ) ; return result ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( ( VAR_2 . METHOD_2 ( ) ) != null ) && ( ( VAR_2 . METHOD_3 ( ) ) != null ) ) { VAR_1 . METHOD_4 ( STRING_1 , java.lang.String . METHOD_5 ( STRING_2 , new TYPE_2 ( 0 ) . METHOD_6 ( java.lang.String . METHOD_5 ( STRING_3 , VAR_2 . METHOD_2 ( ) , VAR_2 . METHOD_3 ( ) ) . METHOD_7 ( VAR_3 ) ) ) . toString ( ) ) ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; } 
protected boolean METHOD_1 ( ) { if ( ! ( super . METHOD_1 ( ) ) ) { return false ; } if ( ( getParameters ( ) . METHOD_2 ( ) ) == null ) { addCanDoActionMessage ( VAR_1 ) ; return false ; } java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = METHOD_3 ( getParameters ( ) . METHOD_2 ( ) ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { addCanDoActionMessage ( VAR_3 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 , STRING_1 , STRING_2 , VAR_2 , null , null , TYPE_3 . METHOD_3 ( METHOD_4 ( STRING_3 , null ) ) ) ) ) ; METHOD_5 ( cmd , VAR_3 ) ; TYPE_4 . METHOD_6 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_2 ) ) < 0 ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) ) > 0 ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( new org.ovirt.engine.core.compat . Version ( STRING_1 ) ) ) == 0 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 VAR_2 = TYPE_2 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , VAR_2 . METHOD_6 ( ) ) ) . thenReturn ( VAR_2 ) ; TYPE_4 < java.lang.String , java.lang.String > VAR_4 = VAR_5 . METHOD_7 ( VAR_2 . METHOD_8 ( ) , VAR_1 ) ; TYPE_2 . METHOD_9 ( VAR_4 , VAR_1 . METHOD_10 ( ) , VAR_1 . METHOD_11 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { try { this . VAR_2 = new TYPE_3 ( VAR_3 , METHOD_2 ( false ) , VAR_1 ) ; this . VAR_2 . METHOD_3 ( ) ; int VAR_4 = VAR_5 ; VAR_6 . METHOD_4 ( ) ; VAR_7 = this . VAR_3 . METHOD_5 ( VAR_8 , ( VAR_4 |= VAR_9 ) , this ) ; } catch ( TYPE_4 | TYPE_5 e ) { VAR_10 . error ( STRING_1 , e ) ; throw new TYPE_2 ( e ) ; } } 
public static < TYPE_1 extends TYPE_2 < ? extends TYPE_3 . VdcActionParametersBase > > TYPE_1 METHOD_1 ( TYPE_1 instance ) { TYPE_4 type = VAR_1 . METHOD_2 ( instance . METHOD_3 ( ) ) ; TYPE_5 VAR_2 = VAR_1 . METHOD_4 ( type ) ; VAR_2 . inject ( instance , VAR_1 . METHOD_5 ( null ) ) ; VAR_2 . METHOD_6 ( instance ) ; return instance ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 VAR_4 = VAR_1 . get ( 0 ) ; TYPE_2 . METHOD_3 ( VAR_4 ) ; TYPE_2 . assertEquals ( true , ( ( VAR_1 . size ( ) ) == 1 ) ) ; TYPE_2 . assertEquals ( VAR_4 . METHOD_4 ( ) , new java.lang.Integer ( INT_1 ) ) ; } 
public static < TYPE_1 extends TYPE_2 > TYPE_3 < java.lang.String > METHOD_1 ( java.lang.String VAR_1 , java.util.List < TYPE_1 > VAR_2 ) { java.util.List < java.lang.Object > VAR_3 = new java.util.ArrayList < > ( VAR_2 . size ( ) ) ; for ( TYPE_2 VAR_4 : VAR_2 ) { VAR_3 . add ( VAR_4 . getName ( ) ) ; } return TYPE_4 . METHOD_2 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( final java.util.List < TYPE_1 . VdcActionType > VAR_1 , final java.util.List < TYPE_1 . VdcActionParametersBase > parameters , final java.util.List < TYPE_2 > VAR_2 , final TYPE_2 VAR_3 , final java.lang.Object VAR_4 ) { METHOD_1 ( VAR_1 , parameters , VAR_2 , VAR_3 , VAR_4 , false , null ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( true ) ; TYPE_1 . METHOD_5 ( command . METHOD_6 ( ) ) ; TYPE_1 . METHOD_7 ( command . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_2 . toString ( ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Network > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { VAR_1 . METHOD_2 ( STRING_1 ) ; if ( ( VAR_2 ) != null ) { try { VAR_2 . METHOD_1 ( ) ; VAR_2 = null ; } catch ( TYPE_2 e ) { VAR_1 . METHOD_3 ( STRING_2 , e ) ; } } } 
private java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( VAR_2 ) ; for ( int i = 0 ; i < VAR_2 ; i ++ ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( ( STRING_1 + i ) , null ) ; if ( VAR_1 != null ) { nic = METHOD_3 ( nic , VAR_1 ) ; } VAR_3 . add ( nic ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 , TYPE_3 { java.lang.String VAR_1 = STRING_1 ; TYPE_4 . doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( VAR_4 ) ) . thenReturn ( null ) ; VAR_2 . METHOD_4 ( VAR_3 , VAR_5 ) ; org.mockito.Mockito . METHOD_5 ( VAR_5 ) . METHOD_6 ( VAR_6 , VAR_1 ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( getParameters ( ) . METHOD_2 ( ) ) ; return ( ( ( validate ( VAR_1 . METHOD_3 ( ) ) ) && ( validate ( VAR_1 . METHOD_4 ( ) ) ) ) && ( validate ( VAR_1 . METHOD_5 ( ) ) ) ) && ( validate ( VAR_1 . METHOD_6 ( ) ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) && ( ! ( VAR_3 < java.lang.Boolean > METHOD_3 ( VAR_4 , VAR_1 . METHOD_4 ( ) . toString ( ) ) ) ) ) { return new TYPE_1 . ValidationResult ( VAR_5 ) ; } return VAR_6 ; } 
protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_4 , VAR_5 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 [ 1 ] } , METHOD_3 ( VAR_6 [ 1 ] ) ) ; METHOD_4 ( new int [ ] { 0 } ) ; METHOD_5 ( new int [ ] { 0 } ) ; super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 . StorageDomain METHOD_1 ( TYPE_1 . StorageDomain model , TYPE_1 . StorageDomain entity ) { if ( TYPE_2 . equals ( entity . METHOD_2 ( ) ) ) { model . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 ) ) ; } else { model . METHOD_3 ( null ) ; } return super . METHOD_1 ( model , entity ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 returnValue = TYPE_2 . METHOD_2 ( VAR_1 , METHOD_3 ( ) , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) , true ) ; TYPE_3 . getReturnValue ( ) . METHOD_7 ( returnValue . METHOD_8 ( ) ) ; return returnValue . METHOD_9 ( ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface [ ] VAR_3 = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface [ ( VAR_2 . size ( ) ) + 1 ] ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_3 [ ( ( VAR_3 . length ) - 1 ) ] = VAR_1 ; METHOD_3 ( VAR_3 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm == null ) { return ; } TYPE_2 VAR_1 = ( ( TYPE_2 ) ( model ) ) ; VAR_1 . METHOD_1 ( vm ) ; VAR_1 . METHOD_2 ( ) ; } } 
public TYPE_1 METHOD_1 ( TYPE_2 . Disk object ) { if ( ( object . METHOD_2 ( ) ) != null ) { java.lang.String VAR_1 = TYPE_3 . METHOD_3 ( STRING_1 ) . METHOD_4 ( object . METHOD_2 ( ) ) ; return TYPE_4 . METHOD_5 ( VAR_2 . METHOD_6 ( VAR_1 ) ) ; } return null ; } 
protected boolean METHOD_1 ( ) { METHOD_2 ( ) ; java.util.ArrayList < TYPE_1 . DiskImage > VAR_1 = new java.util.ArrayList ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( ) ) ; METHOD_6 ( TYPE_2 . METHOD_7 ( ) . getStoragePoolId ( ) , VAR_1 ) ; TYPE_2 . METHOD_3 ( ) . METHOD_8 ( VAR_1 ) ; if ( ( TYPE_2 . METHOD_9 ( ) ) && ( ! ( METHOD_10 ( VAR_2 , VAR_3 ) ) ) ) { return false ; } return super . METHOD_1 ( ) ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( java.lang.Object a : VAR_2 . METHOD_2 ( ) ) { org.ovirt.engine.core.common.businessentities.network.Network network = ( ( org.ovirt.engine.core.common.businessentities.network.Network ) ( a ) ) ; VAR_1 . add ( new TYPE_2 ( network . METHOD_3 ( ) . getValue ( ) , network ) ) ; } org.ovirt.engine.ui.frontend.Frontend . METHOD_4 ( VAR_3 , VAR_1 ) ; VAR_2 . METHOD_5 ( null ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) ) ; } 
private TYPE_1 < TYPE_2 < TYPE_3 , TYPE_4 < TYPE_5 > > > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 < TYPE_2 < TYPE_3 , TYPE_4 < TYPE_5 > > > VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_6 < TYPE_2 < TYPE_3 , TYPE_4 < TYPE_5 > > > ( ) ; VAR_3 . put ( VAR_1 , VAR_2 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { final java.util.List < TYPE_1 > result = METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , result . size ( ) ) ; TYPE_2 . assertEquals ( new TYPE_1 ( VAR_2 , VAR_1 ) , result . get ( 0 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 [ 0 ] , true ) ; VAR_2 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < TYPE_1 > ( ) ; list . add ( new TYPE_2 ( TYPE_3 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) , null , VAR_1 , TYPE_3 . METHOD_4 ( ) . getValue ( ) , TYPE_3 . getParameters ( ) . METHOD_2 ( ) . METHOD_5 ( ) ) ) ; return list ; } 
private void METHOD_1 ( int VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( VAR_3 . Matchers < org.ovirt.engine.core.compat.Guid > any ( VAR_4 . Guid class ) , VAR_3 . Matchers < TYPE_1 > any ( VAR_5 class ) ) ) . thenReturn ( METHOD_3 ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 model ) { if ( ( model . METHOD_2 ( ) . getEntity ( ) ) || ( model . METHOD_3 ( ) . getEntity ( ) ) ) { return METHOD_4 ( model . METHOD_5 ( ) , model . METHOD_6 ( ) . getEntity ( ) ) ; } else { return null ; } } 
private void METHOD_1 ( boolean VAR_1 ) { VAR_2 . METHOD_2 ( VAR_3 class , VAR_4 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_1 ) ; TYPE_2 . assertEquals ( validator . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) . get ( ) , VAR_1 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; java.util.List < java.lang.String > VAR_1 = new TYPE_1 < > ( ) ; boolean result = validator . METHOD_2 ( vds , null , VAR_1 ) ; TYPE_2 . METHOD_3 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 1 ) ; TYPE_2 . assertEquals ( VAR_1 . get ( 0 ) , STRING_1 ) ; } 
private static java.util.ArrayList < org.ovirt.engine.core.compat.Guid > METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.compat.Guid > VAR_2 = new java.util.ArrayList < > ( ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { for ( java.lang.String VAR_3 : VAR_1 ) { VAR_2 . add ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_3 ) ) ; } } return VAR_2 ; } 
public static java.lang.String METHOD_1 ( java.util.List < java.lang.String > VAR_1 , java.lang.String ... VAR_2 ) { TYPE_1 . METHOD_2 ( VAR_2 ) ; for ( java.lang.String VAR_3 : VAR_1 ) { int VAR_4 = TYPE_1 . METHOD_3 ( VAR_2 , VAR_3 ) ; if ( VAR_4 >= 0 ) { return VAR_2 [ VAR_4 ] ; } } return null ; } 
public TYPE_1 . VdcActionParametersBase METHOD_1 ( final TYPE_2 VAR_1 ) { final TYPE_3 params = new TYPE_3 ( VAR_1 . getId ( ) , new org.ovirt.engine.core.compat.Guid ( VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ) ) ; params . METHOD_4 ( true ) ; return params ; } 
public TYPE_1 METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_2 > VAR_4 = VAR_5 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; METHOD_4 ( VAR_2 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_1 . any ( VAR_3 . Guid class ) , TYPE_1 . any ( VAR_3 . Guid class ) ) ; cmd . getVm ( ) . METHOD_4 ( VAR_4 ) ; TYPE_2 . METHOD_5 ( cmd ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate template , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 , boolean VAR_3 ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( template . METHOD_4 ( ) . getValue ( ) ) ; TYPE_1 . METHOD_1 ( template , VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; } 
public boolean METHOD_1 ( TYPE_1 item ) { if ( ( item . METHOD_2 ( ) ) || ( ! ( METHOD_3 ( ) ) ) ) return false ; if ( ( ( METHOD_3 ( ) ) && ( item . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ) && ( item . METHOD_4 ( ) . METHOD_5 ( ) . METHOD_7 ( ) ) ) { return true ; } return false ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_2 VAR_3 = METHOD_2 ( ) ; VAR_3 . addValue ( STRING_1 , VAR_1 ) ; VAR_3 . addValue ( STRING_2 , VAR_2 ) ; TYPE_1 VAR_4 = METHOD_3 ( ) . METHOD_4 ( STRING_3 , METHOD_5 ( ) , VAR_3 ) ; return VAR_4 ; } 
public static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , final java.lang.String VAR_2 , final java.lang.String id , final boolean VAR_3 , final boolean VAR_4 ) { TYPE_3 < TYPE_1 > VAR_5 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 , TYPE_5 . METHOD_3 ( id ) , VAR_3 , VAR_4 ) ; if ( ( VAR_5 . size ( ) ) == 0 ) { return null ; } return new java.util.ArrayList < TYPE_1 > ( VAR_5 ) . get ( 0 ) ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( TYPE_2 VAR_1 : VAR_2 . METHOD_2 ( ) ) { TYPE_3 < TYPE_2 > VAR_3 = new TYPE_3 < TYPE_2 > ( ) ; VAR_3 . METHOD_3 ( VAR_1 . getId ( ) ) ; parameters . add ( VAR_3 ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( METHOD_5 ( ) , parameters ) ; METHOD_6 ( ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; TYPE_3 < TYPE_4 < java.lang.String > > VAR_2 = new TYPE_3 < TYPE_4 < java.lang.String > > ( ) ; for ( java.lang.String VAR_3 : VAR_1 ) { TYPE_4 < java.lang.String > VAR_4 = new TYPE_4 < java.lang.String > ( ) ; VAR_4 . setItems ( VAR_5 ) ; VAR_4 . setSelectedItem ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; } setItems ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { if ( result != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( result ) ) . getReturnValue ( ) ) ) ; if ( vm == null ) { return ; } TYPE_2 VAR_1 = ( ( TYPE_2 ) ( model ) ) ; VAR_1 . METHOD_1 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ; } } 
protected boolean METHOD_1 ( ) { TYPE_1 validator = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , TYPE_2 . METHOD_3 ( ) ) ; return ( ( ( validate ( validator . METHOD_4 ( ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ) && ( validate ( validator . METHOD_7 ( TYPE_2 . getParameters ( ) . METHOD_8 ( ) ) ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > ( ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 : VAR_3 ) { if ( ! ( VAR_4 . METHOD_2 ( VAR_2 . getName ( ) ) ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) ) ) ; METHOD_3 ( cmd ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_5 ( cmd . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_4 . toString ( ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . getVm ( ) . METHOD_2 ( VAR_1 ) ; TYPE_1 . getVm ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( null ) ; org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < TYPE_1 > VAR_3 = ( ( java.util.List < TYPE_1 > ) ( result ) ) ; METHOD_3 ( ) . setItems ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } } ; TYPE_2 . getInstance ( ) . METHOD_6 ( VAR_1 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; TYPE_1 parameters = new TYPE_1 ( VAR_1 , STRING_1 , STRING_1 , false ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , parameters , aQuery ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( vm ) ; java.util.List < TYPE_2 < org.ovirt.engine.core.common.businessentities.VM , TYPE_3 > > VAR_4 = TYPE_4 . METHOD_3 ( new TYPE_2 ( vm , VAR_5 ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , false ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 . Collections < java.lang.String > METHOD_8 ( ) ) ; METHOD_9 ( false ) ; METHOD_10 ( false ) ; TYPE_3 . METHOD_11 ( command ) ; } 
protected TYPE_1 < java.lang.Boolean , TYPE_2 > METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain , org.ovirt.engine.core.compat.Guid VAR_1 , int type ) { org.ovirt.engine.core.common.businessentities.VDS vds = TYPE_3 . METHOD_2 ( ) . get ( VAR_1 ) ; if ( ! ( TYPE_3 . METHOD_3 ( vds ) ) ) { VAR_2 . error ( STRING_1 , vds . getName ( ) , storageDomain . getName ( ) ) ; METHOD_4 ( VAR_3 , null , vds ) ; return new TYPE_1 ( false , null ) ; } return super . METHOD_1 ( storageDomain , VAR_1 , type ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Disk > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ; VAR_1 . add ( new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ) ; TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( new org.ovirt.engine.core.common.businessentities.VM ( ) , null , VAR_1 ) , true , null ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . setId ( vmId ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_4 ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_3 . get ( vmId ) ) . thenReturn ( vm ) ; return vm ; } 
protected < TYPE_1 > TYPE_1 getEntity ( TYPE_2 < TYPE_1 > VAR_1 , TYPE_3 . VdcQueryType VAR_2 , TYPE_4 VAR_3 , java.lang.String VAR_4 , boolean VAR_5 ) { try { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } catch ( java.lang.Exception e ) { return METHOD_2 ( VAR_1 , e , VAR_5 ) ; } } 
public void METHOD_1 ( ) { if ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) { VAR_3 . METHOD_2 ( STRING_1 ) ; TYPE_1 . get ( VAR_4 class ) . METHOD_3 ( this , STRING_2 , new TYPE_2 [ ] { } , new java.lang.Object [ ] { } , VAR_1 < java.lang.Integer > getValue ( VAR_5 ) , VAR_1 < java.lang.Integer > getValue ( VAR_5 ) , VAR_6 ) ; VAR_3 . METHOD_2 ( STRING_3 ) ; } } 
private void METHOD_1 ( TYPE_1 . Disk disk , TYPE_2 . VdcActionType VAR_1 ) { TYPE_3 VAR_2 = disk . METHOD_2 ( VAR_3 ) ; METHOD_3 ( VAR_1 , new TYPE_4 ( new TYPE_3 ( disk . getId ( ) , TYPE_5 . getParameters ( ) . METHOD_4 ( ) ) , VAR_2 . METHOD_5 ( ) , VAR_2 . METHOD_6 ( ) ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ( ( ( ( VAR_1 . METHOD_2 ( CHAR_1 ) ) != ( - 1 ) ) || ( ( VAR_1 . METHOD_2 ( CHAR_2 ) ) != ( - 1 ) ) ) || ( ( VAR_1 . METHOD_2 ( CHAR_3 ) ) != ( - 1 ) ) ) || false ) { throw new TYPE_1 ( STRING_1 ) ; } } 
private java.lang.String METHOD_1 ( TYPE_1 client ) { try { TYPE_2 VAR_1 = new TYPE_3 ( INT_1 ) ; client . METHOD_2 ( VAR_2 < java.lang.String > METHOD_3 ( VAR_3 ) , null , VAR_1 , null ) ; return new java.lang.String ( VAR_1 . METHOD_4 ( ) , TYPE_4 . METHOD_5 ( STRING_1 ) ) ; } catch ( java.lang.Exception e ) { log . METHOD_6 ( STRING_2 , e ) ; return null ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { if ( returnValue != null ) { VAR_1 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; } else { VAR_1 = VAR_2 ; } TYPE_2 VAR_3 = ( ( TYPE_2 ) ( model ) ) ; VAR_3 . METHOD_1 ( ) . METHOD_2 ( VAR_3 , VAR_4 ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate template = ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( getSelectedItem ( ) ) ) ; if ( ( getWindow ( ) ) != null ) { return ; } org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { METHOD_2 ( ( ( org.ovirt.engine.core.common.businessentities.VmTemplate ) ( result ) ) ) ; } } ; TYPE_1 . METHOD_3 ( VAR_1 , template . getId ( ) ) ; } 
public boolean METHOD_1 ( TYPE_1 . VDS VAR_1 , TYPE_1 . VDS VAR_2 , TYPE_1 . VM vm ) { boolean returnValue = false ; boolean VAR_3 = ( VAR_1 . METHOD_2 ( ) ) == 0 ; boolean VAR_4 = ( VAR_2 . METHOD_2 ( ) ) == 0 ; if ( VAR_3 ) { if ( ! VAR_4 ) { returnValue = true ; } } else if ( ! VAR_4 ) { return super . METHOD_1 ( VAR_1 , VAR_2 , vm ) ; } return returnValue ; } 
public static TYPE_1 METHOD_1 ( TYPE_1 result ) { if ( TYPE_2 . METHOD_2 ( result . METHOD_3 ( ) ) ) { throw new TYPE_3 ( ( ( result . METHOD_4 ( ) ) != null ? result . METHOD_4 ( ) . METHOD_5 ( ) : VAR_1 ) , result . METHOD_3 ( ) ) ; } return result ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 . StorageDomain storageDomain = get ( ) ; if ( storageDomain . METHOD_2 ( ) . METHOD_3 ( ) . equals ( TYPE_3 . value ( ) ) ) { TYPE_4 params = new TYPE_4 ( VAR_1 ) ; params . METHOD_4 ( true ) ; return METHOD_5 ( VAR_2 , params ) ; } else { TYPE_5 params = new TYPE_5 ( VAR_1 , VAR_3 ) ; return METHOD_5 ( VAR_4 , params ) ; } } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final TYPE_2 cluster = new TYPE_2 ( ) ; cluster . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; java.util.List < java.lang.String > VAR_3 = TYPE_3 . METHOD_4 ( STRING_2 , STRING_3 , STRING_4 ) ; VAR_4 . METHOD_5 ( VAR_5 , VAR_2 , VAR_3 ) ; TYPE_4 . assertEquals ( STRING_2 , TYPE_5 . METHOD_6 ( VAR_1 , ( ) - > cluster ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( returnValue ) ) ; TYPE_2 VAR_2 = ( ( TYPE_2 ) ( model ) ) ; VAR_2 . METHOD_3 ( ) . setEntity ( VAR_1 ) ; } } , METHOD_4 ( ) ) , getVm ( ) . getId ( ) ) ; } 
private void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { VAR_1 = true ; for ( java.lang.Object a : METHOD_2 ( ) . METHOD_3 ( ) ) { org.ovirt.engine.core.compat . Version item = ( ( org.ovirt.engine.core.compat . Version ) ( a ) ) ; if ( TYPE_1 . METHOD_4 ( item , getEntity ( ) . METHOD_5 ( ) ) ) { METHOD_2 ( ) . setSelectedItem ( item ) ; break ; } } } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , null ) ; VAR_1 . METHOD_3 ( false ) ; cmd = org.mockito.Mockito . METHOD_4 ( new TYPE_2 ( new TYPE_3 ( VAR_2 , STRING_2 , STRING_3 , VAR_3 , null , null , TYPE_4 . METHOD_5 ( VAR_1 ) ) , null ) ) ; METHOD_6 ( VAR_4 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
public TYPE_1 . ValidationResult validate ( java.lang.Object value ) { boolean VAR_1 = VAR_2 . METHOD_1 ( java.lang.Integer . METHOD_2 ( METHOD_3 ( ) . getEntity ( ) . toString ( ) ) ) ; TYPE_1 . ValidationResult VAR_3 = new TYPE_1 . ValidationResult ( ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( TYPE_2 . METHOD_6 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_7 ( ) . METHOD_8 ( ) ) ) ; return VAR_3 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 pool = ( ( TYPE_2 ) ( returnValue ) ) ; boolean VAR_2 = ( pool . METHOD_2 ( ) ) == ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; } 
protected boolean METHOD_1 ( ) { return ( ( ( ( validate ( METHOD_2 ( METHOD_3 ( ) ) ) ) && ( validate ( METHOD_4 ( ) ) ) ) && ( validate ( METHOD_5 ( METHOD_3 ( ) ) ) ) ) && ( validate ( METHOD_6 ( METHOD_3 ( ) ) ) ) ) && ( validate ( METHOD_7 ( METHOD_3 ( ) ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( VAR_2 ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( true ) ; VAR_1 . METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( version ) ; VAR_1 . METHOD_6 ( true ) ; METHOD_7 ( version ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( java.util.List < TYPE_1 . DiskImage > VAR_1 ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_2 ( getVm ( ) . METHOD_3 ( ) , VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_3 . getInstance ( ) . METHOD_4 ( TYPE_4 . getParameters ( ) . getStoragePoolId ( ) , VAR_2 , METHOD_5 ( ) , getVm ( ) ) ; VAR_1 . METHOD_6 ( VAR_2 ) ; return storageDomain ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_3 . VdcQueryReturnValue VAR_2 = ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) ; TYPE_4 VAR_3 = VAR_2 . getReturnValue ( ) ; if ( VAR_3 != null ) { METHOD_3 ( VAR_3 ) ; } } } ) , VAR_1 . METHOD_4 ( ) , VAR_1 . getId ( ) , METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( client ) . when ( VAR_1 ) . METHOD_2 ( ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( VAR_1 ) . METHOD_4 ( client , VAR_2 , VAR_3 , VAR_4 ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( client ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_6 ) . when ( VAR_1 ) . METHOD_6 ( client ) ; org.mockito.Mockito . METHOD_7 ( VAR_7 class ) . when ( VAR_1 ) . METHOD_8 ( client ) ; } 
protected void METHOD_1 ( ) { TYPE_1 constants = org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) ; METHOD_2 ( ) . METHOD_3 ( constants . METHOD_4 ( ) ) ; METHOD_2 ( ) . METHOD_5 ( false ) ; METHOD_6 ( ) . METHOD_3 ( constants . METHOD_7 ( ) ) ; METHOD_6 ( ) . METHOD_5 ( false ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , int VAR_2 , int VAR_3 , java.lang.String VAR_4 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_5 = VAR_6 . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; TYPE_1 VAR_7 = new TYPE_1 ( VAR_5 ) ; return VAR_7 ; } catch ( TYPE_2 VAR_8 ) { throw new TYPE_3 ( VAR_8 ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > result = dao . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_1 . METHOD_4 ( result ) ; TYPE_1 . METHOD_5 ( result . isEmpty ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : result ) { TYPE_1 . assertEquals ( VAR_1 . METHOD_3 ( ) , vds . METHOD_3 ( ) ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.Integer VAR_1 = VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_3 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_4 ( ) . METHOD_5 ( STRING_2 , VAR_5 . instance , VAR_4 ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = TYPE_3 . METHOD_2 ( VAR_2 ) ; if ( METHOD_3 ( ) ) { VAR_1 . METHOD_4 ( VAR_3 ) ; } return TYPE_4 . METHOD_5 ( ) . METHOD_6 ( TYPE_4 . METHOD_7 ( ) . getId ( ) , VAR_1 ) ; } 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = ( ( METHOD_2 ( ) . METHOD_3 ( ) ) != null ) ? VAR_2 . Linq < TYPE_1 > METHOD_4 ( METHOD_2 ( ) . METHOD_3 ( ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_5 ( ( ( ( getSelectedItem ( ) ) != null ) && ( ( VAR_1 . size ( ) ) > 0 ) ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { java.lang.String VAR_2 = null ; TYPE_1 VAR_3 = METHOD_2 ( ) ; try { VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( ) ; VAR_2 = VAR_3 . METHOD_5 ( ) ; } catch ( TYPE_2 e ) { log . METHOD_6 ( STRING_1 , VAR_1 , TYPE_3 . METHOD_7 ( e ) ) ; } finally { VAR_3 . METHOD_8 ( ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 . Disk model = METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_4 ( ) . get ( 0 ) . setId ( null ) ; METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; try { VAR_2 . add ( model ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_9 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { for ( org.ovirt.engine.core.common.businessentities.DiskImage image : METHOD_2 ( ) ) { TYPE_1 VAR_2 = METHOD_3 ( image . METHOD_4 ( ) ) ; if ( VAR_2 . getSucceeded ( ) ) { METHOD_5 ( ) . METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; } else { throw new TYPE_2 ( VAR_2 . METHOD_8 ( ) . METHOD_9 ( ) , STRING_1 ) ; } } } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setEntity ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; METHOD_3 ( ) . setEntity ( ( ( java.lang.Boolean ) ( TYPE_3 . METHOD_6 ( VAR_2 ) ) ) ) ; } } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_3 ( vm ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_1 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; TYPE_1 < TYPE_2 > cmd = new TYPE_1 ( VAR_1 , null ) ; cmd . METHOD_3 ( vm ) ; cmd . METHOD_7 ( vm . getId ( ) ) ; return cmd ; } 
protected TYPE_1 METHOD_1 ( ) { final TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_3 ) ) . thenReturn ( new org.ovirt.engine.core.common.businessentities.VM ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( VAR_4 ) ) . METHOD_3 ( new TYPE_2 ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM VAR_1 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; VAR_1 . METHOD_2 ( VAR_2 . getId ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_3 ( ) ) . thenReturn ( TYPE_1 . METHOD_4 ( VAR_4 ) ) ; VAR_5 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 ) . METHOD_7 ( VAR_6 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 , org.mockito.Mockito . METHOD_8 ( 1 ) ) . METHOD_7 ( TYPE_2 . any ( VAR_7 . VM class ) ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 action ) { TYPE_3 VAR_1 = TYPE_4 . METHOD_2 ( this , id ) ; java.util.List < TYPE_5 > entities = METHOD_3 ( VAR_2 class , VAR_3 , new TYPE_6 ( VAR_1 ) ) ; if ( ( entities . size ( ) ) == 0 ) { return null ; } return METHOD_4 ( VAR_4 , new TYPE_7 ( VAR_1 , entities . get ( 0 ) . METHOD_5 ( ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { TYPE_1 VAR_1 = this . METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 . METHOD_4 ( ( ( ( ( STRING_1 + ( VAR_1 . METHOD_5 ( ) ) ) + STRING_2 ) + ( VAR_2 . getId ( ) ) ) + STRING_3 ) ) ; return VAR_2 . getId ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; parameters . METHOD_3 ( VAR_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; org.mockito.Mockito.when ( VAR_5 . get ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_6 ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_5 ( VAR_1 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_6 ( command ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( returnValue ) ) ; model . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; } } ) ; TYPE_2 . METHOD_4 ( VAR_1 , getEntity ( ) . getStoragePoolId ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( METHOD_2 ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getStoragePoolId ( ) , VAR_2 ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) . METHOD_7 ( VAR_3 ) ; METHOD_8 ( ) ; return new TYPE_1 ( VAR_4 , VAR_5 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < TYPE_1 > ( ) ; VAR_1 . add ( new TYPE_1 ( TYPE_2 . getParameters ( ) . getStoragePoolId ( ) , VAR_2 . StoragePool , VAR_3 ) ) ; VAR_1 . add ( new TYPE_1 ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) , VAR_2 . VDS , VAR_3 ) ) ; return VAR_1 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . getReturnValue ( ) ; boolean VAR_3 = false ; if ( ( VAR_2 != null ) && ( VAR_2 . getSucceeded ( ) ) ) { VAR_3 = true ; } METHOD_2 ( ( VAR_3 ? ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_2 . METHOD_3 ( ) ) ) : null ) , VAR_3 ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( true , vmId ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( VAR_4 . getId ( ) ) == null ) { VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } VAR_4 . METHOD_4 ( vmId ) ; VAR_3 . add ( VAR_4 , VAR_2 , false ) ; } } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ; model . METHOD_6 ( new TYPE_3 ( ) ) ; return model ; } 
public TYPE_1 METHOD_1 ( java.lang.String name ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( VAR_3 , new TYPE_3 ( null , METHOD_3 ( ) , name ) ) ; TYPE_4 VAR_4 = ( ( TYPE_4 ) ( VAR_1 . getReturnValue ( ) ) ) ; if ( VAR_4 == null ) { return null ; } return METHOD_4 ( VAR_4 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { TYPE_1 VAR_1 = vds . METHOD_2 ( ) ; return ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_2 ) ) || ( ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) && ( ( VAR_1 . METHOD_4 ( ) ) == ( VAR_4 ) ) ) ; } 
private java.lang.String METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( TYPE_2 . name ( ) ) . append ( java.lang.String . METHOD_2 ( STRING_1 , TYPE_3 . METHOD_3 ( ) ) ) . toString ( ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 storageDomain = METHOD_3 ( VAR_1 ) ; storageDomain . METHOD_4 ( VAR_2 ) ; METHOD_5 ( VAR_3 ) ; METHOD_6 ( VAR_4 , org.ovirt.engine.core.compat.Guid . METHOD_7 ( ) , VAR_3 ) ; TYPE_2 . METHOD_8 ( command . METHOD_9 ( ) ) ; TYPE_2 . METHOD_10 ( command . getReturnValue ( ) . METHOD_11 ( ) . METHOD_12 ( TYPE_3 . toString ( ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( VAR_3 [ VAR_1 ] . METHOD_2 ( ) , model . METHOD_3 ( ) ) ; assertEquals ( VAR_4 [ VAR_1 ] , model . getName ( ) ) ; METHOD_4 ( model . METHOD_5 ( ) ) ; METHOD_6 ( model ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VmTemplate VAR_1 = VAR_2 . get ( VAR_3 ) ; TYPE_1 . METHOD_2 ( VAR_1 ) ; java.lang.String name = VAR_1 . getName ( ) ; TYPE_1 . METHOD_3 ( name . equals ( VAR_4 . METHOD_4 ( VAR_3 , VAR_5 . VmTemplate ) ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 < org.ovirt.engine.core.common.businessentities.StorageDomain > > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_1 . METHOD_3 ( ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 ) - > VAR_2 . equals ( VAR_3 ) ) , TYPE_1 . METHOD_3 ( ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 ) - > VAR_2 . equals ( VAR_4 ) ) . METHOD_4 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_5 ) . METHOD_5 ( TYPE_3 . METHOD_6 ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 status ) { if ( ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) != status ) { TYPE_3 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 , new TYPE_4 ( TYPE_2 . METHOD_2 ( ) . getId ( ) , status ) ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . VdcQueryReturnValue VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . VdcQueryReturnValue class ) ; TYPE_3 . METHOD_3 ( VAR_3 . runQuery ( TYPE_3 . METHOD_4 ( VAR_4 ) , METHOD_5 ( ) ) ) . METHOD_6 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 . getSucceeded ( ) ) . METHOD_6 ( true ) . METHOD_7 ( ) ; TYPE_3 . METHOD_3 ( VAR_1 . getReturnValue ( ) ) . METHOD_6 ( METHOD_8 ( ) ) . METHOD_7 ( ) ; TYPE_2 . METHOD_9 ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.Boolean VAR_1 = java.lang.Boolean . TRUE ; TYPE_1 VAR_2 = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; if ( VAR_2 != null ) { METHOD_1 ( VAR_2 ) ; VAR_1 = VAR_2 . METHOD_2 ( ) ; ( ( TYPE_3 ) ( model ) ) . METHOD_3 ( ) . setEntity ( VAR_2 . METHOD_4 ( ) ) ; } ( ( TYPE_3 ) ( model ) ) . METHOD_5 ( ) . setEntity ( VAR_1 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( true ) ; java.util.List < java.lang.String > VAR_1 = new TYPE_1 < > ( ) ; boolean result = validator . METHOD_3 ( vds , null , VAR_1 ) ; TYPE_2 . METHOD_4 ( result ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 2 ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_6 ( STRING_1 ) ) ; TYPE_2 . METHOD_5 ( VAR_1 . METHOD_6 ( STRING_2 ) ) ; } 
protected void METHOD_1 ( ) { final TYPE_1 returnValue = METHOD_2 ( VAR_1 , TYPE_2 . getParameters ( ) ) ; METHOD_3 ( returnValue . getSucceeded ( ) ) ; if ( returnValue . getSucceeded ( ) ) { if ( TYPE_3 . METHOD_4 ( METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) . METHOD_7 ( ) ) ) { METHOD_8 ( ) ; } } else { METHOD_9 ( returnValue ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , true , true ) ) ; METHOD_5 ( VAR_4 . METHOD_6 ( VAR_3 [ 0 ] . toString ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_1 == null ) { return null ; } TYPE_3 status = VAR_1 . getStatus ( ) ; TYPE_4 VAR_2 = null ; java.lang.String VAR_3 ; switch ( status ) { case VAR_4 : VAR_3 = VAR_5 . METHOD_2 ( ) ; break ; case VAR_6 : VAR_3 = VAR_5 . METHOD_3 ( ) ; break ; case VAR_7 : VAR_3 = VAR_5 . METHOD_4 ( ) ; break ; default : VAR_3 = VAR_5 . METHOD_3 ( ) ; } return TYPE_5 . METHOD_5 ( VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( 1 , VAR_4 ) ; VAR_6 . METHOD_4 ( ) ; VAR_7 . METHOD_5 ( VAR_1 ) ; try { METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_8 ) { METHOD_8 ( VAR_8 , VAR_9 , VAR_4 ) ; } finally { VAR_2 . METHOD_9 ( ) ; } } 
protected void METHOD_1 ( ) { METHOD_2 ( null ) ; TYPE_1 . getInstance ( ) . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_4 ( ) . setItems ( ( ( TYPE_2 < org.ovirt.engine.core.common.businessentities.VDS > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } } ) , vm . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( boolean VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . setId ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( true ) ) . thenReturn ( VAR_2 ) ; if ( VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS VAR_5 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_5 . setId ( VAR_6 ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( true , VAR_3 ) ) . thenReturn ( VAR_5 ) ; } } 
private java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list , boolean VAR_1 , boolean VAR_2 ) { final java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : list ) { if ( ( VAR_1 && ( cluster . METHOD_2 ( ) ) ) || ( VAR_2 && ( cluster . METHOD_3 ( ) ) ) ) { VAR_3 . add ( cluster ) ; } } TYPE_1 . METHOD_4 ( VAR_3 , new TYPE_2 ( ) ) ; return VAR_3 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( null ) ; parameters . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_1 . METHOD_5 ( ) ) ) . thenReturn ( VAR_5 ) ; TYPE_2 . METHOD_6 ( command ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { return TYPE_1 . METHOD_2 ( vm , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , vm . METHOD_4 ( ) , METHOD_5 ( ) . getValue ( ) , false , false , false , false , true , false , false , true , TYPE_3 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { VAR_2 . METHOD_2 ( STRING_1 ) ; try { long VAR_3 = TYPE_1 . METHOD_3 ( TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_1 ) . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( VAR_4 < java.lang.Integer > METHOD_7 ( VAR_5 ) ) ) ; VAR_3 = TYPE_1 . METHOD_3 ( VAR_4 < java.lang.Integer > METHOD_7 ( VAR_6 ) , VAR_3 ) ; METHOD_8 ( VAR_1 ) . METHOD_9 ( VAR_3 , VAR_7 ) ; } catch ( TYPE_4 e ) { } } 
private TYPE_1 METHOD_1 ( TYPE_2 . VdcActionType VAR_1 , TYPE_2 . VdcActionParametersBase VAR_2 ) { try { TYPE_3 VAR_3 = new TYPE_3 ( 1 ) ; TYPE_4 < TYPE_5 > . TYPE_6 VAR_4 = new TYPE_6 ( VAR_3 , VAR_1 , VAR_2 ) ; TYPE_7 . METHOD_2 ( VAR_4 ) ; try { VAR_3 . METHOD_3 ( ) ; } catch ( TYPE_8 e ) { } return VAR_4 . getReturnValue ( ) ; } catch ( TYPE_9 VAR_5 ) { VAR_6 . error ( STRING_1 , VAR_5 ) ; return null ; } } 
protected void METHOD_1 ( boolean VAR_1 , boolean VAR_2 , java.lang.String VAR_3 ) throws java.lang.Exception { METHOD_2 ( VAR_4 , VAR_5 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 [ 1 ] } , METHOD_3 ( VAR_6 [ 1 ] ) ) ; METHOD_4 ( 0 ) ; METHOD_5 ( 0 ) ; super . METHOD_1 ( VAR_1 , VAR_2 , VAR_3 ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = ( ( TYPE_3 ) ( item ) ) . getStatus ( ) ; if ( VAR_1 == ( VAR_2 ) ) { return VAR_3 . METHOD_2 ( ) ; } else if ( VAR_1 == ( VAR_4 ) ) { return VAR_3 . METHOD_3 ( ) ; } else { return VAR_3 . METHOD_4 ( ) ; } } 
private static void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) throws TYPE_1 { TYPE_2 VAR_3 = new TYPE_3 ( VAR_1 ) ; TYPE_4 VAR_4 = new TYPE_5 ( VAR_2 ) ; byte [ ] VAR_5 = new byte [ INT_1 ] ; int VAR_6 ; while ( ( VAR_6 = VAR_3 . METHOD_2 ( VAR_5 ) ) > 0 ) { VAR_4 . METHOD_3 ( VAR_5 , 0 , VAR_6 ) ; } VAR_3 . METHOD_4 ( ) ; VAR_4 . METHOD_4 ( ) ; } 
protected boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; return ( validate ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 . getId ( ) ) ) ) && ( validate ( TYPE_2 . METHOD_3 ( ) . METHOD_5 ( VAR_1 ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; TYPE_2 . assertEquals ( 2 , VAR_1 . size ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_5 ) ) ; TYPE_2 . assertEquals ( TYPE_3 . getValue ( ) , VAR_1 . get ( VAR_5 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_6 ) ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_1 . get ( VAR_6 ) ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic ) { org.ovirt.engine.core.common.businessentities . Network VAR_2 = new org.ovirt.engine.core.common.businessentities . Network ( ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( nic . METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( nic . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( nic . METHOD_8 ( ) ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_2 , this ) ; VAR_4 . put ( VAR_1 , VAR_3 ) ; return VAR_3 ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true , VAR_1 ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 ) ; java.util.List < TYPE_4 > VAR_5 = METHOD_4 ( VAR_1 , VAR_6 ) ; for ( TYPE_4 VAR_7 : VAR_5 ) { VAR_7 . METHOD_5 ( STRING_1 ) ; } org.mockito.Mockito.doReturn ( VAR_5 ) . when ( VAR_8 ) . METHOD_6 ( VAR_1 ) ; TYPE_5 . METHOD_7 ( VAR_9 . METHOD_8 ( cluster , VAR_2 ) . isEmpty ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; if ( ( VAR_1 != null ) && ( ! ( VAR_1 . isEmpty ( ) ) ) ) { pool = VAR_1 . get ( 0 ) ; METHOD_1 ( pool . getId ( ) , getEntity ( ) . getId ( ) ) ; } } 
private void METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = VAR_1 . METHOD_2 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { if ( ( ! ( vm . METHOD_3 ( ) ) ) && ( ( vm . METHOD_4 ( ) ) != null ) ) { TYPE_1 . METHOD_5 ( vm . METHOD_4 ( ) , vm . getId ( ) , VAR_2 , new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( ) ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( INT_1 , null ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . size ( ) ) == 2 ) ) ; for ( java.lang.String model : TYPE_3 . METHOD_4 ( STRING_1 ) ) { TYPE_2 . METHOD_3 ( VAR_1 . METHOD_5 ( model . METHOD_6 ( ) ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_1 . METHOD_6 ( ) , TYPE_1 . any ( VAR_3 . Version class ) ) ) . thenReturn ( TYPE_2 . METHOD_7 ( STRING_1 ) ) ; command . METHOD_8 ( ) ; TYPE_3 . METHOD_9 ( command , VAR_5 ) ; } 
protected void METHOD_1 ( TYPE_1 iface , boolean VAR_1 , TYPE_2 VAR_2 , boolean VAR_3 ) { org.mockito.Mockito.when ( VAR_4 . METHOD_2 ( iface . METHOD_3 ( ) ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_5 . add ( iface , TYPE_4 . getInstance ( ) ) ) ; METHOD_4 ( iface , VAR_2 ) ; } 
public int METHOD_1 ( ) { final int VAR_1 = INT_1 ; int result = 1 ; result = ( VAR_1 * result ) + ( ( VAR_2 ) * VAR_1 ) ; result = ( VAR_1 * result ) + ( ( VAR_3 ) == null ? 0 : VAR_3 . METHOD_1 ( ) ) ; result = ( VAR_1 * result ) + ( ( VAR_4 ) == null ? 0 : VAR_4 . METHOD_1 ( ) ) ; return result ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { final java.util.List < java.lang.String > VAR_1 = VAR_2 < java.util.List < java.lang.String > > METHOD_2 ( VAR_3 ) ; java.lang.String VAR_4 = TYPE_2 . getInstance ( ) . get ( VAR_5 class ) . METHOD_3 ( ) . get ( vm . METHOD_4 ( ) ) ; for ( java.lang.String VAR_6 : VAR_1 ) { if ( VAR_6 . METHOD_5 ( VAR_4 ) ) { return new TYPE_1 . ValidationResult ( VAR_7 ) ; } } return VAR_8 ; } 
public static void METHOD_1 ( TYPE_1 disk , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( disk ) ; TYPE_2 . METHOD_4 ( new TYPE_3 ( disk . getId ( ) , vmId ) , VAR_1 , VAR_2 , null , true , false , null ) ; } 
public TYPE_1 add ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 , STRING_1 , STRING_2 , STRING_3 ) ; METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 ) ; TYPE_3 VAR_2 = METHOD_4 ( VAR_3 class , VAR_4 class ) . map ( VAR_1 , null ) ; VAR_2 . METHOD_5 ( METHOD_6 ( VAR_5 . get ( ) . getId ( ) ) ) ; METHOD_7 ( VAR_1 , VAR_2 ) ; return METHOD_8 ( VAR_6 , new TYPE_4 ( VAR_2 ) , new TYPE_5 ( VAR_7 , VAR_8 . IdQueryParameters class ) , true ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) { if ( ( a . METHOD_1 ( ) ) == ( VAR_1 ) ) { list . add ( a ) ; } } model . METHOD_2 ( model , list ) ; } 
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 , boolean VAR_2 , boolean VAR_3 ) { VAR_4 . METHOD_2 ( VAR_5 , null , VAR_2 ) ; org.mockito.Mockito.when ( nic . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_2 . assertEquals ( VAR_1 , validator . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_1 . METHOD_5 ( ) ; TYPE_1 model = TYPE_2 . getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . METHOD_2 ( METHOD_3 ( ) ) ; TYPE_1 entity = ( ( TYPE_1 ) ( METHOD_3 ( ) . getEntity ( ) ) ) ; if ( entity == null ) return ; VAR_3 . METHOD_4 ( entity . METHOD_5 ( ) ) ; VAR_4 . METHOD_4 ( entity . METHOD_6 ( ) ) ; VAR_5 . METHOD_4 ( entity . METHOD_7 ( ) ) ; VAR_6 . METHOD_4 ( entity . METHOD_8 ( ) ) ; VAR_7 . METHOD_9 ( METHOD_3 ( ) ) ; } 
public java.util.ArrayList < java.lang.String > METHOD_1 ( java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; if ( VAR_3 . METHOD_2 ( VAR_1 ) ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_4 = VAR_3 . get ( VAR_1 ) ; for ( TYPE_1 < java.lang.String , java.lang.String > VAR_5 : VAR_4 . METHOD_3 ( ) ) { VAR_2 . add ( VAR_5 . METHOD_4 ( ) ) ; } } else { VAR_6 . METHOD_5 ( VAR_7 , VAR_1 ) ; } return VAR_2 ; } 
public static TYPE_1 valueOf ( TYPE_2 VAR_1 ) { for ( TYPE_1 VAR_2 : TYPE_1 . METHOD_1 ( ) ) { if ( VAR_2 . METHOD_2 ( ) . equals ( VAR_1 ) ) { return VAR_2 ; } } throw new TYPE_3 ( ( ( ( ( STRING_1 + ( VAR_1 . name ( ) ) ) + STRING_2 ) + ( VAR_3 class . getName ( ) ) ) + STRING_3 ) ) ; } 
public boolean METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; METHOD_2 ( ) . METHOD_3 ( new TYPE_2 [ ] { VAR_1 } ) ; getValue ( ) . METHOD_3 ( new TYPE_2 [ ] { VAR_1 } ) ; return ( METHOD_2 ( ) . METHOD_4 ( ) ) && ( getValue ( ) . METHOD_4 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities . Disk > ( ) ; } } ; TYPE_1 params = new TYPE_1 ( VAR_1 ) ; params . METHOD_2 ( vmId ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; } 
public void METHOD_1 ( ) { TYPE_1 < TYPE_2 > parameters = new TYPE_1 < TYPE_2 > ( ) ; parameters . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_2 , parameters , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_4 VAR_3 ) { TYPE_5 VAR_4 = VAR_3 . getReturnValue ( ) ; boolean VAR_5 = false ; if ( ( VAR_4 != null ) && ( VAR_4 . getSucceeded ( ) ) ) { VAR_5 = true ; } METHOD_5 ( VAR_5 ) ; } } ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( null ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( METHOD_7 ( VAR_2 ) ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_9 ( VAR_3 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_1 ( VAR_1 , TYPE_2 . METHOD_2 ( ) , METHOD_3 ( ) , TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) , METHOD_6 ( ) , METHOD_7 ( ) , TYPE_2 . getParameters ( ) . METHOD_8 ( ) . METHOD_9 ( ) , false ) ; if ( ( TYPE_2 . METHOD_10 ( ) ) != null ) { METHOD_11 ( ) ; } } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 class ) ) ) . thenReturn ( METHOD_4 ( VAR_3 , VAR_4 ) ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) , VAR_3 , VAR_4 ) ) . when ( VAR_5 ) . METHOD_7 ( TYPE_1 . any ( VAR_6 . Guid class ) , TYPE_1 . any ( VAR_2 class ) ) ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_4 ( ) ; TYPE_3 . METHOD_5 ( command . validate ( ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . METHOD_2 ( true ) ; METHOD_3 ( true ) ; METHOD_4 ( ) . METHOD_2 ( true ) ; } 
public boolean METHOD_1 ( final TYPE_1 VAR_1 ) { return METHOD_2 ( new TYPE_2 < java.lang.Boolean > ( ) { public java.lang.Boolean METHOD_3 ( ) { try { VAR_2 . METHOD_1 ( VAR_1 . METHOD_4 ( ) . toString ( ) ) ; return true ; } catch ( TYPE_3 VAR_3 ) { if ( ( VAR_3 . getStatus ( ) ) == ( VAR_4 ) ) { return false ; } throw VAR_3 ; } } } ) ; } 
public static java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > result = null ; if ( VAR_1 != null ) { result = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ; for ( org.ovirt.engine.core.common.businessentities.DiskImage diskImage : VAR_1 ) { result . put ( diskImage . METHOD_2 ( ) , diskImage ) ; } } return result ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , int VAR_1 ) { for ( int VAR_2 = 1 ; VAR_2 <= VAR_1 ; VAR_2 ++ ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vmId ) , VAR_3 , VAR_4 , VAR_5 , true , false ) ; } } 
public TYPE_1 METHOD_1 ( final TYPE_1 VAR_1 ) { return METHOD_2 ( VAR_1 , new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_2 , VAR_3 . IdQueryParameters class ) , VAR_4 , new TYPE_3 < TYPE_1 , TYPE_1 > ( ) { public TYPE_4 . VdcActionParametersBase getParameters ( TYPE_1 model , TYPE_1 entity ) { return new TYPE_5 ( VAR_5 , map ( VAR_1 , entity ) ) ; } } ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_4 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_4 ) . METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_5 ) ; } 
public TYPE_1 getValue ( TYPE_2 value ) { setTitle ( value . METHOD_1 ( ) ) ; if ( ( ( value . METHOD_1 ( ) ) != null ) && ( ( value . METHOD_1 ( ) ) != STRING_1 ) ) { return TYPE_3 . METHOD_2 ( ) . METHOD_3 ( ) ; } return null ; } 
public void METHOD_1 ( ) { TYPE_1 . Disk model = METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . get ( 0 ) . setId ( null ) ; METHOD_5 ( METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ) ; try { VAR_2 . add ( model ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_9 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.lang.String id = STRING_1 ; TYPE_1 log = org.mockito.Mockito . METHOD_2 ( VAR_1 class ) ; org.mockito.Mockito.when ( log . METHOD_3 ( ) ) . thenReturn ( true ) ; TYPE_2 . METHOD_4 ( log , id , new TYPE_3 ( ) , null ) ; org.mockito.Mockito . METHOD_5 ( log ) . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) , new java.lang.Object [ ] { TYPE_4 . METHOD_8 ( ) , TYPE_4 . METHOD_7 ( STRING_1 ) } ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VM > vms = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_1 ( vms , new TYPE_3 ( ) ) ; setItems ( vms ) ; METHOD_2 ( ( ( vms . size ( ) ) == 0 ) ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > models = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; models . add ( VAR_1 ) ; TYPE_3 VAR_2 = new TYPE_3 ( ) ; models . add ( VAR_2 ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; models . add ( VAR_3 ) ; for ( TYPE_1 model : models ) { model . METHOD_2 ( VAR_4 ) ; } return models ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = ( ( org.ovirt.engine.core.common.businessentities.VDS ) ( METHOD_2 ( ) . getSelectedItem ( ) ) ) ; if ( vds == null ) { vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; } METHOD_3 ( vds , null , false , null ) ; METHOD_4 ( ) . setIsChangable ( false ) ; } 
private static java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( TYPE_1 model ) { return model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ( VAR_1 ) - > VAR_1 . METHOD_6 ( ) ? VAR_1 . METHOD_7 ( ) . getName ( ) : null , ( VAR_1 ) - > VAR_1 . METHOD_8 ( ) ? TYPE_3 . map ( VAR_1 . METHOD_9 ( ) , null ) : null ) ) ; } 
public java.lang.Object METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { org.ovirt.engine.core.compat.Guid VAR_2 = ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_1 . METHOD_2 ( ) [ 0 ] ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = new TYPE_3 < > ( ) ; for ( TYPE_4 < java.util.List < TYPE_5 > , org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 : VAR_5 . METHOD_3 ( ) ) { VAR_3 . add ( VAR_4 . METHOD_4 ( ) ) ; } return VAR_3 ; } 
private boolean METHOD_1 ( ) { boolean VAR_1 = false ; TYPE_1 action = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; VAR_2 = METHOD_3 ( VAR_3 , false ) ; if ( ( VAR_4 ) != null ) { java.lang.String VAR_5 = VAR_4 . METHOD_4 ( ) ; if ( ( ( action == ( VAR_6 ) ) && ( VAR_5 . equals ( STRING_1 ) ) ) || ( ( action == ( VAR_7 ) ) && ( VAR_5 . equals ( STRING_2 ) ) ) ) VAR_1 = true ; } return VAR_1 ; } 
private static TYPE_1 METHOD_1 ( TYPE_2 < ? > resource , java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 node = new TYPE_3 ( ) . name ( resource . METHOD_2 ( ) ) . METHOD_3 ( VAR_1 ) . METHOD_4 ( VAR_2 ) . METHOD_5 ( TYPE_4 . METHOD_6 ( resource ) ) . METHOD_7 ( TYPE_4 . METHOD_8 ( resource ) ) . METHOD_9 ( ) ; if ( ! ( VAR_3 . METHOD_10 ( resource ) ) ) { VAR_3 . put ( resource , node ) ; } return node ; } 
private java.lang.String METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = STRING_1 ; if ( VAR_1 == ( VAR_3 ) ) { VAR_2 = VAR_4 . METHOD_2 ( ) ; } else if ( VAR_1 == ( VAR_5 ) ) { VAR_2 = VAR_4 . METHOD_3 ( ) ; } return VAR_2 ; } 
protected void METHOD_1 ( ) { if ( org.ovirt.engine.core.common.businessentities.VM . METHOD_2 ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) ) { METHOD_4 ( TYPE_2 . getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 , new TYPE_3 ( TYPE_1 . METHOD_7 ( ) , TYPE_1 . getVm ( ) . getId ( ) , VAR_2 ) ) . getReturnValue ( ) ) ; TYPE_1 . METHOD_8 ( true ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( null ) ) ; METHOD_4 ( 1 ) ; METHOD_5 ( 1 ) ; METHOD_6 ( INT_1 ) ; METHOD_7 ( STRING_2 ) ; java.util.List < TYPE_1 > VAR_2 = METHOD_8 ( ) ; METHOD_9 ( VAR_2 . get ( 0 ) . METHOD_10 ( ) ) ; METHOD_11 ( VAR_2 ) ; } finally { VAR_1 . METHOD_12 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 . VM vm = new TYPE_1 . VM ( ) ; TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; vm . METHOD_4 ( VAR_1 ) ; TYPE_1 . VM map = TYPE_3 . map ( vm , null ) ; METHOD_5 ( map . METHOD_6 ( ) . METHOD_7 ( ) ) ; assertEquals ( map . METHOD_6 ( ) . METHOD_7 ( ) , STRING_1 ) ; } 
protected TYPE_1 < org.ovirt.engine.core.common.businessentities.VmTemplate > METHOD_1 ( ) { TYPE_2 params = new TYPE_2 ( METHOD_2 ( VAR_1 ) , VAR_1 ) ; params . METHOD_3 ( true ) ; java.util.Map < org.ovirt.engine.core.common.businessentities.VmTemplate , TYPE_3 > VAR_2 = getEntity ( VAR_3 . HashMap class , VAR_4 , params , ( STRING_1 + ( VAR_1 . toString ( ) ) ) ) ; return VAR_2 . METHOD_4 ( ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( result . METHOD_2 ( ) ) ) ; VAR_2 = true ; TYPE_3 VAR_3 = result . getReturnValue ( ) ; VAR_4 . METHOD_3 ( ( ( java.lang.String ) ( VAR_3 . METHOD_4 ( ) ) ) ) ; VAR_5 . METHOD_5 ( ( ( java.lang.String ) ( VAR_3 . METHOD_4 ( ) ) ) ) ; } 
protected java.lang.Object METHOD_1 ( TYPE_1 result , TYPE_2 VAR_1 , TYPE_3 < ? extends TYPE_4 > VAR_2 ) { try { return VAR_1 . METHOD_2 ( ( ( org.ovirt.engine.core.compat.Guid ) ( result . METHOD_3 ( ) ) ) ) ; } catch ( java.lang.Exception e ) { e . METHOD_4 ( ) ; return null ; } } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_2 = hosts ; VAR_1 . METHOD_2 ( ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 model = ( ( TYPE_2 ) ( target ) ) ; VAR_1 = ( ( java.lang.Integer ) ( returnValue ) ) ; METHOD_3 ( ) ; } } ) ) ; } 
public void METHOD_1 ( ) { for ( TYPE_1 model : TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = TYPE_3 . map ( model , null ) ; TYPE_4 . METHOD_3 ( VAR_1 ) ; TYPE_4 . assertEquals ( VAR_1 . name ( ) . METHOD_4 ( ) , model . name ( ) . METHOD_4 ( ) ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 1 ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_8 ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_3 . METHOD_9 ( STRING_1 ) ) ; METHOD_10 ( true ) ; } 
private TYPE_1 METHOD_1 ( ) { if ( ( this . VAR_1 ) == null ) { TYPE_2 VAR_2 = new TYPE_2 ( ) ; inject ( VAR_2 ) ; TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( STRING_1 ) ; this . VAR_1 = ( ( TYPE_1 ) ( VAR_1 ) ) ; } return this . VAR_1 ; } 
public TYPE_1 add ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 , STRING_1 ) ; METHOD_2 ( VAR_2 class , VAR_1 ) ; if ( ! ( VAR_1 . METHOD_3 ( ) ) ) { METHOD_1 ( VAR_1 , STRING_2 ) ; } org.ovirt.engine.core.common.businessentities.StoragePool entity = map ( VAR_1 ) ; return METHOD_4 ( VAR_3 , new TYPE_3 ( entity ) , new TYPE_4 < org.ovirt.engine.core.compat.Guid > ( VAR_4 , VAR_5 . IdQueryParameters class ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; VAR_1 . METHOD_3 ( STRING_2 ) ; VAR_1 . METHOD_4 ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; TYPE_1 VAR_3 = VAR_2 . METHOD_5 ( ) . get ( VAR_1 . getName ( ) ) ; TYPE_3 . METHOD_7 ( VAR_3 ) ; TYPE_3 . assertEquals ( VAR_1 , VAR_3 ) ; } 
protected void METHOD_1 ( java.util.ArrayList < TYPE_1 > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { METHOD_2 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_3 ( ) ) ; return ; } TYPE_2 < TYPE_3 > VAR_2 = METHOD_4 ( ) ; VAR_2 . METHOD_5 ( METHOD_6 ( ) . METHOD_7 ( ) ) ; VAR_2 . METHOD_5 ( METHOD_8 ( VAR_1 . METHOD_9 ( ) ) ) ; METHOD_6 ( ) . setItems ( new java.util.ArrayList < TYPE_3 > ( VAR_2 ) ) ; METHOD_10 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
private void METHOD_1 ( TYPE_1 < TYPE_2 . Disk > VAR_1 ) { for ( TYPE_2 . Disk disk : VAR_1 ) { if ( disk instanceof TYPE_3 ) { continue ; } TYPE_2 . DiskImage diskImage = VAR_2 . DiskImage class . METHOD_2 ( disk ) ; TYPE_4 . METHOD_3 ( STRING_1 , diskImage . METHOD_4 ( ) ) ; } } 
private java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 . DiskImage > METHOD_1 ( TYPE_2 < TYPE_3 . Disk > VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 . DiskImage > result = new java.util.HashMap < > ( ) ; for ( TYPE_3 . Disk diskImage : VAR_1 ) { result . put ( ( ( TYPE_1 . DiskImage ) ( diskImage ) ) . getId ( ) , ( ( TYPE_1 . DiskImage ) ( diskImage ) ) ) ; } return result ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 model ) { if ( ( ( model . METHOD_2 ( ) ) == null ) || ( ( model . METHOD_2 ( ) . METHOD_3 ( ) ) == null ) ) { return false ; } java.lang.String version = model . METHOD_2 ( ) . METHOD_3 ( ) . getValue ( ) ; return ( ( java.lang.Boolean ) ( TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_1 , version ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( VAR_1 , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { METHOD_3 ( ) . setEntity ( ( ( java.lang.Integer ) ( returnValue ) ) ) ; METHOD_4 ( ) ; } } ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . Integer class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_5 class ) ) ; VAR_2 . METHOD_6 ( VAR_6 , VAR_7 ) ; org.mockito.Mockito . METHOD_7 ( VAR_6 ) . METHOD_8 ( VAR_8 , VAR_1 ) ; org.mockito.Mockito . METHOD_7 ( VAR_6 ) . METHOD_8 ( VAR_9 , VAR_4 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) . get ( VAR_1 . getName ( ) ) ; TYPE_2 . METHOD_4 ( VAR_2 ) ; TYPE_2 . assertEquals ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( final int VAR_1 , final int VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( vm ) ; TYPE_1 < TYPE_2 > cmd = METHOD_4 ( vm , VAR_3 ) ; TYPE_3 . METHOD_5 ( cmd ) ; return cmd ; } 
protected java.lang.String METHOD_1 ( TYPE_1 < TYPE_2 , ? > column ) { if ( VAR_1 ) { return ( ( ( ( VAR_2 ) + STRING_1 ) + ( METHOD_2 ( ) ) ) + STRING_1 ) + ( METHOD_3 ( METHOD_4 ( column ) ) ) ; } return null ; } 
public static TYPE_1 map ( TYPE_2 entity , TYPE_1 template ) { TYPE_1 model = ( template == null ) ? new TYPE_1 ( ) : template ; model . METHOD_1 ( new TYPE_3 ( ) ) ; if ( entity == ( VAR_1 ) ) { TYPE_4 VAR_2 = new TYPE_4 ( ) ; VAR_2 . setId ( TYPE_5 . toString ( ) ) ; model . METHOD_2 ( ) . METHOD_2 ( ) . add ( VAR_2 ) ; } return model ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; getModel ( ) . METHOD_2 ( ) . setEntity ( ( ! ( VAR_2 . isEmpty ( ) ) ) ) ; } } ) ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.common.businessentities . Network network ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 , false , null , network . METHOD_4 ( ) , network . getName ( ) , network . METHOD_5 ( ) ) ; return nic ; } 
public java.util.ArrayList < java.lang.Integer > METHOD_1 ( ) { java.util.ArrayList < java.lang.Integer > VAR_1 = new java.util.ArrayList < java.lang.Integer > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { java.lang.String VAR_3 = METHOD_3 ( VAR_4 . get ( VAR_2 ) , STRING_1 , null ) ; if ( ( VAR_3 != null ) && ( VAR_3 . METHOD_4 ( STRING_2 ) ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 , java.lang.String VAR_4 ) { TYPE_1 VAR_5 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_6 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) . addValue ( STRING_4 , TYPE_3 . METHOD_5 ( VAR_3 ) ) . addValue ( STRING_5 , VAR_4 ) . addValue ( STRING_6 , false ) ) ; return VAR_5 ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { return new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_1 ) , VAR_2 , STRING_1 , STRING_2 , 2 , new java.util.HashMap < > ( ) , true , false , false , STRING_3 , TYPE_3 . METHOD_3 ( STRING_4 , STRING_5 ) , null , null ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( VAR_1 . DbFacade class ) ; org.mockito.Mockito.when ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) ) . thenReturn ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( METHOD_4 ( ) ) . thenReturn ( METHOD_5 ( ) ) . thenReturn ( METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_4 = VAR_1 . METHOD_5 ( ) ; TYPE_3 . assertEquals ( VAR_3 , VAR_4 . getId ( ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; status = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( vmId . toString ( ) ) ; TYPE_1 . METHOD_5 ( ) ; TYPE_2 . getInstance ( ) . METHOD_6 ( vmId ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String value ) { if ( METHOD_2 ( ) ) { VAR_3 . METHOD_3 ( VAR_2 ) ; VAR_3 . METHOD_4 ( value ) ; } else { VAR_4 . METHOD_5 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; throw new TYPE_1 ( ( ( STRING_3 + VAR_1 ) + STRING_4 ) ) ; } } 
private TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_1 < TYPE_2 > VAR_1 = new TYPE_3 < TYPE_2 > ( ) ; VAR_1 . add ( new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 ) ) ; VAR_1 . add ( new TYPE_2 ( VAR_5 , VAR_6 , VAR_4 ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { final org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; command = METHOD_3 ( 0 , 0 , VAR_1 ) ; METHOD_4 ( command ) ; METHOD_5 ( command ) ; VAR_2 = org.mockito.Mockito . METHOD_6 ( VAR_3 class ) ; VAR_4 = org.mockito.Mockito . METHOD_6 ( VAR_5 class ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { java.lang.String VAR_2 = ( ( TYPE_3 ) ( args ) ) . VAR_3 ; if ( STRING_1 . equals ( VAR_2 ) ) { VAR_4 . setTitle ( ( model . METHOD_2 ( ) . METHOD_3 ( ) ? VAR_5 . METHOD_4 ( ) : VAR_5 . METHOD_5 ( ) ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Disk model = new TYPE_1 . Disk ( ) ; METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 , STRING_5 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; TYPE_1 VAR_1 = METHOD_3 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_4 [ 1 ] } , true , true , false ) ; VAR_1 = METHOD_4 ( VAR_1 , VAR_5 , TYPE_2 . toString ( ) ) ; METHOD_5 ( VAR_1 ) ; VAR_6 . METHOD_6 ( ) ; METHOD_7 ( resource . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = null ; final java.lang.String value = VAR_3 ; final java.lang.String VAR_4 = STRING_1 ; VAR_1 . METHOD_2 ( VAR_2 , value , VAR_4 ) ; final java.lang.String VAR_5 = VAR_1 . METHOD_3 ( VAR_2 ) ; TYPE_3 . assertEquals ( value , VAR_5 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 < ? > VAR_1 = ( ( TYPE_2 . METHOD_2 ( ) . getTable ( ) ) != null ) ? TYPE_2 . METHOD_2 ( ) . getTable ( ) . METHOD_3 ( ) : null ; if ( VAR_1 != null ) { METHOD_4 ( VAR_1 . METHOD_5 ( new TYPE_3 ( ) { public void METHOD_6 ( TYPE_4 event ) { METHOD_7 ( ) ; } } ) ) ; } } 
private static boolean METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , TYPE_1 VAR_2 , org.ovirt.engine.core.compat . Version version , org.ovirt.engine.core.common.businessentities.network.Network network ) { if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_2 ( ) ) ) { if ( TYPE_2 . METHOD_3 ( version ) ) { VAR_1 . put ( VAR_3 , ( network == null ? VAR_4 . Collections < java.lang.String > METHOD_4 ( ) : TYPE_3 . METHOD_5 ( network . getName ( ) ) ) ) ; } else { return false ; } } return true ; } 
private void METHOD_1 ( ) { VAR_1 . METHOD_2 ( new TYPE_1 < TYPE_2 > ( ) { public java.lang.String METHOD_3 ( TYPE_2 entity ) { return entity . METHOD_4 ( ) ; } } , VAR_2 . METHOD_5 ( ) ) ; VAR_1 . METHOD_2 ( new TYPE_3 < TYPE_2 , TYPE_4 > ( ) { protected TYPE_4 METHOD_6 ( TYPE_2 entity ) { return entity . getStatus ( ) ; } } , VAR_2 . METHOD_7 ( ) ) ; } 
public final void METHOD_1 ( TYPE_1 status , java.lang.String VAR_1 ) { java.util.ArrayList < java.lang.String > VAR_2 = null ; if ( ! ( ( VAR_2 = VAR_3 . get ( status ) ) != null ) ) { VAR_2 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_3 . put ( status , VAR_2 ) ; } if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { VAR_2 . add ( VAR_1 ) ; } } 
public TYPE_1 add ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 , STRING_1 ) ; if ( METHOD_2 ( VAR_1 ) ) { VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) . setId ( METHOD_5 ( VAR_1 ) ) ; } return METHOD_6 ( VAR_2 , new TYPE_3 ( map ( VAR_1 ) ) , new TYPE_4 ( VAR_1 . getName ( ) ) ) ; } 
public void METHOD_1 ( java.lang.Object VAR_1 , java.lang.Object VAR_2 ) { TYPE_1 VAR_3 = ( ( TYPE_1 ) ( VAR_1 ) ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storage = ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_2 ) ) . getReturnValue ( ) ) ) ; VAR_3 . METHOD_2 ( storage . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( ) . METHOD_5 ( this , VAR_4 ) ; } 
protected java.util.ArrayList < TYPE_1 > METHOD_1 ( ) { java.util.ArrayList < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int i = 0 ; i < ( VAR_2 . length ) ; i ++ ) { TYPE_1 user = new TYPE_1 ( ) ; user . setId ( VAR_3 [ i ] ) ; user . METHOD_2 ( VAR_2 [ i ] ) ; user . METHOD_3 ( VAR_2 [ i ] ) ; VAR_1 . add ( user ) ; } return VAR_1 ; } 
protected void METHOD_1 ( ) { if ( ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) != ( VAR_2 ) ) { METHOD_4 ( METHOD_5 ( ) , VAR_3 ) ; VAR_4 . log ( this , VAR_5 ) ; } else { METHOD_6 ( ) ; } TYPE_1 . METHOD_7 ( true ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ! ( ( ( java.util.List < ? > ) ( source ) ) . isEmpty ( ) ) ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
private java.lang.String METHOD_1 ( ) { if ( VAR_1 ) { return VAR_2 ; } if ( ( VAR_3 ) == null ) { boolean VAR_4 = TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . METHOD_4 ( ) ) ; VAR_3 = ( VAR_4 && ( TYPE_1 . METHOD_5 ( TYPE_2 . getVm ( ) . METHOD_4 ( ) ) ) ) ? METHOD_6 ( ) . METHOD_7 ( ) : VAR_2 ; } return VAR_3 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 , java.lang.Integer value , int VAR_3 , java.lang.String VAR_4 ) { if ( value != null ) { java.lang.String VAR_5 = value + STRING_1 ; java.lang.String VAR_6 = VAR_3 + STRING_1 ; VAR_2 . METHOD_2 ( ( value < ( VAR_7 ) ? STRING_2 : VAR_5 ) ) ; VAR_2 . METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( VAR_6 ) ; VAR_1 . METHOD_5 ( ( value != 0 ) ) ; VAR_1 . setTitle ( VAR_5 ) ; } } 
protected void METHOD_1 ( ) { java.lang.String VAR_1 = METHOD_2 ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) , TYPE_1 . METHOD_4 ( ) , TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; org.ovirt.engine.core.common.businessentities.VM result = null ; if ( VAR_1 != null ) { result = METHOD_6 ( VAR_1 ) ; METHOD_7 ( result ) ; } else { result = METHOD_8 ( ) ; } TYPE_2 . METHOD_9 ( result , result . METHOD_10 ( ) ) ; TYPE_1 . METHOD_11 ( ) . METHOD_12 ( result ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( VAR_1 ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { if ( VAR_3 . get ( i ) . getId ( ) . equals ( VAR_1 . getId ( ) ) ) { VAR_3 . METHOD_2 ( i ) ; break ; } } METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_4 ) ; } 
protected TYPE_1 [ ] METHOD_1 ( ) { final int VAR_1 = METHOD_2 ( ) ; return new TYPE_1 [ ] { new TYPE_2 ( ) , new TYPE_3 ( VAR_1 ) , new TYPE_4 ( ) { protected java.lang.String METHOD_3 ( ) { return org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; } } , new TYPE_5 ( VAR_2 ) } ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( ( ! ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) && ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_4 ( ) ) ) { addCanDoActionMessage ( VAR_2 ) ; VAR_1 = false ; } return VAR_1 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { for ( TYPE_1 VAR_1 : ( ( TYPE_2 < TYPE_1 > ) ( returnValue ) ) ) { VAR_2 . add ( METHOD_1 ( VAR_1 . getName ( ) , VAR_1 . METHOD_2 ( ) , VAR_1 . METHOD_3 ( ) ) ) ; } setItems ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; cmd = org.mockito.Mockito . METHOD_5 ( new TYPE_2 ( VAR_1 ) ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_2 , VAR_4 , VAR_3 ) ) . when ( VAR_5 ) . METHOD_7 ( VAR_2 ) ; METHOD_8 ( cmd ) ; TYPE_3 . METHOD_9 ( cmd . validate ( ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 , TYPE_2 VAR_2 ) { try { TYPE_3 VAR_3 = TYPE_3 . METHOD_2 ( ) ; TYPE_4 VAR_4 = VAR_3 . METHOD_3 ( ) ; VAR_4 . METHOD_4 ( VAR_2 ) ; java.lang.Object VAR_5 = VAR_4 . METHOD_5 ( VAR_1 , node , VAR_6 ) ; if ( VAR_5 != null ) { return new TYPE_1 ( ( ( TYPE_5 ) ( VAR_5 ) ) ) ; } return null ; } catch ( TYPE_6 e ) { throw new TYPE_7 ( ( STRING_1 + VAR_1 ) , e ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; VAR_2 . METHOD_5 ( ) ; TYPE_1 . Disk disk = resource . get ( ) ; METHOD_6 ( disk . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( disk , 1 ) ; METHOD_9 ( disk ) ; } finally { VAR_1 . METHOD_10 ( ) ; } } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , STRING_1 , TYPE_2 . getValue ( ) , TYPE_3 . getValue ( ) ) ; validator = org.mockito.Mockito . METHOD_3 ( new TYPE_4 ( VAR_1 , new java.util.ArrayList < java.lang.String > ( ) ) ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_3 . get ( VAR_4 . METHOD_4 ( ) . getId ( ) ) ) . thenReturn ( VAR_4 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( VAR_5 , VAR_6 ) ; } 
public TYPE_1 < TYPE_2 , TYPE_3 < TYPE_4 > , TYPE_5 > METHOD_1 ( TYPE_6 VAR_1 , TYPE_7 < TYPE_8 > VAR_2 , final TYPE_7 < TYPE_3 < TYPE_4 > > VAR_3 , final TYPE_7 < TYPE_5 > VAR_4 , final TYPE_7 < TYPE_9 > VAR_5 ) { TYPE_10 < TYPE_2 , TYPE_3 < TYPE_4 > , TYPE_5 > result = new TYPE_10 < TYPE_2 , TYPE_3 < TYPE_4 > , TYPE_5 > ( VAR_1 , VAR_2 ) ; result . METHOD_2 ( VAR_3 ) ; result . METHOD_3 ( VAR_4 ) ; return result ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; java.lang.Object [ ] VAR_2 = null ; java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_3 ( VAR_2 ) ; TYPE_3 . METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_4 . assertEquals ( null , VAR_1 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( result . METHOD_2 ( ) ) ) ; TYPE_3 VAR_2 = result . getReturnValue ( ) ; VAR_3 . METHOD_3 ( ( ( java.lang.String ) ( VAR_2 . METHOD_4 ( ) ) ) ) ; VAR_4 . METHOD_5 ( ( ( java.lang.String ) ( VAR_2 . METHOD_4 ( ) ) ) ) ; } 
protected void METHOD_1 ( TYPE_1 node , TYPE_2 iface ) { super . METHOD_1 ( node , iface ) ; iface . METHOD_2 ( node . METHOD_3 ( VAR_1 , VAR_2 ) . VAR_3 ) ; iface . METHOD_4 ( ( ( node . METHOD_3 ( STRING_1 , VAR_2 ) ) != null ? node . METHOD_3 ( STRING_1 , VAR_2 ) . VAR_3 : STRING_2 ) ) ; } 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : VAR_3 . METHOD_2 ( ) ) { java.lang.String name = TYPE_1 . METHOD_3 ( iface . getName ( ) ) ; if ( name == null ) { continue ; } else if ( ( name . equals ( VAR_1 ) ) && ( VAR_2 . equals ( iface . METHOD_4 ( ) ) ) ) { return true ; } } return false ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; TYPE_1 parameters = new TYPE_1 ( VAR_1 , null , null , false ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , parameters , aQuery ) ; } 
protected TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_2 ) ) ; VAR_2 . add ( VAR_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 ) ; VAR_3 . setItems ( VAR_4 ) ; return VAR_3 ; } 
private static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list , boolean VAR_1 , boolean VAR_2 ) { final java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : list ) { if ( ( VAR_1 && ( cluster . METHOD_2 ( ) ) ) || ( VAR_2 && ( cluster . METHOD_3 ( ) ) ) ) { VAR_3 . add ( cluster ) ; } } TYPE_1 . METHOD_4 ( VAR_3 , new TYPE_2 ( ) ) ; return VAR_3 ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; TYPE_1 VAR_3 = org.mockito.Mockito . METHOD_3 ( VAR_4 class ) ; org.mockito.Mockito.when ( VAR_3 . getSucceeded ( ) ) . thenReturn ( true ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_2 . any ( VAR_5 . VdcActionType class ) , TYPE_2 . any ( VAR_6 class ) ) ) . thenReturn ( VAR_3 ) ; } 
private void METHOD_1 ( TYPE_1 . Disk disk , TYPE_2 VAR_1 , TYPE_3 . ValidationResult VAR_2 ) { TYPE_4 VAR_3 = org.mockito.Mockito . METHOD_2 ( new TYPE_4 ( disk , VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_4 ) . METHOD_3 ( disk , VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_4 ( TYPE_5 . any ( VAR_5 . Guid class ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = dao . get ( VAR_4 ) ; VAR_5 = dao . get ( VAR_6 ) ; VAR_7 = new TYPE_1 ( ) ; VAR_7 . METHOD_4 ( STRING_1 ) ; VAR_7 . METHOD_5 ( STRING_2 ) ; VAR_7 . METHOD_6 ( VAR_8 ) ; VAR_9 = new TYPE_2 ( VAR_10 , VAR_4 ) ; } 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { VAR_1 . error ( STRING_1 , METHOD_2 ( ) . getName ( ) ) ; java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : hosts ) { VAR_2 . add ( new TYPE_1 ( vds . getId ( ) , 1 ) ) ; } return VAR_2 ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status , java.lang.String name ) { final org.ovirt.engine.core.common.businessentities.StorageDomain domain = METHOD_2 ( status , name , VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( domain ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return domain ; } 
protected void METHOD_1 ( ) { if ( METHOD_2 ( ) . getEntity ( ) ) { METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; METHOD_5 ( ) . setIsChangable ( false ) ; METHOD_6 ( ) . setIsChangable ( false ) ; METHOD_7 ( ) . setIsChangable ( false ) ; METHOD_8 ( ) . setIsChangable ( false ) ; } super . METHOD_1 ( ) ; } 
private static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_4 , new TYPE_2 ( VAR_5 ) , VAR_1 ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 class ) . to ( VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_3 class ) . to ( VAR_4 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_5 class ) . to ( VAR_6 ) ; METHOD_4 ( VAR_7 class , VAR_8 class , VAR_9 class , VAR_10 class ) ; METHOD_5 ( VAR_11 class ) . METHOD_6 ( VAR_12 class ) ; METHOD_5 ( VAR_13 class ) . METHOD_6 ( VAR_12 class ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = super . METHOD_1 ( ) ; VAR_1 . put ( TYPE_1 . name ( ) . METHOD_2 ( ) , ( ( METHOD_3 ( ) ) == null ? STRING_1 : METHOD_3 ( ) ) ) ; VAR_1 . put ( TYPE_2 . name ( ) . METHOD_2 ( ) , METHOD_4 ( ) ) ; } return VAR_1 ; } 
public static TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 , java.lang.String VAR_2 , final java.lang.String id , final boolean VAR_3 , final boolean VAR_4 ) { TYPE_3 < TYPE_1 > VAR_5 = TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 , TYPE_5 . METHOD_3 ( id ) , VAR_3 , VAR_4 ) ; if ( ( VAR_5 . size ( ) ) == 0 ) { return null ; } return new java.util.ArrayList < TYPE_1 > ( VAR_5 ) . get ( 0 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 vm = new TYPE_1 ( ) ; vm . METHOD_2 ( STRING_1 ) ; vm . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; vm . METHOD_5 ( new TYPE_3 ( ) ) ; TYPE_4 . METHOD_6 ( vm , STRING_2 , STRING_3 , STRING_4 ) ; } 
protected java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 VAR_2 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain storage : VAR_1 ) { if ( storage . METHOD_2 ( ) . equals ( VAR_2 ) ) { VAR_3 . add ( storage ) ; } } return VAR_3 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( true , 2 ) ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( VAR_2 ) , TYPE_1 . any ( VAR_3 class ) ) ; VAR_1 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( VAR_5 class ) ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_4 , new TYPE_4 ( getName ( ) , VAR_1 , false ) ) ; java.util.List < TYPE_5 > VAR_5 = ( ( java.util.List < TYPE_5 > ) ( VAR_2 . getReturnValue ( ) ) ) ; return METHOD_3 ( VAR_5 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 , true , VAR_5 ) ; org.mockito.Mockito . METHOD_3 ( VAR_6 ) . METHOD_4 ( VAR_2 , VAR_5 ) ; org.mockito.Mockito . METHOD_3 ( VAR_6 ) . METHOD_4 ( VAR_3 , VAR_5 ) ; TYPE_1 VAR_7 = org.mockito.Mockito . METHOD_5 ( VAR_8 , VAR_9 ) ; VAR_7 . METHOD_3 ( VAR_8 ) . METHOD_6 ( VAR_4 ) ; VAR_7 . METHOD_3 ( VAR_9 ) . METHOD_7 ( VAR_4 ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_3 parameters = new TYPE_3 ( VAR_1 , TYPE_4 . getParameters ( ) . METHOD_2 ( ) , TYPE_4 . getParameters ( ) . METHOD_3 ( ) ) ; parameters . METHOD_4 ( TYPE_4 . getParameters ( ) . METHOD_5 ( ) ) ; parameters . METHOD_6 ( true ) ; return TYPE_5 . getInstance ( ) . METHOD_7 ( VAR_2 , parameters , TYPE_6 . METHOD_8 ( TYPE_4 . METHOD_9 ( ) ) ) ; } 
private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , org.ovirt.engine.core.compat.Guid vmId ) { java.util.List < TYPE_3 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { VAR_2 . add ( METHOD_2 ( VAR_3 , vmId ) ) ; } TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 , vmId ) ; VAR_4 . METHOD_3 ( VAR_5 ) ; return VAR_4 ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final java.lang.String VAR_2 = STRING_1 ; final java.lang.String value = null ; final java.lang.String VAR_3 = STRING_2 ; final java.lang.String VAR_4 = STRING_3 ; VAR_1 . METHOD_2 ( VAR_2 , value ) ; VAR_1 . METHOD_3 ( VAR_2 , VAR_3 , VAR_4 ) ; final java.lang.String VAR_5 = VAR_1 . METHOD_4 ( VAR_2 ) ; TYPE_3 . assertEquals ( ( ( value + VAR_4 ) + VAR_3 ) , VAR_5 ) ; } 
private void METHOD_1 ( TYPE_1 type ) { TYPE_2 VAR_1 = VAR_2 . METHOD_2 ( type ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 class ) ; VAR_3 . METHOD_3 ( VAR_5 class ) ; VAR_3 . METHOD_4 ( STRING_1 , VAR_1 . METHOD_5 ( ) ) ; VAR_3 . METHOD_4 ( STRING_2 , VAR_1 . METHOD_5 ( ) ) ; VAR_3 . METHOD_4 ( STRING_3 ) ; VAR_3 . METHOD_4 ( ) ; } 
public java.util.ArrayList < java.lang.Integer > METHOD_1 ( ) { java.util.ArrayList < java.lang.Integer > VAR_1 = new java.util.ArrayList < > ( ) ; for ( int VAR_2 : METHOD_2 ( ) ) { java.lang.String VAR_3 = METHOD_3 ( VAR_4 . get ( VAR_2 ) , STRING_1 , null ) ; if ( STRING_2 . METHOD_4 ( VAR_3 ) ) { VAR_1 . add ( VAR_2 ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 = METHOD_2 ( VAR_3 , VAR_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_4 = METHOD_3 ( VAR_2 . getName ( ) ) ; METHOD_4 ( VAR_2 , VAR_4 ) ; VAR_2 . METHOD_5 ( null ) ; TYPE_1 parameters = METHOD_6 ( VAR_2 , VAR_4 ) ; TYPE_2 VAR_5 = METHOD_7 ( parameters ) ; METHOD_8 ( VAR_5 ) ; METHOD_9 ( VAR_5 ) ; METHOD_10 ( VAR_5 ) ; METHOD_11 ( VAR_5 , VAR_1 ) ; METHOD_12 ( VAR_5 ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; java.lang.String VAR_3 = ( ( java.lang.String ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ; VAR_2 . METHOD_2 ( ) . METHOD_3 ( VAR_3 ) ; VAR_2 . METHOD_4 ( ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = new TYPE_3 ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_2 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_2 . METHOD_5 ( new java.lang.Object [ ] { VAR_1 } ) ; TYPE_4 VAR_4 = VAR_5 . METHOD_6 ( VAR_6 , new TYPE_5 ( null , METHOD_4 ( ) , VAR_2 ) ) ; java.util.List < TYPE_6 > VAR_7 = ( ( java.util.List < TYPE_6 > ) ( VAR_4 . getReturnValue ( ) ) ) ; return METHOD_7 ( VAR_7 ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String name , java.lang.Boolean VAR_1 , java.lang.String VAR_2 , java.lang.Integer VAR_3 , java.lang.String VAR_4 , boolean VAR_5 ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; iface . setId ( id ) ; iface . METHOD_2 ( name ) ; iface . METHOD_3 ( VAR_1 ) ; iface . METHOD_4 ( VAR_2 ) ; iface . METHOD_5 ( VAR_3 ) ; iface . METHOD_6 ( VAR_4 ) ; iface . METHOD_7 ( VAR_5 ) ; return iface ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 < TYPE_2 > ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_7 ( ) , VAR_2 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_2 ) ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_3 ) ) ; VAR_1 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( VAR_4 ) ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; VAR_1 . METHOD_7 ( STRING_1 ) ; VAR_1 . METHOD_8 ( VAR_7 ) ; VAR_1 . METHOD_9 ( VAR_8 ) ; dao . METHOD_10 ( VAR_1 ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( VAR_4 ) ; VAR_1 . METHOD_5 ( VAR_5 ) ; VAR_1 . METHOD_6 ( VAR_6 ) ; VAR_1 . METHOD_7 ( VAR_7 ) ; VAR_1 . METHOD_8 ( VAR_8 ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 id , TYPE_3 type , TYPE_4 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 , boolean VAR_3 , boolean VAR_4 , java.lang.String VAR_5 , java.lang.String VAR_6 ) { TYPE_1 VAR_7 = TYPE_5 . METHOD_1 ( id , type , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; if ( TYPE_6 . METHOD_2 ( VAR_5 ) ) { VAR_7 . METHOD_3 ( VAR_5 ) ; } return VAR_7 ; } 
private boolean METHOD_1 ( ) { return ( TYPE_1 . getParameters ( ) . METHOD_1 ( ) ) || ( ! ( METHOD_2 ( TYPE_1 . METHOD_3 ( ) . getId ( ) , VAR_1 , TYPE_1 . METHOD_4 ( ) , VAR_2 . VM ) ) ) ; } 
private void METHOD_1 ( TYPE_1 version , TYPE_2 ... VAR_1 ) { if ( TYPE_3 . METHOD_2 ( version , VAR_2 ) ) { version . METHOD_3 ( new TYPE_4 ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { version . METHOD_4 ( ) . METHOD_4 ( ) . add ( VAR_3 . value ( ) ) ; } } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( VAR_1 ) ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( VAR_2 ) ) . when ( VAR_3 ) . METHOD_5 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_4 ) ) . when ( VAR_3 ) . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( cmd ) . METHOD_8 ( ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_2 ( VAR_1 , new TYPE_1 ( ( ( java.lang.String ) ( METHOD_3 ( ) . getEntity ( ) ) ) , ( ( java.lang.String ) ( METHOD_4 ( ) . getEntity ( ) ) ) , ( ( java.lang.String ) ( METHOD_5 ( ) . getEntity ( ) ) ) , ( ( java.lang.String ) ( METHOD_6 ( ) . getSelectedItem ( ) ) ) ) ) ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( ! ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) { org.ovirt.engine.core.compat . Version version = TYPE_1 . METHOD_4 ( ) . METHOD_5 ( ) ; VAR_1 = VAR_2 < java.lang.Boolean > METHOD_6 ( VAR_3 , version . getValue ( ) ) ; if ( ! VAR_1 ) { addCanDoActionMessage ( VAR_4 ) ; } } return VAR_1 ; } 
private void METHOD_1 ( ) { METHOD_2 ( null ) ; org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.List < TYPE_1 > VAR_3 = ( ( java.util.List < TYPE_1 > ) ( result ) ) ; METHOD_3 ( ) . setItems ( VAR_3 ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; } } ; TYPE_2 . METHOD_6 ( VAR_1 ) ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; VAR_3 = VAR_2 ; VAR_1 . METHOD_2 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_1 ( ) , aQuery ) ; } 
protected void METHOD_1 ( ) { for ( TYPE_1 . VdcActionParametersBase VAR_1 : getParameters ( ) . METHOD_2 ( ) ) { VAR_1 . METHOD_3 ( getParameters ( ) . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_2 , VAR_1 , TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( ) . METHOD_10 ( ) . METHOD_11 ( ) ) ; } } 
protected TYPE_1 . VdcActionParametersBase METHOD_1 ( TYPE_1 . VdcActionType VAR_1 , TYPE_1 . VdcActionParametersBase parameters ) { TYPE_1 . VdcActionType VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_1 . VdcActionParametersBase VAR_3 = METHOD_3 ( ) ; if ( ( VAR_2 == ( VAR_4 ) ) || ( VAR_3 == null ) ) { return parameters ; } VAR_3 . METHOD_4 ( parameters . METHOD_5 ( ) ) ; VAR_3 . METHOD_6 ( VAR_2 ) ; return VAR_3 ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vm . getId ( ) ) ; java.lang.String VAR_2 = TYPE_2 . METHOD_4 ( VAR_1 ) . toString ( ) . METHOD_5 ( ) ; java.lang.String VAR_3 = vm . METHOD_6 ( ) . toString ( ) . METHOD_5 ( ) ; if ( VAR_3 . equals ( VAR_2 ) ) VAR_4 . add ( VAR_5 , VAR_2 ) ; else VAR_4 . add ( VAR_5 , VAR_3 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } } ; TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 , VAR_2 . StorageDomain ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_3 , VAR_1 , aQuery ) ; } 
protected void METHOD_1 ( TYPE_1 parameters ) { super . METHOD_2 ( parameters . METHOD_3 ( ) ) ; if ( ( ( METHOD_4 ( ) ) != null ) && ( ( METHOD_4 ( ) . getStoragePoolId ( ) ) != null ) ) { METHOD_5 ( METHOD_4 ( ) . getStoragePoolId ( ) . getValue ( ) ) ; } } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; if ( ( getVm ( ) ) != null ) { TYPE_2 . METHOD_3 ( getVm ( ) ) ; } else { TYPE_1 . METHOD_4 ( false ) ; VAR_1 . METHOD_5 ( STRING_1 ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.lang.String VAR_2 = TYPE_2 . METHOD_2 ( VAR_1 ) ; switch ( VAR_1 . METHOD_3 ( ) ) { case NORMAL : VAR_3 . METHOD_4 ( VAR_2 ) ; break ; case ERROR : VAR_3 . error ( VAR_2 ) ; break ; case VAR_4 : case VAR_5 : default : VAR_3 . METHOD_5 ( VAR_2 ) ; break ; } } 
private static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS host , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface ) { TYPE_1 VAR_2 = ( TYPE_2 . METHOD_2 ( host . METHOD_3 ( ) ) ) ? new TYPE_3 ( VAR_1 , iface , host ) : new TYPE_4 ( VAR_1 , iface , host ) ; VAR_2 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( VAR_2 , STRING_1 , VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_4 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_5 = METHOD_2 ( VAR_2 , STRING_2 , VAR_6 ) ; org.mockito.Mockito.when ( VAR_7 . METHOD_4 ( TYPE_1 . any ( VAR_8 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_5 ( VAR_1 , VAR_5 ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; TYPE_3 . assertEquals ( VAR_5 , cmd . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( TYPE_1 . instance ( ) . METHOD_5 ( ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_2 VAR_2 = METHOD_8 ( METHOD_9 ( nic ) ) ; METHOD_10 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_4 = METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_4 ( VAR_6 ) ; METHOD_5 ( VAR_7 , VAR_8 ) ; METHOD_6 ( VAR_9 , org.ovirt.engine.core.compat.Guid . METHOD_7 ( ) , VAR_7 ) ; TYPE_1 . METHOD_8 ( command , VAR_10 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_4 : VAR_2 ) { VAR_3 . add ( VAR_4 . getName ( ) ) ; } VAR_3 . add ( VAR_5 . METHOD_1 ( ) ) ; VAR_1 . METHOD_2 ( ) . setItems ( VAR_3 ) ; } 
public void setItems ( TYPE_1 value ) { java.util.ArrayList < TYPE_2 . Disk > VAR_1 = ( value != null ) ? VAR_2 . Linq < TYPE_2 . Disk > METHOD_1 ( value ) : new java.util.ArrayList < TYPE_2 . Disk > ( ) ; TYPE_3 . METHOD_2 ( VAR_1 , new TYPE_4 ( ) ) ; super . setItems ( VAR_1 ) ; METHOD_3 ( ) ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 id , boolean VAR_1 , boolean VAR_2 ) { return TYPE_3 . METHOD_2 ( id , VAR_3 , ( VAR_2 ? VAR_4 : VAR_5 ) , VAR_6 . Collections < java.lang.String , java.lang.Object > METHOD_3 ( ) , VAR_1 , false , null ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == null ) { METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_4 ( ) . setIsChangable ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ; METHOD_4 ( ) . setIsChangable ( ( ( java.lang.Boolean ) ( METHOD_2 ( ) . getEntity ( ) ) ) ) ; } } 
public static TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_3 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 , org.ovirt.engine.core.compat.Guid VAR_4 , org.ovirt.engine.core.compat.Guid VAR_5 , org.ovirt.engine.core.compat.Guid VAR_6 ) { if ( TYPE_4 . METHOD_2 ( VAR_2 , VAR_5 ) ) { TYPE_5 . DiskImage VAR_7 = TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 , VAR_6 , VAR_1 . getId ( ) ) ; return TYPE_4 . METHOD_4 ( VAR_1 . METHOD_5 ( ) , VAR_7 . METHOD_6 ( ) ) ; } return null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , ( ! ( iface . METHOD_5 ( ) ) ) , iface . METHOD_6 ( ) , iface . METHOD_7 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( VAR_2 == null ) { VAR_2 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( ) . METHOD_4 ( VAR_2 ) ; } TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_5 ( STRING_1 ) ; VAR_3 . METHOD_6 ( STRING_2 ) ; VAR_3 . METHOD_7 ( false ) ; VAR_2 . METHOD_3 ( ) . add ( VAR_3 ) ; } 
public void METHOD_1 ( ) { java.lang.Integer VAR_1 = INT_1 ; TYPE_1 VAR_2 = dao . get ( VAR_3 ) ; TYPE_2 . METHOD_2 ( STRING_1 , VAR_2 . METHOD_3 ( ) , VAR_1 ) ; METHOD_1 ( VAR_3 , VAR_1 ) ; VAR_2 = dao . get ( VAR_3 ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_2 . METHOD_3 ( ) , VAR_1 ) ; } 
private static java.lang.String METHOD_1 ( java.util.ArrayList < TYPE_1 . Disk > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { return null ; } final java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 . Disk disk : VAR_1 ) { VAR_2 . add ( disk . METHOD_2 ( ) ) ; } return TYPE_2 . METHOD_3 ( VAR_2 , STRING_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; org.mockito.Mockito.when ( VAR_4 . get ( VAR_1 . METHOD_3 ( ) ) ) . thenReturn ( null ) ; parameters . METHOD_4 ( VAR_1 ) ; TYPE_2 . METHOD_5 ( command , VAR_5 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( VAR_2 ) ; vds . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_1 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( vds ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < > ( ) ; if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { VAR_1 . add ( TYPE_1 . METHOD_2 ( ) ) ; } return VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , vm , VAR_1 , TYPE_2 . METHOD_5 ( ) , new java.util.ArrayList < > ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) ) ; java.util.List < TYPE_3 . DiskImage > VAR_1 = TYPE_4 . METHOD_3 ( TYPE_2 . getVm ( ) . METHOD_4 ( ) . METHOD_5 ( ) , true , false ) ; if ( ! ( VAR_1 . isEmpty ( ) ) ) { for ( TYPE_3 . DiskImage diskImage : VAR_1 ) { VAR_2 . add ( diskImage . METHOD_6 ( ) ) ; } METHOD_7 ( STRING_1 , TYPE_5 . METHOD_8 ( VAR_2 , STRING_2 ) ) ; } } 
protected boolean METHOD_1 ( ) { TYPE_1 < TYPE_2 > . TYPE_3 validator = new TYPE_3 ( VAR_1 , METHOD_2 ( ) , TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) ; return ( ( ( validate ( validator . METHOD_4 ( ) ) ) && ( validate ( validator . METHOD_5 ( ) ) ) ) && ( validate ( validator . METHOD_6 ( ) ) ) ) && ( validate ( validator . METHOD_7 ( ) ) ) ; } 
private double METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.common.businessentities.VM vm , int VAR_1 ) { int VAR_2 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ; int VAR_5 = ( ( vds . METHOD_3 ( ) ) == ( VAR_6 ) ) ? 0 : VAR_3 < java.lang.Integer > METHOD_2 ( VAR_7 ) ; double VAR_8 = vds . METHOD_4 ( ) ; double VAR_9 = vds . METHOD_5 ( ) ; return ( VAR_8 / VAR_2 ) + ( ( ( VAR_9 + ( vm . METHOD_6 ( ) ) ) + VAR_5 ) / VAR_1 ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . getId ( ) , VAR_2 ) ; java.util.List < java.lang.String > result = new java.util.ArrayList < java.lang.String > ( VAR_1 . size ( ) ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { result . add ( VAR_3 . METHOD_4 ( ) ) ; } TYPE_2 . METHOD_5 ( ) . METHOD_6 ( result ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; for ( TYPE_2 VAR_1 : METHOD_5 ( ) ) { TYPE_3 . METHOD_6 ( VAR_1 . METHOD_7 ( ) , TYPE_1 . METHOD_4 ( ) ) ; } TYPE_1 . METHOD_8 ( true ) ; } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_5 = METHOD_3 ( VAR_3 ) ; TYPE_2 < org.ovirt.engine.core.common.businessentities.network.Network > VAR_6 = new TYPE_2 ( VAR_7 . METHOD_4 ( VAR_8 . get ( VAR_2 ) . METHOD_5 ( ) ) ) ; for ( TYPE_1 VAR_9 : VAR_1 ) { METHOD_1 ( VAR_5 , VAR_6 , VAR_9 ) ; } } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , TYPE_1 VAR_3 , java.lang.Integer VAR_4 , TYPE_1 VAR_5 ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_2 > VAR_6 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_2 > ( ) ; TYPE_3 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( TYPE_2 network ) { java.util.List < TYPE_1 > result = new java.util.ArrayList < > ( ) ; TYPE_3 VAR_1 = METHOD_2 ( ) . METHOD_3 ( ) . list ( ) . METHOD_4 ( ) ; for ( TYPE_4 VAR_2 : VAR_1 . METHOD_5 ( ) ) { if ( network . METHOD_6 ( ) . equals ( VAR_2 . METHOD_7 ( ) ) ) { result . add ( map ( VAR_2 , network ) ) ; } } return result ; } 
protected boolean METHOD_1 ( ) { return ( ( ( ( ( ( ( ( ( ( ( METHOD_2 ( ) ) && ( METHOD_3 ( ) ) ) && ( METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ) && ( METHOD_6 ( ) ) ) && ( METHOD_7 ( ) ) ) && ( METHOD_8 ( ) ) ) && ( METHOD_9 ( ) ) ) && ( METHOD_10 ( ) ) ) && ( METHOD_11 ( ) ) ) && ( METHOD_12 ( ) ) ) && ( METHOD_13 ( ) ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 , org.ovirt.engine.core.common.businessentities.DiskImage disk ) { org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_3 . put ( VAR_2 , org.ovirt.engine.core.common.businessentities.DiskImage . METHOD_3 ( disk ) ) ; disk . setId ( VAR_2 ) ; disk . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; for ( int i = 0 ; i < ( ( VAR_1 . size ( ) ) - 1 ) ; i ++ ) { VAR_1 . get ( i ) . setId ( disk . getId ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 model , int VAR_1 ) { METHOD_2 ( model ) ; assertEquals ( model . getId ( ) , java.lang.String.valueOf ( VAR_2 [ VAR_1 ] ) ) ; assertEquals ( model . METHOD_3 ( ) , VAR_3 ) ; assertEquals ( model . METHOD_4 ( ) , VAR_4 [ VAR_1 ] ) ; assertEquals ( model . METHOD_5 ( ) , VAR_5 [ VAR_1 ] ) ; assertEquals ( model . METHOD_6 ( ) , VAR_6 [ VAR_1 ] ) ; } 
void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( VAR_1 class ) . to ( VAR_2 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_3 class ) . to ( VAR_4 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_5 class ) . to ( VAR_6 ) ; METHOD_2 ( ) . METHOD_3 ( VAR_7 class ) . to ( VAR_8 ) ; METHOD_4 ( VAR_9 class , VAR_10 class , VAR_11 class , VAR_12 class , VAR_13 class ) ; METHOD_5 ( VAR_14 class ) . METHOD_6 ( VAR_15 class ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; java.lang.String name = VAR_1 . METHOD_4 ( ) ; TYPE_2 . METHOD_5 ( name . equals ( VAR_2 . METHOD_6 ( VAR_3 , VAR_4 . StoragePool ) ) ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVdsGroup ( ) ) != null ) { METHOD_2 ( ( ( TYPE_1 . getVdsGroup ( ) . getStoragePoolId ( ) ) != null ? TYPE_1 . getVdsGroup ( ) . getStoragePoolId ( ) . getValue ( ) : VAR_1 ) ) ; } } 
private void METHOD_1 ( ) { TYPE_1 . getInstance ( ) . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.ArrayList < TYPE_2 . Disk > VAR_1 = ( ( java.util.ArrayList < TYPE_2 . Disk > ) ( returnValue ) ) ; METHOD_3 ( VAR_1 ) ; } } ) , getVm ( ) . getId ( ) ) ; } 
private java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( STRING_2 ) ; TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( STRING_3 ) ; VAR_1 . add ( VAR_2 ) ; VAR_1 . add ( VAR_3 ) ; VAR_1 . add ( VAR_4 ) ; return VAR_1 ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , int VAR_3 ) { TYPE_1 . assertEquals ( java.lang.String . METHOD_2 ( STRING_1 , VAR_1 , VAR_2 , ( VAR_3 == ( - 1 ) ? STRING_2 : VAR_3 == 1 ? STRING_3 : STRING_4 ) ) , java.lang.Integer . METHOD_3 ( VAR_3 ) , java.lang.Integer . METHOD_3 ( VAR_4 . METHOD_4 ( VAR_1 , VAR_2 ) ) ) ; } 
static void METHOD_1 ( TYPE_1 model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; assertEquals ( VAR_3 [ VAR_1 ] , model . getName ( ) ) ; assertEquals ( VAR_4 [ VAR_1 ] , model . METHOD_2 ( ) ) ; assertEquals ( VAR_5 [ VAR_1 ] . value ( ) , model . getStatus ( ) . METHOD_3 ( ) ) ; } 
public boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { boolean result = false ; if ( ( VAR_1 != null ) && ( VAR_2 != null ) ) { result = ( VAR_3 . METHOD_2 ( VAR_1 ) ) ? VAR_3 . METHOD_2 ( VAR_2 ) : VAR_4 . METHOD_2 ( VAR_2 ) ; } return result ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 [ 1 ] = new java.util.HashMap < > ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , VAR_1 , VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String value , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = TYPE_4 . get ( ) . METHOD_2 ( STRING_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; TYPE_3 VAR_4 = TYPE_4 . get ( ) . METHOD_2 ( STRING_2 ) ; VAR_4 . METHOD_5 ( value ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ; model . METHOD_6 ( TYPE_3 . METHOD_7 ( TYPE_2 . METHOD_3 ( VAR_4 class ) ) ) ; model . METHOD_8 ( null ) ; return model ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( ) , null ) ) ; METHOD_3 ( cmd , VAR_1 ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( vds ) . getStatus ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( vds ) . getStatus ( ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( null ) ; METHOD_3 ( STRING_1 ) ; final TYPE_1 parameters = new TYPE_1 ( ) ; parameters . METHOD_4 ( METHOD_5 ( ) . METHOD_6 ( ) . getId ( ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_7 ( VAR_1 , parameters , new TYPE_2 ( ) { public void METHOD_8 ( TYPE_3 result ) { METHOD_9 ( result ) ; } } , this ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_2 params = new TYPE_2 ( VAR_1 , VAR_2 , TYPE_3 . METHOD_2 ( ) , TYPE_3 . METHOD_3 ( ) . getId ( ) , TYPE_3 . METHOD_3 ( ) . METHOD_4 ( ) , TYPE_3 . METHOD_5 ( ) . METHOD_4 ( ) , TYPE_3 . METHOD_3 ( ) . METHOD_6 ( ) ) ; return METHOD_7 ( VAR_3 , params ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_2 ( ) ; java.util.List < java.lang.String > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; VAR_3 . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_5 ( STRING_2 , VAR_2 . METHOD_6 ( STRING_2 ) ) ; TYPE_4 . METHOD_7 ( STRING_3 , VAR_2 . METHOD_6 ( STRING_3 ) ) ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { return METHOD_2 ( ( ( ( iface . getName ( ) ) + STRING_1 ) + ( VAR_1 . METHOD_3 ( ) ) ) , false , null , null , VAR_2 , VAR_1 . getName ( ) , VAR_1 . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities . network network : VAR_2 ) { VAR_1 . put ( network . METHOD_2 ( ) , new TYPE_1 ( network , this ) ) ; } METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 0 , null ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 . METHOD_9 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_9 ( ) . getStatus ( ) ) ; } } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.lang.String VAR_1 ; if ( ( vm . METHOD_2 ( ) ) == null ) { TYPE_2 VAR_2 = TYPE_2 . from ( vm . METHOD_3 ( ) , vm . METHOD_4 ( ) , vm . METHOD_5 ( ) ) ; VAR_1 = VAR_2 . METHOD_1 ( ) ; } else { VAR_1 = METHOD_6 ( vm . METHOD_3 ( ) ) ; } return TYPE_3 . METHOD_7 ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . getReturnValue ( ) . METHOD_2 ( false ) ; if ( ( TYPE_1 . METHOD_3 ( ) ) != null ) { TYPE_2 VAR_1 = TYPE_1 . METHOD_3 ( ) . METHOD_4 ( ) ; if ( VAR_1 != null ) { TYPE_3 . METHOD_5 ( ) . METHOD_6 ( VAR_1 . getId ( ) , VAR_2 ) ; } } TYPE_1 . METHOD_7 ( ) ; TYPE_1 . METHOD_8 ( ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_2 ( ) ; final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.compat.Guid VAR_3 = VAR_4 ; VAR_1 . METHOD_3 ( VAR_3 ) ; VAR_1 . METHOD_4 ( vm ) ; final org.ovirt.engine.core.common.businessentities.VDS VAR_5 = VAR_1 . METHOD_5 ( ) ; TYPE_3 . assertEquals ( VAR_4 , VAR_5 . getId ( ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 class ) . to ( VAR_2 class ) ; METHOD_2 ( VAR_3 class ) . to ( VAR_4 class ) ; METHOD_2 ( VAR_5 class ) . to ( VAR_6 class ) ; METHOD_2 ( VAR_7 class ) . to ( VAR_8 class ) ; METHOD_2 ( VAR_9 class ) . to ( VAR_10 class ) ; METHOD_2 ( VAR_11 class ) . to ( VAR_12 class ) ; METHOD_2 ( VAR_13 class ) . to ( VAR_14 class ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; VAR_1 . setItems ( ( ( java.util.ArrayList < TYPE_2 > ) ( ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ) ; } 
private TYPE_1 [ ] METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { TYPE_1 [ ] VAR_2 = new TYPE_1 [ VAR_3 ] ; VAR_2 = METHOD_2 ( VAR_1 ) ; TYPE_1 VAR_4 = VAR_2 [ 0 ] ; VAR_2 [ 0 ] = VAR_2 [ 1 ] ; VAR_2 [ 1 ] = VAR_4 ; VAR_2 [ 0 ] . METHOD_3 ( true ) ; METHOD_4 ( VAR_2 ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , new TYPE_3 < org.ovirt.engine.core.compat.Guid > ( TYPE_4 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ) , null , null ) ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . METHOD_8 ( ) ) ; } 
protected boolean validate ( TYPE_1 . ValidationResult VAR_1 , java.util.ArrayList < java.lang.String > VAR_2 ) { if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { VAR_2 . add ( VAR_1 . METHOD_2 ( ) . name ( ) ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { for ( java.lang.String VAR_3 : VAR_1 . METHOD_3 ( ) ) { VAR_2 . add ( VAR_3 ) ; } } } return VAR_1 . METHOD_1 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < TYPE_1 > ( ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new TYPE_2 ( id ) , aQuery ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < > ( ) ; if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { VAR_1 . add ( TYPE_1 . METHOD_2 ( ) ) ; } return VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , vm , VAR_1 , VAR_3 . Collections < org.ovirt.engine.core.compat.Guid > METHOD_5 ( ) , vm . METHOD_6 ( ) , new java.util.ArrayList < > ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , boolean VAR_3 , boolean VAR_4 , org.ovirt.engine.core.compat.Guid VAR_5 , java.util.Map < java.lang.String , java.lang.String > VAR_6 ) { TYPE_2 . METHOD_2 ( VAR_1 , VAR_7 , false ) ; TYPE_3 tempVar = new TYPE_3 ( VAR_1 , VAR_2 , VAR_6 ) ; tempVar . METHOD_3 ( VAR_4 ) ; tempVar . METHOD_4 ( VAR_5 ) ; tempVar . METHOD_5 ( VAR_3 ) ; TYPE_4 . getInstance ( ) . METHOD_6 ( VAR_8 , tempVar , TYPE_2 . METHOD_7 ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( final int VAR_1 , final int VAR_2 ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( VAR_2 ) ; org.ovirt.engine.core.common.businessentities.VM vm = TYPE_1 . METHOD_9 ( ) ; return vm ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_4 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_4 . get ( TYPE_2 . any ( VAR_5 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . METHOD_6 ( validator . METHOD_1 ( ) , TYPE_4 . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , TYPE_2 ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else if ( TYPE_1 . METHOD_2 ( command . getName ( ) , TYPE_3 ) ) { METHOD_3 ( ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( VAR_2 ) ; METHOD_5 ( true ) ; TYPE_2 . METHOD_6 ( command . validate ( ) ) ; TYPE_2 . METHOD_7 ( command . getReturnValue ( ) . METHOD_8 ( ) . METHOD_9 ( TYPE_3 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( VAR_2 , STRING_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_3 = METHOD_3 ( VAR_1 . getName ( ) ) ; METHOD_4 ( VAR_1 , VAR_3 ) ; TYPE_1 parameters = new TYPE_1 ( ) ; VAR_3 . add ( VAR_1 ) ; parameters . METHOD_5 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_6 ( parameters ) ; METHOD_7 ( VAR_4 ) ; METHOD_8 ( VAR_4 ) ; METHOD_9 ( VAR_4 ) ; METHOD_10 ( VAR_4 ) ; METHOD_11 ( VAR_4 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; METHOD_2 ( METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( ) ; try { VAR_2 . add ( model ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_6 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = dao . get ( STRING_1 ) ; VAR_3 = dao . get ( TYPE_1 . toString ( ) ) ; VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( STRING_2 ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; } 
public void METHOD_1 ( TYPE_1 status , boolean VAR_1 ) { this . VAR_2 = status ; if ( VAR_1 ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) ; try { TYPE_4 . METHOD_3 ( METHOD_4 ( ) , METHOD_5 ( ) , VAR_2 ) ; } finally { TYPE_3 . METHOD_6 ( VAR_3 ) ; } } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( 1 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( VAR_3 , true ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_7 ( TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( false ) ; TYPE_3 user = org.mockito.Mockito . METHOD_8 ( VAR_5 class ) ; VAR_6 . METHOD_9 ( VAR_7 , user ) ; VAR_6 . METHOD_10 ( VAR_7 , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 model = ( ( TYPE_3 ) ( sender ) ) ; java.lang.String VAR_2 = VAR_3 ; if ( ( STRING_1 . equals ( VAR_2 ) ) || ( STRING_2 . equals ( VAR_2 ) ) ) { METHOD_2 ( model ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( ) ) ; TYPE_3 . METHOD_7 ( validator . METHOD_8 ( ) , TYPE_4 . METHOD_9 ( ) ) ; } 
private boolean METHOD_1 ( TYPE_1 . VdcQueryReturnValue returnValue , TYPE_2 model ) { model . METHOD_2 ( null ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { model . METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( returnValue . METHOD_5 ( ) ) ) ; METHOD_6 ( ) . setEntity ( false ) ; return true ; } return false ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ 1 ] } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
private java.lang.String METHOD_1 ( ) { switch ( VAR_1 . METHOD_2 ( ) ) { case VAR_2 : if ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) { return STRING_1 ; } else { return STRING_2 ; } case VAR_4 : return STRING_3 ; case VAR_5 : return STRING_4 ; case VAR_6 : return STRING_5 ; } throw new TYPE_1 ( ( STRING_6 + ( VAR_1 . toString ( ) ) ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; METHOD_4 ( cmd ) ; cmd . METHOD_1 ( ) ; TYPE_1 . assertEquals ( cmd . METHOD_5 ( ) , VAR_2 ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . any ( VAR_4 . VDS class ) , TYPE_2 . any ( VAR_5 class ) ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 ) { boolean VAR_3 = true ; if ( VAR_1 != null ) { try { TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 , VAR_5 < java.lang.String > METHOD_2 ( VAR_6 ) , true ) ; if ( ! ( TYPE_2 . METHOD_3 ( VAR_1 , VAR_4 ) ) ) { VAR_3 = false ; } } catch ( TYPE_3 e ) { VAR_7 . METHOD_4 ( STRING_1 , VAR_2 , TYPE_4 . METHOD_5 ( e ) ) ; } } return VAR_3 ; } 
static < TYPE_1 extends TYPE_2 < org.ovirt.engine.core.compat.Guid > & TYPE_3 > TYPE_4 . ValidationResult METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 , TYPE_5 . EngineMessage VAR_4 , TYPE_6 < TYPE_1 > map ) { boolean VAR_5 = ( VAR_2 != null ) && ( VAR_3 != null ) ; java.lang.String [ ] VAR_6 = TYPE_7 . METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; return TYPE_8 . METHOD_3 ( VAR_4 , VAR_6 ) . when ( ( VAR_5 && ( TYPE_7 . METHOD_4 ( VAR_2 , VAR_3 , map ) ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , VAR_4 } ) ) ; METHOD_4 ( resource . METHOD_5 ( new TYPE_1 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 parameters = METHOD_2 ( ) ; parameters . METHOD_3 ( METHOD_4 ( VAR_1 ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( METHOD_5 ( ) ) ; METHOD_6 ( parameters ) ; METHOD_7 ( ) ; TYPE_2 . METHOD_8 ( command . METHOD_9 ( ) ) ; TYPE_2 . METHOD_10 ( command . getReturnValue ( ) . METHOD_11 ( ) . METHOD_12 ( TYPE_3 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = dao . get ( new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ) ; VAR_2 . METHOD_3 ( VAR_3 ) ; vds = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; VAR_4 = new org.ovirt.engine.core.compat.Guid ( STRING_3 ) ; storageDomain = new org.ovirt.engine.core.compat.Guid ( STRING_4 ) ; VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_4 ( STRING_5 ) ; VAR_5 . METHOD_5 ( new org.ovirt.engine.core.compat . Version ( STRING_6 ) ) ; } 
private TYPE_1 . Network METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) { for ( TYPE_1 . Network VAR_2 : VAR_3 . METHOD_3 ( ) ) { if ( VAR_2 . METHOD_4 ( ) . equals ( VAR_1 ) ) return VAR_2 ; } } return null ; } 
protected void METHOD_1 ( ) { if ( ( ( TYPE_1 . getStoragePoolId ( ) ) == null ) || ( TYPE_2 . equals ( TYPE_1 . getStoragePoolId ( ) ) ) ) { METHOD_2 ( ( ( ( TYPE_1 . METHOD_3 ( ) ) != null ) && ( ( TYPE_1 . METHOD_3 ( ) . getStoragePoolId ( ) ) != null ) ? TYPE_1 . METHOD_3 ( ) . getStoragePoolId ( ) . getValue ( ) : VAR_1 ) ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 } , TYPE_1 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 , true ) ; TYPE_1 . METHOD_3 ( result ) ; TYPE_1 . METHOD_4 ( result . isEmpty ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . size ( ) ) ; TYPE_1 . assertEquals ( result . METHOD_5 ( ) . METHOD_6 ( ) , VAR_3 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface , java.lang.String VAR_1 ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_2 = METHOD_2 ( ) . get ( iface . getName ( ) ) ; return ( VAR_2 == null ) || ( ! ( VAR_1 . equals ( VAR_2 . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( false , VAR_1 ) ; cmd . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( ) ) . METHOD_7 ( TYPE_1 . any ( VAR_3 class ) ) ; TYPE_2 . assertEquals ( VAR_4 , cmd . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { try { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 , params ) ; if ( ( VAR_1 == null ) || ( ! ( VAR_1 . getSucceeded ( ) ) ) ) { VAR_3 . METHOD_3 ( STRING_1 , params . METHOD_4 ( ) ) ; } else if ( VAR_1 . getSucceeded ( ) ) { VAR_3 . METHOD_5 ( STRING_2 , params . METHOD_4 ( ) ) ; } } catch ( TYPE_3 VAR_4 ) { VAR_3 . error ( STRING_3 , VAR_4 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 ) ; METHOD_2 ( 0 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 [ 0 ] , VAR_4 } , true , true ) ) ; METHOD_5 ( resource . METHOD_6 ( TYPE_1 . getModel ( 0 , false ) ) , 0 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; long VAR_2 = TYPE_2 . METHOD_3 ( ) ; VAR_2 -= INT_1 ; final TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_1 . METHOD_4 ( VAR_3 ) ; final java.lang.String VAR_4 = STRING_1 ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( ) ; final boolean result = VAR_1 . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( result ) ; } 
public boolean METHOD_1 ( TYPE_1 iface , java.util.Map < java.lang.String , org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 ) { java.lang.String VAR_2 = iface . METHOD_2 ( ) ; return ( VAR_2 == null ) || ( ( VAR_1 . METHOD_3 ( VAR_2 ) ) && ( VAR_1 . get ( VAR_2 ) . METHOD_4 ( ) ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( ) ) ; if ( ( VAR_1 . METHOD_3 ( ) ) != null ) { METHOD_4 ( ) . METHOD_5 ( VAR_1 . METHOD_3 ( ) ) ; } VAR_2 = true ; METHOD_6 ( null ) ; } 
protected void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_1 ) ; if ( ! VAR_1 ) { VAR_3 . METHOD_4 ( new TYPE_3 ( VAR_2 , STRING_1 ) ) ; } org.mockito.Mockito.when ( VAR_4 . METHOD_5 ( TYPE_4 . any ( VAR_5 class ) , TYPE_4 . any ( VAR_6 class ) ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( ) { validator = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( VAR_1 , VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_3 ( TYPE_2 . any ( ) ) ; TYPE_3 . METHOD_4 ( validator . METHOD_1 ( TYPE_4 . instance ( ) . METHOD_5 ( VAR_4 class ) ) , TYPE_5 . METHOD_6 ( ) ) ; } 
public TYPE_1 . VdcBllMessages validate ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_2 VAR_1 , boolean VAR_2 ) { if ( ( ! ( vds . METHOD_1 ( ) . equals ( getVm ( ) . METHOD_2 ( ) ) ) ) || ( ( vds . METHOD_3 ( ) ) != ( VAR_3 ) ) ) { VAR_1 . append ( STRING_1 ) ; return VAR_4 ; } return null ; } 
private void METHOD_1 ( ) { java.util.List VAR_1 = ( ( ( METHOD_2 ( ) ) != null ) && ( ( getSelectedItem ( ) ) != null ) ) ? METHOD_2 ( ) : new java.util.ArrayList ( ) ; METHOD_3 ( ) . METHOD_4 ( ( ( VAR_1 . size ( ) ) == 1 ) ) ; METHOD_5 ( ) . METHOD_4 ( ( ( VAR_1 . size ( ) ) == 1 ) ) ; METHOD_6 ( ) . METHOD_4 ( ( ( VAR_1 . size ( ) ) == 1 ) ) ; } 
protected void METHOD_1 ( ) { frontend . METHOD_2 ( VAR_1 ) ; frontend . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ; frontend . METHOD_5 ( ) . METHOD_4 ( new TYPE_1 ( ) { public void METHOD_6 ( TYPE_2 VAR_3 , java.lang.Object sender , TYPE_3 args ) { user . METHOD_7 ( ) ; } } ) ; frontend . METHOD_8 ( METHOD_9 ( ) ) ; TYPE_4 . getInstance ( ) . METHOD_10 ( new TYPE_5 ( TYPE_6 . METHOD_11 ( ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getInstance ( ) ; VAR_1 . METHOD_2 ( this , STRING_1 , new TYPE_3 [ ] { } , new java.lang.Object [ ] { } , VAR_2 < java.lang.Integer > METHOD_3 ( VAR_3 ) , VAR_2 < java.lang.Integer > METHOD_3 ( VAR_3 ) , VAR_4 ) ; VAR_5 . METHOD_4 ( STRING_2 ) ; } 
public TYPE_1 METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( VAR_4 ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; TYPE_3 . log ( VAR_3 , VAR_6 ) ; return TYPE_4 . getInstance ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_5 , VAR_7 , false ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( null ) ; if ( ( ( TYPE_1 . METHOD_3 ( ) ) != null ) && ( METHOD_4 ( ) ) ) { super . METHOD_1 ( ) ; } else { TYPE_1 . METHOD_5 ( false ) ; VAR_1 . METHOD_6 ( STRING_1 , TYPE_1 . METHOD_7 ( ) , TYPE_1 . METHOD_8 ( ) ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( VAR_2 ) ; VAR_3 . METHOD_5 ( VAR_1 . getId ( ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( STRING_1 , command . validate ( ) ) ; METHOD_8 ( VAR_5 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( new org.ovirt.engine.core.common.businessentities.StoragePool ( STRING_1 , STRING_2 , VAR_3 , STRING_1 , TYPE_2 . getValue ( ) , TYPE_3 . getValue ( ) ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_4 . METHOD_4 ( ) ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) { if ( this . VAR_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) { return this . VAR_2 . get ( VAR_1 . METHOD_3 ( ) ) . METHOD_4 ( ) ; } throw new TYPE_1 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; } 
private void METHOD_1 ( final TYPE_1 < ? > command , final TYPE_2 result ) { TYPE_3 VAR_1 = VAR_2 . METHOD_2 ( command . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( result ) ; if ( ! ( result . METHOD_5 ( ) ) ) { VAR_1 . METHOD_6 ( VAR_3 ) ; } else if ( TYPE_4 . equals ( VAR_1 . METHOD_7 ( ) ) ) { VAR_1 . METHOD_6 ( ( result . getSucceeded ( ) ? VAR_4 : VAR_5 ) ) ; } VAR_2 . METHOD_8 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( null ) ; METHOD_4 ( ) . METHOD_5 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VM > result = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VM > ) ( METHOD_4 ( ) . METHOD_6 ( ) . getReturnValue ( ) ) ) ; TYPE_2 . assertEquals ( STRING_1 , 2 , result . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , getVm ( ) ) ; VAR_4 . METHOD_5 ( ) ; METHOD_6 ( resource . list ( ) ) ; } 
private void METHOD_1 ( java.lang.Object VAR_1 ) throws TYPE_1 { java.lang.String VAR_2 ; if ( VAR_1 != null ) { VAR_2 = ( VAR_1 instanceof java.lang.Boolean ) ? ( ( java.lang.Boolean ) ( VAR_1 ) ) . toString ( ) : java.lang.Boolean . toString ( true ) ; } else { VAR_2 = java.lang.Boolean . toString ( false ) ; } METHOD_2 ( VAR_2 ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . getParameters ( ) . METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) , TYPE_2 . getParameters ( ) . METHOD_7 ( ) ) ; TYPE_2 . METHOD_8 ( ) . METHOD_9 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( ) ) . when ( VAR_3 ) . get ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( true ) ) . when ( VAR_5 ) . get ( TYPE_1 . any ( VAR_6 . Guid class ) ) ; } 
public static TYPE_1 map ( java.lang.String VAR_1 , TYPE_1 template ) { TYPE_1 model = ( template != null ) ? template : new TYPE_1 ( ) ; model . METHOD_1 ( VAR_1 ) ; model . setId ( TYPE_2 . METHOD_2 ( VAR_1 . METHOD_3 ( ) , true ) . toString ( ) ) ; return model ; } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { try { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_2 ) ; return VAR_4 ; } catch ( TYPE_3 VAR_5 ) { throw new TYPE_4 ( VAR_5 ) ; } } 
private boolean METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.List < java.lang.String > VAR_3 = TYPE_1 . METHOD_1 ( VAR_1 , VAR_2 ) ; if ( ( ( VAR_3 . size ( ) ) + ( VAR_4 . size ( ) ) ) > ( VAR_5 < java.lang.Integer > METHOD_2 ( VAR_6 ) ) ) { throw new TYPE_2 ( ) ; } VAR_4 . METHOD_3 ( VAR_3 ) ; return true ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = new TYPE_3 ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( VAR_2 ) ) ; VAR_3 . METHOD_4 ( TYPE_4 . METHOD_5 ( VAR_2 ) ) ; VAR_3 . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_2 ) ) ; return VAR_3 ; } 
private void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ; for ( org.ovirt.engine.core.common.businessentities.DiskImage image : VAR_2 ) { VAR_1 . add ( image . METHOD_2 ( ) ) ; } TYPE_1 . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , VAR_1 ) ; } 
protected void METHOD_1 ( ) { if ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) { VAR_3 . METHOD_2 ( STRING_1 ) ; TYPE_1 . METHOD_3 ( new TYPE_2 ( ) { public void METHOD_4 ( ) { if ( VAR_4 . METHOD_5 ( ) ) { METHOD_6 ( ) ; } } } ) ; } else { VAR_4 . METHOD_7 ( ) ; VAR_3 . METHOD_2 ( STRING_2 ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( false , VAR_2 ) ; TYPE_1 . METHOD_6 ( cmd . METHOD_7 ( ) ) ; cmd . METHOD_8 ( ) ; TYPE_1 . assertEquals ( cmd . METHOD_9 ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( 1 , ( - INT_1 ) , ( - INT_2 ) , INT_2 ) ; TYPE_2 . assertEquals ( STRING_1 , 0 , VAR_2 ) ; TYPE_2 . assertEquals ( STRING_2 , INT_3 , VAR_3 ) ; TYPE_2 . assertEquals ( STRING_3 , INT_4 , VAR_4 ) ; TYPE_2 . assertEquals ( STRING_4 , INT_2 , VAR_5 ) ; TYPE_2 . assertEquals ( STRING_5 , 0 , VAR_6 ) ; } 
protected void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) . METHOD_6 ( ) , null , true ) ; TYPE_2 . METHOD_7 ( ) . METHOD_8 ( TYPE_3 . getInstance ( ) . METHOD_9 ( VAR_1 ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( getModel ( INT_1 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cmd ) . METHOD_2 ( ) ; TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_4 ( new TYPE_3 ( VAR_2 , STRING_1 ) ) ; } org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_6 ) , TYPE_4 . any ( VAR_7 class ) ) ) . thenReturn ( VAR_4 ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = new java.util.ArrayList < > ( ) ; for ( java.lang.String VAR_2 : VAR_1 ) { try { if ( ! ( VAR_3 . METHOD_2 ( VAR_2 ) ) ) { vms . add ( VAR_3 . METHOD_3 ( VAR_2 ) ) ; } } catch ( TYPE_1 VAR_4 ) { METHOD_4 ( VAR_4 . getName ( ) , VAR_4 . METHOD_5 ( ) ) ; } } return vms ; } 
public static synchronized java.lang.String [ ] METHOD_1 ( TYPE_1 . StorageDomain storageDomain ) { return TYPE_2 . METHOD_2 ( storageDomain ) ? new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_3 , STRING_4 } : TYPE_2 . METHOD_3 ( storageDomain ) ? new java.lang.String [ ] { STRING_5 , STRING_4 } : TYPE_2 . METHOD_4 ( storageDomain ) ? new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_5 , STRING_3 , STRING_6 } : new java.lang.String [ ] { STRING_1 , STRING_2 , STRING_5 , STRING_4 } ; } 
public void METHOD_1 ( TYPE_1 result ) { java.util.List < TYPE_2 . VdcQueryReturnValue > VAR_1 = result . METHOD_2 ( ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( VAR_1 . get ( 0 ) . getReturnValue ( ) ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_3 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( VAR_1 . get ( 1 ) . getReturnValue ( ) ) ) ; METHOD_3 ( VAR_2 ) ; METHOD_4 ( VAR_3 ) ; METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( ) ; VAR_1 . add ( TYPE_1 . METHOD_3 ( 1 , VAR_2 ) ) ; METHOD_4 ( ) ; command . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 ) . METHOD_7 ( TYPE_2 . METHOD_8 ( VAR_4 ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_3 ) . METHOD_9 ( TYPE_2 . METHOD_8 ( VAR_1 ) , TYPE_2 . any ( VAR_5 . Guid class ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.VM VAR_2 ) { TYPE_2 VAR_3 = VAR_2 . getStatus ( ) ; if ( ( VAR_3 == ( VAR_4 ) ) && ( org.ovirt.engine.core.common.businessentities.VM . METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) ) { VAR_5 . add ( VAR_1 . getId ( ) ) ; VAR_6 . METHOD_4 ( STRING_1 , VAR_1 . getId ( ) ) ; VAR_2 . METHOD_5 ( null ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( METHOD_4 ( 2 , false ) ) ) ; METHOD_5 ( cmd ) ; org.mockito.Mockito.doReturn ( getVdsGroup ( false ) ) . when ( VAR_1 ) . get ( org.mockito.Mockito . any ( VAR_2 . Guid class ) ) ; org.mockito.Mockito.doReturn ( getVdsGroup ( false ) ) . when ( VAR_1 ) . METHOD_6 ( org.mockito.Mockito . any ( VAR_2 . Guid class ) ) ; TYPE_1 . METHOD_7 ( cmd , VAR_3 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VmTemplate template , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 , java.util.Map < org.ovirt.engine.core.compat.Guid , org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 , boolean VAR_3 ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( template . getStoragePoolId ( ) ) ; TYPE_1 . METHOD_1 ( template , VAR_4 , VAR_1 , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; dao . METHOD_3 ( VAR_1 ) ; dao . METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface result = dao . get ( VAR_1 . getId ( ) ) ; TYPE_1 . assertEquals ( VAR_1 , result ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { boolean VAR_1 = METHOD_2 ( vm ) ; if ( ( ( vm . METHOD_3 ( ) ) || ( ( vm . getStatus ( ) ) == ( VAR_2 ) ) ) || VAR_1 ) { return new TYPE_1 . ValidationResult ( VAR_3 ) ; } return VAR_4 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; vm . METHOD_3 ( VAR_1 ) ; METHOD_4 ( TYPE_1 . METHOD_5 ( ) , true ) ; METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_8 ( ) ; command . METHOD_9 ( ) ; TYPE_2 . METHOD_10 ( command ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( VAR_2 ) ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; TYPE_3 returnValue = VAR_4 ; if ( ( returnValue == null ) || ( ! ( returnValue . getSucceeded ( ) ) ) ) { VAR_2 = null ; VAR_1 . METHOD_3 ( ) ; } else { METHOD_4 ( ) ; } } 
private void METHOD_1 ( TYPE_1 model ) { if ( ( VAR_1 ) == null ) { return ; } TYPE_2 VAR_2 = model . METHOD_2 ( ) . METHOD_3 ( VAR_3 class ) . METHOD_4 ( ) ; if ( VAR_2 == null ) { return ; } VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; VAR_2 . METHOD_7 ( ) . METHOD_6 ( VAR_1 ) ; VAR_2 . METHOD_8 ( ) . METHOD_6 ( VAR_1 ) ; } 
public static boolean METHOD_1 ( TYPE_1 VAR_1 , int VAR_2 , java.util.ArrayList < java.lang.String > VAR_3 , java.lang.String VAR_4 ) { boolean result = TYPE_2 . METHOD_1 ( VAR_1 , VAR_2 , VAR_4 ) ; if ( ! result ) { VAR_3 . add ( TYPE_3 . toString ( ) ) ; VAR_3 . add ( java.lang.String . METHOD_2 ( STRING_1 , TYPE_2 . METHOD_3 ( ) ) ) ; VAR_3 . add ( java.lang.String . METHOD_2 ( STRING_2 , TYPE_2 . METHOD_4 ( VAR_1 , VAR_4 ) ) ) ; } return result ; } 
protected java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 type ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; for ( TYPE_1 VAR_3 : VAR_1 ) { TYPE_3 status = VAR_3 . METHOD_2 ( ) ; if ( ( ( VAR_3 . METHOD_3 ( ) ) == type ) && ( ( ( VAR_4 ) == status ) || ( ( VAR_5 ) == status ) ) ) { VAR_2 . add ( VAR_3 ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; resource . METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , false , true , STRING_2 ) ) ; try { resource . METHOD_5 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_6 ( STRING_3 ) ; } catch ( TYPE_2 VAR_4 ) { METHOD_7 ( VAR_4 , STRING_2 , INT_1 ) ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_5 ( VAR_5 ) ; org.mockito.Mockito.doReturn ( vds ) . when ( VAR_1 ) . get ( VAR_5 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) throws TYPE_2 { TYPE_3 VAR_2 = null ; try { VAR_2 = TYPE_3 . METHOD_1 ( VAR_1 ) ; } catch ( TYPE_4 VAR_3 ) { throw new TYPE_2 ( ( ( STRING_1 + ( VAR_1 . METHOD_2 ( ) ) ) + STRING_2 ) , VAR_3 ) ; } java.lang.Boolean VAR_4 = VAR_2 . METHOD_3 ( VAR_5 ) ; if ( ( VAR_4 != null ) && ( ! ( VAR_4 . METHOD_4 ( ) ) ) ) { return ; } METHOD_5 ( VAR_2 ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , java.lang.String VAR_4 , boolean VAR_5 , boolean VAR_6 , boolean VAR_7 ) { this . VAR_1 = VAR_1 ; this . VAR_7 = VAR_7 ; METHOD_2 ( ) . METHOD_1 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; METHOD_2 ( TYPE_1 . METHOD_3 ( ) . getTable ( ) . METHOD_4 ( ) . METHOD_5 ( new TYPE_2 ( ) { public void METHOD_6 ( TYPE_3 event ) { VAR_1 . METHOD_7 ( METHOD_8 ( ) ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; } } ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_2 ) ) { METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( TYPE_1 . METHOD_3 ( ) ) ; METHOD_4 ( METHOD_5 ( ) ) ; VAR_1 . METHOD_6 ( ) ; try { resource . METHOD_7 ( ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_9 ( VAR_2 . METHOD_10 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_10 ( ) . getStatus ( ) ) ; } } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { if ( ( VAR_4 . getSelectedItem ( ) ) == null ) { VAR_2 . METHOD_2 ( ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( VAR_4 . getSelectedItem ( ) ) ) ) ; } } return VAR_2 ; } 
void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) ; VAR_3 . METHOD_4 ( VAR_2 . METHOD_5 ( ) ) ; VAR_4 . METHOD_2 ( VAR_2 . METHOD_6 ( ) ) ; VAR_5 . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; VAR_6 . METHOD_7 ( VAR_2 . METHOD_9 ( ) ) ; } 
public static void METHOD_1 ( TYPE_1 disk , org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( disk ) ; TYPE_2 . METHOD_4 ( new TYPE_3 ( disk . getId ( ) , vmId ) , VAR_1 , VAR_2 , null , true , false ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . METHOD_3 ( from . METHOD_4 ( ) ) ; } if ( from . METHOD_5 ( ) ) { to . METHOD_6 ( TYPE_3 . METHOD_7 ( from . METHOD_8 ( ) ) ) ; } return to ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; VAR_1 . METHOD_3 ( STRING_1 ) ; dao . METHOD_4 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) , TYPE_2 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( result . equals ( VAR_1 ) ) ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { if ( ( storage . getSelectedItem ( ) ) == null ) { VAR_2 . METHOD_2 ( ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( storage . getSelectedItem ( ) ) ) ) ; } } return VAR_2 ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { return METHOD_2 ( ) . addValue ( STRING_1 , VAR_1 . METHOD_3 ( ) ) . addValue ( STRING_2 , VAR_1 . METHOD_4 ( ) ) . addValue ( STRING_3 , VAR_1 . METHOD_5 ( ) ) . addValue ( STRING_4 , VAR_1 . METHOD_6 ( ) ) . addValue ( STRING_5 , VAR_1 . METHOD_7 ( ) ) . addValue ( STRING_6 , VAR_1 . METHOD_8 ( ) ) . addValue ( STRING_7 , VAR_1 . METHOD_9 ( ) ) ; } 
protected int METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { return ( vds . METHOD_2 ( ) ) == ( VAR_1 ) ? 0 : ( ( VAR_2 < java.lang.Integer > METHOD_3 ( VAR_3 ) ) * ( VAR_2 < java.lang.Integer > METHOD_3 ( VAR_4 ) ) ) / ( vds . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( null ) ; METHOD_4 ( ) . METHOD_5 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > result = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( METHOD_4 ( ) . METHOD_6 ( ) . getReturnValue ( ) ) ) ; TYPE_2 . assertEquals ( STRING_1 , 2 , result . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_2 . METHOD_4 ( VAR_4 ) ; VAR_2 . METHOD_5 ( VAR_5 ) ; VAR_2 . METHOD_6 ( FLOAT_1 ) ; VAR_2 . METHOD_7 ( FLOAT_1 ) ; VAR_2 . METHOD_8 ( FLOAT_1 ) ; VAR_2 . METHOD_9 ( FLOAT_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , ( ( iface . METHOD_6 ( ) ) + 1 ) , iface . METHOD_7 ( ) , METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = VAR_2 . METHOD_2 ( ) . get ( VAR_3 ) ; TYPE_1 . METHOD_3 ( VAR_1 ) ; java.lang.String name = VAR_1 . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( name . equals ( VAR_2 . METHOD_6 ( VAR_3 , VAR_4 . StoragePool ) ) ) ; } 
private static java.lang.String [ ] METHOD_1 ( java.lang.String VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { return new java.lang.String [ ] { java.lang.String . METHOD_2 ( STRING_1 , VAR_1 ) , java.lang.String . METHOD_2 ( STRING_2 , VAR_2 ) , java.lang.String . METHOD_2 ( STRING_3 , VAR_3 ) } ; } 
public TYPE_1 list ( ) { TYPE_1 VAR_1 ; if ( METHOD_1 ( ) ) { VAR_1 = METHOD_2 ( METHOD_3 ( VAR_2 , METHOD_4 ( ) ) ) ; } else { VAR_1 = METHOD_2 ( METHOD_3 ( VAR_3 . Network ) ) ; } for ( TYPE_2 . Network network : VAR_1 . METHOD_5 ( ) ) { network . METHOD_6 ( null ) ; } return VAR_1 ; } 
public static TYPE_1 < TYPE_2 > METHOD_1 ( final java.lang.String VAR_1 , final TYPE_1 < TYPE_3 > VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_3 user : VAR_2 ) { VAR_3 . add ( TYPE_4 . METHOD_2 ( VAR_1 , user ) ) ; } return VAR_3 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( cmd . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_8 ( VAR_3 ) ) . METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ; org.mockito.Mockito . METHOD_7 ( VAR_2 , org.mockito.Mockito . METHOD_9 ( ) ) . METHOD_10 ( TYPE_1 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 result ) { if ( ! ( result . getReturnValue ( ) . getSucceeded ( ) ) ) { return ; } TYPE_2 VAR_1 = ( ( TYPE_2 ) ( result . METHOD_2 ( ) ) ) ; TYPE_3 VAR_2 = result . getReturnValue ( ) ; org.ovirt.engine.core.compat.Guid Guid = ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_2 . METHOD_3 ( ) ) ) ; VAR_1 . METHOD_4 ( Guid ) ; } 
public TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( TYPE_3 . METHOD_2 ( VAR_2 . METHOD_3 ( ) ) , VAR_3 . METHOD_4 ( ) , VAR_3 . METHOD_5 ( ) , VAR_4 . METHOD_6 ( ) ) ; this . VAR_5 = VAR_1 ; METHOD_7 ( VAR_1 ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; TYPE_2 VAR_2 = VAR_1 . get ( METHOD_3 ( ) . getId ( ) ) ; VAR_2 . METHOD_4 ( METHOD_3 ( ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( VAR_2 ) ; } 
public < TYPE_1 extends java.lang.Object > TYPE_1 METHOD_1 ( TYPE_2 < TYPE_1 > VAR_1 ) { TYPE_3 VAR_2 = VAR_3 . METHOD_2 ( VAR_1 ) . METHOD_3 ( ) . METHOD_4 ( ) ; return ( ( TYPE_1 ) ( VAR_3 . METHOD_5 ( VAR_2 , VAR_1 , VAR_3 . METHOD_6 ( VAR_2 ) ) ) ) ; } 
private void METHOD_1 ( ) { boolean VAR_1 = ( ! ( METHOD_2 ( ) ) ) && ( ( ( METHOD_3 ( ) ) == null ) || ( ( TYPE_1 . METHOD_4 ( METHOD_3 ( ) ) ) == 0 ) ) ; METHOD_5 ( VAR_1 ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( parameters ) ) ; org.mockito.Mockito.when ( VAR_1 . getParameters ( ) ) . thenReturn ( parameters ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( METHOD_4 ( VAR_3 ) ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_4 ) ) . thenReturn ( null ) ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = TYPE_1 . METHOD_2 ( VAR_2 . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . METHOD_4 ( STRING_2 , VAR_1 . METHOD_5 ( STRING_2 ) ) ; TYPE_2 . METHOD_4 ( STRING_3 , VAR_1 . METHOD_5 ( STRING_3 ) ) ; TYPE_2 . METHOD_4 ( ( ( VAR_2 . METHOD_3 ( STRING_4 ) . length ) == 0 ) ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_1 . METHOD_2 ( VAR_1 ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( ) ; VAR_3 . add ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_2 ) ; } 
protected void METHOD_1 ( ) { final java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_1 = METHOD_2 ( ) . METHOD_3 ( TYPE_1 . getParameters ( ) . getId ( ) , TYPE_1 . METHOD_4 ( ) , TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; final java.util.List < org.ovirt.engine.core.common.businessentities.network.Network > VAR_2 = VAR_1 . METHOD_6 ( ) . METHOD_7 ( METHOD_8 ( ) ) . METHOD_9 ( TYPE_2 . METHOD_10 ( ) ) ; TYPE_1 . METHOD_11 ( ) . METHOD_12 ( VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new TYPE_2 < > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; return new TYPE_1 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_2 ) , VAR_3 , STRING_3 , STRING_4 , 2 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , false , false , STRING_5 , VAR_1 , null ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < TYPE_1 > VAR_1 = TYPE_2 . METHOD_1 ( TYPE_2 . METHOD_2 ( ( ( java.util.ArrayList < TYPE_1 > ) ( result ) ) ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_3 ( ) . setItems ( VAR_1 ) ; METHOD_3 ( ) . setSelectedItem ( null ) ; } 
public void onSuccess ( java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_1 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . setSelectedItem ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { TYPE_2 . METHOD_3 ( TYPE_1 . getVm ( ) . getId ( ) ) ; TYPE_2 . METHOD_4 ( TYPE_1 . getVm ( ) ) ; } else { TYPE_1 . METHOD_5 ( false ) ; log . METHOD_6 ( STRING_1 ) ; } TYPE_1 . METHOD_7 ( true ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return java.lang.Integer . valueOf ( 0 ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
private java.util.List < TYPE_1 . Network > METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 VAR_2 = getEntity ( VAR_3 . VDSGroup class , VAR_4 , new TYPE_3 ( METHOD_2 ( VAR_1 ) ) , null ) . getStoragePoolId ( ) ; org.ovirt.engine.core.common.queries.IdQueryParameters params = new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_2 ( VAR_2 ) ) ; return METHOD_3 ( VAR_5 , params ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_4 = METHOD_2 ( VAR_5 ) ; VAR_4 . METHOD_3 ( VAR_3 ) ; VAR_4 . METHOD_4 ( VAR_6 ) ; METHOD_5 ( VAR_7 , VAR_8 ) ; METHOD_6 ( VAR_9 , org.ovirt.engine.core.compat.Guid . METHOD_7 ( ) , VAR_7 ) ; TYPE_1 . METHOD_8 ( command , VAR_10 ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , boolean VAR_3 ) { if ( VAR_4 < java.lang.Boolean > METHOD_2 ( VAR_5 ) ) { VAR_6 . METHOD_3 ( STRING_1 ) ; } boolean returnValue = true ; if ( VAR_1 == null ) { returnValue = METHOD_4 ( VAR_2 , VAR_3 ) ; } else { returnValue = METHOD_5 ( VAR_1 , VAR_3 ) ; } if ( VAR_4 < java.lang.Boolean > METHOD_2 ( VAR_5 ) ) { VAR_6 . METHOD_3 ( STRING_2 , returnValue ) ; } return returnValue ; } 
protected TYPE_1 getName ( TYPE_2 item ) { TYPE_3 VAR_1 = new TYPE_3 ( ) ; VAR_1 . append ( super . getName ( item ) ) ; VAR_1 . METHOD_1 ( STRING_1 ) ; VAR_1 . METHOD_1 ( item . METHOD_2 ( ) ) ; VAR_1 . METHOD_1 ( STRING_2 ) ; return VAR_1 . METHOD_3 ( ) ; } 
protected TYPE_1 add ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 ) ; TYPE_3 parameters = new TYPE_3 ( ) ; TYPE_2 map = map ( VAR_1 ) ; parameters . METHOD_2 ( map ) ; return METHOD_3 ( VAR_2 , parameters , new TYPE_4 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 . IdQueryParameters class ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = VAR_2 . METHOD_2 ( ) ; return ( ( ( ( VAR_3 != null ) && ( ( VAR_3 . getStatus ( ) ) != ( VAR_4 ) ) ) && ( ( VAR_3 . METHOD_3 ( ) ) != null ) ) && ( VAR_1 != null ) ) && ( ! ( TYPE_3 . equals ( VAR_1 . METHOD_3 ( ) , VAR_3 . METHOD_3 ( ) ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_3 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( METHOD_5 ( ) . getStoragePoolId ( ) , VAR_3 ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( METHOD_6 ( ) . METHOD_7 ( ) ) . thenReturn ( VAR_1 ) ; TYPE_2 . assertEquals ( STRING_1 , VAR_4 , METHOD_8 ( ) . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; cluster = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; VAR_2 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; VAR_3 = new org.ovirt.engine.core.common.businessentities.network.Network ( ) ; VAR_3 . METHOD_4 ( STRING_3 ) ; VAR_3 . METHOD_5 ( STRING_4 ) ; VAR_3 . METHOD_6 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( cluster . METHOD_2 ( ) ) . thenReturn ( org.mockito.Mockito . METHOD_3 ( VAR_1 . Version class ) ) ; validator = org.mockito.Mockito . METHOD_4 ( new TYPE_1 ( VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( false ) . when ( validator ) . METHOD_5 ( TYPE_2 . any ( VAR_4 class ) ) ; TYPE_3 . METHOD_6 ( validator . METHOD_7 ( TYPE_4 . instance ( ) . METHOD_8 ( VAR_4 class ) ) , TYPE_5 . METHOD_9 ( VAR_5 ) ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 ) ; TYPE_1 result = dao . get ( VAR_1 . getId ( ) , TYPE_2 . METHOD_3 ( ) ) ; TYPE_3 . METHOD_4 ( result . equals ( VAR_1 ) ) ; dao . METHOD_5 ( VAR_1 . getId ( ) ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 = METHOD_2 ( ) . get ( iface . getName ( ) ) ; if ( VAR_1 == null ) { return true ; } return ( ( ! ( TYPE_1 . equals ( iface . METHOD_3 ( ) , VAR_1 . METHOD_3 ( ) ) ) ) || ( ( iface . METHOD_4 ( ) ) != ( VAR_1 . METHOD_4 ( ) ) ) ) || ( METHOD_5 ( iface , VAR_1 ) ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( METHOD_2 ( ) . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; VAR_2 = new java.util.ArrayList < TYPE_1 > ( ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . METHOD_5 ( ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . getStoragePoolId ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_6 ( VAR_3 , VAR_4 ) ) . thenReturn ( VAR_2 ) ; } 
private void METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { synchronized ( this ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < TYPE_1 > ( 1 ) ; for ( TYPE_1 VAR_2 : TYPE_2 . getInstance ( ) . METHOD_2 ( ) ) { TYPE_3 VAR_3 = VAR_2 . METHOD_3 ( ) ; if ( VAR_3 instanceof TYPE_4 ) { VAR_1 . add ( 0 , VAR_2 ) ; } } } } } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_2 ) ) < 0 ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_1 ) ) == 0 ) ) ; TYPE_1 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) ) > 0 ) ) ; } 
public TYPE_1 < java.lang.String > METHOD_1 ( ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < > ( ) ; VAR_1 . METHOD_2 ( ) ; for ( TYPE_3 < java.lang.String > VAR_2 : METHOD_3 ( ) ) { VAR_1 . add ( VAR_2 . getSelectedItem ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( java.lang.Boolean . FALSE ) . when ( cmd ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_4 ( ) ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( cmd . validate ( ) ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = INT_1 ; final int VAR_2 = 0 ; final TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_3 . METHOD_4 ( ) ) ; TYPE_2 . METHOD_5 ( VAR_3 . getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( TYPE_3 . toString ( ) ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < java.lang.String > VAR_2 = ( ( java.util.List < java.lang.String > ) ( ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; getModel ( ) . METHOD_2 ( ) . setEntity ( ( ! ( VAR_2 . isEmpty ( ) ) ) ) ; } } ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 < TYPE_2 > . TYPE_3 VAR_1 = new TYPE_3 ( ) ; java.util.ArrayList < TYPE_4 . VdcActionParametersBase > parameters = VAR_1 . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , METHOD_4 ( ) ) ; if ( ! ( parameters . isEmpty ( ) ) ) { TYPE_5 . METHOD_5 ( parameters ) ; TYPE_1 . METHOD_6 ( ) . METHOD_7 ( VAR_2 , parameters ) ; } } 
protected void METHOD_1 ( boolean VAR_1 ) { if ( VAR_1 ) { org.ovirt.engine.ui.uicommonweb.UICommand VAR_2 = new org.ovirt.engine.ui.uicommonweb.UICommand ( VAR_3 , this ) ; VAR_2 . setTitle ( VAR_4 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( ) . add ( VAR_2 ) ; } else { METHOD_4 ( new org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > ( VAR_5 ) ) ; } METHOD_5 ( ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_2 = new java.util.ArrayList < > ( ) ; VAR_2 . add ( TYPE_2 . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( new java.util.ArrayList ( VAR_2 ) ) ; } 
private void METHOD_1 ( final java.util.List < TYPE_1 > VAR_1 ) { TYPE_2 . METHOD_2 ( new TYPE_3 < TYPE_4 > ( ) { public TYPE_4 METHOD_3 ( ) { for ( TYPE_1 VAR_2 : VAR_1 ) { METHOD_4 ( VAR_2 , METHOD_5 ( ) . METHOD_6 ( ) , METHOD_5 ( ) . METHOD_7 ( ) ) ; } return null ; } } ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_1 ) . METHOD_3 ( VAR_2 [ 1 ] ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) , TYPE_1 . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { METHOD_2 ( ) ; if ( this . VAR_1 . get ( ) ) { return ; } METHOD_3 ( ) ; if ( this . VAR_1 . get ( ) ) { return ; } METHOD_4 ( ) ; } 
protected void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = METHOD_3 ( ) ; if ( ( VAR_1 != null ) && ( VAR_1 . getSucceeded ( ) ) ) { TYPE_3 . METHOD_4 ( new TYPE_4 < TYPE_5 > ( ) { public TYPE_5 METHOD_5 ( ) { METHOD_6 ( ) ; METHOD_7 ( VAR_2 , METHOD_8 ( ) ) ; METHOD_9 ( VAR_2 ) ; METHOD_10 ( true ) ; return null ; } } ) ; } } } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 = METHOD_2 ( ) . getSelectedItem ( ) ; boolean VAR_2 = ( getVm ( ) ) != null ; if ( VAR_1 == null ) { return ; } METHOD_3 ( VAR_1 ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( ( VAR_2 ? getVm ( ) . METHOD_6 ( ) : null ) ) ; if ( ( METHOD_7 ( ) . getEntity ( ) ) == ( VAR_3 ) ) { METHOD_8 ( VAR_1 ) ; } else { METHOD_9 ( VAR_1 ) ; } } 
public void METHOD_1 ( java.lang.String value ) { java.lang.String [ ] VAR_1 = value . METHOD_2 ( STRING_1 ) ; java.util.List < java.lang.String > list = new java.util.ArrayList < java.lang.String > ( ) ; for ( java.lang.String item : VAR_1 ) { list . add ( item ) ; } METHOD_3 ( ) . setItems ( list ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 ) throws TYPE_1 { TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; java.lang.String VAR_4 = VAR_3 . METHOD_2 ( ) ; try { VAR_2 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; } catch ( java.lang.Exception e ) { } return VAR_4 ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { if ( ( ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) ) && ( ( VAR_1 . METHOD_3 ( ) ) == ( VAR_3 ) ) ) { return true ; } return false ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat . Version version ) { VAR_1 = METHOD_2 ( VAR_2 , VAR_3 , version ) ; VAR_4 = METHOD_2 ( VAR_5 , VAR_6 , version ) ; VAR_7 . add ( VAR_1 ) ; VAR_7 . add ( VAR_4 ) ; VAR_7 . add ( METHOD_2 ( VAR_8 , VAR_9 , version ) ) ; VAR_10 = METHOD_3 ( VAR_11 , VAR_12 ) ; VAR_13 = METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 < ? extends TYPE_3 > VAR_1 = new TYPE_4 < TYPE_3 > ( TYPE_5 . METHOD_2 ( VAR_2 ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( ) ) . thenReturn ( new TYPE_6 [ ] { VAR_3 } ) ; VAR_4 . METHOD_5 ( VAR_5 , new java.util.ArrayList < TYPE_3 > ( ) , STRING_1 , STRING_2 ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( ( ( METHOD_4 ( ) . getSelectedItem ( ) . METHOD_5 ( ) ) && ( ( VAR_1 . METHOD_6 ( METHOD_7 ( ) . getSelectedItem ( ) . METHOD_8 ( ) ) ) >= 0 ) ) ) ; } 
public static org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface entity = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; entity . setId ( VAR_1 ) ; entity . METHOD_2 ( VAR_2 ) ; entity . METHOD_3 ( VAR_3 ) ; entity . METHOD_4 ( true ) ; entity . METHOD_5 ( VAR_4 ) ; return TYPE_1 . METHOD_6 ( entity , VAR_1 ) ; } 
void METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_2 != null ) && ( VAR_2 . METHOD_3 ( VAR_3 ) ) ) { if ( ( VAR_2 . METHOD_4 ( ) ) == null ) { VAR_4 . METHOD_5 ( ( ( STRING_1 + VAR_1 ) + STRING_2 ) ) ; return ; } VAR_2 . METHOD_6 ( ) ; VAR_4 . METHOD_7 ( ( ( STRING_1 + VAR_1 ) + STRING_3 ) ) ; METHOD_8 ( VAR_1 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? new java.util.ArrayList < java.lang.String > ( ( ( java.util.ArrayList < java.lang.String > ) ( source ) ) ) : new java.util.ArrayList < java.lang.String > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( ) , aQuery ) ; } 
private void METHOD_1 ( int VAR_1 , int VAR_2 ) throws java.lang.Exception { for ( int i = 0 ; i < VAR_1 ; i ++ ) { METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_5 [ VAR_2 ] } , true ) ; } } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 . METHOD_2 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( getModel ( ) , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 model = ( ( TYPE_2 ) ( target ) ) ; java.util.List < java.lang.String > VAR_2 = ( ( java.util.List < java.lang.String > ) ( returnValue ) ) ; METHOD_3 ( model , VAR_2 ) ; } } ) , VAR_1 ) ; } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; VAR_3 . add ( TYPE_2 . METHOD_2 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( VAR_3 ) ) ; } 
public java.lang.Object METHOD_1 ( ) throws java.lang.Exception { java.lang.String VAR_1 = VAR_2 < java.lang.String > getValue ( VAR_3 ) ; if ( ( VAR_1 . METHOD_2 ( ) . length ( ) ) == 0 ) { VAR_4 . METHOD_3 ( ) ; } else { VAR_4 . METHOD_4 ( VAR_5 , VAR_1 ) ; } return null ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.List < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; java.util.List < java.lang.String > VAR_3 = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_4 : VAR_2 ) { VAR_3 . add ( VAR_4 . getName ( ) ) ; } VAR_1 . METHOD_1 ( ) . setItems ( VAR_3 ) ; } 
public static TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { TYPE_1 VAR_1 = null ; try { VAR_1 = new TYPE_1 ( vds . METHOD_2 ( ) , STRING_1 , true ) ; } catch ( TYPE_2 e ) { VAR_2 . METHOD_3 ( STRING_2 , vds . getId ( ) , vds . getName ( ) , vds . METHOD_2 ( ) , TYPE_3 . METHOD_4 ( e ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network network = VAR_1 . METHOD_2 ( ) . get ( VAR_2 ) ; TYPE_1 . METHOD_3 ( network ) ; java.lang.String name = network . getName ( ) ; TYPE_1 . METHOD_4 ( name . equals ( VAR_1 . METHOD_5 ( VAR_2 , VAR_3 . Network ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 VAR_2 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) ) ) ; VAR_2 . getWindow ( ) . METHOD_3 ( ) ; TYPE_3 VAR_3 = VAR_1 . getReturnValue ( ) ; boolean VAR_4 = VAR_3 . getSucceeded ( ) ; if ( ( VAR_3 != null ) && VAR_4 ) { VAR_2 . METHOD_4 ( ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
public static TYPE_1 < java.lang.Object [ ] > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new java.lang.Object [ ] [ ] { new java.lang.Object [ ] { STRING_1 , false , false } , new java.lang.Object [ ] { STRING_2 , true , false } , new java.lang.Object [ ] { STRING_3 , true , true } } ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; parameters . METHOD_3 ( VAR_1 ) ; parameters . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( VAR_1 ) ; TYPE_2 . METHOD_6 ( command , VAR_4 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( INT_1 ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_4 VAR_5 = VAR_4 . METHOD_3 ( VAR_1 , true ) ; TYPE_5 . METHOD_4 ( ( STRING_2 + VAR_1 ) , VAR_5 . METHOD_5 ( ) ) ; java.lang.String VAR_6 = VAR_3 . METHOD_6 ( VAR_5 , true ) ; VAR_7 . METHOD_7 ( VAR_6 ) ; TYPE_5 . assertEquals ( VAR_2 , VAR_6 ) ; } 
private void METHOD_1 ( TYPE_1 model , TYPE_2 . VM entity , TYPE_3 ui ) { model . METHOD_2 ( new TYPE_4 ( ) ) ; TYPE_5 VAR_1 = new TYPE_5 ( METHOD_3 ( model . getId ( ) ) ) ; java.util.List < TYPE_6 > VAR_2 = VAR_1 . METHOD_4 ( entity ) ; for ( TYPE_6 VAR_3 : VAR_2 ) { TYPE_7 . METHOD_5 ( ui , VAR_3 , VAR_1 . METHOD_6 ( ) ) ; } model . METHOD_4 ( ) . METHOD_4 ( ) . METHOD_7 ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { if ( returnValue != null ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < > ( ( ( TYPE_3 < java.lang.String > ) ( returnValue ) ) ) ; java.lang.String VAR_2 = METHOD_1 ( ) . getSelectedItem ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; METHOD_2 ( ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( false ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( VAR_1 class ) , TYPE_1 . any ( VAR_2 . ArrayList class ) ) ; VAR_3 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( STRING_1 , command . validate ( ) ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ ( ( VAR_6 . length ) - 1 ) ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_7 . METHOD_4 ( ) ; } 
public static void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_2 = TYPE_1 . METHOD_3 ( ) ; VAR_3 = new TYPE_2 . DbFacade ( ) ; VAR_3 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; VAR_3 . METHOD_6 ( VAR_3 . METHOD_7 ( ) . METHOD_8 ( VAR_1 ) ) ; TYPE_4 . METHOD_9 ( TYPE_1 . METHOD_10 ( ) , VAR_2 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface entity , TYPE_1 VAR_1 ) { TYPE_2 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel > TYPE_3 = ( ( TYPE_2 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel > ) ( VAR_1 . METHOD_2 ( ) . getSelectedItem ( ) ) ) ; java.lang.String VAR_2 = TYPE_3 . METHOD_3 ( ) ; entity . METHOD_1 ( ( ( java.lang.String ) ( STRING_1 . equals ( VAR_2 ) ? TYPE_3 . getValue ( ) . getEntity ( ) : VAR_2 ) ) ) ; } 
private java.lang.String METHOD_1 ( java.lang.Object obj ) { if ( obj instanceof org.ovirt.engine.core.common.businessentities.VM ) { return ( ( org.ovirt.engine.core.common.businessentities.VM ) ( obj ) ) . getName ( ) ; } if ( obj instanceof TYPE_1 ) { return ( ( TYPE_1 ) ( obj ) ) . METHOD_2 ( ) ; } throw new TYPE_2 ( ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 ( vmId , VAR_1 , METHOD_3 ( ) ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; TYPE_2 . METHOD_6 ( command . METHOD_7 ( VAR_3 ) ) ; } 
private void METHOD_1 ( ) { for ( TYPE_1 type : TYPE_1 . METHOD_2 ( ) ) { TYPE_2 VAR_1 = TYPE_3 . getParameters ( ) . METHOD_3 ( ) . get ( type ) ; if ( VAR_1 == null ) { continue ; } VAR_1 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; TYPE_3 . METHOD_6 ( ) . METHOD_7 ( VAR_2 , new TYPE_4 ( VAR_1 ) ) ; } } 
private static void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities . Network > result ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = null ; for ( org.ovirt.engine.core.common.businessentities . Network network : result ) { if ( ( VAR_1 != null ) && ( ( network . getName ( ) . METHOD_2 ( VAR_1 . getName ( ) ) ) < 0 ) ) { TYPE_1 . METHOD_3 ( java.lang.String . METHOD_4 ( STRING_1 , VAR_1 . getName ( ) , network . getName ( ) ) ) ; } VAR_1 = network ; } } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . getId ( ) , TYPE_3 . getId ( ) , disk . getId ( ) , VAR_2 . Disk ) ; TYPE_4 . METHOD_3 ( VAR_1 ) ; } 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( TYPE_2 . METHOD_4 ( ) ) ; java.util.List < TYPE_1 . DiskImage > VAR_2 = new java.util.ArrayList ( METHOD_5 ( VAR_1 ) ) ; VAR_2 . METHOD_6 ( TYPE_3 . METHOD_7 ( VAR_1 , true ) ) ; return VAR_2 ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( action , new TYPE_1 ( VAR_1 ) , new TYPE_2 ( ) { public void METHOD_4 ( TYPE_3 result ) { if ( ( ( result . getReturnValue ( ) ) == null ) || ( ! ( result . getReturnValue ( ) . getSucceeded ( ) ) ) ) { return ; } VAR_2 . METHOD_5 ( ) . METHOD_6 ( ) ; METHOD_7 ( ) ; } } ) ; } 
protected boolean METHOD_1 ( TYPE_1 . ValidationResult item ) { java.util.List < java.lang.String > VAR_1 = item . METHOD_2 ( ) ; final java.util.List < java.lang.String > VAR_2 = ( VAR_1 == null ) ? VAR_3 . Collections < java.lang.String > METHOD_3 ( ) : VAR_1 ; return ( ( VAR_4 . length ) == ( VAR_2 . size ( ) ) ) && ( VAR_2 . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_4 ) ) ) ; } 
private static org.ovirt.engine.core.common.businessentities.DiskImage METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.DiskImage diskImage = new org.ovirt.engine.core.common.businessentities.DiskImage ( ) ; diskImage . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; diskImage . METHOD_3 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_1 . METHOD_4 ( new org.ovirt.engine.core.compat.Guid ( ) ) ) ) ; return diskImage ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { try { if ( VAR_1 != null ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) . METHOD_3 ( VAR_1 . getValue ( ) ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( VAR_2 ) ; TYPE_3 . METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; } } } catch ( java.lang.Exception e ) { VAR_4 . METHOD_6 ( STRING_1 , VAR_1 , VAR_2 , e ) ; } } 
private void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_3 ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( VAR_3 ) ; org.mockito.Mockito.when ( command . METHOD_4 ( ) ) . thenReturn ( VAR_1 ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , TYPE_2 VAR_3 , java.lang.String VAR_4 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_5 , new TYPE_3 ( VAR_1 , VAR_3 , VAR_2 , VAR_4 ) , aQuery ) ; } 
public void METHOD_1 ( TYPE_1 event ) { TYPE_2 VAR_1 = VAR_2 . getModel ( ) ; if ( ( event . METHOD_2 ( ) ) == VAR_1 ) { VAR_1 . METHOD_3 ( ) . METHOD_4 ( ) ; } else { VAR_1 . METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = METHOD_3 ( ) . METHOD_4 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster : VAR_2 ) { if ( cluster . METHOD_5 ( ) ) { try { METHOD_6 ( cluster ) ; } catch ( java.lang.Exception e ) { VAR_1 . METHOD_7 ( STRING_2 , cluster . METHOD_8 ( ) , e ) ; } } } } 
private void METHOD_1 ( TYPE_1 < TYPE_2 > command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_1 ) . get ( VAR_2 ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( VAR_1 ) . get ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_4 ( ) ) . when ( VAR_1 ) . get ( VAR_4 ) ; } 
public void METHOD_1 ( ) { if ( ! ( VAR_1 ) ) { synchronized ( VAR_2 ) { if ( ! ( VAR_1 ) ) { java.util.List < TYPE_1 > VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( ) ; for ( TYPE_1 VAR_4 : VAR_3 ) { VAR_5 . put ( VAR_4 . getId ( ) , VAR_4 ) ; } VAR_1 = true ; } } } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.lang.String VAR_1 = METHOD_1 ( ) . getSelectedItem ( ) ; METHOD_1 ( ) . setItems ( ( ( TYPE_1 < java.lang.String > ) ( returnValue ) ) ) ; METHOD_1 ( ) . setSelectedItem ( VAR_1 ) ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( true ) ; boolean VAR_2 = ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) && ( ( TYPE_2 . METHOD_5 ( ) . get ( TYPE_2 . METHOD_6 ( ) ) . METHOD_7 ( ) ) == ( VAR_3 ) ) ; TYPE_3 . METHOD_8 ( VAR_1 , VAR_2 ) ; } 
public double METHOD_1 ( double VAR_1 , boolean VAR_2 ) { if ( VAR_1 <= FLOAT_1 ) { throw new TYPE_1 ( STRING_1 ) ; } double VAR_3 = super . METHOD_1 ( ) ; if ( ! VAR_2 ) { while ( VAR_3 == FLOAT_2 ) { VAR_3 = super . METHOD_1 ( ) ; } } return VAR_3 * VAR_1 ; } 
private void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; if ( TYPE_2 . isEmpty ( VAR_1 ) ) { return ; } if ( ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ) == 1 ) { METHOD_6 ( VAR_1 , TYPE_1 . METHOD_7 ( ) , true ) ; } TYPE_1 . METHOD_4 ( ) . METHOD_1 ( TYPE_1 . METHOD_8 ( ) ) ; } 
private static TYPE_1 < java.lang.String , java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { java.lang.String url = VAR_1 . METHOD_2 ( ) ; java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( TYPE_3 . METHOD_3 ( url . METHOD_4 ( STRING_1 ) ) ) ; VAR_2 . METHOD_5 ( 0 ) ; return TYPE_4 . METHOD_6 ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; model . METHOD_1 ( model , VAR_1 , ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) , vm . METHOD_2 ( ) . getValue ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( vm . getId ( ) ) ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > list = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_3 : VAR_1 ) { org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_1 . METHOD_2 ( VAR_3 , VAR_2 ) ; if ( storageDomain != null ) { list . add ( storageDomain ) ; } } return list ; } 
public TYPE_1 METHOD_1 ( ) throws TYPE_2 { TYPE_1 VAR_1 = new TYPE_1 ( METHOD_2 ( ) , VAR_2 ) ; if ( ( getParameters ( ) ) != null ) { VAR_1 . METHOD_3 ( new java.util.ArrayList < TYPE_3 > ( ) ) ; for ( TYPE_3 VAR_3 : getParameters ( ) ) { VAR_1 . getParameters ( ) . add ( VAR_3 . METHOD_1 ( ) ) ; } } return VAR_1 ; } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS i : VAR_1 ) { if ( i . METHOD_2 ( ) ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
protected java.lang.Object METHOD_1 ( TYPE_1 . VdcQueryType VAR_1 , TYPE_2 VAR_2 , java.lang.String VAR_3 ) { METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_1 . VdcQueryReturnValue result = VAR_4 . METHOD_1 ( VAR_1 , VAR_2 ) ; return result . getSucceeded ( ) ? result . getReturnValue ( ) : null ; } 
protected void METHOD_1 ( ) { if ( TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) . METHOD_3 ( ) ) ) { try { TYPE_3 VAR_1 = METHOD_4 ( VAR_2 , new TYPE_4 ( METHOD_5 ( ) , TYPE_2 . METHOD_6 ( ) ) ) ; if ( VAR_1 != null ) { VAR_3 = ( ( java.lang.Integer ) ( VAR_1 . getReturnValue ( ) ) ) ; } } catch ( TYPE_5 e ) { VAR_4 = e . METHOD_7 ( ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 result = dao . get ( VAR_1 ) ; TYPE_2 . METHOD_2 ( result ) ; TYPE_2 . assertEquals ( VAR_1 , result . getId ( ) ) ; TYPE_2 . assertEquals ( false , result . METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( result . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 ) { super . METHOD_1 ( VAR_1 ) ; if ( ( VAR_1 != null ) && ( ( VAR_1 . length ( ) ) > 0 ) ) { table . METHOD_2 ( false ) ; } VAR_2 . METHOD_3 ( VAR_1 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_2 returnValue = METHOD_2 ( VAR_2 , new TYPE_3 ( VAR_1 ) , METHOD_3 ( VAR_1 ) ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { log . METHOD_4 ( STRING_1 , VAR_1 . getName ( ) ) ; } } 
public static TYPE_1 < java.lang.Object [ ] > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new java.lang.Object [ ] [ ] { new java.lang.Object [ ] { false , TYPE_3 . METHOD_3 ( ) } , new java.lang.Object [ ] { false , TYPE_3 . METHOD_4 ( VAR_1 ) } , new java.lang.Object [ ] { true , TYPE_3 . METHOD_4 ( VAR_2 ) } , new java.lang.Object [ ] { true , TYPE_2 . METHOD_2 ( VAR_2 , VAR_1 ) } } ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 . Guid class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < TYPE_1 > ( ) ; TYPE_1 map = new TYPE_1 ( ) ; map . METHOD_2 ( VAR_1 ) ; map . METHOD_3 ( VAR_2 ) ; VAR_3 . add ( map ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_4 ( VAR_1 ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , TYPE_1 . toString ( ) } , getEntity ( 1 ) ) ; VAR_4 . METHOD_5 ( ) ; TYPE_2 image = resource . get ( ) ; TYPE_3 . METHOD_6 ( image , 1 ) ; METHOD_7 ( image ) ; } 
protected void METHOD_1 ( ) { METHOD_1 ( getVm ( ) . getId ( ) , TYPE_1 . METHOD_2 ( getVm ( ) . METHOD_3 ( ) . METHOD_4 ( ) , false , false ) ) ; METHOD_5 ( getVm ( ) . getId ( ) ) ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities . VdsNetworkInterface > VAR_2 ) { TYPE_1 parameters = new TYPE_1 ( ) ; parameters . METHOD_2 ( ) . add ( VAR_1 ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : VAR_2 ) { parameters . METHOD_2 ( ) . add ( METHOD_3 ( iface , VAR_1 . getName ( ) ) ) ; } return parameters ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) . METHOD_3 ( STRING_1 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 . METHOD_5 ( ) ) . addValue ( STRING_3 , VAR_1 . METHOD_6 ( ) ) . addValue ( STRING_4 , TYPE_2 . METHOD_7 ( VAR_1 . getStatus ( ) ) ) . addValue ( STRING_5 , VAR_1 . METHOD_8 ( ) ) . addValue ( STRING_6 , VAR_1 . METHOD_9 ( ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , false ) ; VAR_1 . METHOD_5 ( ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 . METHOD_9 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_9 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( ) ; METHOD_5 ( 1 ) ; METHOD_6 ( 1 ) ; VAR_1 . METHOD_7 ( ) ; TYPE_1 nic = resource . get ( ) ; METHOD_8 ( nic , 1 ) ; METHOD_9 ( nic ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , new TYPE_2 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 class ) , VAR_5 , new TYPE_3 ( ) ) ; if ( VAR_2 != null ) { TYPE_4 . METHOD_3 ( this , VAR_2 ) ; } return VAR_2 ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new java.util.ArrayList < > ( ) ; for ( org.ovirt.engine.core.compat.Guid VAR_2 : TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) { if ( VAR_2 == null ) { continue ; } VAR_1 . add ( METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) ; } } return VAR_1 ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_2 ) { if ( ( VAR_2 . isEmpty ( ) ) || ( vm . METHOD_2 ( ) ) ) { return VAR_3 ; } return new TYPE_2 ( VAR_1 ) . METHOD_3 ( ) ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 . Disk > VAR_1 = new java.util.ArrayList < TYPE_1 . Disk > ( ) ; TYPE_1 . DiskImage diskImage = new TYPE_1 . DiskImage ( ) ; diskImage . METHOD_2 ( new java.util.ArrayList < org.ovirt.engine.core.compat.Guid > ( TYPE_2 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ) ) ; VAR_1 . add ( diskImage ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_6 ( vmId ) ) . thenReturn ( VAR_1 ) ; } 
private java.util.List < java.lang.String > METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : METHOD_2 ( ) . METHOD_3 ( vds . getId ( ) ) ) { if ( ( iface . METHOD_4 ( ) ) != null ) { VAR_1 . add ( iface . METHOD_4 ( ) ) ; } } return VAR_1 ; } 
public void METHOD_1 ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; if ( ( VAR_1 . size ( ) ) != 0 ) { model . METHOD_2 ( ) . METHOD_3 ( STRING_1 ) ; model . METHOD_2 ( ) . setIsChangable ( false ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; cmd . getVm ( ) . METHOD_4 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; java.util.List < TYPE_1 . DiskImage > VAR_4 = METHOD_6 ( INT_1 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_7 ( VAR_4 ) ) . thenReturn ( new TYPE_2 . ValidationResult ( VAR_6 ) ) ; TYPE_3 . METHOD_8 ( cmd , VAR_7 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 < ? extends TYPE_3 > VAR_1 , java.lang.String ... VAR_2 ) { model = METHOD_2 ( model ) ; model = TYPE_4 . METHOD_1 ( TYPE_5 . METHOD_3 ( ) , model , VAR_1 ) ; model = METHOD_4 ( model , VAR_1 , VAR_2 ) ; return model ; } 
public java.lang.String METHOD_1 ( java.lang.Object VAR_1 ) { return ( ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_2 ( ) . METHOD_3 ( ) ) + STRING_1 ) + ( ( ( TYPE_1 ) ( VAR_1 ) ) . METHOD_4 ( ) . METHOD_3 ( ) ) ; } 
protected void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; if ( ( VAR_1 ) != null ) { VAR_2 . METHOD_12 ( VAR_1 ) ; } if ( VAR_3 ) { VAR_2 . METHOD_13 ( VAR_4 . METHOD_14 ( ) ) ; } } 
public void METHOD_1 ( ) { java.util.ArrayList < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; java.util.ArrayList < TYPE_1 > VAR_2 = VAR_3 . Linq < TYPE_1 > METHOD_2 ( getModel ( ) . METHOD_3 ( ) ) ; for ( TYPE_1 model : VAR_2 ) { if ( ( ( TYPE_2 ) ( model ) ) . METHOD_4 ( ) ) { VAR_1 . add ( model ) ; } } getModel ( ) . METHOD_5 ( ) . setItems ( VAR_1 ) ; } 
public void METHOD_1 ( ) { vm . METHOD_2 ( TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_4 ( 1 , TYPE_1 . METHOD_3 ( TYPE_2 . METHOD_5 ( 1 ) ) ) ) ) ; vm . METHOD_6 ( VAR_1 ) ; METHOD_7 ( TYPE_3 . METHOD_8 ( vm , vm . METHOD_9 ( ) ) . METHOD_10 ( ) ) ; } 
public TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , TYPE_2 > METHOD_1 ( ) throws java.lang.Exception { TYPE_2 returnValue = METHOD_2 ( METHOD_3 ( ) , new TYPE_3 ( VAR_1 . getId ( ) , entity . METHOD_4 ( ) , entity . METHOD_5 ( ) , entity . getName ( ) ) ) ; return new TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS , TYPE_2 > ( VAR_1 , returnValue ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( cmd . METHOD_5 ( ) , VAR_2 ) ; } 
void METHOD_1 ( ) { VAR_1 = new TYPE_1 < java.lang.Object > ( new TYPE_2 < java.lang.Object > ( ) { public java.lang.String METHOD_2 ( java.lang.Object object ) { TYPE_3 version = ( ( TYPE_3 ) ( object ) ) ; return version . METHOD_3 ( ) ; } } ) ; VAR_2 = new TYPE_4 ( STRING_1 ) ; VAR_3 = new TYPE_4 ( STRING_1 ) ; VAR_4 = new TYPE_5 ( true , true ) ; } 
TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_3 , VAR_4 ) ; VAR_2 . METHOD_2 ( STRING_1 , VAR_5 ) ; java.lang.String VAR_6 = STRING_2 ; if ( VAR_1 != null ) { VAR_6 += STRING_3 ; VAR_2 . METHOD_2 ( VAR_7 , VAR_1 ) ; } VAR_2 . METHOD_2 ( STRING_4 , VAR_6 ) ; java.lang.String VAR_8 = METHOD_3 ( ) ; if ( VAR_8 != null ) { VAR_2 . METHOD_2 ( VAR_9 , VAR_8 ) ; } return VAR_2 ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; vm . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; TYPE_1 . METHOD_5 ( command , VAR_2 ) ; TYPE_2 . when ( VAR_2 . get ( command . getParameters ( ) . METHOD_6 ( ) ) ) . thenReturn ( vm ) ; return vm ; } 
public static void METHOD_1 ( org.ovirt.engine.core.common.businessentities.DiskImage image , boolean VAR_1 , TYPE_1 VAR_2 ) { try { TYPE_2 . METHOD_2 ( image , VAR_1 , VAR_2 ) ; TYPE_2 . METHOD_3 ( image , image . METHOD_4 ( ) ) ; } catch ( TYPE_3 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 ) ; throw new TYPE_4 ( VAR_5 , VAR_3 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_2 < TYPE_1 > cmd = TYPE_3 . METHOD_2 ( VAR_1 ) ; java.util.List < TYPE_4 > VAR_2 = new java.util.ArrayList < TYPE_4 > ( ) ; TYPE_4 VAR_3 = new TYPE_4 ( ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; VAR_2 . add ( VAR_3 ) ; java.util.List < TYPE_4 > VAR_5 = cmd . METHOD_4 ( VAR_2 ) ; TYPE_5 . METHOD_5 ( VAR_5 . isEmpty ( ) ) ; } 
public void METHOD_1 ( ) { cmd . METHOD_2 ( VAR_1 ) ; METHOD_3 ( true , VAR_2 , false , null ) ; TYPE_1 . METHOD_4 ( cmd . validate ( ) ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( cmd ) . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_2 ) , TYPE_2 . METHOD_8 ( ) , TYPE_2 . METHOD_7 ( false ) ) ; org.mockito.Mockito . METHOD_5 ( cmd ) . METHOD_9 ( ) ; TYPE_1 . assertEquals ( VAR_3 , cmd . METHOD_10 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Disk disk = new TYPE_1 . Disk ( ) ; disk . setId ( VAR_1 ) ; disk . METHOD_2 ( new TYPE_2 ( ) ) ; disk . getVm ( ) . setId ( VAR_2 ) ; TYPE_3 . METHOD_3 ( METHOD_4 ( ) , disk ) ; assertEquals ( VAR_3 , disk . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , STRING_2 , STRING_3 ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) . toString ( ) ) ; parameters . METHOD_5 ( VAR_1 ) ; parameters . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_8 ( VAR_1 ) ; TYPE_2 . METHOD_9 ( command , VAR_4 ) ; } 
private void METHOD_1 ( ) { TYPE_1 . VdcQueryReturnValue returnValue = TYPE_2 . METHOD_2 ( VAR_1 . VdcQueryReturnValue class ) ; TYPE_2 . when ( VAR_2 . METHOD_3 ( TYPE_3 . any ( VAR_1 . VdcQueryType class ) , TYPE_3 . any ( VAR_3 class ) ) ) . thenReturn ( returnValue ) ; TYPE_2 . when ( returnValue . getReturnValue ( ) ) . thenReturn ( TYPE_4 . METHOD_4 ( ) ) ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { org.ovirt.engine.core.compat.Guid VAR_3 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 == null ) || ( TYPE_2 . equals ( VAR_3 ) ) ) { VAR_3 = METHOD_3 ( VAR_1 ) ; } VAR_2 = VAR_3 ; } return VAR_2 ; } 
protected void METHOD_1 ( ) { resource = new TYPE_1 ( VAR_1 [ 0 ] . toString ( ) , new TYPE_2 ( ) ) ; resource . METHOD_2 ( VAR_2 ) ; resource . METHOD_3 ( VAR_3 ) ; resource . METHOD_4 ( VAR_4 ) ; resource . METHOD_5 ( VAR_5 ) ; resource . METHOD_6 ( VAR_6 ) ; resource . METHOD_7 ( VAR_7 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_1 ) ) { METHOD_3 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_2 ) ) { METHOD_4 ( ) ; } if ( TYPE_1 . METHOD_2 ( command . getName ( ) , STRING_3 ) ) { METHOD_5 ( ) ; } } 
private TYPE_1 METHOD_1 ( ) throws java.lang.Exception { if ( ( ( java.lang.String ) ( TYPE_2 . METHOD_2 ( VAR_1 ) ) ) . METHOD_3 ( STRING_1 ) ) { return new TYPE_3 ( ) ; } else { throw new TYPE_4 ( ( STRING_2 + ( VAR_2 class ) ) ) ; } } 
private < TYPE_1 extends TYPE_2 < org.ovirt.engine.core.compat.Guid > & TYPE_3 > TYPE_4 . ValidationResult METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 , TYPE_5 . EngineMessage VAR_4 , TYPE_6 < TYPE_1 > map ) { boolean VAR_5 = ( VAR_2 != null ) && ( VAR_3 != null ) ; java.lang.String [ ] VAR_6 = METHOD_2 ( VAR_1 , VAR_2 , VAR_3 ) ; return TYPE_7 . METHOD_3 ( VAR_4 , VAR_6 ) . when ( ( VAR_5 && ( METHOD_4 ( VAR_2 , VAR_3 , map ) ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; METHOD_3 ( ) ; command . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( command ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_8 ( TYPE_2 . any ( VAR_2 . VM class ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_2 ( ) ; VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_3 ) ; vds . METHOD_4 ( VAR_2 ) ; cmd . METHOD_5 ( vds ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 cluster ) { if ( cluster . getId ( ) . equals ( this . cluster . getId ( ) ) ) { TYPE_1 VAR_1 = new TYPE_1 ( cluster ) ; VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( ( ! ( ( java.lang.Boolean ) ( METHOD_4 ( ) . getEntity ( ) ) ) ) ) ; VAR_1 . METHOD_5 ( false ) ; return VAR_1 ; } else { return super . METHOD_1 ( cluster ) ; } } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) != null ) { VAR_2 . METHOD_5 ( TYPE_3 . METHOD_6 ( METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } else { VAR_2 . METHOD_5 ( new java.util.ArrayList < java.lang.String > ( ) ) ; } } 
public static void METHOD_1 ( TYPE_1 log , java.lang.String id , java.lang.Object obj , TYPE_2 VAR_1 ) { TYPE_3 VAR_2 = TYPE_4 . METHOD_2 ( obj ) ; if ( ( VAR_2 != null ) && ( TYPE_4 . METHOD_3 ( log , VAR_2 . METHOD_4 ( ) ) ) ) { TYPE_4 . log ( log , VAR_2 . METHOD_4 ( ) , VAR_3 , TYPE_4 . METHOD_5 ( log , VAR_2 , obj ) , TYPE_5 . METHOD_6 ( VAR_1 ) , id ) ; log . error ( STRING_1 , VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_1 = dao . get ( VAR_2 [ 0 ] ) ; METHOD_2 ( new TYPE_2 ( ) { public void METHOD_3 ( ) { TYPE_1 result = dao . get ( VAR_1 . METHOD_4 ( ) ) ; TYPE_3 . assertEquals ( VAR_1 , result ) ; } } , INT_1 ) ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , TYPE_2 type ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; if ( VAR_1 != null ) { for ( TYPE_1 item : VAR_1 ) { if ( ( item . METHOD_2 ( ) . METHOD_3 ( ) ) == type ) { VAR_2 . add ( item ) ; } } } return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( true ) ; METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_1 ) , 1 , true , false , false , true , true ) ; METHOD_5 ( TYPE_2 . METHOD_4 ( VAR_1 ) , TYPE_2 . METHOD_4 ( VAR_1 . getName ( ) ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_1 ( VAR_2 , new TYPE_3 ( ) ) ; setItems ( VAR_2 ) ; METHOD_2 ( ( ( VAR_2 . size ( ) ) == 0 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_1 > VAR_1 = ( ( java.util.ArrayList < TYPE_1 > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ) ) ; VAR_2 = new java.util.HashMap < > ( ) ; if ( VAR_1 != null ) { for ( TYPE_1 VAR_3 : VAR_1 ) { VAR_2 . put ( VAR_3 . getId ( ) , VAR_3 ) ; } } METHOD_1 ( ) ; } 
public TYPE_1 METHOD_1 ( TYPE_1 action ) throws TYPE_2 , TYPE_3 , TYPE_4 { java.lang.String url = ( ( this . VAR_1 . METHOD_2 ( ) ) + ( VAR_2 ) ) + STRING_1 ; java.util.List < TYPE_5 > VAR_3 = new TYPE_6 ( ) . METHOD_3 ( ) ; url = new TYPE_7 ( url ) . METHOD_3 ( ) ; return METHOD_4 ( ) . action ( url , action , VAR_4 class , VAR_4 class , VAR_3 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( ) ; if ( getModel ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) { getModel ( ) . METHOD_3 ( ) . setEntity ( ( VAR_1 == ( VAR_2 ) ) ) ; } super . METHOD_1 ( VAR_1 ) ; METHOD_5 ( ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_2 > ( ) ; } return source ; } } ; TYPE_3 params = new TYPE_3 ( ) ; params . METHOD_2 ( VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , params , aQuery ) ; } 
protected void METHOD_1 ( ) { try { VAR_1 . METHOD_2 ( TYPE_1 . getVm ( ) ) ; java.util.List < java.lang.String > VAR_2 = METHOD_3 ( ) ; boolean VAR_3 = METHOD_4 ( VAR_2 ) ; METHOD_5 ( ) ; if ( ! VAR_3 ) { log . error ( STRING_1 ) ; METHOD_6 ( VAR_4 ) ; } else { TYPE_1 . METHOD_7 ( true ) ; } } catch ( TYPE_2 e ) { log . error ( STRING_1 ) ; METHOD_6 ( VAR_4 ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool pool ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( ) . getStoragePoolId ( ) ; if ( pool != null ) { pool . setId ( VAR_1 ) ; } TYPE_1 VAR_2 = org.mockito.Mockito . METHOD_3 ( VAR_3 class ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 , METHOD_4 ( ) . METHOD_5 ( ) , METHOD_2 ( ) . METHOD_6 ( ) ) ) . thenReturn ( pool ) ; org.mockito.Mockito.when ( METHOD_7 ( ) . METHOD_8 ( ) . METHOD_9 ( ) ) . thenReturn ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( command ) . METHOD_4 ( ) ; command . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_1 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . log ( TYPE_1 . any ( VAR_2 class ) , TYPE_1 . any ( VAR_3 . AuditLogType class ) ) ; } 
public void METHOD_1 ( ) { int VAR_1 = METHOD_2 ( ) ; VAR_2 . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_5 ( VAR_3 , VAR_1 , VAR_4 ) ; if ( ( VAR_5 ) > 0 ) { VAR_6 = METHOD_6 ( ) ; } for ( int i = 0 ; i < ( ( VAR_2 . METHOD_7 ( ) ) - 1 ) ; i ++ ) { VAR_7 . add ( VAR_2 . METHOD_8 ( i ) . METHOD_9 ( ) ) ; } METHOD_10 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_3 ( STRING_2 , null ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( nic ) ; nic . METHOD_6 ( VAR_1 . getName ( ) ) ; TYPE_1 VAR_2 = METHOD_7 ( METHOD_8 ( nic ) ) ; METHOD_9 ( VAR_2 , VAR_1 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( VAR_3 ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_1 = new java.util.HashMap < > ( ) ; if ( ( METHOD_2 ( ) ) != null ) { VAR_1 . put ( STRING_1 , METHOD_2 ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( byte [ ] VAR_1 ) throws TYPE_1 { METHOD_2 ( ) ; METHOD_3 ( new TYPE_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , this . METHOD_5 ( ) ) . METHOD_4 ( VAR_3 , METHOD_6 ( ) ) . METHOD_7 ( VAR_1 ) . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = METHOD_2 ( STRING_1 ) ; METHOD_3 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities . VdsNetworkInterface nic = METHOD_4 ( STRING_2 , VAR_1 ) ; nic . METHOD_5 ( VAR_2 ) ; nic . METHOD_6 ( TYPE_1 . instance ( ) . METHOD_7 ( INT_1 ) ) ; METHOD_8 ( nic ) ; nic . METHOD_6 ( TYPE_1 . instance ( ) . METHOD_7 ( INT_1 ) ) ; TYPE_2 VAR_3 = METHOD_9 ( METHOD_10 ( nic ) ) ; METHOD_11 ( VAR_3 , VAR_1 ) ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 . VdcActionParametersBase > VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; if ( VAR_1 != null ) { for ( TYPE_1 . VdcActionParametersBase VAR_2 : VAR_1 ) { org.ovirt.engine.core.common.businessentities.DiskImage diskImage = METHOD_3 ( ( ( TYPE_3 ) ( VAR_2 ) ) ) ; if ( diskImage != null ) { TYPE_4 . METHOD_4 ( diskImage , TYPE_2 . METHOD_5 ( ) ) ; } } } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_5 = METHOD_5 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( command . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( METHOD_2 ( ) ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( VAR_2 ) . METHOD_4 ( VAR_1 ) ; METHOD_5 ( ) . METHOD_6 ( ) ; TYPE_1 . VdcQueryReturnValue returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( METHOD_5 ( ) . getReturnValue ( ) ) ) ; TYPE_2 . assertEquals ( TYPE_3 , returnValue . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network network = METHOD_2 ( null ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_3 ( STRING_1 , null , null , network . getName ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( METHOD_4 ( ) ) ; METHOD_5 ( network , iface , null , VAR_3 ) ; } 
public java.lang.Object METHOD_1 ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( ( domain . METHOD_2 ( ) ) == ( VAR_2 ) ) { return domain ; } } return null ; } 
public static TYPE_1 METHOD_1 ( TYPE_2 id , TYPE_3 type , TYPE_4 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 , boolean VAR_3 , boolean VAR_4 , java.lang.String VAR_5 , java.util.Map < java.lang.String , java.lang.String > VAR_6 ) { TYPE_1 VAR_7 = TYPE_5 . METHOD_1 ( id , type , VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; if ( TYPE_6 . METHOD_2 ( VAR_5 ) ) { VAR_7 . METHOD_3 ( VAR_5 ) ; } return VAR_7 ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 [ 1 ] = null ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , VAR_1 , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( ) { return new TYPE_2 ( METHOD_2 ( ) . getParameters ( ) . getStoragePoolId ( ) . getValue ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_3 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_4 ( ) , org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . get ( METHOD_2 ( ) . getParameters ( ) . METHOD_6 ( ) ) . METHOD_7 ( ) , METHOD_2 ( ) . getParameters ( ) . METHOD_8 ( ) , null ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , TYPE_3 model , TYPE_4 VAR_2 , TYPE_5 event , TYPE_6 < TYPE_3 > VAR_3 ) { super . METHOD_1 ( context , VAR_1 , model , VAR_2 , event , VAR_3 ) ; if ( ! ( TYPE_7 . equals ( event . METHOD_2 ( ) ) ) ) { return ; } METHOD_3 ( model ) ; } 
public boolean METHOD_1 ( final org.ovirt.engine.core.compat.Guid id ) { return METHOD_2 ( new TYPE_1 < java.lang.Boolean > ( ) { public java.lang.Boolean METHOD_3 ( ) { try { TYPE_2 VAR_1 = VAR_2 . METHOD_4 ( id . toString ( ) ) ; return VAR_1 != null ; } catch ( TYPE_3 VAR_3 ) { if ( ( VAR_3 . getStatus ( ) ) == ( VAR_4 ) ) { return false ; } throw VAR_3 ; } } } ) ; } 
protected void METHOD_1 ( ) { if ( ( ( TYPE_1 . getVm ( ) ) != null ) && ( ( TYPE_1 . getVm ( ) . METHOD_2 ( ) ) == ( VAR_1 ) ) ) { try { TYPE_2 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , new TYPE_3 ( TYPE_1 . METHOD_5 ( ) , TYPE_1 . METHOD_6 ( ) ) ) ; } catch ( TYPE_4 e ) { VAR_3 = e . METHOD_7 ( ) ; } } } 
protected boolean METHOD_1 ( ) { if ( ! ( validate ( TYPE_1 . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) , TYPE_2 . getParameters ( ) . METHOD_4 ( ) , TYPE_2 . getParameters ( ) . METHOD_5 ( ) , TYPE_2 . getVm ( ) . METHOD_6 ( ) , TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) ) ) ) { return false ; } return true ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_1 ( ) ) . when ( command ) . METHOD_3 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( ) ; VAR_2 . METHOD_4 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_4 ) . get ( TYPE_3 . any ( VAR_5 . Guid class ) ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 VAR_2 = ( ( TYPE_1 ) ( model ) ) ; VAR_2 . setItems ( ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ) ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) , VAR_2 ) ; if ( ( TYPE_2 . METHOD_2 ( ) . METHOD_3 ( ) ) && ( VAR_1 . METHOD_4 ( ) ) ) { TYPE_3 returnValue = VAR_1 . METHOD_5 ( ) ; VAR_3 = returnValue . getSucceeded ( ) ; VAR_4 = ( ( TYPE_4 ) ( returnValue . getReturnValue ( ) ) ) ; VAR_5 = true ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( ) , aQuery ) ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = ( ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) == null ) ? METHOD_3 ( ) : TYPE_1 . getParameters ( ) . METHOD_2 ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 , VAR_3 ) ; if ( VAR_2 . isEmpty ( ) ) { METHOD_6 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; throw new TYPE_2 ( ) ; } return VAR_2 . get ( 0 ) . getId ( ) ; } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assert VAR_1 . equals ( STRING_1 ) ; METHOD_2 ( VAR_3 , VAR_4 , new java.lang.String [ ] { VAR_5 } , new java.lang.Object [ ] { TYPE_1 . toString ( ) } , TYPE_2 . METHOD_3 ( ) , VAR_2 ) ; VAR_6 . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( null ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( ) ) . thenReturn ( VAR_1 ) ; validator = new TYPE_2 ( VAR_3 , VAR_4 , host , false , VAR_5 ) ; TYPE_3 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_4 . METHOD_7 ( VAR_6 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { if ( returnValue != null ) { TYPE_1 < java.lang.String > VAR_1 = new TYPE_2 < > ( ( ( TYPE_3 < java.lang.String > ) ( returnValue ) ) ) ; VAR_1 . add ( STRING_1 ) ; java.lang.String VAR_2 = getModel ( ) . METHOD_1 ( ) . getSelectedItem ( ) ; getModel ( ) . METHOD_1 ( ) . setItems ( VAR_1 ) ; getModel ( ) . METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; TYPE_1 VAR_1 = METHOD_5 ( VAR_2 , VAR_3 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_4 , new TYPE_2 ( VAR_5 . Disk , VAR_6 ) } , true , true , false ) ; METHOD_2 ( VAR_1 ) ; VAR_7 . METHOD_6 ( ) ; METHOD_7 ( resource . METHOD_8 ( ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 model , org.ovirt.engine.core.common.businessentities.VDSGroup VAR_1 ) { TYPE_1 VAR_2 = null ; for ( TYPE_1 VAR_3 : model . METHOD_2 ( ) . METHOD_3 ( ) ) { if ( TYPE_3 . METHOD_4 ( VAR_3 . METHOD_5 ( ) , VAR_1 . METHOD_6 ( ) ) ) { VAR_2 = VAR_3 ; break ; } } return VAR_2 ; } 
protected boolean METHOD_1 ( TYPE_1 storageDomain ) { if ( ( storageDomain . METHOD_2 ( ) ) == null ) { return false ; } org.ovirt.engine.core.compat.Guid VAR_1 = storageDomain . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_2 = storageDomain . METHOD_2 ( ) . getValue ( ) ; return ( TYPE_2 . METHOD_3 ( ) . METHOD_4 ( ) . get ( new TYPE_3 ( VAR_1 , VAR_2 ) ) ) != null ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = TYPE_1 . METHOD_2 ( STRING_1 , STRING_2 ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; VAR_2 . METHOD_4 ( ) ; java.lang.String VAR_3 = TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; TYPE_4 . assertEquals ( STRING_4 , STRING_3 , VAR_3 ) ; } 
