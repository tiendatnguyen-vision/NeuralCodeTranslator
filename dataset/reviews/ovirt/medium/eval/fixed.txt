public void METHOD_1 ( TYPE_1 returnValue ) { TYPE_2 model = ( ( TYPE_2 ) ( getWindow ( ) ) ) ; model . METHOD_2 ( ) ; METHOD_3 ( ) ; if ( ( ( model . METHOD_4 ( ) ) && ( returnValue != null ) ) && ( returnValue . getSucceeded ( ) ) ) { METHOD_5 ( returnValue . METHOD_6 ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( ) . METHOD_9 ( ) ; } } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 VAR_2 = TYPE_2 . METHOD_2 ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_3 ( ) ; VAR_3 . put ( VAR_4 , VAR_1 ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_4 ( VAR_3 ) ; TYPE_3 . METHOD_5 ( VAR_2 , VAR_5 , TYPE_2 . METHOD_6 ( ) ) ; TYPE_4 . assertEquals ( new TYPE_5 ( STRING_1 ) , VAR_2 . METHOD_7 ( ) . get ( 0 ) . METHOD_8 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 command ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_4 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_4 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) . append ( STRING_1 , METHOD_2 ( ) ) . append ( STRING_2 , METHOD_3 ( ) ) . append ( STRING_3 , METHOD_5 ( ) ) . append ( STRING_5 , METHOD_6 ( ) ) . append ( STRING_6 , METHOD_7 ( ) ) . append ( STRING_7 , METHOD_8 ( ) ) . append ( STRING_8 , METHOD_9 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( METHOD_4 ( ) , VAR_1 ) ) ; METHOD_5 ( ) ; METHOD_6 ( 0 , 1 ) ; METHOD_7 ( ) ; METHOD_8 ( 1 ) ; METHOD_9 ( ) ; TYPE_1 response = resource . get ( ) ; METHOD_11 ( response , 0 ) ; METHOD_12 ( response ) ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { VAR_1 . METHOD_2 ( ) ; if ( ( METHOD_3 ( ) . getEntity ( ) ) != null ) { VAR_2 . setEntity ( TYPE_2 . METHOD_5 ( METHOD_3 ( ) . getEntity ( ) ) ) ; } } 
protected static TYPE_1 METHOD_1 ( ) throws java.lang.Exception { TYPE_2 VAR_1 = VAR_2 . METHOD_1 ( ) ; TYPE_1 VAR_3 = new TYPE_3 ( VAR_1 ) ; VAR_3 . METHOD_2 ( ) . METHOD_3 ( VAR_4 , VAR_5 ) ; if ( VAR_6 ) { try ( TYPE_4 VAR_7 = VAR_1 . METHOD_4 ( ) ) { VAR_7 . METHOD_5 ( VAR_8 ) ; } } return VAR_3 ; } 
protected TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm ) { for ( TYPE_2 nic : vm . METHOD_2 ( ) ) { if ( ( nic . METHOD_3 ( ) ) == null ) { return TYPE_3 . METHOD_4 ( vm . METHOD_5 ( ) ) ? VAR_2 : new TYPE_1 . ValidationResult ( VAR_1 ) ; } } return VAR_2 ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , java.util.List < TYPE_2 > VAR_2 ) { final org.ovirt.engine.core.compat.Guid vmId = VAR_1 . getId ( ) ; for ( TYPE_3 disk : METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = disk . getId ( ) ; TYPE_2 VAR_4 = METHOD_4 ( vmId , VAR_3 , METHOD_5 ( VAR_1 , vmId ) ) ; METHOD_6 ( VAR_1 , VAR_4 , VAR_3 , VAR_2 ) ; } } 
private void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( this ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { METHOD_3 ( ( ( java.util.List < TYPE_1 > ) ( returnValue ) ) ) ; } } ; TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_1 , false ) ; } 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( ) ; params . METHOD_2 ( STRING_1 ) ; cmd = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( params , null ) ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; params . METHOD_5 ( null ) ; params . METHOD_6 ( null ) ; TYPE_3 . METHOD_4 ( cmd . validate ( ) ) ; } 
public java.lang.String METHOD_1 ( org.ovirt.engine.core.compat.Guid id ) { byte [ ] VAR_1 = new org.ovirt.engine.core.compat.Guid ( id . METHOD_2 ( ) , false ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; for ( int VAR_3 = 0 ; VAR_3 < ( VAR_1 . length ) ; VAR_3 ++ ) { VAR_2 . append ( ( STRING_1 + ( java.lang.String . METHOD_3 ( STRING_2 , VAR_1 [ VAR_3 ] ) ) ) ) ; } return VAR_2 . toString ( ) ; } 
private void METHOD_1 ( TYPE_1 . AuditLogType VAR_1 ) { METHOD_2 ( STRING_1 , METHOD_3 ( ) . name ( ) . METHOD_4 ( ) ) ; METHOD_2 ( STRING_2 , TYPE_3 . METHOD_5 ( ) . getName ( ) ) ; VAR_3 . log ( this , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( ( VAR_2 . getModel ( ) . getSelectedItem ( ) ) == null ) { return ; } METHOD_2 ( ) . METHOD_4 ( VAR_2 . getModel ( ) ) ; METHOD_7 ( VAR_2 ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( returnValue ) ) ; boolean VAR_2 = ! ( VAR_1 . equals ( STRING_1 ) ) ; METHOD_2 ( VAR_2 ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_3 ( VAR_3 ) ; java.util.List < org.ovirt.engine.core.compat.Guid > VAR_4 = VAR_5 . METHOD_4 ( VAR_6 ) ; TYPE_2 . assertEquals ( STRING_1 , 1 , VAR_4 . size ( ) ) ; TYPE_2 . METHOD_5 ( STRING_2 , VAR_4 . METHOD_6 ( VAR_3 ) ) ; } 
public int METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_2 ) { return ( VAR_1 . METHOD_2 ( ) ) < ( VAR_2 . METHOD_2 ( ) ) ? - 1 : ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 . METHOD_2 ( ) ) ? 0 : 1 ; } 
public TYPE_1 < java.util.List < TYPE_2 > > METHOD_1 ( java.util.List < TYPE_3 > VAR_1 ) throws TYPE_4 { final TYPE_5 VAR_2 = new TYPE_5 ( VAR_1 ) ; for ( final TYPE_3 VAR_3 : VAR_1 ) { this . VAR_4 . METHOD_2 ( VAR_3 , VAR_2 ) ; } try { this . METHOD_3 ( ) . METHOD_4 ( TYPE_6 . METHOD_5 ( VAR_1 ) ) ; } finally { METHOD_6 ( VAR_1 , VAR_2 ) ; } return VAR_2 ; } 
public static < TYPE_1 > java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > METHOD_1 ( java.util.ArrayList < TYPE_1 > list ) { java.util.ArrayList < org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > > VAR_1 = new java.util.ArrayList < > ( ) ; if ( list != null ) { for ( TYPE_1 item : list ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < TYPE_1 > model = new org.ovirt.engine.ui.uicommonweb.models.EntityModel ( ) ; model . setEntity ( item ) ; VAR_1 . add ( model ) ; } } return VAR_1 ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; final org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . METHOD_2 ( ) ; log . METHOD_3 ( STRING_1 , VAR_1 , TYPE_2 . name ( ) ) ; METHOD_4 ( VAR_3 , new TYPE_3 ( VAR_1 , VAR_4 ) ) ; } 
public boolean equals ( java.lang.Object other ) { if ( other instanceof TYPE_1 ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( other ) ) ; return ( VAR_2 . equals ( VAR_1 . METHOD_1 ( ) ) ) && ( ( VAR_3 ) == ( VAR_1 . METHOD_2 ( ) ) ) ; } return false ; } 
void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds ) { this . METHOD_2 ( true ) ; VAR_2 . METHOD_3 ( VAR_1 . size ( ) ) ; int VAR_3 = 0 ; for ( TYPE_1 VAR_4 : VAR_1 ) { METHOD_4 ( VAR_3 , 0 , METHOD_5 ( VAR_4 ) ) ; METHOD_4 ( VAR_3 , 1 , METHOD_6 ( VAR_4 , vds ) ) ; METHOD_4 ( VAR_3 , 2 , METHOD_7 ( VAR_4 ) ) ; METHOD_4 ( VAR_3 , INT_1 , METHOD_8 ( VAR_4 ) ) ; VAR_3 ++ ; } } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( VAR_2 ) == null ) { org.ovirt.engine.core.compat.Guid VAR_3 = METHOD_2 ( VAR_1 ) ; if ( ( VAR_3 == null ) || ( TYPE_3 . equals ( VAR_3 ) ) ) { VAR_3 = METHOD_3 ( VAR_1 ) ; } VAR_2 = VAR_3 ; } return VAR_2 ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > VAR_2 = new java.util.HashMap < java.lang.String , java.util.Map < java.lang.String , java.lang.Object > > ( ) ; VAR_2 . put ( STRING_1 , VAR_1 ) ; return TYPE_1 . METHOD_2 ( VAR_2 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 model = METHOD_3 ( 0 ) ; model . METHOD_4 ( TYPE_2 . METHOD_5 ( VAR_2 [ 2 ] ) ) ; model . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ; try { METHOD_8 ( resource . METHOD_9 ( model ) , 0 ) ; METHOD_10 ( STRING_1 ) ; } catch ( TYPE_3 VAR_3 ) { METHOD_11 ( VAR_3 , VAR_4 ) ; } } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS VAR_1 ) { TYPE_1 VAR_2 = new TYPE_1 ( VAR_1 . getId ( ) , VAR_3 , TYPE_2 . METHOD_2 ( VAR_4 , STRING_1 ) ) ; TYPE_3 . getInstance ( ) . METHOD_4 ( VAR_5 , VAR_2 , TYPE_4 . METHOD_5 ( ) ) ; } 
public void onSuccess ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_1 ( ) ) != null ) { METHOD_2 ( VAR_1 . METHOD_1 ( ) ) ; } else { METHOD_2 ( new java.util.ArrayList < TYPE_2 > ( ) ) ; } METHOD_3 ( ) ; } 
protected TYPE_1 . Disk METHOD_1 ( TYPE_1 . Disk model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; model . METHOD_4 ( TYPE_2 . METHOD_3 ( VAR_2 class ) ) ; model . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) ) ; model . METHOD_7 ( new TYPE_4 ( ) ) ; return model ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = TYPE_2 . METHOD_2 ( TYPE_3 . METHOD_3 ( ) , TYPE_3 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_4 . any ( ) ) ) . thenReturn ( VAR_1 ) ; VAR_4 . METHOD_1 ( org.ovirt.engine.core.compat.Guid . METHOD_5 ( ) ) ; for ( TYPE_1 iface : VAR_1 ) { METHOD_6 ( iface ) ; } } 
public void METHOD_1 ( ) { VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( VAR_2 ) . get ( TYPE_1 . any ( VAR_3 . Guid class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( VAR_5 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_6 ( VAR_1 ) ) . thenReturn ( METHOD_7 ( VAR_7 ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.List < TYPE_1 > VAR_1 = returnValue . getReturnValue ( ) ; getModel ( ) . METHOD_1 ( ) . setItems ( VAR_1 ) ; if ( VAR_1 != null ) { for ( TYPE_1 VAR_2 : VAR_1 ) { if ( VAR_2 . getId ( ) . equals ( VAR_3 ) ) { getModel ( ) . METHOD_1 ( ) . setSelectedItem ( VAR_2 ) ; break ; } } } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_4 , VAR_5 . METHOD_3 ( ) , new java.lang.String [ ] { VAR_6 } , new java.lang.Object [ ] { VAR_7 [ 1 ] } , METHOD_4 ( VAR_3 ) , VAR_2 ) ; } 
protected void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_1 ) . METHOD_3 ( TYPE_1 . any ( VAR_2 . VM class ) , TYPE_1 . METHOD_4 ( VAR_3 . String class ) , TYPE_1 . any ( VAR_4 class ) , TYPE_1 . METHOD_4 ( VAR_2 . Disk class ) ) ; } 
protected void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . getParameters ( ) . getId ( ) ) ; for ( org.ovirt.engine.core.common.businessentities.VM vm : vms ) { TYPE_2 . METHOD_6 ( vm ) ; TYPE_3 . METHOD_7 ( vm . METHOD_8 ( ) , new TYPE_4 ( ) ) ; TYPE_5 . METHOD_9 ( vm ) ; } TYPE_1 . METHOD_10 ( ) . METHOD_11 ( vms ) ; } 
public void METHOD_1 ( final TYPE_1 < org.ovirt.engine.core.compat.Guid > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { return ; } TYPE_2 . METHOD_2 ( new TYPE_3 ( ) { public void METHOD_3 ( ) { for ( org.ovirt.engine.core.compat.Guid vmId : VAR_1 ) { TYPE_4 . getInstance ( ) . METHOD_4 ( VAR_2 , new TYPE_5 ( vmId ) ) ; } } } ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { java.lang.String result = STRING_1 ; if ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) && ( TYPE_1 . METHOD_2 ( VAR_2 ) ) ) { if ( VAR_3 . METHOD_3 ( VAR_1 ) ) { java.util.HashMap < java.lang.String , java.lang.String > VAR_4 = VAR_3 . get ( VAR_1 ) ; result = ( VAR_4 . METHOD_3 ( VAR_2 ) ) ? VAR_4 . get ( VAR_2 ) : VAR_2 ; } else { VAR_5 . error ( VAR_6 , VAR_1 ) ; } } return result ; } 
protected boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { return false ; } if ( ! ( TYPE_1 . METHOD_4 ( ) ) ) { return true ; } return METHOD_2 ( ) . METHOD_5 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > VAR_2 = ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ; TYPE_2 VAR_3 = ( ( VAR_2 . size ( ) ) > 0 ) ? VAR_2 . get ( 0 ) : null ; VAR_1 . METHOD_2 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { double VAR_1 = INT_1 * ( TYPE_1 . METHOD_2 ( INT_2 , 2 ) ) ; int VAR_2 = TYPE_2 . METHOD_3 ( ( ( long ) ( VAR_1 ) ) , VAR_3 , VAR_4 ) . METHOD_4 ( ) ; TYPE_3 . assertEquals ( INT_1 , VAR_2 ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = VAR_1 . getId ( ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . getStoragePoolId ( ) ; TYPE_1 params = new TYPE_1 ( VAR_2 , VAR_3 ) ; params . METHOD_2 ( TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; return TYPE_2 . METHOD_4 ( ) . METHOD_5 ( VAR_4 , params ) . getSucceeded ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.models.EntityModel model ) { if ( ( this . model ) != null ) { this . model . METHOD_6 ( ) . METHOD_7 ( VAR_3 ) ; } this . model = model ; model . METHOD_6 ( ) . METHOD_8 ( VAR_3 ) ; VAR_1 . METHOD_2 ( ) ; for ( TYPE_1 item : VAR_2 ) { if ( ( item . METHOD_3 ( ) ) && ( item . METHOD_4 ( ) ) ) { VAR_1 . METHOD_5 ( item ) ; } } } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_3 ) . when ( cluster ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_7 ( ) ; TYPE_3 . METHOD_8 ( command . validate ( ) ) ; } 
private org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { METHOD_3 ( command ) ; TYPE_2 VAR_4 = command . getParameters ( ) ; VAR_4 . METHOD_4 ( VAR_1 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; command . METHOD_6 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = VAR_5 . get ( command . getParameters ( ) . METHOD_7 ( ) ) ; return vm ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = new TYPE_1 ( ( STRING_1 + ( VAR_2 ) ) , VAR_3 . Network ) ; TYPE_2 < TYPE_1 > VAR_4 = METHOD_2 ( VAR_1 ) ; VAR_4 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_4 . METHOD_5 ( ) . getReturnValue ( ) ) ; } 
public void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < > ( ) ; java.util.Map < java.lang.String , java.lang.Object > disk = new java.util.HashMap < > ( ) ; disk . put ( VAR_2 , VAR_3 ) ; VAR_1 . put ( STRING_1 , disk ) ; VAR_1 . put ( STRING_2 , disk ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_4 = TYPE_1 . METHOD_2 ( VAR_1 ) ; METHOD_3 ( TYPE_1 . METHOD_4 ( ) , VAR_4 , false ) ; } 
private void METHOD_1 ( TYPE_1 . Disk model , int VAR_1 ) { assertEquals ( VAR_2 [ VAR_1 ] . toString ( ) , model . getId ( ) ) ; METHOD_2 ( model . METHOD_3 ( ) ) ; METHOD_2 ( model . METHOD_5 ( ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( INT_1 ) ; TYPE_2 VAR_4 = TYPE_3 . METHOD_2 ( STRING_1 ) ; TYPE_4 VAR_5 = VAR_4 . METHOD_3 ( VAR_1 , true ) ; TYPE_5 . METHOD_4 ( ( STRING_2 + VAR_1 ) , VAR_5 . METHOD_5 ( ) ) ; java.lang.String VAR_6 = VAR_3 . METHOD_6 ( VAR_5 , true ) ; TYPE_5 . assertEquals ( VAR_2 , VAR_6 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_2 ( TYPE_2 . any ( ) ) ; TYPE_3 . METHOD_4 ( cmd . METHOD_5 ( ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_2 ) . METHOD_2 ( TYPE_2 . any ( ) ) ; org.mockito.Mockito . METHOD_6 ( VAR_2 , org.mockito.Mockito . METHOD_7 ( ) ) . METHOD_8 ( TYPE_2 . any ( ) ) ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 iface ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( iface . METHOD_3 ( ) ) ; VAR_1 . METHOD_4 ( STRING_1 , iface . METHOD_5 ( ) ) ; VAR_1 . METHOD_4 ( STRING_2 , iface . getName ( ) ) ; return VAR_1 ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( STRING_1 ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( VAR_3 < java.lang.Boolean > getValue ( VAR_4 ) ) { VAR_1 . METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_6 ( ) ; } else { VAR_2 . METHOD_7 ( ) ; VAR_1 . METHOD_2 ( STRING_3 ) ; } VAR_1 . METHOD_2 ( STRING_4 ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , TYPE_1 . instance ( ) . METHOD_3 ( INT_1 ) ) ; org.mockito.Mockito.when ( cluster . METHOD_4 ( ) ) . thenReturn ( true ) ; TYPE_3 . METHOD_5 ( validator . METHOD_1 ( ) , TYPE_4 . METHOD_6 ( ) ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VM > METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ( ( org.ovirt.engine.core.compat.Guid ) ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) ) , true ) ; } return VAR_1 ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { final java.util.List < TYPE_1 > VAR_2 = VAR_3 . METHOD_2 ( VAR_1 . getId ( ) ) ; final TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_4 = VAR_2 . METHOD_3 ( ) . map ( TYPE_3 : : METHOD_4 ) . METHOD_5 ( TYPE_4 . METHOD_6 ( ) ) ; VAR_1 . METHOD_7 ( ( ( VAR_4 . size ( ) ) != 1 ? null : VAR_4 . METHOD_8 ( ) . METHOD_9 ( ) ) ) ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > list = new TYPE_1 < org.ovirt.engine.ui.uicommonweb.models.EntityModel > ( ) ; list . add ( new TYPE_2 ( ) ) ; list . add ( new TYPE_5 ( ) ) ; list . add ( new TYPE_3 ( ) ) ; list . add ( new TYPE_4 ( ) ) ; list . add ( new TYPE_6 ( ) ) ; METHOD_2 ( list ) ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; java.util.List < java.lang.String > VAR_2 = getReturnValue ( ) . METHOD_2 ( ) ; java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > VAR_3 = new java.util.HashMap < org.ovirt.engine.core.compat.Guid , TYPE_1 > ( ) ; VAR_1 = METHOD_3 ( VAR_3 ) ; if ( VAR_1 && ( getParameters ( ) . METHOD_4 ( ) ) ) { METHOD_5 ( ) ; } return VAR_1 && ( METHOD_6 ( VAR_1 , VAR_2 , VAR_3 ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.ArrayList < TYPE_1 > VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_5 . put ( VAR_1 , VAR_4 ) ; VAR_4 . METHOD_2 ( VAR_6 ) ; VAR_4 . METHOD_3 ( METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; VAR_4 . METHOD_7 ( VAR_7 ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . METHOD_2 ( ) ) != null ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . getId ( ) ) ; if ( ( org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . get ( TYPE_1 . METHOD_2 ( ) . METHOD_7 ( ) ) ) != null ) { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_6 ( ) . METHOD_4 ( TYPE_1 . METHOD_2 ( ) . METHOD_7 ( ) ) ; } } super . METHOD_1 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : null ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . METHOD_2 ( VAR_2 ) ; if ( VAR_1 != null ) { VAR_3 . METHOD_3 ( VAR_1 ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_3 , aQuery ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { org.ovirt.engine.core.compat . Version version = VAR_1 . METHOD_2 ( ) ; org.ovirt.engine.core.common.businessentities.VDS vds = VAR_1 . METHOD_3 ( ) ; if ( ( ( ( VAR_2 ) == ( vds . METHOD_5 ( ) ) ) && ( TYPE_3 . METHOD_6 ( version ) ) ) && ( TYPE_3 . METHOD_7 ( version ) ) ) { return new TYPE_4 ( VAR_1 ) ; } return new TYPE_5 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; final org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; final org.ovirt.engine.core.common.businessentities.StoragePool VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 ) ; METHOD_3 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 2 ] } , METHOD_4 ( ) ) ; super . METHOD_1 ( ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; cmd . getParameters ( ) . getVm ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 cluster = new TYPE_1 ( ) ; cluster . METHOD_4 ( VAR_1 ) ; cluster . METHOD_5 ( TYPE_2 . METHOD_6 ( ) ) ; org.mockito.Mockito.doReturn ( cluster ) . when ( cmd ) . METHOD_7 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_8 ( TYPE_3 . any ( ) ) ; } 
private void METHOD_1 ( ) { java.util.Map < org.ovirt.engine.core.compat.Guid , java.lang.String > VAR_1 = METHOD_2 ( ) ; if ( VAR_1 != null ) { VAR_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , null , new TYPE_2 ( VAR_1 . METHOD_5 ( ) ) ) ; } VAR_3 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ; } 
public boolean equals ( java.lang.Object VAR_1 ) { return ( ( ( VAR_1 != null ) && ( ( METHOD_1 ( ) ) == ( VAR_1 . METHOD_1 ( ) ) ) ) && ( map . equals ( ( ( TYPE_1 ) ( VAR_1 ) ) . map ) ) ) && ( ( value ) == null ? ( ( ( TYPE_1 ) ( VAR_1 ) ) . value ) == null : value . equals ( ( ( TYPE_1 ) ( VAR_1 ) ) . value ) ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 , int VAR_2 ) throws TYPE_1 , TYPE_2 { TYPE_3 context = new TYPE_3 ( ) ; try { TYPE_4 . METHOD_2 ( context ) . METHOD_3 ( VAR_3 , new TYPE_5 ( VAR_1 , VAR_2 ) ) ; } finally { try { context . METHOD_4 ( ) ; } catch ( TYPE_2 e ) { VAR_4 . error ( ( STRING_1 + STRING_2 ) , e ) ; } } } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { TYPE_1 . VdcQueryReturnValue returnValue = ( ( TYPE_1 . VdcQueryReturnValue ) ( VAR_1 ) ) ; java.lang.Object VAR_2 = returnValue . getReturnValue ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_3 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > ) ( VAR_2 ) ) ; this . VAR_3 = VAR_3 ; METHOD_2 ( ) ; METHOD_3 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( host . METHOD_2 ( ) ) . thenReturn ( METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( TYPE_1 . any ( ) ) ) . thenReturn ( TYPE_2 . METHOD_6 ( org.mockito.Mockito . METHOD_7 ( VAR_3 . VDS class ) ) ) ; TYPE_3 . METHOD_8 ( validator . METHOD_9 ( ) , TYPE_4 . METHOD_10 ( VAR_4 ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_2 . equals ( command . getName ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_3 . equals ( command . getName ( ) ) ) { METHOD_4 ( ) ; } else if ( METHOD_5 ( ) . equals ( command ) ) { METHOD_6 ( ) ; } else if ( METHOD_7 ( ) . equals ( command ) ) { METHOD_8 ( ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_3 ) ) { boolean VAR_4 = VAR_5 . getModel ( ) . METHOD_2 ( ) ; METHOD_3 ( VAR_4 ) ; } } 
public void METHOD_1 ( int VAR_1 ) { try { TYPE_1 . getInstance ( ) . METHOD_2 ( METHOD_3 ( ) . METHOD_4 ( ) ) . METHOD_5 ( METHOD_3 ( ) , METHOD_6 ( ) . get ( VAR_1 ) . getId ( ) ) ; } catch ( TYPE_2 e ) { VAR_2 . METHOD_7 ( STRING_1 , METHOD_6 ( ) . get ( VAR_1 ) . getName ( ) , METHOD_8 ( ) . getName ( ) , e ) ; } } 
protected java.util.List < java.lang.Integer > METHOD_1 ( int VAR_1 ) { java.util.List < java.lang.Integer > VAR_2 = new java.util.ArrayList < java.lang.Integer > ( ) ; int VAR_3 = METHOD_2 ( ) ; for ( int i = 1 ; i <= ( TYPE_1 . METHOD_3 ( VAR_3 , VAR_1 ) ) ; i ++ ) { if ( ( VAR_3 % i ) == 0 ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
private org.ovirt.engine.core.common.businessentities . VdsNetworkInterface METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String name , java.lang.Boolean VAR_1 , java.lang.String VAR_2 , java.lang.Integer VAR_3 , java.lang.String VAR_4 ) { org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface = new org.ovirt.engine.core.common.businessentities . VdsNetworkInterface ( ) ; iface . setId ( id ) ; iface . METHOD_3 ( name ) ; iface . METHOD_4 ( VAR_1 ) ; iface . METHOD_5 ( VAR_2 ) ; iface . METHOD_6 ( VAR_3 ) ; iface . METHOD_7 ( VAR_4 ) ; return iface ; } 
private boolean METHOD_1 ( TYPE_1 . VdcQueryReturnValue returnValue , TYPE_2 model ) { model . METHOD_2 ( null ) ; if ( ! ( returnValue . getSucceeded ( ) ) ) { model . METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( returnValue . METHOD_5 ( ) ) ) ; METHOD_6 ( ) . setEntity ( false ) ; return true ; } return false ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status , java.lang.String name , boolean VAR_1 ) { final org.ovirt.engine.core.common.businessentities.StorageDomain domain = METHOD_2 ( status , name , VAR_2 ) ; domain . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( TYPE_2 . any ( ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( domain ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return domain ; } 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . getId ( ) ) ) . thenReturn ( TYPE_1 ) ; java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( TYPE_1 . getId ( ) ) ; TYPE_2 . METHOD_5 ( command ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_2 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ) ( returnValue ) ) ; VAR_1 . METHOD_1 ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 , VAR_3 . METHOD_3 ( ) . METHOD_4 ( ) ) ) ; } 
protected void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , java.util.List < TYPE_1 > VAR_1 , TYPE_2 VAR_2 ) { TYPE_3 VAR_3 = new TYPE_3 ( ) ; VAR_3 . METHOD_2 ( true , vmId ) ; for ( TYPE_1 VAR_4 : VAR_1 ) { if ( ( VAR_4 . getId ( ) ) == null ) { VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } VAR_4 . METHOD_4 ( vmId ) ; VAR_3 . add ( VAR_4 , VAR_2 , false ) ; } } 
protected void METHOD_1 ( int VAR_1 ) { java.util.List < java.lang.Integer > VAR_2 = METHOD_2 ( VAR_3 ) ; java.util.List < java.lang.Integer > VAR_4 = METHOD_2 ( VAR_5 ) ; TYPE_1 . METHOD_3 ( VAR_2 ) ; for ( java.lang.Integer VAR_6 : VAR_2 ) { for ( java.lang.Integer VAR_7 : VAR_4 ) { if ( ( VAR_6 * VAR_7 ) == VAR_1 ) { getModel ( ) . METHOD_4 ( ) . setSelectedItem ( VAR_7 ) ; getModel ( ) . METHOD_5 ( ) . setSelectedItem ( VAR_6 ) ; return ; } } } } 
private static void METHOD_1 ( TYPE_1 vm , int VAR_1 ) { for ( int VAR_2 = 1 ; VAR_2 <= VAR_1 ; VAR_2 ++ ) { TYPE_2 . METHOD_2 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , vm . getId ( ) ) , VAR_3 , VAR_4 , TYPE_2 . METHOD_4 ( ) , true , false , null ) ; } } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( TYPE_1 . DiskImage disk ) { if ( ! ( disk . METHOD_2 ( ) ) ) { java.util.List < org.ovirt.engine.core.common.businessentities.VM > vms = TYPE_2 . METHOD_3 ( ) . METHOD_4 ( disk . getId ( ) , false ) ; if ( ! ( vms . isEmpty ( ) ) ) { return vms . get ( 0 ) ; } } return null ; } 
public java.lang.Object METHOD_1 ( java.lang.Object id ) throws TYPE_1 { org.ovirt.engine.core.common.businessentities.VM vm = METHOD_2 ( VAR_1 . VM class , VAR_2 , METHOD_3 ( VAR_3 , id ) , id . toString ( ) ) ; TYPE_2 model = new TYPE_2 ( ) ; model . setId ( vm . getId ( ) . toString ( ) ) ; return TYPE_3 . METHOD_4 ( model ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 from ) { TYPE_1 to = new TYPE_1 ( ) ; if ( from . METHOD_2 ( ) ) { to . METHOD_3 ( from . METHOD_4 ( ) ) ; } if ( from . METHOD_5 ( ) ) { to . METHOD_6 ( from . METHOD_7 ( ) . value ( ) ) ; } return to ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_2 ( VAR_1 . getId ( ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_2 ( VAR_2 . getId ( ) ) ; TYPE_1 . assertEquals ( VAR_3 , validator . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( true ) ; VAR_1 . METHOD_4 ( STRING_1 , TYPE_1 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( ) , TYPE_1 . METHOD_5 ( ) . METHOD_8 ( ) , ( ( TYPE_1 . METHOD_9 ( ) ) != null ? TYPE_1 . METHOD_9 ( ) . METHOD_8 ( ) : STRING_2 ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 . VM entity ) { TYPE_3 < java.lang.String > VAR_1 = TYPE_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; VAR_4 . METHOD_3 ( VAR_1 , model ) ; if ( VAR_1 . METHOD_4 ( STRING_1 ) ) { METHOD_5 ( model , entity ) ; } VAR_4 . METHOD_6 ( model ) ; VAR_4 . METHOD_7 ( model ) ; TYPE_5 . METHOD_8 ( model , this ) ; return model ; } 
public void METHOD_1 ( ) { validator = org.mockito.Mockito . METHOD_4 ( new TYPE_1 ( VAR_2 , cluster , VAR_3 ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( validator ) . METHOD_5 ( TYPE_2 . any ( VAR_4 class ) ) ; TYPE_3 . METHOD_6 ( validator . METHOD_1 ( TYPE_4 . instance ( ) . METHOD_7 ( VAR_4 class ) ) , TYPE_5 . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery aQuery = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; aQuery . METHOD_2 ( this ) ; VAR_1 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( result ) ) ; if ( ( VAR_2 != null ) && ( ( VAR_2 . length ( ) ) > 0 ) ) { METHOD_3 ( ) . setEntity ( VAR_2 ) ; } } } ; TYPE_1 . getInstance ( ) . METHOD_4 ( aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 < java.lang.String > VAR_1 = TYPE_2 . METHOD_2 ( INT_1 , null ) ; TYPE_3 . assertEquals ( 2 , VAR_1 . size ( ) ) ; for ( java.lang.String VAR_2 : TYPE_4 . METHOD_4 ( STRING_1 ) ) { TYPE_3 . METHOD_3 ( VAR_1 . METHOD_5 ( VAR_2 . METHOD_6 ( ) ) ) ; } } 
public void METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { if ( ( ( ( TYPE_2 . METHOD_2 ( ) ) != null ) && ( ( METHOD_3 ( ) ) != null ) ) && ( ! ( TYPE_2 . METHOD_2 ( ) . METHOD_4 ( ) . equals ( VAR_2 ) ) ) ) { VAR_1 . add ( new TYPE_1 ( METHOD_3 ( ) , VAR_3 , VAR_4 ) ) ; } } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; for ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 : VAR_1 ) { VAR_3 . METHOD_1 ( VAR_2 . getId ( ) . toString ( ) ) ; } if ( VAR_3 == null ) { return ; } METHOD_2 ( VAR_3 ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( TYPE_3 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_4 ( VAR_5 ) , VAR_1 ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( vmId , other . vmId ) ) && ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = TYPE_2 . METHOD_1 ( VAR_1 , vm . METHOD_2 ( ) ) ; model . METHOD_3 ( model , VAR_3 , VAR_2 , vm . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; VAR_2 . getParameters ( ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( true ) . when ( VAR_2 ) . METHOD_4 ( ) ; VAR_2 . validate ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_4 ( ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 , java.lang.String VAR_3 ) { return METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_5 , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , VAR_2 ) . addValue ( STRING_4 , VAR_3 ) ) ; } 
protected void METHOD_1 ( ) { if ( ( TYPE_1 . getVm ( ) ) != null ) { VAR_1 . METHOD_2 ( TYPE_1 . getVm ( ) . getId ( ) ) ; } METHOD_3 ( ) ; METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( true ) ; } 
private TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 ) { TYPE_1 . ValidationResult VAR_2 = VAR_3 ; VAR_2 = ( METHOD_2 ( VAR_2 ) ) ? VAR_2 : METHOD_3 ( ) ; VAR_2 = ( METHOD_2 ( VAR_2 ) ) ? VAR_2 : METHOD_4 ( VAR_1 ) ; return VAR_2 ; } 
private void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( VAR_1 < java.lang.Boolean > getValue ( VAR_2 ) ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; TYPE_1 . METHOD_7 ( ) . METHOD_8 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; METHOD_9 ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) . getId ( ) ) ; TYPE_1 . METHOD_10 ( null ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.List < TYPE_1 > VAR_1 = returnValue . getReturnValue ( ) ; getModel ( ) . METHOD_1 ( ) . setEntity ( ( ! ( VAR_1 . isEmpty ( ) ) ) ) ; getModel ( ) . METHOD_2 ( ( VAR_1 . isEmpty ( ) ? new TYPE_1 ( ) : VAR_1 . get ( 0 ) ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( null ) ; VAR_2 . add ( VAR_3 ) ; TYPE_2 VAR_4 = new TYPE_3 ( VAR_5 ) ; METHOD_3 ( 1 , VAR_4 ) ; VAR_6 . METHOD_4 ( VAR_1 ) ; try { METHOD_5 ( ) ; TYPE_4 . METHOD_6 ( STRING_1 ) ; } catch ( TYPE_5 VAR_7 ) { METHOD_7 ( VAR_7 , VAR_8 , VAR_4 ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( false ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { TYPE_1 . getVm ( ) . METHOD_3 ( VAR_1 ) ; TYPE_1 . getVm ( ) . METHOD_4 ( null ) ; org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_1 . getVm ( ) . METHOD_7 ( ) ) ; } else { VAR_2 . METHOD_8 ( STRING_1 ) ; } TYPE_1 . METHOD_9 ( true ) ; } 
private TYPE_1 < java.util.List < org.ovirt.engine.core.compat.Guid > , org.ovirt.engine.core.compat.Guid > METHOD_1 ( TYPE_2 VAR_1 , org.ovirt.engine.core.common.businessentities.VDSGroup cluster , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts ) { return VAR_1 . METHOD_4 ( cluster , hosts , cluster . METHOD_5 ( ) , new java.util.ArrayList < java.lang.String > ( ) ) ; } 
private void METHOD_1 ( ) { if ( ( METHOD_2 ( ) . getSelectedItem ( ) ) != null ) { TYPE_1 . getInstance ( ) . METHOD_3 ( new org.ovirt.engine.ui.frontend.AsyncQuery ( this , new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( target ) ) ; java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( returnValue ) ) ; VAR_1 . METHOD_4 ( hosts ) ; } } ) ) ; } } 
protected void METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) . METHOD_4 ( ) ) != ( VAR_1 ) ) { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( true ) ; TYPE_1 . METHOD_7 ( ) . METHOD_8 ( TYPE_1 . METHOD_5 ( ) . METHOD_5 ( ) ) ; } TYPE_1 . METHOD_9 ( true ) ; } } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < TYPE_3 > VAR_4 ) { java.util.List < TYPE_3 > VAR_3 = new java.util.ArrayList ( VAR_1 . METHOD_2 ( ) ) ; VAR_3 = TYPE_4 . METHOD_3 ( VAR_3 , VAR_4 ) ; return ! ( VAR_3 . isEmpty ( ) ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 . METHOD_2 ( ) ) { METHOD_3 ( ) . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setEntity ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; METHOD_3 ( ) . setEntity ( ( ( java.lang.Boolean ) ( TYPE_3 . METHOD_6 ( VAR_2 ) ) ) ) ; } } 
public java.lang.String METHOD_1 ( ) { if ( METHOD_2 ( ) ) { java.lang.String VAR_1 = ( ( java.lang.String ) ( TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ) ) ; if ( ! ( VAR_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ) ) { VAR_1 = VAR_2 . METHOD_7 ( ) ; } return VAR_2 . METHOD_5 ( ) . get ( VAR_1 ) ; } else { return VAR_2 . METHOD_5 ( ) . get ( VAR_3 ) ; } } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? source : new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > > ( ) ; } } ; TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , VAR_3 , aQuery ) ; } 
protected boolean validate ( TYPE_1 . ValidationResult VAR_1 ) { if ( ! ( VAR_1 . METHOD_1 ( ) ) ) { addCanDoActionMessage ( VAR_1 . METHOD_2 ( ) ) ; for ( java.lang.String VAR_2 : VAR_1 . METHOD_3 ( ) ) { addCanDoActionMessage ( VAR_2 ) ; } } return VAR_1 . METHOD_1 ( ) ; } 
public int METHOD_1 ( TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > VAR_1 , TYPE_1 < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface , org.ovirt.engine.core.common.businessentities.VDS > VAR_2 ) { int VAR_3 = VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . METHOD_3 ( ) ) ; if ( VAR_3 != 0 ) { return VAR_3 ; } return VAR_1 . METHOD_2 ( ) . getName ( ) . METHOD_4 ( VAR_2 . METHOD_2 ( ) . getName ( ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 nic , java.lang.String VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_2 ) { for ( org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface i : VAR_2 ) { if ( i . getName ( ) . equals ( VAR_1 ) ) { nic . METHOD_2 ( ) . add ( METHOD_3 ( i . getId ( ) . toString ( ) ) ) ; break ; } } return nic ; } 
protected TYPE_1 METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > VAR_1 ) { TYPE_1 VAR_2 = TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_3 , METHOD_3 ( VAR_1 ) , TYPE_3 . METHOD_4 ( METHOD_5 ( ) ) ) ; if ( VAR_2 . getSucceeded ( ) ) { getReturnValue ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) ) ; } return VAR_2 ; } 
public static TYPE_1 . ValidationResult METHOD_1 ( TYPE_2 VAR_1 , org.ovirt.engine.core.compat . Version version ) { if ( ! ( TYPE_3 . METHOD_2 ( version ) ) ) return VAR_2 ; if ( ( VAR_1 . METHOD_3 ( ) ) == null ) { return TYPE_4 . METHOD_4 ( VAR_1 , null ) ; } else { return new TYPE_5 ( VAR_1 . METHOD_3 ( ) ) . METHOD_5 ( VAR_1 . METHOD_6 ( ) ) ; } } 
public java.util.List < java.lang.String > METHOD_1 ( java.lang.String VAR_2 ) { java.lang.String value = get ( VAR_2 ) ; if ( ( value == null ) || ( value . isEmpty ( ) ) ) { return TYPE_2 . METHOD_2 ( ) ; } return TYPE_3 . METHOD_3 ( value . METHOD_4 ( STRING_1 ) ) ; } 
public java.lang.Object METHOD_1 ( ) { METHOD_2 ( ) . METHOD_3 ( getVm ( ) . METHOD_4 ( ) ) ; getVm ( ) . METHOD_5 ( VAR_1 ) ; TYPE_1 . getInstance ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_2 , new TYPE_2 ( METHOD_8 ( ) , getVm ( ) . METHOD_4 ( ) ) ) ; METHOD_2 ( ) . METHOD_9 ( ) ; return null ; } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; METHOD_2 ( org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vm . getId ( ) ) ) ) ; setItems ( METHOD_4 ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.compat.Guid VAR_1 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( ) ; TYPE_1 . METHOD_9 ( command . METHOD_10 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final TYPE_1 VAR_2 = METHOD_3 ( 0 ) ; VAR_2 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ; VAR_2 . METHOD_6 ( TYPE_2 . METHOD_7 ( VAR_3 [ 2 ] ) ) ; try { VAR_4 . add ( VAR_2 ) ; METHOD_8 ( STRING_1 ) ; } catch ( TYPE_3 VAR_5 ) { METHOD_9 ( VAR_5 , VAR_6 ) ; } } 
public void METHOD_1 ( ) { VAR_1 = new TYPE_1 ( ) ; VAR_1 . setId ( params . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( params . METHOD_5 ( ) ) ) . thenReturn ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_7 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model ) { model . METHOD_2 ( TYPE_2 . METHOD_3 ( VAR_1 class ) ) ; for ( TYPE_3 VAR_2 : model . METHOD_4 ( ) . METHOD_4 ( ) ) { VAR_2 . METHOD_5 ( TYPE_2 . METHOD_3 ( VAR_3 class ) . value ( ) ) ; VAR_2 . METHOD_6 ( null ) ; VAR_2 . METHOD_7 ( null ) ; } return model ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { ( ( TYPE_3 . ViewDef ) ( METHOD_2 ( ) ) ) . METHOD_3 ( ( ( org.ovirt.engine.core.common.businessentities.StoragePool ) ( model . METHOD_4 ( ) . getSelectedItem ( ) ) ) . getName ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( TYPE_2 . any ( ) ) ) . thenReturn ( VAR_1 ) ; TYPE_3 . METHOD_3 ( validator . METHOD_4 ( VAR_1 . getId ( ) ) , TYPE_4 . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( java.lang.String VAR_1 , boolean VAR_2 ) { boolean VAR_3 = ( ! ( TYPE_1 . METHOD_3 ( this . VAR_1 , VAR_1 ) ) ) || ( ( this . VAR_2 ) != VAR_2 ) ; this . VAR_1 = VAR_1 ; this . VAR_2 = VAR_2 ; if ( VAR_3 ) { METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . assertEquals ( 1 , result . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 , result . get ( 0 ) . getId ( ) ) ; } 
public java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 ) { TYPE_1 result = new TYPE_1 ( ) ; result . append ( ( VAR_1 == null ? STRING_1 : VAR_1 ) ) ; result . append ( ( ( result . length ( ) ) == 0 ? STRING_1 : STRING_2 ) ) ; result . append ( ( VAR_2 == null ? STRING_1 : VAR_2 ) ) ; return result . toString ( ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.List < TYPE_2 > VAR_1 = ( ( java.util.List < TYPE_2 > ) ( returnValue ) ) ; VAR_1 = ( VAR_1 != null ) ? VAR_1 : new java.util.ArrayList < TYPE_2 > ( ) ; METHOD_1 ( ) . setItems ( VAR_1 ) ; METHOD_1 ( ) . METHOD_2 ( VAR_1 . isEmpty ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 0 ) ; METHOD_2 ( 0 ) ; METHOD_3 ( METHOD_4 ( ) ) ; TYPE_1 model = TYPE_2 . getModel ( 1 , false ) ; model . setId ( TYPE_3 . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_4 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public static java.util.ArrayList < TYPE_1 > METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > [ ] VAR_1 ) { java.util.ArrayList < TYPE_1 > result = new java.util.ArrayList < TYPE_1 > ( VAR_1 . length ) ; for ( java.util.Map < java.lang.String , java.lang.Object > VAR_2 : VAR_1 ) { result . add ( TYPE_3 . METHOD_2 ( VAR_2 ) ) ; } return result ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = TYPE_1 . METHOD_2 ( ) . METHOD_3 ( ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 ) ; VAR_2 . METHOD_4 ( new TYPE_3 ( VAR_3 . Disk , VAR_1 ) ) ; VAR_2 . METHOD_5 ( VAR_2 ) ; VAR_2 . METHOD_6 ( VAR_4 ) ; TYPE_4 returnValue = METHOD_7 ( VAR_4 , VAR_2 , null ) ; if ( returnValue . getSucceeded ( ) ) { METHOD_8 ( returnValue . METHOD_9 ( ) ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_2 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; TYPE_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_2 ) ) < 0 ) ) ; TYPE_2 . METHOD_2 ( ( ( VAR_1 . METHOD_3 ( VAR_1 ) ) == 0 ) ) ; TYPE_2 . METHOD_2 ( ( ( VAR_2 . METHOD_3 ( VAR_1 ) ) > 0 ) ) ; } 
protected void METHOD_1 ( ) { command = METHOD_2 ( ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_3 ( TYPE_1 . any ( VAR_1 . Guid class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_4 ( TYPE_1 . any ( VAR_1 . Version class ) ) ; org.mockito.Mockito.doReturn ( true ) . when ( command ) . METHOD_5 ( ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( null ) , null ) ) ; TYPE_3 . METHOD_3 ( cmd . validate ( ) ) ; TYPE_3 . METHOD_4 ( cmd . getReturnValue ( ) . METHOD_5 ( ) . METHOD_6 ( TYPE_4 . toString ( ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 = METHOD_3 ( VAR_4 ) ; VAR_3 . METHOD_4 ( VAR_5 ) ; VAR_3 . METHOD_5 ( VAR_1 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain VAR_6 = METHOD_3 ( VAR_7 ) ; VAR_6 . METHOD_4 ( VAR_5 ) ; VAR_6 . METHOD_5 ( VAR_2 ) ; METHOD_6 ( VAR_8 , VAR_9 ) ; METHOD_7 ( VAR_10 , org.ovirt.engine.core.compat.Guid . METHOD_8 ( ) , VAR_8 ) ; TYPE_2 . METHOD_9 ( command . validate ( ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 class ) ) ; TYPE_4 . assertEquals ( VAR_4 , cmd . METHOD_8 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { final int VAR_1 = INT_1 ; final int VAR_2 = INT_2 ; org.ovirt.engine.core.compat.Guid VAR_3 = org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ; METHOD_3 ( VAR_3 , VAR_4 ) ; METHOD_4 ( ) ; TYPE_1 VAR_5 = METHOD_5 ( VAR_3 , VAR_1 , VAR_2 ) ; METHOD_6 ( ) ; TYPE_2 . METHOD_8 ( command . METHOD_9 ( ) ) ; } 
private TYPE_1 METHOD_1 ( java.util.List < TYPE_2 > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( VAR_1 , VAR_2 , VAR_4 ) ; VAR_3 . METHOD_2 ( ( ! ( TYPE_3 . getReturnValue ( ) . METHOD_3 ( ) . isEmpty ( ) ) ) ) ; return METHOD_4 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 params = new TYPE_1 ( vmId , VAR_1 ) ; cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_2 ( params ) ) ; org.mockito.Mockito . METHOD_3 ( ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( cmd ) . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; TYPE_1 VAR_2 = new TYPE_1 ( ) ; VAR_3 = STRING_1 ; java.util.List < java.lang.String > VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 ) ; METHOD_3 ( STRING_2 , ( ( VAR_4 . size ( ) ) == 1 ) ) ; } 
public TYPE_1 . ValidationResult METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_2 VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; if ( VAR_2 == null ) { return new TYPE_1 . ValidationResult ( VAR_3 , java.lang.String . METHOD_3 ( STRING_1 , STRING_2 , VAR_1 . toString ( ) ) ) ; } return VAR_4 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
protected boolean validate ( ) { if ( METHOD_2 ( ) ) { return METHOD_3 ( ) ; } else if ( ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) == ( VAR_2 ) ) { return METHOD_5 ( VAR_3 ) ; } return METHOD_6 ( ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDS vds , TYPE_1 VAR_1 ) { if ( ( VAR_1 != null ) && ( ( VAR_1 . METHOD_2 ( ) ) == ( vds . METHOD_3 ( ) ) ) ) { java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > METHOD_4 ( VAR_4 ) ; TYPE_2 VAR_5 = new TYPE_2 ( VAR_1 ) ; VAR_5 . METHOD_5 ( VAR_2 ) ; if ( VAR_5 . METHOD_6 ( TYPE_2 . METHOD_7 ( ) ) ) { return true ; } } return false ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_4 ( false ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_1 ) ; TYPE_2 . METHOD_8 ( command . validate ( ) ) ; TYPE_2 . METHOD_9 ( command . getReturnValue ( ) . METHOD_10 ( ) . METHOD_11 ( TYPE_3 . toString ( ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; VAR_3 . METHOD_3 ( ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_5 ( VAR_4 , VAR_2 , false ) ) ; TYPE_2 . METHOD_4 ( STRING_1 , VAR_3 . METHOD_6 ( VAR_4 , false ) ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_3 ( VAR_2 ) ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_5 ( VAR_3 ) ) . when ( VAR_1 ) . METHOD_6 ( VAR_3 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_4 ) ) . when ( VAR_5 ) . METHOD_6 ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_7 ( VAR_6 ) ) . when ( VAR_5 ) . METHOD_6 ( VAR_6 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = METHOD_2 ( ) ; METHOD_3 ( VAR_1 ) ; METHOD_4 ( 1 , true ) ; try { resource . get ( ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_7 ( VAR_3 ) ; } } 
protected boolean METHOD_1 ( ) { int VAR_1 = ( TYPE_1 . METHOD_2 ( ) ) ? 0 : org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( TYPE_1 . METHOD_5 ( ) . getName ( ) , TYPE_2 . name ( ) ) ; if ( VAR_1 > 0 ) { addCanDoActionMessage ( VAR_2 ) ; TYPE_1 . METHOD_6 ( STRING_1 , VAR_1 ) ; return false ; } else { return true ; } } 
private TYPE_1 METHOD_1 ( ) { TYPE_1 parameters = METHOD_2 ( ) ; parameters . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_4 ( ) ) ; parameters . METHOD_6 ( VAR_1 ) ; parameters . METHOD_7 ( TYPE_2 . METHOD_8 ( ) . get ( 0 ) . METHOD_9 ( ) ) ; return parameters ; } 
private void METHOD_1 ( java.lang.Object sender , TYPE_1 args ) { if ( ( METHOD_2 ( ) . getEntity ( ) ) == null ) { METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setSelectedItem ( null ) ; } else { METHOD_3 ( ) . setIsChangable ( true ) ; } } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( STRING_1 . equals ( ( ( TYPE_3 ) ( args ) ) . VAR_2 ) ) { boolean value = METHOD_2 ( ) ; METHOD_3 ( ) . METHOD_4 ( value ) ; METHOD_5 ( ) . setEntity ( ( value && ( ! ( TYPE_4 . METHOD_6 ( METHOD_3 ( ) . getSelectedItem ( ) ) ) ) ) ) ; } } 
private boolean METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid VAR_1 = METHOD_2 ( VAR_2 ) ; if ( VAR_1 == null ) { return true ; } java.util.List < TYPE_1 . DiskImage > VAR_3 = METHOD_3 ( VAR_1 ) ; if ( ! ( METHOD_4 ( VAR_3 ) ) ) { return false ; } return METHOD_5 ( VAR_4 , METHOD_6 ( VAR_3 ) , TYPE_2 . METHOD_7 ( ) ) . getSucceeded ( ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities.VDSGroup cluster , org.ovirt.engine.core.common.businessentities.VDS VAR_1 , java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 ) { if ( cluster . METHOD_2 ( ) ) { log . METHOD_3 ( STRING_1 , cluster . getName ( ) ) ; return ; } METHOD_5 ( cluster . getId ( ) ) ; try { java.util.List < TYPE_1 > VAR_3 = METHOD_6 ( cluster , VAR_1 , VAR_2 ) ; if ( VAR_3 != null ) { METHOD_7 ( VAR_2 , VAR_3 ) ; } } finally { METHOD_8 ( cluster . getId ( ) ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid vmId = new org.ovirt.engine.core.compat.Guid ( STRING_1 ) ; org.ovirt.engine.core.compat.Guid VAR_1 = new org.ovirt.engine.core.compat.Guid ( STRING_2 ) ; TYPE_1 VAR_2 = METHOD_2 ( VAR_1 , vmId ) ; TYPE_2 . assertEquals ( 0 , VAR_2 . METHOD_4 ( VAR_2 ) ) ; TYPE_1 VAR_3 = METHOD_2 ( VAR_1 , vmId ) ; TYPE_2 . assertEquals ( 0 , VAR_2 . METHOD_4 ( VAR_3 ) ) ; } 
private java.util.List < TYPE_1 . DiskImage > METHOD_1 ( ) { TYPE_1 . DiskImage disk = new TYPE_1 . DiskImage ( ) ; disk . METHOD_2 ( VAR_1 ) ; disk . METHOD_3 ( new java.util.ArrayList ( TYPE_2 . METHOD_4 ( VAR_2 ) ) ) ; java.util.List < TYPE_1 . DiskImage > VAR_3 = new java.util.ArrayList < > ( ) ; VAR_3 . add ( disk ) ; return VAR_3 ; } 
protected void METHOD_1 ( ) { if ( ( ( TYPE_1 . METHOD_2 ( ) ) != null ) && ( METHOD_3 ( TYPE_1 . METHOD_4 ( ) ) ) ) { METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; TYPE_1 . METHOD_12 ( true ) ; } } 
private static boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 , TYPE_3 user ) { return ( ( user == null ) || ( VAR_2 . METHOD_2 ( VAR_1 . getId ( ) ) ) ) || ( ( TYPE_4 . METHOD_3 ( ) . METHOD_4 ( user . getId ( ) , VAR_3 , VAR_1 . getId ( ) , VAR_4 ) ) != null ) ; } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_2 VAR_2 ) { try { if ( VAR_1 != null ) { TYPE_3 VAR_3 = TYPE_4 . METHOD_2 ( ) . METHOD_3 ( VAR_1 ) ; if ( VAR_3 != null ) { VAR_3 . METHOD_4 ( VAR_2 ) ; TYPE_4 . METHOD_2 ( ) . METHOD_5 ( VAR_3 ) ; } } } catch ( java.lang.Exception e ) { VAR_4 . METHOD_6 ( STRING_1 , VAR_1 , VAR_2 , e ) ; } } 
private void METHOD_1 ( TYPE_1 version , TYPE_2 [ ] VAR_1 ) { version . METHOD_3 ( new TYPE_4 ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { version . METHOD_4 ( ) . METHOD_4 ( ) . add ( VAR_3 . value ( ) ) ; } } 
protected void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 VAR_1 = METHOD_2 ( ) ; boolean VAR_2 = ( VAR_1 == ( TYPE_1 . VM ) ) ? true : false ; TYPE_2 tempVar = new TYPE_2 ( ) ; tempVar . METHOD_3 ( METHOD_4 ( ) ) ; tempVar . METHOD_5 ( VAR_1 ) ; tempVar . METHOD_6 ( VAR_2 ) ; METHOD_7 ( null ) ; setItems ( METHOD_9 ( ) . METHOD_10 ( ) ) ; } 
public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) . getEntity ( ) ) { return VAR_1 ; } else if ( METHOD_3 ( ) . getEntity ( ) ) { return VAR_2 ; } else if ( METHOD_4 ( ) . getEntity ( ) ) { return VAR_3 ; } return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . get ( VAR_2 ) ; TYPE_2 . METHOD_3 ( VAR_1 ) ; TYPE_1 VAR_3 = METHOD_4 ( ) ; VAR_1 = dao . get ( VAR_2 ) ; TYPE_2 . METHOD_5 ( VAR_1 ) ; TYPE_2 . assertEquals ( VAR_3 , VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 status , boolean VAR_1 ) { this . VAR_2 = status ; if ( VAR_1 ) { TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( ) ; try { TYPE_4 . METHOD_3 ( METHOD_4 ( ) , VAR_2 ) ; } finally { if ( VAR_3 != null ) { TYPE_3 . METHOD_6 ( VAR_3 ) ; } } } } 
protected boolean validate ( ) { boolean returnValue = ( ( ( ( ( super . validate ( ) ) && ( TYPE_1 . METHOD_2 ( ) ) ) && ( METHOD_3 ( VAR_1 ) ) ) && ( TYPE_1 . METHOD_4 ( ) ) ) && ( METHOD_5 ( ) ) ) && ( METHOD_6 ( ) ) ; return returnValue ; } 
public void METHOD_1 ( ) { METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( cmd . METHOD_4 ( VAR_1 ) ) ; java.util.List < java.lang.String > VAR_2 = cmd . getReturnValue ( ) . METHOD_5 ( ) ; TYPE_1 . assertEquals ( 2 , VAR_2 . size ( ) ) ; TYPE_1 . assertEquals ( VAR_2 . get ( 0 ) , TYPE_2 . toString ( ) ) ; TYPE_1 . assertEquals ( VAR_2 . get ( 1 ) , java.lang.String . METHOD_6 ( STRING_1 , VAR_1 ) ) ; } 
protected org.ovirt.engine.core.common.businessentities.VDSGroup METHOD_2 ( TYPE_1 pool ) { return getEntity ( VAR_1 . VDSGroup class , VAR_2 , new TYPE_2 ( pool . METHOD_2 ( ) . getName ( ) ) , ( STRING_1 + ( pool . METHOD_2 ( ) . getName ( ) ) ) ) ; } 
private static org.ovirt.engine.core.compat.Guid METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( model . METHOD_2 ( ) ) && ( model . METHOD_3 ( ) . METHOD_6 ( ) ) ) { return TYPE_2 . METHOD_7 ( model . METHOD_3 ( ) . getId ( ) ) ; } else { return VAR_1 == null ? VAR_2 : VAR_1 ; } } 
private static void METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > args ) throws TYPE_1 { TYPE_2 log = TYPE_2 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_2 = ( ( java.lang.String ) ( args . get ( STRING_2 ) ) ) ; if ( VAR_2 != null ) { TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 ) ; VAR_3 . METHOD_3 ( new TYPE_4 ( ) ) ; log . METHOD_4 ( VAR_3 ) ; } TYPE_5 . METHOD_5 ( ( ( TYPE_6 ) ( args . get ( STRING_3 ) ) ) ) ; } 
protected void METHOD_1 ( ) { if ( ( getModel ( ) . METHOD_2 ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = getModel ( ) . METHOD_2 ( ) ; boolean VAR_1 = ( ( cluster . METHOD_3 ( ) . METHOD_4 ( VAR_2 ) ) >= 0 ) && ( ! ( cluster . METHOD_5 ( ) . equals ( VAR_3 ) ) ) ; getModel ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_1 ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; assertEquals ( 2 , VAR_1 . METHOD_3 ( ) . size ( ) ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) . get ( 0 ) , 1 , INT_1 , false , STRING_1 , 0 , false , false , false ) ; METHOD_4 ( VAR_1 . METHOD_3 ( ) . get ( 1 ) , INT_2 , INT_3 , true , STRING_2 , INT_4 , true , true , true ) ; METHOD_6 ( VAR_1 ) ; } 
protected TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 ) { TYPE_3 VAR_2 = new TYPE_4 ( TYPE_5 . METHOD_2 ( ) ) ; TYPE_6 . METHOD_3 ( VAR_2 , VAR_1 ) ; return new TYPE_1 ( VAR_2 , TYPE_6 . METHOD_4 ( VAR_1 ) , TYPE_6 . METHOD_5 ( VAR_2 . getId ( ) , VAR_1 ) ) ; } 
public void METHOD_1 ( TYPE_1 < ? extends TYPE_2 > VAR_1 , java.lang.Object sender , TYPE_2 args ) { if ( VAR_2 ) { if ( ( ( org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.Boolean > ) ( sender ) ) . getEntity ( ) ) { METHOD_2 ( ) . setEntity ( true ) ; METHOD_2 ( ) . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; METHOD_2 ( ) . setIsChangable ( false ) ; } else { METHOD_2 ( ) . setIsChangable ( true ) ; } } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( false ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , new org.ovirt.engine.ui.frontend.AsyncQuery ( new TYPE_1 < TYPE_2 . VdcQueryReturnValue > ( ) { public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { VAR_3 = returnValue . getReturnValue ( ) ; } } ) ) ; } 
public org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( java.lang.Object source ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( ( domain . METHOD_2 ( ) ) == ( VAR_2 ) ) { return domain ; } } } return null ; } 
private TYPE_1 METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , TYPE_2 . Disk disk ) { TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_3 . setId ( new TYPE_3 ( vm . getId ( ) , disk . getId ( ) ) ) ; VAR_3 . METHOD_2 ( null ) ; VAR_3 . METHOD_3 ( true ) ; return VAR_3 ; } 
public void METHOD_1 ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( returnValue ) ) ; VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain domain : VAR_1 ) { if ( TYPE_2 . METHOD_2 ( domain ) ) { VAR_2 . add ( domain ) ; } } METHOD_3 ( ) . setItems ( VAR_2 ) ; if ( VAR_3 ) { METHOD_4 ( ) ; } else { METHOD_5 ( ) ; } } 
public boolean METHOD_1 ( ) { if ( validate ( ) ) { VAR_1 . METHOD_1 ( ) ; ( ( TYPE_1 . DiskImage ) ( METHOD_2 ( ) . METHOD_3 ( ) ) ) . METHOD_4 ( METHOD_5 ( ) . getSelectedItem ( ) ) ; return true ; } return false ; } 
public void METHOD_1 ( ) { log . METHOD_2 ( STRING_1 , this . METHOD_3 ( ) . getName ( ) ) ; try { if ( METHOD_4 ( ) ) { METHOD_5 ( ) ; } } catch ( TYPE_1 e ) { log . error ( STRING_2 , e ) ; } METHOD_7 ( ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( VAR_1 == null ) { return null ; } TYPE_1 VAR_2 = new TYPE_2 ( VAR_3 ) . METHOD_2 ( ) . get ( VAR_1 ) ; if ( VAR_2 != null ) { return VAR_2 ; } TYPE_1 VAR_4 = METHOD_3 ( VAR_1 ) ; if ( ( VAR_4 != null ) && ( ! ( METHOD_4 ( VAR_4 . getId ( ) ) ) ) ) { return VAR_4 ; } return null ; } 
private void METHOD_7 ( TYPE_1 . AuditLogType VAR_1 , java.lang.String VAR_2 , TYPE_2 VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; VAR_4 . METHOD_2 ( TYPE_4 . METHOD_3 ( ) . getId ( ) ) ; java.lang.String VAR_5 = ( VAR_2 == null ) ? TYPE_4 . METHOD_4 ( ) . name ( ) : VAR_2 ; VAR_4 . METHOD_5 ( STRING_1 , VAR_5 ) ; VAR_4 . METHOD_6 ( VAR_3 ) ; TYPE_5 . METHOD_7 ( VAR_4 , VAR_1 , VAR_6 ) ; } 
private static TYPE_1 METHOD_1 ( java.util.Map < java.lang.String , java.lang.Object > VAR_1 , java.lang.String name ) { TYPE_1 returnValue = null ; if ( VAR_1 . METHOD_2 ( name ) ) { java.lang.String VAR_2 = ( ( java.lang.String ) ( ( ( VAR_1 . get ( name ) ) instanceof java.lang.String ) ? VAR_1 . get ( name ) : null ) ) ; returnValue = ( VAR_2 == null ) ? null : TYPE_1 . METHOD_4 ( VAR_2 ) ; } return returnValue ; } 
public java.util.List < TYPE_1 . DiskImage > METHOD_1 ( java.util.List < TYPE_1 . Disk > VAR_1 ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = new java.util.ArrayList < > ( ) ; java.util.List < TYPE_2 > VAR_3 = TYPE_3 . METHOD_2 ( VAR_1 ) ; for ( TYPE_2 VAR_4 : VAR_3 ) { VAR_2 . add ( METHOD_3 ( VAR_4 . getId ( ) ) ) ; } return VAR_2 ; } 
private TYPE_1 . DiskImage METHOD_1 ( boolean VAR_1 ) { TYPE_1 . DiskImage VAR_2 = new TYPE_1 . DiskImage ( ) ; VAR_2 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_2 . METHOD_6 ( VAR_3 ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; return VAR_2 ; } 
private static org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS VAR_2 = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; VAR_2 . METHOD_2 ( STRING_1 ) ; VAR_2 . METHOD_3 ( STRING_2 ) ; VAR_2 . METHOD_4 ( new org.ovirt.engine.core.compat . Version ( STRING_3 ) ) ; VAR_2 . METHOD_5 ( org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ) ; VAR_2 . setId ( VAR_1 ) ; return VAR_2 ; } 
protected void METHOD_1 ( ) { TYPE_1 . VdcQueryReturnValue VAR_1 = TYPE_2 . METHOD_2 ( VAR_2 . VdcQueryReturnValue class ) ; TYPE_3 . METHOD_3 ( VAR_3 . runQuery ( TYPE_3 . METHOD_4 ( VAR_4 ) , METHOD_5 ( ) ) ) . METHOD_6 ( VAR_1 ) ; TYPE_3 . METHOD_3 ( VAR_1 . getSucceeded ( ) ) . METHOD_6 ( true ) . METHOD_7 ( ) ; TYPE_3 . METHOD_3 ( VAR_1 . getReturnValue ( ) ) . METHOD_6 ( METHOD_8 ( ) ) . METHOD_7 ( ) ; TYPE_2 . METHOD_9 ( ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; TYPE_1 . VdcQueryType VAR_2 = VAR_3 ; java.lang.Object result = VAR_4 . runQuery ( VAR_2 , VAR_5 , VAR_1 ) ; TYPE_2 . assertEquals ( result , VAR_6 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_4 ( VAR_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_5 ) . METHOD_5 ( VAR_4 . METHOD_6 ( ) ) ; org.mockito.Mockito . METHOD_2 ( VAR_7 ) . runQuery ( VAR_2 , VAR_5 ) ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( true ) ; final java.lang.String VAR_2 = STRING_1 ; VAR_1 . METHOD_3 ( VAR_2 ) ; long VAR_3 = TYPE_2 . METHOD_4 ( ) ; VAR_3 += INT_1 ; VAR_1 . METHOD_5 ( VAR_3 ) ; VAR_1 . METHOD_6 ( ) ; final boolean result = VAR_1 . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( result ) ; } 
private org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( TYPE_1 status , java.lang.String name ) { final org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( status , name , VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( VAR_1 ) ) ; cmd . METHOD_6 ( new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ) ; return VAR_1 ; } 
private void METHOD_1 ( ) { VAR_2 = new java.util.ArrayList < > ( ) ; TYPE_1 VAR_3 = new TYPE_1 ( ) ; VAR_2 . add ( VAR_3 ) ; org.mockito.Mockito.when ( METHOD_4 ( ) . getId ( ) ) . thenReturn ( VAR_4 ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_5 ( VAR_4 ) ) . thenReturn ( VAR_2 ) ; } 
private java.util.Map < java.lang.String , java.lang.Object > METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.Object > VAR_1 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; VAR_1 . put ( VAR_2 , java.lang.Boolean . toString ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) ) ; if ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) { VAR_1 . put ( VAR_3 , TYPE_2 . getParameters ( ) . METHOD_3 ( ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 ) ; TYPE_1 model = getModel ( 1 ) ; model . setId ( VAR_2 [ 1 ] . toString ( ) ) ; try { resource . METHOD_6 ( model ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_8 ( VAR_3 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 0 , true ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public org.ovirt.engine.core.common.businessentities.VM getVm ( ) { org.ovirt.engine.core.common.businessentities.VM vm = super . getVm ( ) ; if ( vm == null ) { vm = TYPE_1 . METHOD_1 ( ) . METHOD_2 ( TYPE_1 . METHOD_3 ( ) , false ) . get ( 0 ) ; METHOD_4 ( vm ) ; METHOD_5 ( vm . getId ( ) ) ; } return vm ; } 
protected org.ovirt.engine.core.common.businessentities.VM METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM result = null ; TYPE_1 . VdcQueryReturnValue VAR_1 = METHOD_2 ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_3 . getId ( ) ) ) ; if ( VAR_1 . getSucceeded ( ) ) { result = VAR_1 . getReturnValue ( ) ; } return result ; } 
private java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > VAR_1 ) { java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList ( VAR_1 . size ( ) ) ; for ( TYPE_2 VAR_3 : VAR_1 ) { TYPE_1 VAR_4 = METHOD_2 ( VAR_3 ) ; VAR_2 . add ( VAR_4 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 ) ; METHOD_3 ( VAR_1 , VAR_2 , true ) ; METHOD_4 ( METHOD_5 ( ) ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_4 ) { METHOD_8 ( VAR_4 ) ; } } 
private boolean METHOD_1 ( TYPE_1 . Network network ) { return ( ( ( network != null ) && ( network . METHOD_2 ( ) ) ) && ( network . METHOD_3 ( ) . METHOD_4 ( ) ) ) && ( ! ( network . METHOD_3 ( ) . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( new TYPE_1 . DiskImage ( ) ) ; METHOD_3 ( ) ; METHOD_4 ( ) ; METHOD_5 ( false ) ; METHOD_6 ( ) ; METHOD_7 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_8 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( new TYPE_3 . ValidationResult ( VAR_5 ) ) ; TYPE_4 . METHOD_9 ( command , VAR_6 ) ; } 
public static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { org.ovirt.engine.core.common.businessentities.VM vm = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( vmId ) ; if ( vm != null ) { return ( org.ovirt.engine.core.common.businessentities.VM . METHOD_3 ( vm . getStatus ( ) ) ) || ( ( vm . getStatus ( ) ) == ( VAR_1 ) ) ; } return false ; } 
public void METHOD_1 ( ) { METHOD_2 ( true , false ) ; METHOD_3 ( ) ; TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_4 ( VAR_2 class ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_5 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_6 ( ) ; TYPE_4 . METHOD_7 ( cmd . METHOD_8 ( ) ) ; } 
public TYPE_1 < TYPE_2 > METHOD_1 ( ) throws TYPE_3 , TYPE_4 { java.util.List < TYPE_2 > VAR_1 = new java.util.ArrayList < TYPE_2 > ( ) ; for ( java.lang.String VAR_4 : VAR_5 ) { TYPE_5 < ? > resource = METHOD_3 ( VAR_4 ) ; VAR_1 . METHOD_4 ( METHOD_5 ( resource , VAR_4 , new java.util.HashMap < java.lang.String , TYPE_7 > ( ) ) ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( ) { if ( METHOD_2 ( ) ) { if ( ( getParameters ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) { return METHOD_4 ( ) . METHOD_5 ( ) ; } return METHOD_4 ( ) . METHOD_6 ( ) ; } return METHOD_5 ( ) ; } 
public java.lang.String getValue ( TYPE_1 VAR_1 ) { if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_2 ) ) { return VAR_3 . METHOD_3 ( ) ; } else if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_4 ) ) { return VAR_3 . METHOD_4 ( ) ; } else if ( ( VAR_1 . METHOD_2 ( ) ) == ( VAR_5 ) ) { return VAR_3 . METHOD_5 ( ) ; } return VAR_3 . METHOD_6 ( ) ; } 
public void METHOD_1 ( final TYPE_1 model ) { super . METHOD_1 ( model ) ; model . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( new TYPE_2 < TYPE_4 > ( ) { public void METHOD_5 ( TYPE_3 < ? extends TYPE_4 > VAR_1 , java.lang.Object sender , TYPE_4 args ) { ( ( TYPE_5 . ViewDef ) ( METHOD_6 ( ) ) ) . METHOD_7 ( model . METHOD_2 ( ) . getSelectedItem ( ) . getName ( ) ) ; } } ) ; } 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 , TYPE_2 VAR_2 ) { if ( VAR_2 instanceof TYPE_4 ) { return VAR_3 . get ( ) ; } else if ( VAR_2 instanceof TYPE_5 ) { return VAR_4 . get ( ) ; } else if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_5 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 , VAR_2 ) ; } } 
private void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_3 . put ( VAR_4 , VAR_4 ) ; } METHOD_2 ( ) ; for ( TYPE_1 VAR_1 : VAR_2 ) { METHOD_3 ( ) . put ( VAR_4 , VAR_6 ) ; } for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_7 . put ( VAR_4 , VAR_8 ) ; } METHOD_4 ( ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 , true ) ; VAR_1 . METHOD_3 ( ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_6 ( VAR_2 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_2 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = super . METHOD_1 ( ) ; if ( ( ( ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) ) != null ) && ( ( TYPE_2 . getVm ( ) ) != null ) ) && ( TYPE_2 . getParameters ( ) . METHOD_2 ( ) . METHOD_3 ( ) ) ) { VAR_1 . add ( new TYPE_1 ( TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_2 . StoragePool , VAR_3 ) ) ; } return VAR_1 ; } 
public org.ovirt.engine.core.common.businessentities.StorageDomain METHOD_1 ( ) { if ( ( super . METHOD_1 ( ) ) == null ) { super . METHOD_2 ( new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ) ; } super . METHOD_1 ( ) . METHOD_3 ( TYPE_2 . getParameters ( ) . METHOD_1 ( ) ) ; return super . METHOD_1 ( ) ; } 
protected java.lang.String METHOD_1 ( TYPE_1 client ) { TYPE_2 VAR_1 = new TYPE_3 ( INT_1 ) ; java.lang.String command = VAR_2 < java.lang.String > getValue ( VAR_3 ) ; try { client . METHOD_3 ( command , null , VAR_1 , null ) ; return new java.lang.String ( VAR_1 . METHOD_4 ( ) , STRING_1 ) ; } catch ( java.lang.Exception e ) { log . METHOD_5 ( STRING_2 , command , client . METHOD_6 ( ) , e ) ; throw new TYPE_4 ( e ) ; } } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( vmId , other . vmId ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 ) { VAR_3 . METHOD_2 ( ) . METHOD_3 ( ) ; try { if ( ! ( VAR_4 . METHOD_4 ( VAR_1 ) ) ) { return ; } synchronized ( VAR_4 . get ( VAR_1 ) ) { java.util.Map < org.ovirt.engine.core.compat.Guid , TYPE_1 > map = VAR_4 . get ( VAR_1 ) ; for ( org.ovirt.engine.core.compat.Guid VAR_5 : VAR_2 ) { map . METHOD_5 ( VAR_5 ) ; } } } finally { VAR_3 . METHOD_2 ( ) . METHOD_6 ( ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_2 ( ) ; VAR_2 = VAR_1 . METHOD_3 ( ) ; VAR_3 = VAR_1 . METHOD_4 ( ) ; VAR_4 = VAR_2 . get ( VAR_5 ) ; VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_5 ( STRING_1 ) ; VAR_6 . METHOD_6 ( VAR_4 . METHOD_7 ( ) ) ; VAR_8 = new TYPE_2 ( ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM VAR_2 = new org.ovirt.engine.core.common.businessentities.VM ( ) ; VAR_2 . METHOD_2 ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . METHOD_4 ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 . getId ( ) ) ; } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; TYPE_1 . setTitle ( VAR_1 . METHOD_2 ( ) ) ; TYPE_2 VAR_2 = TYPE_2 . instance ( ) ; if ( VAR_2 != null ) { METHOD_3 ( VAR_2 ) ; } TYPE_3 VAR_3 = TYPE_3 . instance ( ) ; if ( VAR_3 != null ) { VAR_4 . METHOD_4 ( VAR_3 . getValue ( ) ) ; } VAR_5 . METHOD_8 ( ) ; } 
public int METHOD_1 ( TYPE_1 < ? > VAR_1 , TYPE_1 < ? > VAR_2 ) { org.ovirt.engine.core.common.businessentities.VM VAR_3 = vms . get ( VAR_1 . METHOD_2 ( ) ) ; org.ovirt.engine.core.common.businessentities.VM VAR_4 = vms . get ( VAR_2 . METHOD_2 ( ) ) ; return VAR_5 . METHOD_1 ( VAR_3 , VAR_4 ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 , org.ovirt.engine.core.common.businessentities.VDS vds , org.ovirt.engine.core.compat.Guid VAR_2 ) { java.util.List < TYPE_2 > VAR_3 = VAR_4 . METHOD_2 ( VAR_2 ) ; if ( ( ! ( VAR_3 . isEmpty ( ) ) ) && ( ! ( METHOD_3 ( vds , VAR_3 ) ) ) ) { VAR_5 . error ( STRING_1 , vds . getName ( ) ) ; METHOD_4 ( VAR_1 , vds . getId ( ) , VAR_6 ) ; return false ; } return true ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) ) ; TYPE_2 . assertEquals ( VAR_1 . size ( ) , 2 ) ; TYPE_2 . METHOD_4 ( ( ( VAR_1 . get ( 0 ) . getId ( ) . equals ( STRING_2 ) ) || ( VAR_1 . get ( 0 ) . getId ( ) . equals ( STRING_3 ) ) ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { try ( TYPE_2 VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 , VAR_3 ) ) { VAR_4 = new TYPE_4 ( VAR_4 ) ; VAR_4 . METHOD_3 ( VAR_2 ) ; } catch ( TYPE_5 e ) { log . error ( ( STRING_2 + VAR_1 ) ) ; } } 
public TYPE_1 add ( TYPE_2 cluster ) { METHOD_1 ( cluster , STRING_1 , STRING_2 ) ; METHOD_2 ( VAR_1 class , cluster ) ; org.ovirt.engine.core.common.businessentities.StoragePool pool = TYPE_4 . METHOD_3 ( cluster , this ) ; org.ovirt.engine.core.common.businessentities.VDSGroup entity = map ( cluster , map ( pool ) ) ; return METHOD_4 ( VAR_2 , new TYPE_5 ( entity ) , new TYPE_6 < org.ovirt.engine.core.compat.Guid > ( VAR_3 , VAR_4 class ) ) ; } 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > list = new java.util.ArrayList < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS host : hosts ) { list . add ( new TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > ( host . getId ( ) , 1 ) ) ; } return list ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 , VAR_3 , VAR_4 ) ; TYPE_1 . METHOD_3 ( STRING_1 , VAR_1 . METHOD_4 ( VAR_3 , false ) ) ; TYPE_1 . assertEquals ( STRING_2 , VAR_4 , VAR_1 . METHOD_4 ( VAR_2 , VAR_3 , false ) ) ; } 
private void METHOD_1 ( TYPE_1 . ValidationResult VAR_1 ) { org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_2 ( ) ) . when ( VAR_2 ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( TYPE_2 . METHOD_4 ( ) ) . when ( VAR_2 ) . METHOD_5 ( ) ; TYPE_3 VAR_3 = org.mockito.Mockito . METHOD_6 ( VAR_4 class ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( VAR_2 ) . METHOD_7 ( TYPE_4 . any ( ) ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_9 ( TYPE_4 . any ( ) ) ) . thenReturn ( VAR_1 ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; command . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_1 ) ) . thenReturn ( vds ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) . METHOD_2 ( ) , aQuery ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( true , null ) ; TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_8 ( ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_9 ( VAR_2 ) ; org.mockito.Mockito . METHOD_7 ( cmd ) . METHOD_10 ( VAR_2 ) ; TYPE_1 . assertEquals ( VAR_3 , cmd . METHOD_11 ( ) ) ; } 
public org.ovirt.engine.core.common.businessentities.VDS METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = METHOD_2 ( ) . METHOD_3 ( VAR_1 , VAR_3 ) ; if ( ( VAR_2 == null ) || ( VAR_2 . isEmpty ( ) ) ) { return null ; } return TYPE_2 . instance ( ) . METHOD_4 ( VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_1 . METHOD_2 ( STRING_1 ) ; java.lang.String VAR_2 = VAR_1 . METHOD_3 ( ) ; int VAR_3 = VAR_2 . METHOD_4 ( STRING_2 ) ; if ( VAR_3 > 0 ) { VAR_2 = ( VAR_2 . METHOD_5 ( 0 , ( VAR_3 + 1 ) ) ) + STRING_1 ; VAR_1 . METHOD_6 ( VAR_2 ) ; } } 
public TYPE_1 list ( ) { java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.util.Map < java.lang.String , java.lang.String > > > VAR_1 = getEntity ( VAR_2 . Map class , VAR_3 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( METHOD_1 ( VAR_4 ) ) , null ) ; return METHOD_2 ( VAR_1 ) ; } 
protected void METHOD_1 ( boolean VAR_1 ) { VAR_2 = new TYPE_1 ( ) ; VAR_2 . setId ( new TYPE_2 ( ) ) ; VAR_2 . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_3 . get ( TYPE_3 . any ( ) ) ) . thenReturn ( VAR_2 ) ; } 
public static void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { VAR_3 = ( ( TYPE_1 . VdcQueryReturnValue ) ( returnValue ) ) . getReturnValue ( ) ; TYPE_2 . METHOD_2 ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_4 , new TYPE_3 ( VAR_5 ) , VAR_1 ) ; } 
public boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.VM vm , java.util.ArrayList < java.lang.String > VAR_1 ) { java.lang.Integer VAR_2 = VAR_3 < java.lang.Integer > METHOD_2 ( VAR_4 ) ; for ( TYPE_1 < org.ovirt.engine.core.common.businessentities.StorageDomain , java.lang.Integer > e : METHOD_3 ( vm ) . METHOD_4 ( ) ) { if ( ! ( METHOD_5 ( e . METHOD_6 ( ) , ( VAR_2 * ( e . getValue ( ) ) ) , VAR_1 ) ) ) { return false ; } } return true ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid vmId ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { return ( ( ( java.util.List < java.lang.String > ) ( source ) ) . size ( ) ) > 0 ; } return false ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( vmId ) , aQuery ) ; } 
private java.util.Map < java.lang.String , TYPE_1 < ? > > METHOD_1 ( java.util.Map < java.lang.String , TYPE_1 < ? > > map ) { map . put ( STRING_1 , VAR_1 class ) ; map . put ( STRING_2 , VAR_2 class ) ; map . put ( STRING_3 , VAR_3 class ) ; map . put ( STRING_4 , VAR_4 class ) ; return map ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String name ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) ; return VAR_1 . isEmpty ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( ( STRING_1 + name ) , VAR_3 . StorageDomain ) , aQuery ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < TYPE_1 > ( ) ; } TYPE_2 . METHOD_2 ( ( ( java.util.List < TYPE_1 > ) ( source ) ) , new TYPE_3 ( ) ) ; return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_4 ( ) , aQuery ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , TYPE_1 VAR_2 ) { if ( VAR_1 . METHOD_2 ( ) ) { org.ovirt.engine.core.compat.Guid VAR_3 = METHOD_3 ( ) ; org.ovirt.engine.core.common.businessentities . Network VAR_4 = METHOD_4 ( VAR_3 , ( VAR_1 . METHOD_5 ( ) . METHOD_6 ( ) ? METHOD_7 ( VAR_1 . METHOD_5 ( ) . getId ( ) ) : null ) , VAR_1 . METHOD_5 ( ) . getName ( ) ) ; if ( VAR_4 != null ) { VAR_2 . METHOD_8 ( VAR_4 . METHOD_9 ( ) ) ; } } return VAR_2 ; } 
protected void METHOD_1 ( int VAR_1 ) { while ( ( VAR_1 -- ) > 0 ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . METHOD_2 ( VAR_3 [ 2 ] ) ; METHOD_3 ( VAR_4 , VAR_5 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_6 } , cluster , null ) ; } } 
public void METHOD_1 ( java.util.List < org.ovirt.engine.core.compat.Guid > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { TYPE_1 parameters = new TYPE_1 ( false , VAR_2 ) ; parameters . METHOD_2 ( new java.util.ArrayList ( VAR_1 ) ) ; TYPE_2 . getInstance ( ) . METHOD_3 ( VAR_3 , parameters , TYPE_3 . METHOD_4 ( ) ) ; } 
public void METHOD_1 ( ) { final TYPE_1 iface = TYPE_2 . METHOD_2 ( ) ; VAR_1 . METHOD_3 ( iface , VAR_2 ) ; METHOD_4 ( VAR_3 , iface ) ; TYPE_3 . assertEquals ( VAR_2 , VAR_4 . getValue ( ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , false ) ; try { resource . METHOD_4 ( ) ; METHOD_5 ( STRING_1 ) ; } catch ( TYPE_1 VAR_3 ) { METHOD_6 ( VAR_3 . METHOD_7 ( ) ) ; assertEquals ( INT_1 , VAR_3 . METHOD_7 ( ) . getStatus ( ) ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( ) ; METHOD_4 ( true , null ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_5 ( VAR_2 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_7 ( TYPE_3 . any ( VAR_3 . Guid class ) ) ; TYPE_4 . assertEquals ( cmd . METHOD_8 ( ) , VAR_4 ) ; } 
protected boolean METHOD_1 ( TYPE_1 . Network network ) { return ( ( ( network != null ) && ( network . METHOD_2 ( ) ) ) && ( network . METHOD_3 ( ) . METHOD_4 ( ) ) ) && ( ! ( network . METHOD_3 ( ) . METHOD_5 ( ) ) ) ; } 
public void METHOD_1 ( ) { dao . METHOD_2 ( VAR_1 , VAR_2 ) ; java.util.List < TYPE_1 > VAR_3 = dao . METHOD_3 ( VAR_1 ) ; TYPE_2 . assertEquals ( 1 , VAR_3 . size ( ) ) ; TYPE_2 . METHOD_4 ( VAR_3 . METHOD_5 ( VAR_4 ) ) ; TYPE_2 . METHOD_6 ( VAR_3 . METHOD_5 ( VAR_5 ) ) ; } 
protected java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( int VAR_1 , int VAR_2 ) { java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; VAR_3 . add ( METHOD_2 ( VAR_1 ) ) ; VAR_3 . add ( METHOD_3 ( VAR_2 ) ) ; return VAR_3 ; } 
public void onSuccess ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { if ( VAR_1 != null ) { java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_2 = new java.util.ArrayList ( TYPE_1 . METHOD_1 ( new org.ovirt.engine.core.common.businessentities.StoragePool [ ] { VAR_1 } ) ) ; METHOD_2 ( VAR_2 ) ; } else { getModel ( ) . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } 
protected boolean METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 . DiskImage diskImage , TYPE_2 VAR_2 , org.ovirt.engine.core.common.businessentities.StorageDomain VAR_3 ) { if ( VAR_1 . METHOD_2 ( VAR_3 ) ) { return false ; } return super . METHOD_1 ( VAR_1 , diskImage , VAR_2 , VAR_3 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { switch ( command . getName ( ) ) { case STRING_1 : METHOD_2 ( ) ; break ; case STRING_2 : METHOD_3 ( ) ; break ; case STRING_4 : METHOD_5 ( ) ; break ; default : super . METHOD_1 ( command ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_2 ( STRING_1 ) ; TYPE_3 < java.lang.String , java.lang.String > VAR_2 = VAR_3 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) , VAR_1 ) ; TYPE_2 . METHOD_5 ( VAR_2 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_7 ( ) ) ; } 
protected TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > METHOD_1 ( org.ovirt.engine.core.common.queries.IdQueryParameters params ) throws java.lang.Exception { TYPE_1 < org.ovirt.engine.core.common.queries.IdQueryParameters > result = super . METHOD_1 ( params ) ; VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.when ( result . METHOD_3 ( ) ) . thenReturn ( VAR_1 ) ; return result ; } 
private static TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 client = new TYPE_1 ( new TYPE_2 ( ) ) ; int VAR_2 = VAR_3 < java.lang.Integer > getValue ( VAR_4 ) ; TYPE_3 VAR_5 = new TYPE_4 ( VAR_2 , false ) ; TYPE_5 parameters = client . METHOD_3 ( ) ; parameters . METHOD_4 ( VAR_6 , VAR_5 ) ; return client ; } 
protected void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_1 < TYPE_2 . DiskImage > VAR_2 ) { TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_3 = null ; for ( TYPE_3 < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_4 : METHOD_2 ( VAR_2 ) ) { VAR_3 = ( VAR_3 == null ) ? VAR_4 : VAR_3 . METHOD_4 ( VAR_4 ) ; } TYPE_4 . METHOD_5 ( VAR_1 , VAR_3 ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 ) ; vds . METHOD_2 ( INT_1 ) ; TYPE_1 host = TYPE_2 . map ( vds , ( ( TYPE_1 ) ( null ) ) ) ; METHOD_3 ( host . METHOD_4 ( ) ) ; assertEquals ( TYPE_3 . valueOf ( host . METHOD_4 ( ) ) , TYPE_3 . valueOf ( INT_2 ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_3 ( VAR_5 ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; TYPE_3 . assertEquals ( VAR_4 , VAR_1 . getStatus ( ) ) ; dao . METHOD_5 ( VAR_1 . getId ( ) , VAR_5 ) ; TYPE_1 VAR_6 = dao . METHOD_2 ( VAR_2 ) ; TYPE_3 . assertEquals ( VAR_5 , VAR_6 . METHOD_6 ( ) . METHOD_7 ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { try { VAR_1 . add ( STRING_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( null ) ; METHOD_4 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_2 ) ; java.util.List < TYPE_2 > hosts = METHOD_6 ( ) ; METHOD_7 ( hosts . get ( 0 ) . METHOD_8 ( ) ) ; METHOD_9 ( hosts ) ; } finally { VAR_1 . METHOD_10 ( ) ; } } 
public void METHOD_1 ( ) { java.util.List < org.ovirt.engine.core.common.businessentities . Network > result = dao . METHOD_2 ( VAR_1 ) ; TYPE_1 . METHOD_3 ( result ) ; for ( org.ovirt.engine.core.common.businessentities . Network VAR_2 : result ) { TYPE_2 . assertEquals ( VAR_1 , VAR_2 . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , METHOD_5 ( ) ) ; try { resource . get ( ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_1 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
protected void METHOD_1 ( java.lang.String VAR_1 , java.lang.Object VAR_2 ) throws java.lang.Exception { assertEquals ( STRING_1 , VAR_1 ) ; METHOD_2 ( VAR_3 , VAR_4 . IdQueryParameters class , new java.lang.String [ ] { STRING_2 } , new java.lang.Object [ ] { VAR_5 [ ( ( VAR_6 . length ) - 1 ) ] } , METHOD_3 ( ) , VAR_2 ) ; VAR_7 . METHOD_4 ( ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; TYPE_2 . VdcQueryReturnValue response = ( ( TYPE_2 . VdcQueryReturnValue ) ( returnValue ) ) ; if ( response . getSucceeded ( ) ) { model . METHOD_2 ( ( ( java.util.ArrayList < TYPE_3 > ) ( response . getReturnValue ( ) ) ) , false ) ; model . METHOD_3 ( STRING_1 ) ; } else { model . METHOD_3 ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_4 ( ) ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = dao . METHOD_2 ( VAR_2 ) . get ( 0 ) ; org.ovirt.engine.core.compat.Guid VAR_3 = VAR_1 . METHOD_3 ( ) ; if ( VAR_3 . equals ( VAR_4 ) ) { TYPE_2 . METHOD_4 ( STRING_1 ) ; } dao . METHOD_5 ( VAR_5 , VAR_6 , VAR_4 ) ; VAR_1 = dao . METHOD_2 ( VAR_2 ) . get ( 0 ) ; VAR_3 = VAR_1 . METHOD_3 ( ) ; TYPE_2 . assertEquals ( STRING_2 , VAR_4 , VAR_3 ) ; } 
public boolean METHOD_1 ( TYPE_1 source ) { return ( TYPE_2 . METHOD_2 ( source . METHOD_3 ( ) , target . METHOD_3 ( ) ) ) && ( ( ( TYPE_2 . METHOD_4 ( target . METHOD_5 ( ) ) ) || ( STRING_1 . equals ( target . METHOD_5 ( ) ) ) ) || ( source . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( target . METHOD_5 ( ) ) ) ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid id ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( id ) , aQuery ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( new TYPE_1 . ValidationResult ( VAR_1 ) ) . when ( VAR_2 ) . METHOD_2 ( TYPE_2 . any ( ) ) ; org.mockito.Mockito.doReturn ( TYPE_3 . METHOD_3 ( ) ) . when ( cmd ) . METHOD_4 ( ) ; TYPE_4 . METHOD_5 ( cmd . validate ( ) ) ; TYPE_4 . METHOD_6 ( cmd . getReturnValue ( ) . METHOD_7 ( ) . METHOD_8 ( TYPE_5 . name ( ) ) ) ; } 
protected void METHOD_1 ( ) { TYPE_1 . getParameters ( ) . METHOD_2 ( TYPE_1 . getVm ( ) . getId ( ) ) ; if ( ( ( TYPE_1 . getVm ( ) . METHOD_3 ( ) ) == ( VAR_1 ) ) || ( ! ( TYPE_2 . METHOD_4 ( TYPE_1 . getVm ( ) . METHOD_5 ( ) ) ) ) ) { METHOD_6 ( true ) ; TYPE_1 . METHOD_7 ( METHOD_8 ( ) ) ; } else { super . METHOD_1 ( ) ; } METHOD_9 ( ) ; } 
protected TYPE_1 METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = new TYPE_2 < > ( ) ; VAR_1 . put ( STRING_1 , STRING_2 ) ; return new TYPE_1 ( new TYPE_3 ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) , VAR_2 ) , VAR_3 , STRING_3 , STRING_4 , 2 , new java.util.HashMap < java.lang.String , java.lang.Object > ( ) , true , false , false , STRING_5 , VAR_1 , null ) ; } 
public void METHOD_1 ( ) { java.lang.String VAR_1 = STRING_1 ; java.lang.String VAR_2 = STRING_2 ; final long VAR_3 = TYPE_1 . METHOD_2 ( VAR_1 ) ; final long VAR_4 = ( ( TYPE_1 . METHOD_2 ( VAR_1 ) ) + ( VAR_5 ) ) - 1 ; METHOD_3 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 ) ; } 
private static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { TYPE_1 . METHOD_2 ( ) ; aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( returnValue != null ) { VAR_1 . METHOD_3 ( ( ( java.util.HashMap < TYPE_2 < TYPE_3 , java.lang.String > , java.lang.Object > ) ( returnValue ) ) ) ; } return VAR_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_4 ( ) , aQuery ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( ) ; METHOD_6 ( 1 ) ; METHOD_7 ( METHOD_8 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 , STRING_2 } , new java.lang.Object [ ] { VAR_3 , VAR_4 } , true , true ) ) ; METHOD_9 ( resource . METHOD_10 ( ) ) ; } 
private org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = VAR_1 . get ( TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ; if ( vds == null ) { throw new TYPE_2 ( java.lang.String . METHOD_3 ( STRING_1 , TYPE_1 . getParameters ( ) . METHOD_2 ( ) ) ) ; } if ( ( vds . getStatus ( ) ) != ( VAR_2 ) ) { METHOD_4 ( vds ) ; throw new TYPE_2 ( ) ; } return vds . getId ( ) ; } 
public java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.VDS > hosts , org.ovirt.engine.core.common.businessentities.VM vm , java.util.Map < java.lang.String , java.lang.String > parameters ) { java.util.List < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > VAR_1 = new java.util.ArrayList < TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : hosts ) { VAR_1 . add ( new TYPE_1 < org.ovirt.engine.core.compat.Guid , java.lang.Integer > ( vds . getId ( ) , ( INT_1 - ( vds . METHOD_2 ( ) ) ) ) ) ; } return VAR_1 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( METHOD_3 ( ) ) ; METHOD_4 ( 1 , true , getEntity ( 0 ) ) ; try { resource . METHOD_6 ( TYPE_1 . getModel ( 0 ) ) ; METHOD_7 ( STRING_1 ) ; } catch ( TYPE_2 VAR_2 ) { METHOD_8 ( VAR_2 ) ; } } 
public < TYPE_1 > TYPE_1 getEntity ( TYPE_2 < TYPE_1 > VAR_1 , TYPE_3 . VdcQueryType VAR_2 , TYPE_4 VAR_3 , java.lang.String VAR_4 , boolean VAR_5 , boolean VAR_6 ) { try { return METHOD_1 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_6 ) ; } catch ( java.lang.Exception e ) { return METHOD_2 ( VAR_1 , e , VAR_5 ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . get ( VAR_2 ) ) . thenReturn ( getVdsGroup ( ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( cmd ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( cmd . METHOD_4 ( ) ) . thenReturn ( VAR_3 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Boolean ) ( source ) ) . METHOD_2 ( ) : false ; } } ; METHOD_3 ( new TYPE_2 ( VAR_1 , METHOD_4 ( ) ) , aQuery ) ; } 
public boolean METHOD_1 ( ) { return ( ( ( ( METHOD_2 ( ) ) || ( METHOD_3 ( ) ) ) || ( getVm ( ) . METHOD_4 ( ) ) ) || ( ! ( METHOD_5 ( ) . METHOD_6 ( ) ) ) ) && ( METHOD_7 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 , true ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , VAR_1 . METHOD_5 ( ) ) ; TYPE_2 . METHOD_6 ( ( ( VAR_1 . METHOD_5 ( ) . METHOD_7 ( ) . getStatus ( ) ) == ( VAR_2 ) ) ) ; org.mockito.Mockito . METHOD_10 ( VAR_4 , org.mockito.Mockito . METHOD_11 ( ) ) . METHOD_12 ( VAR_1 . METHOD_4 ( ) , VAR_5 ) ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( java.util.List < TYPE_1 > VAR_1 ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ( VAR_1 . size ( ) ) ; for ( TYPE_1 host : VAR_1 ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . METHOD_2 ( host . getName ( ) ) ; vds . METHOD_3 ( host . getName ( ) ) ; hosts . add ( vds ) ; } return hosts ; } 
public void METHOD_1 ( ) { TYPE_1 disk = VAR_1 . get ( VAR_2 ) ; TYPE_2 . METHOD_2 ( disk ) ; java.lang.String name = disk . METHOD_3 ( ) ; TYPE_2 . assertEquals ( name , VAR_3 . METHOD_5 ( VAR_2 , VAR_4 . Disk ) ) ; } 
private static void METHOD_1 ( TYPE_1 VAR_1 , java.util.Map < java.lang.String , java.lang.Object > VAR_2 ) { java.lang.String VAR_3 = new java.lang.Integer ( VAR_1 . METHOD_2 ( ) ) . toString ( ) ; if ( ( ! ( TYPE_3 . isEmpty ( VAR_3 ) ) ) && ( ! ( VAR_3 . equals ( STRING_1 ) ) ) ) { VAR_2 . put ( VAR_4 , VAR_3 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , boolean VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vmId , VAR_3 , TYPE_2 . getName ( ) ) ; if ( ! VAR_1 ) { for ( TYPE_1 VAR_4 : VAR_2 ) { VAR_5 . METHOD_4 ( VAR_4 . getId ( ) ) ; } } else if ( VAR_2 . isEmpty ( ) ) { TYPE_3 . METHOD_5 ( vmId ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( host . getName ( ) ) . thenReturn ( TYPE_1 . instance ( ) . METHOD_3 ( ( ( VAR_3 ) * 2 ) ) ) ; TYPE_2 . METHOD_4 ( validator . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( VAR_4 ) ) ; } 
private void METHOD_1 ( ) { if ( ( getWindow ( ) ) != null ) { return ; } TYPE_1 model = TYPE_2 . METHOD_2 ( getEntity ( ) . METHOD_3 ( ) , getEntity ( ) , getEntity ( ) . METHOD_4 ( ) , ( ( java.util.ArrayList < TYPE_3 > ) ( METHOD_5 ( ) ) ) , getSelectedItem ( ) , this ) ; METHOD_6 ( model ) ; } 
public boolean equals ( java.lang.Object obj ) { if ( ( this ) == obj ) { return true ; } if ( ! ( obj instanceof TYPE_1 ) ) { return false ; } TYPE_1 other = ( ( TYPE_1 ) ( obj ) ) ; return ( TYPE_2 . equals ( VAR_1 , VAR_2 ) ) && ( TYPE_2 . equals ( VAR_3 , VAR_4 ) ) ; } 
protected void METHOD_1 ( ) { if ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( object . getId ( ) ) ) { object . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; } if ( TYPE_1 . isEmpty ( object . METHOD_4 ( ) ) ) { object . METHOD_5 ( TYPE_2 . instance ( ) . METHOD_6 ( INT_1 ) ) ; } } 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , TYPE_1 > VAR_1 = new java.util.HashMap < java.lang.String , TYPE_1 > ( ) ; for ( org.ovirt.engine.core.common.businessentities.network.Network network : VAR_2 ) { VAR_1 . put ( network . getName ( ) , new TYPE_1 ( network , this ) ) ; } METHOD_3 ( VAR_1 ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 value , TYPE_3 VAR_1 , java.lang.String id ) { VAR_1 . append ( METHOD_2 ( ) . id ( id ) ) ; for ( TYPE_6 < TYPE_2 , ? > VAR_2 : VAR_3 ) { METHOD_1 ( context , value , VAR_1 , VAR_2 ) ; } VAR_1 . METHOD_6 ( STRING_1 ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.common.businessentities . Disk disk ) { TYPE_1 VAR_1 = new TYPE_1 ( TYPE_2 . METHOD_2 ( ) . getId ( ) , TYPE_3 . getId ( ) , disk . getId ( ) , VAR_2 . Disk ) ; TYPE_4 . METHOD_4 ( VAR_1 ) ; } 
protected java.lang.Object [ ] METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) == null ) { return new java.lang.Object [ 0 ] ; } else { java.util.ArrayList < java.lang.Object > VAR_1 = new java.util.ArrayList < java.lang.Object > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StoragePool a : VAR_2 . Linq < org.ovirt.engine.core.common.businessentities.StoragePool > METHOD_3 ( METHOD_2 ( ) ) ) { VAR_1 . add ( a . getId ( ) ) ; } return VAR_1 . METHOD_4 ( new java.lang.Object [ ] { } ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; TYPE_1 VAR_2 = new TYPE_1 ( STRING_2 ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( VAR_2 ) ) < 0 ) ) ; TYPE_2 . METHOD_3 ( ( ( VAR_1 . METHOD_4 ( VAR_1 ) ) == 0 ) ) ; TYPE_2 . METHOD_3 ( ( ( VAR_2 . METHOD_4 ( VAR_1 ) ) > 0 ) ) ; } 
private static java.util.List < TYPE_1 > METHOD_1 ( boolean VAR_1 ) { java.util.List < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( java.lang.String TYPE_2 : VAR_3 ) { TYPE_1 VAR_4 = new TYPE_1 ( ) ; VAR_4 . METHOD_2 ( TYPE_2 ) ; VAR_2 . add ( VAR_4 ) ; } if ( VAR_1 ) { TYPE_1 VAR_5 = new TYPE_1 ( ) ; VAR_5 . METHOD_2 ( VAR_6 ) ; VAR_2 . add ( VAR_5 ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 VAR_1 = dao . METHOD_2 ( STRING_1 , VAR_2 ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( VAR_3 ) . METHOD_4 ( ) , VAR_1 . METHOD_4 ( ) ) ; TYPE_2 . assertEquals ( dao . METHOD_3 ( VAR_3 ) . getId ( ) , VAR_1 . getId ( ) ) ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { java.util.ArrayList < TYPE_1 > list = returnValue . getReturnValue ( ) ; java.util.ArrayList < TYPE_1 > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 VAR_3 : list ) { if ( ! ( VAR_3 . METHOD_1 ( ) . equals ( VAR_4 . METHOD_2 ( ) ) ) ) { VAR_2 . add ( VAR_3 ) ; } } setItems ( VAR_2 ) ; } 
public void METHOD_1 ( ) { TYPE_1 . Disk model = METHOD_2 ( ) ; model . METHOD_3 ( ) . METHOD_4 ( ) . METHOD_4 ( ) . get ( 0 ) . METHOD_5 ( null ) ; METHOD_6 ( METHOD_7 ( ) ) ; try { VAR_2 . add ( model ) ; METHOD_9 ( STRING_1 ) ; } catch ( TYPE_2 VAR_3 ) { METHOD_10 ( VAR_3 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public void onSuccess ( java.util.Map < java.lang.String , java.lang.String > VAR_2 ) { if ( ! ( VAR_2 . isEmpty ( ) ) ) { METHOD_1 ( true ) ; METHOD_2 ( true ) ; } else { METHOD_1 ( false ) ; METHOD_2 ( false ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < > ( ) ; VAR_1 . add ( STRING_1 ) ; org.mockito.Mockito . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_4 ( VAR_3 ) ) . thenReturn ( VAR_1 ) ; METHOD_6 ( 1 ) ; METHOD_7 ( METHOD_8 ( ) ) ; java.util.List < TYPE_2 . Network > VAR_5 = METHOD_10 ( ) ; TYPE_3 . METHOD_11 ( VAR_5 , new TYPE_4 ( ) ) ; METHOD_12 ( VAR_5 ) ; } 
public static < TYPE_1 > TYPE_2 < TYPE_1 > METHOD_1 ( TYPE_2 < TYPE_1 > source , TYPE_3 < ? super TYPE_1 > VAR_1 ) { java.util.List < TYPE_1 > list = new java.util.ArrayList < > ( ) ; for ( TYPE_1 item : source ) { if ( VAR_1 . METHOD_2 ( item ) ) { list . add ( item ) ; } } return list ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , TYPE_2 entity ) { TYPE_3 < java.lang.String > VAR_1 = TYPE_4 . METHOD_2 ( VAR_2 , VAR_3 ) ; TYPE_5 . METHOD_3 ( this , model , entity ) ; if ( VAR_1 . METHOD_4 ( STRING_1 ) ) { TYPE_5 . METHOD_5 ( model , entity ) ; } return model ; } 
public void onSuccess ( TYPE_2 . VdcQueryReturnValue returnValue ) { boolean VAR_1 = false ; java.util.List < TYPE_1 > VAR_2 = returnValue . getReturnValue ( ) ; if ( ( ( VAR_2 . size ( ) ) == 1 ) && ( ( VAR_2 . get ( 0 ) . METHOD_1 ( ) ) == ( VAR_3 ) ) ) { VAR_1 = true ; } METHOD_2 ( ) . setEntity ( VAR_1 ) ; METHOD_3 ( ) . setEntity ( ( ! VAR_1 ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_2 ( vm . getId ( ) , VAR_1 . METHOD_3 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_4 ( VAR_1 ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_3 ) . METHOD_5 ( ) ; } 
public java.util.Map < java.lang.String , java.lang.String > METHOD_1 ( org.ovirt.engine.core.compat . Version version , TYPE_1 type ) { java.util.Map < java.lang.String , java.lang.String > map = VAR_1 . get ( version ) . get ( type ) ; if ( map == null ) { map = new java.util.HashMap < > ( ) ; } else { map = new java.util.HashMap < > ( map ) ; } return map ; } 
public void METHOD_1 ( ) { final TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( null ) ; final org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_2 . setId ( VAR_3 ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; final TYPE_3 VAR_4 = VAR_1 . getStoragePoolId ( ) ; TYPE_4 . assertEquals ( VAR_3 , VAR_4 ) ; } 
protected TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid id , java.lang.String VAR_1 , TYPE_2 type ) { TYPE_1 VAR_2 = new TYPE_1 ( ) ; if ( id != null ) { VAR_2 . setId ( id . toString ( ) ) ; } VAR_2 . METHOD_3 ( VAR_1 ) ; VAR_2 . METHOD_4 ( type ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { java.lang.Object [ ] VAR_1 = TYPE_1 . METHOD_2 ( ) ; VAR_1 [ 1 ] = null ; java.util.Map < java.lang.String , java.lang.Object > VAR_2 = TYPE_1 . METHOD_3 ( VAR_1 ) ; TYPE_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) , VAR_1 , VAR_2 ) ; } 
public static void METHOD_1 ( TYPE_1 nic , java.util.List < org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface > VAR_1 ) { java.util.List < TYPE_2 > VAR_2 = nic . METHOD_2 ( ) ; if ( ( VAR_2 . size ( ) ) > 0 ) { for ( TYPE_2 VAR_3 : new java.util.ArrayList < TYPE_2 > ( VAR_2 ) ) { TYPE_3 . METHOD_3 ( VAR_3 , null , VAR_1 ) . METHOD_4 ( ) ; } } } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_1 . METHOD_3 ( VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StoragePool VAR_4 = new org.ovirt.engine.core.common.businessentities.StoragePool ( ) ; VAR_4 . METHOD_4 ( VAR_5 ) ; org.mockito.Mockito.when ( VAR_6 . get ( TYPE_1 . any ( ) ) ) . thenReturn ( VAR_4 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( ) , TYPE_3 . METHOD_7 ( VAR_8 ) ) ; } 
private void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_1 ) ; VAR_3 . METHOD_3 ( VAR_4 . Network ) ; VAR_3 . METHOD_4 ( TYPE_3 . METHOD_5 ( ) . getId ( ) ) ; VAR_3 . METHOD_6 ( VAR_2 . getId ( ) ) ; TYPE_4 . METHOD_7 ( VAR_3 ) ; } 
private void METHOD_1 ( int VAR_1 , int VAR_2 , boolean VAR_3 ) { TYPE_1 validation = new TYPE_1 ( METHOD_2 ( VAR_1 ) , VAR_2 , VAR_4 ) ; TYPE_2 . METHOD_3 ( validation . validate ( null ) . METHOD_5 ( ) , TYPE_3 . METHOD_6 ( TYPE_4 . METHOD_7 ( VAR_3 ) ) ) ; } 
public TYPE_1 METHOD_1 ( java.util.List < java.lang.String > VAR_1 ) { TYPE_2 VAR_2 = new TYPE_3 ( STRING_1 ) . METHOD_2 ( STRING_2 , VAR_1 ) . METHOD_4 ( ) ; java.util.Map < java.lang.String , java.lang.Object > response = new TYPE_5 ( this . client , VAR_2 ) . METHOD_5 ( STRING_2 ) . METHOD_6 ( java.lang.Object [ ] . class ) ; return new TYPE_1 ( response ) ; } 
public void METHOD_1 ( ) { TYPE_1 . METHOD_2 ( METHOD_3 ( ) , new java.lang.String [ 0 ] ) ; TYPE_1 . assertEquals ( 0 , VAR_1 . METHOD_4 ( ) ) ; TYPE_1 . assertEquals ( 0 , VAR_1 . size ( ) ) ; TYPE_1 . METHOD_5 ( VAR_1 . isEmpty ( ) ) ; TYPE_1 . METHOD_6 ( VAR_1 . METHOD_7 ( ) ) ; } 
public void onSuccess ( TYPE_2 cluster ) { if ( cluster != null ) { VAR_1 . add ( cluster ) ; } TYPE_3 . METHOD_1 ( VAR_1 , new TYPE_4 ( ) ) ; getModel ( ) . METHOD_2 ( getModel ( ) , VAR_2 , VAR_1 , vm . METHOD_3 ( ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( VAR_1 , new TYPE_1 ( TYPE_2 . getVm ( ) . getId ( ) , true ) , TYPE_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( ) , TYPE_2 . METHOD_5 ( ) ) ) ; TYPE_2 . METHOD_6 ( null ) ; TYPE_2 . METHOD_7 ( true ) ; } 
private void METHOD_1 ( ) { java.util.Map < java.lang.String , java.lang.String > VAR_1 = METHOD_2 ( ) . METHOD_3 ( METHOD_4 ( ) , VAR_2 , TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ; if ( VAR_1 != null ) { TYPE_1 . getVm ( ) . METHOD_6 ( ) . put ( VAR_3 . getId ( ) , VAR_1 ) ; } } 
public void onSuccess ( java.lang.Object model , java.lang.Object returnValue ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ) ( returnValue ) ) ; org.ovirt.engine.core.common.businessentities.StoragePool pool = VAR_1 . get ( 0 ) ; if ( pool != null ) { TYPE_2 . METHOD_1 ( ( ( org.ovirt.engine.ui.frontend.AsyncQuery ) ( model ) ) , pool . getId ( ) ) ; } } 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities . Network VAR_1 ) { switch ( VAR_1 . getStatus ( ) ) { case VAR_2 : return METHOD_1 ( ) . METHOD_2 ( ) ; case VAR_3 : return METHOD_1 ( ) . METHOD_3 ( ) ; default : return METHOD_1 ( ) . METHOD_3 ( ) ; } } 
protected void METHOD_1 ( ) { TYPE_1 . METHOD_3 ( ) ; if ( ( METHOD_2 ( ) ) == ( VAR_1 ) ) { if ( TYPE_1 . getParameters ( ) . METHOD_4 ( ) ) { TYPE_1 . METHOD_5 ( ) . METHOD_6 ( new TYPE_2 ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) , TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) ; } METHOD_9 ( ) ; } TYPE_1 . METHOD_11 ( true ) ; } 
public void METHOD_1 ( ) { final org.ovirt.engine.core.common.businessentities.VM vm = new org.ovirt.engine.core.common.businessentities.VM ( ) ; vm . METHOD_2 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( false ) . when ( VAR_2 ) . METHOD_3 ( TYPE_1 . any ( ) ) ; TYPE_2 . METHOD_4 ( VAR_2 . METHOD_5 ( vm ) , true , null ) ; } 
public void onSuccess ( java.util.List < org.ovirt.engine.core.common.businessentities.StoragePool > VAR_1 ) { org.ovirt.engine.core.common.businessentities.StoragePool VAR_2 = METHOD_1 ( VAR_1 ) ; TYPE_1 . METHOD_2 ( VAR_1 , new TYPE_2 ( ) ) ; VAR_1 . add ( 0 , null ) ; METHOD_3 ( ) . setItems ( VAR_1 ) ; METHOD_3 ( ) . setSelectedItem ( VAR_2 ) ; if ( ( METHOD_3 ( ) . getSelectedItem ( ) ) == null ) { METHOD_4 ( ) . METHOD_5 ( ) ; } } 
public void METHOD_1 ( ) { parameters . METHOD_2 ( TYPE_1 ) ; parameters . METHOD_3 ( null ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_1 ) . METHOD_5 ( TYPE_1 . getId ( ) ) ; command . METHOD_7 ( ) ; org.mockito.Mockito . METHOD_8 ( command , org.mockito.Mockito . METHOD_9 ( ) ) . METHOD_10 ( ) ; } 
protected boolean METHOD_1 ( ) { final java.util.List < java.lang.String > VAR_1 = TYPE_1 . getReturnValue ( ) . METHOD_2 ( ) ; final int VAR_2 = ( TYPE_1 . getParameters ( ) . METHOD_3 ( ) ) * ( TYPE_1 . METHOD_4 ( ) . METHOD_5 ( TYPE_1 . METHOD_6 ( ) ) . size ( ) ) ; final int VAR_3 = TYPE_1 . getParameters ( ) . METHOD_7 ( ) . METHOD_8 ( ) ; return TYPE_2 . METHOD_9 ( VAR_1 , VAR_2 , VAR_3 , METHOD_10 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.ArrayList < TYPE_2 > list = new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 a : ( ( java.util.ArrayList < TYPE_2 > ) ( returnValue ) ) ) { if ( ( a . METHOD_2 ( ) ) == ( VAR_1 ) ) { list . add ( a ) ; } } model . METHOD_3 ( model , list ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_2 ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 . Network network , TYPE_2 . Network entity ) { if ( METHOD_2 ( network ) ) { entity . METHOD_3 ( METHOD_4 ( network ) ) ; } return new TYPE_1 ( entity . METHOD_5 ( ) . getValue ( ) , entity ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , java.lang.String VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.String ) ( source ) ) : STRING_1 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_1 ( VAR_1 ) , aQuery ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( target ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_2 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( returnValue ) ) ; VAR_2 . put ( null , STRING_1 ) ; VAR_3 . put ( VAR_4 , VAR_2 . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_5 ) ; } 
public TYPE_1 getValue ( org.ovirt.engine.core.common.businessentities.StoragePool VAR_1 ) { METHOD_1 ( VAR_1 . getStatus ( ) ) ; switch ( VAR_1 . getStatus ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; case VAR_4 : case VAR_5 : case VAR_6 : return METHOD_3 ( ) . METHOD_6 ( ) ; case VAR_7 : return METHOD_3 ( ) . METHOD_7 ( ) ; default : break ; } return null ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; METHOD_4 ( ) ; } else if ( command == ( METHOD_5 ( ) ) ) { METHOD_6 ( ) ; } else if ( STRING_1 . equals ( command . getName ( ) ) ) { METHOD_8 ( ) ; } } 
public boolean equals ( java.lang.Object obj ) { boolean returnValue = super . equals ( obj ) ; if ( ( ( ! returnValue ) && ( obj != null ) ) && ( obj instanceof TYPE_1 ) ) { returnValue = ( ! ( STRING_1 . equals ( METHOD_2 ( ) ) ) ) && ( TYPE_2 . METHOD_1 ( METHOD_2 ( ) , ( ( TYPE_1 ) ( obj ) ) . METHOD_2 ( ) ) ) ; } return returnValue ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > hosts = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDS > ) ( result ) ) ; TYPE_1 < org.ovirt.engine.core.common.businessentities.VDS > VAR_1 = METHOD_1 ( ) ; hosts . add ( 0 , null ) ; VAR_1 . setItems ( hosts ) ; VAR_1 . setIsChangable ( true ) ; METHOD_2 ( true ) ; } 
public TYPE_1 getValue ( TYPE_2 item ) { org.ovirt.engine.core.common.businessentities.VM vm = item . METHOD_1 ( ) ; TYPE_3 VAR_1 = null ; if ( ( vm != null ) && ( vm . METHOD_2 ( ) ) ) { VAR_1 = VAR_2 . METHOD_3 ( ) ; } return new TYPE_1 ( METHOD_4 ( item ) , VAR_1 , VAR_3 , VAR_4 , vm . getStatus ( ) . toString ( ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 , java.lang.Object sender , TYPE_2 args ) { TYPE_3 VAR_2 = ( ( TYPE_3 ) ( args ) ) ; if ( STRING_1 . equals ( VAR_3 ) ) { if ( ( VAR_4 . getModel ( ) . METHOD_2 ( ) ) != null ) { if ( ( METHOD_3 ( ) . getTable ( ) ) != null ) { METHOD_3 ( ) . getTable ( ) . METHOD_4 ( VAR_5 ) ; } } } } 
protected boolean METHOD_1 ( ) { return TYPE_1 . METHOD_2 ( TYPE_2 . getVm ( ) , TYPE_2 . getReturnValue ( ) . METHOD_3 ( ) , TYPE_2 . getVm ( ) . getStoragePoolId ( ) , VAR_1 , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , METHOD_4 ( ) , true , false , true , true , null ) ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { return TYPE_2 . METHOD_2 ( new TYPE_1 ( ( ( TYPE_3 . getVdsGroup ( ) . getStoragePoolId ( ) ) == null ? null : TYPE_3 . getVdsGroup ( ) . getStoragePoolId ( ) . getValue ( ) ) , VAR_1 . StoragePool , TYPE_3 . METHOD_4 ( ) . METHOD_5 ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.StoragePool entity ) { org.ovirt.engine.core.common.queries.IdQueryParameters parameters = new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) ; model . METHOD_3 ( METHOD_4 ( VAR_1 . List class , VAR_2 class ) . map ( getEntity ( VAR_1 . ArrayList class , VAR_3 , parameters , model . getId ( ) ) , null ) ) ; return model ; } 
public void METHOD_1 ( ) { for ( TYPE_1 VAR_1 : VAR_2 ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ) ; } java.util.Map < java.lang.String , java.lang.Object > VAR_3 = TYPE_2 . METHOD_4 ( VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_5 ( VAR_3 ) . isEmpty ( ) ; java.util.Map < java.lang.String , java.lang.Object > VAR_5 = TYPE_2 . METHOD_6 ( VAR_6 , VAR_2 , VAR_4 ) ; TYPE_3 . METHOD_5 ( VAR_5 ) . METHOD_7 ( VAR_7 , VAR_8 ) ; } 
private void METHOD_1 ( ) { TYPE_1 returnValue = new TYPE_1 ( ) ; returnValue . METHOD_2 ( true ) ; returnValue . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.doReturn ( returnValue ) . when ( METHOD_4 ( ) ) . METHOD_5 ( TYPE_2 . METHOD_6 ( VAR_2 ) , TYPE_2 . any ( VAR_3 class ) ) ; org.mockito.Mockito.when ( VAR_4 . METHOD_8 ( VAR_5 ) ) . thenReturn ( METHOD_9 ( VAR_6 ) ) ; } 
private void METHOD_1 ( final org.ovirt.engine.core.compat.Guid VAR_1 , java.lang.String VAR_2 ) { TYPE_1 VAR_3 = new TYPE_1 ( true ) ; VAR_3 . METHOD_2 ( TYPE_2 . METHOD_3 ( ) . getStoragePoolId ( ) ) ; VAR_3 . METHOD_4 ( VAR_1 ) ; VAR_3 . METHOD_5 ( VAR_2 ) ; VAR_3 . METHOD_6 ( VAR_4 ) ; METHOD_7 ( VAR_5 , VAR_3 , TYPE_2 . METHOD_8 ( ) ) ; } 
public boolean equals ( java.lang.Object VAR_1 ) { if ( ( this ) == VAR_1 ) { return true ; } if ( ! ( VAR_1 instanceof TYPE_1 ) ) { return false ; } TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 ) ) ; return ( TYPE_2 . equals ( getId ( ) , VAR_2 . getId ( ) ) ) && ( TYPE_2 . equals ( METHOD_1 ( ) , VAR_2 . METHOD_1 ( ) ) ) ; } 
private java.lang.String METHOD_1 ( ) throws TYPE_1 { java.lang.String VAR_1 = null ; if ( args . METHOD_2 ( VAR_2 ) ) { try { VAR_1 = METHOD_3 ( args . get ( VAR_2 ) ) ; } catch ( java.lang.Exception e ) { throw new TYPE_1 ( VAR_3 , e . METHOD_4 ( ) ) ; } } else { VAR_1 = METHOD_5 ( STRING_1 , true ) ; } METHOD_6 ( VAR_1 ) ; return VAR_1 ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , org.ovirt.engine.ui.frontend.AsyncQuery VAR_2 ) { VAR_2 . converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter < TYPE_1 < java.lang.String > > ( ) { public TYPE_1 < java.lang.String > Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_3 ) { TYPE_1 < java.lang.String > VAR_4 = new TYPE_2 < java.lang.String > ( new TYPE_3 ( ) ) ; VAR_4 . METHOD_2 ( ( ( TYPE_4 < java.lang.String > ) ( returnValue ) ) ) ; return VAR_4 ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_5 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , VAR_2 ) ; } 
protected void METHOD_1 ( ) { super . METHOD_2 ( ) ; if ( ( TYPE_1 . getVm ( ) ) != null ) { METHOD_3 ( TYPE_1 . getVm ( ) . getStoragePoolId ( ) , TYPE_1 . METHOD_5 ( ) ) ; } METHOD_6 ( ) ; TYPE_1 . METHOD_7 ( true ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 VAR_2 ) { if ( ( VAR_2 . METHOD_2 ( ) ) && ( VAR_1 == ( VAR_3 ) ) ) { METHOD_3 ( ) . METHOD_4 ( TYPE_3 . METHOD_5 ( ) ) ; METHOD_3 ( ) . setIsChangable ( false ) ; METHOD_3 ( ) . setEntity ( false ) ; } else { METHOD_3 ( ) . setIsChangable ( METHOD_7 ( ) ) ; } } 
protected void METHOD_1 ( TYPE_1 VAR_1 , TYPE_1 VAR_2 ) { super . METHOD_1 ( VAR_1 , VAR_2 ) ; if ( VAR_2 != null ) { VAR_2 . METHOD_2 ( false ) ; VAR_2 . setItems ( null ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( ( VAR_2 instanceof TYPE_2 ) ? VAR_2 : null ) ) ; if ( VAR_4 != null ) { VAR_4 . METHOD_3 ( null ) ; } VAR_2 . METHOD_4 ( ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.network.Network VAR_1 = METHOD_2 ( STRING_1 ) ; org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface nic = METHOD_3 ( STRING_2 , VAR_1 ) ; nic . METHOD_4 ( ( ! ( VAR_1 . METHOD_5 ( ) ) ) ) ; METHOD_6 ( VAR_1 ) ; METHOD_7 ( nic ) ; TYPE_1 VAR_2 = METHOD_8 ( METHOD_9 ( nic ) ) ; METHOD_10 ( VAR_2 , VAR_1 ) ; } 
public TYPE_1 < java.lang.String > Convert ( java.lang.Object returnValue , org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 ) { TYPE_1 < java.lang.String > VAR_2 = new TYPE_2 ( new TYPE_3 ( ) ) ; VAR_2 . METHOD_1 ( ( ( TYPE_4 < java.lang.String > ) ( returnValue ) ) ) ; return VAR_2 ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( new java.util.HashMap < java.lang.Integer , TYPE_1 > ( ) { { put ( 0 , new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_2 ) ) ) ; } } ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( TYPE_2 . any ( ) , TYPE_2 . METHOD_6 ( ) ) ; VAR_2 . METHOD_7 ( VAR_4 ) ; } 
private TYPE_1 METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 = new TYPE_3 ( VAR_4 . METHOD_3 ( ) ) ; METHOD_5 ( ) . add ( VAR_3 . METHOD_6 ( this ) ) ; VAR_1 . add ( VAR_3 ) ; return VAR_1 ; } 
protected void METHOD_1 ( ) { java.lang.String VAR_1 = TYPE_1 . METHOD_2 ( ) . getId ( ) ; TYPE_1 . METHOD_4 ( ) . METHOD_5 ( VAR_1 ) ; log . METHOD_6 ( STRING_1 , VAR_1 ) ; if ( org.ovirt.engine.core.compat.Guid . METHOD_7 ( TYPE_1 . getParameters ( ) . METHOD_8 ( ) ) ) { log . METHOD_6 ( STRING_2 ) ; } else { TYPE_1 . METHOD_9 ( ) ; } TYPE_1 . METHOD_10 ( true ) ; } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDS vds = new org.ovirt.engine.core.common.businessentities.VDS ( ) ; vds . setId ( VAR_1 ) ; vds . METHOD_2 ( INT_1 ) ; TYPE_1 host = TYPE_2 . map ( vds , ( ( TYPE_1 ) ( null ) ) ) ; METHOD_3 ( host . METHOD_4 ( ) ) ; assertEquals ( host . METHOD_4 ( ) , TYPE_3 . valueOf ( INT_2 ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 ) { TYPE_3 VAR_4 = new TYPE_3 ( ) ; TYPE_4 VAR_5 = new TYPE_4 ( ) ; VAR_5 . METHOD_2 ( VAR_2 ) ; VAR_5 . METHOD_3 ( VAR_3 ) ; VAR_5 . METHOD_5 ( VAR_1 ) ; VAR_4 . METHOD_4 ( ) . add ( VAR_5 ) ; TYPE_1 VAR_6 = new TYPE_1 ( ) ; VAR_6 . METHOD_6 ( VAR_4 ) ; return VAR_6 ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StoragePool > ( ) ; } return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_1 ( STRING_1 , VAR_2 . StoragePool ) , aQuery ) ; } 
private boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) ; TYPE_2 VAR_3 = VAR_2 . METHOD_3 ( VAR_1 ) ; if ( ( VAR_3 == null ) || ( VAR_3 . getId ( ) . equals ( METHOD_4 ( ) . getId ( ) ) ) ) { return false ; } return true ; } 
public TYPE_1 < ? extends TYPE_2 , ? > METHOD_1 ( TYPE_3 source , org.ovirt.engine.ui.uicommonweb.UICommand VAR_1 ) { if ( VAR_1 == ( getModel ( ) . METHOD_2 ( ) ) ) { return VAR_3 . get ( ) ; } else { return super . METHOD_1 ( source , VAR_1 ) ; } } 
protected boolean METHOD_1 ( ) { for ( TYPE_1 VAR_1 : ( ( TYPE_2 < TYPE_1 > ) ( METHOD_2 ( ) ) ) ) { if ( ( ! ( VAR_1 . METHOD_3 ( ) . getEntity ( ) ) ) && ( ( VAR_1 . METHOD_4 ( ) ) != null ) ) { METHOD_5 ( new TYPE_3 ( STRING_1 ) ) ; return false ; } } return true ; } 
protected void METHOD_1 ( ) { if ( ( ! ( TYPE_1 . METHOD_2 ( ) ) ) && ( ( METHOD_5 ( ) . size ( ) ) > 0 ) ) { TYPE_2 . METHOD_3 ( TYPE_1 . METHOD_4 ( ) , METHOD_5 ( ) . get ( 0 ) . METHOD_6 ( ) . get ( 0 ) . getValue ( ) , TYPE_1 . METHOD_7 ( ) . METHOD_8 ( ) , TYPE_1 . METHOD_9 ( ) ) ; } } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( METHOD_3 ( VAR_1 , 0 ) ) ; METHOD_4 ( cmd ) ; METHOD_5 ( true , null ) ; TYPE_1 . METHOD_6 ( cmd . validate ( ) ) ; cmd . METHOD_1 ( ) ; org.mockito.Mockito . METHOD_8 ( cmd ) . METHOD_9 ( ) ; org.mockito.Mockito . METHOD_8 ( cmd ) . METHOD_10 ( VAR_2 ) ; org.mockito.Mockito . METHOD_8 ( cmd ) . METHOD_11 ( VAR_2 ) ; TYPE_1 . assertEquals ( cmd . METHOD_12 ( ) , VAR_3 ) ; } 
public void METHOD_1 ( ) { TYPE_1 cluster = METHOD_2 ( true ) ; TYPE_2 < org.ovirt.engine.core.compat.Guid > VAR_2 = TYPE_3 . METHOD_3 ( VAR_3 , VAR_4 ) ; TYPE_4 . METHOD_4 ( STRING_1 , ( ( VAR_5 . METHOD_5 ( cluster , VAR_2 ) . size ( ) ) == 2 ) ) ; TYPE_4 . METHOD_4 ( TYPE_3 . METHOD_3 ( STRING_2 , STRING_3 ) . equals ( VAR_5 . METHOD_5 ( cluster , VAR_2 ) ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { METHOD_2 ( VAR_1 ) ; TYPE_2 . METHOD_3 ( VAR_2 . METHOD_4 ( ) ) ; TYPE_3 . METHOD_5 ( ( ( VAR_1 . METHOD_6 ( ) ) != null ) ) ; TYPE_3 . METHOD_5 ( ( ( VAR_1 . METHOD_7 ( ) ) == null ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_3 ) . METHOD_9 ( VAR_4 . METHOD_10 ( ) ) ; TYPE_2 . assertEquals ( 0 , VAR_4 . getValue ( ) . size ( ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( VAR_1 , VAR_2 . IdQueryParameters class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 } , null ) ; METHOD_3 ( METHOD_4 ( ) ) ; try { resource . METHOD_6 ( ) ; METHOD_7 ( STRING_2 ) ; } catch ( TYPE_1 VAR_5 ) { METHOD_8 ( VAR_5 . METHOD_9 ( ) ) ; assertEquals ( INT_1 , VAR_5 . METHOD_9 ( ) . getStatus ( ) ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . getVm ( ) . METHOD_2 ( ) ) != null ) { TYPE_3 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , new TYPE_4 ( VAR_1 ) ) ; } else { TYPE_2 . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 entity = METHOD_2 ( ) ; TYPE_2 < TYPE_3 , TYPE_1 > VAR_1 = ( ( TYPE_2 < TYPE_3 , TYPE_1 > ) ( resource . METHOD_3 ( ) ) ) ; METHOD_4 ( VAR_1 ) ; METHOD_5 ( VAR_1 . METHOD_6 ( ) , entity ) ; } 
protected java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > > METHOD_1 ( boolean VAR_1 ) { java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > > VAR_2 = new java.util.HashMap < org.ovirt.engine.core.common.businessentities.VmTemplate , java.util.List < org.ovirt.engine.core.common.businessentities.DiskImage > > ( ) ; if ( VAR_1 ) { return VAR_2 ; } for ( int i = 0 ; i < ( VAR_3 . length ) ; i ++ ) { VAR_2 . put ( METHOD_2 ( i ) , new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.DiskImage > ( ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( VAR_1 == null ) { VAR_1 = new TYPE_1 ( ) ; } METHOD_2 ( ) . setEntity ( METHOD_3 ( VAR_1 . METHOD_2 ( ) ) ) ; METHOD_4 ( ) . setEntity ( METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) ; METHOD_5 ( ) . setEntity ( METHOD_3 ( VAR_1 . METHOD_5 ( ) ) ) ; } 
private boolean METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; TYPE_1 VAR_2 = VAR_3 . METHOD_3 ( ) ; return ( ( VAR_1 . METHOD_4 ( ) ) || ( ! ( TYPE_3 . equals ( VAR_1 . METHOD_5 ( ) , VAR_2 . METHOD_5 ( ) ) ) ) ) || ( ! ( TYPE_3 . equals ( VAR_1 . METHOD_6 ( ) , VAR_2 . METHOD_6 ( ) ) ) ) ; } 
protected boolean METHOD_1 ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain ) { boolean returnValue = false ; if ( storageDomain != null ) { returnValue = METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( storageDomain . getId ( ) ) . isEmpty ( ) ; if ( ! returnValue ) { addCanDoActionMessage ( VAR_1 ) ; } } return returnValue ; } 
public void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > parameters = new java.util.ArrayList < > ( ) ; for ( java.lang.Object VAR_1 : VAR_2 . METHOD_2 ( ) ) { TYPE_2 < TYPE_3 > VAR_3 = new TYPE_2 ( ) ; TYPE_3 VAR_4 = ( ( TYPE_3 ) ( VAR_1 ) ) ; VAR_3 . METHOD_3 ( VAR_4 ) ; parameters . add ( VAR_3 ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_5 , parameters ) ; METHOD_5 ( ) ; } 
public boolean METHOD_1 ( int VAR_1 , org.ovirt.engine.core.compat . Version version , TYPE_1 < TYPE_2 > VAR_2 , TYPE_3 VAR_3 ) { for ( TYPE_2 VAR_4 : VAR_2 ) { if ( ! ( VAR_5 . METHOD_2 ( VAR_1 , version ) . METHOD_3 ( new TYPE_4 ( VAR_4 , VAR_3 ) ) ) ) { return false ; } } return true ; } 
public void METHOD_1 ( ) { TYPE_1 value = new TYPE_1 ( ) ; value . METHOD_2 ( false ) ; value . METHOD_3 ( new TYPE_2 ( STRING_1 ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_3 . any ( ) , TYPE_3 . any ( ) ) ) . thenReturn ( value ) ; VAR_4 . METHOD_5 ( ) ; } 
public static TYPE_1 < TYPE_2 > METHOD_1 ( TYPE_1 < TYPE_2 > VAR_1 ) { final TYPE_1 < TYPE_2 > result = new java.util.ArrayList < > ( ) ; for ( TYPE_2 VAR_2 : VAR_1 ) { final TYPE_2 VAR_3 = TYPE_3 . METHOD_2 ( VAR_2 ) ; if ( VAR_3 != null ) { result . add ( VAR_3 ) ; } } return result ; } 
private void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( vm . getId ( ) , TYPE_2 . getName ( ) , TYPE_2 . getName ( ) ) ; for ( TYPE_1 VAR_2 : VAR_1 ) { java.util.Map VAR_3 = new java.util.HashMap ( ) ; VAR_3 . put ( VAR_4 , VAR_2 . METHOD_4 ( ) ) ; VAR_3 . put ( VAR_5 , VAR_2 . METHOD_4 ( ) ) ; METHOD_5 ( VAR_3 , VAR_2 , null ) ; } } 
private void METHOD_1 ( ) { if ( ( ( getSelectedItem ( ) ) == null ) || ( ( getWindow ( ) ) != null ) ) { return ; } TYPE_1 . METHOD_2 ( this , VAR_1 , getEntity ( ) . getId ( ) , getSelectedItem ( ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VDSGroup cluster = METHOD_2 ( ) ; java.lang.Integer VAR_1 = METHOD_3 ( ) . getSelectedItem ( ) ; if ( ( cluster == null ) || ( VAR_1 == null ) ) { return ; } java.util.List < TYPE_1 > VAR_2 = TYPE_2 . getInstance ( ) . METHOD_4 ( VAR_1 , cluster . METHOD_5 ( ) ) ; METHOD_6 ( VAR_2 ) ; } 
private boolean METHOD_1 ( ) { if ( ( METHOD_2 ( ) ) != null ) { java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_1 = METHOD_2 ( ) ; for ( org.ovirt.engine.core.common.businessentities.VmTemplate template : VAR_1 ) { if ( ( template != null ) && ( template . getId ( ) . equals ( VAR_3 ) ) ) { return true ; } } } return false ; } 
private java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( TYPE_1 VAR_1 ) { try { METHOD_2 ( VAR_2 , VAR_1 ) ; TYPE_2 [ ] hosts = VAR_3 . METHOD_3 ( VAR_1 . METHOD_4 ( ) , TYPE_2 [ ] . class ) ; return map ( TYPE_3 . METHOD_5 ( hosts ) ) ; } catch ( TYPE_6 e ) { METHOD_6 ( e ) ; } return null ; } 
public TYPE_1 . AuditLogType METHOD_1 ( ) { return TYPE_2 . getSucceeded ( ) ? ( TYPE_2 . METHOD_3 ( ) ) == ( VAR_4 ) ? VAR_5 : TYPE_2 . METHOD_2 ( ) ? VAR_2 : VAR_3 : VAR_6 ? VAR_7 : ( TYPE_2 . METHOD_4 ( ) . METHOD_5 ( ) ) == ( VAR_8 ) ? VAR_9 : VAR_10 ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object result ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( model ) ) ; java.util.Map < java.lang.String , java.lang.String > VAR_2 = ( ( java.util.Map < java.lang.String , java.lang.String > ) ( result ) ) ; if ( ! ( VAR_2 . isEmpty ( ) ) ) { VAR_1 . METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( true ) ; } else { METHOD_2 ( false ) ; METHOD_3 ( false ) ; } } 
private TYPE_1 METHOD_1 ( TYPE_1 VAR_1 , boolean VAR_2 , boolean VAR_3 , java.util.List < java.lang.String > VAR_4 , java.lang.String VAR_5 , TYPE_2 nic ) { if ( VAR_2 || VAR_3 ) { java.util.List < java.lang.String > VAR_6 = ( VAR_2 ) ? VAR_4 : VAR_1 . METHOD_2 ( ) ; TYPE_1 VAR_7 = METHOD_3 ( VAR_1 , VAR_5 , VAR_3 , VAR_2 , VAR_6 , nic . METHOD_4 ( ) ) ; return METHOD_8 ( METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_7 ) ) ; } return VAR_1 ; } 
public TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { if ( STRING_1 . equals ( VAR_1 ) ) { return new TYPE_3 ( VAR_3 class ) ; } else if ( STRING_2 . equals ( VAR_1 ) ) { return new TYPE_4 ( VAR_4 class ) ; } else if ( STRING_3 . equals ( VAR_1 ) ) { return new TYPE_3 ( VAR_5 class ) ; } return null ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { if ( ( aQuery.converterCallback ) == null ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source == null ) { return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.network.Network > ( ) ; } return source ; } } ; } org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public TYPE_1 METHOD_1 ( TYPE_2 < TYPE_3 > VAR_1 , TYPE_2 < TYPE_4 > VAR_2 , TYPE_2 < TYPE_5 < ? > > VAR_3 , java.lang.String VAR_4 , float VAR_5 , java.lang.String VAR_6 , java.lang.String VAR_7 , java.lang.String VAR_9 ) { return new TYPE_1 ( VAR_10 , VAR_11 , VAR_12 , VAR_1 , VAR_2 , VAR_3 , VAR_13 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 . getId ( ) ) ) ) { VAR_2 . put ( VAR_1 . getId ( ) , VAR_1 ) ; } METHOD_3 ( VAR_1 ) ; VAR_3 . METHOD_4 ( STRING_1 , VAR_1 . getId ( ) ) ; } 
public TYPE_1 getValue ( TYPE_2 VAR_1 ) { METHOD_1 ( VAR_1 . getStatus ( ) ) ; switch ( VAR_1 . getStatus ( ) ) { case VAR_2 : return METHOD_3 ( ) . METHOD_4 ( ) ; case VAR_3 : return METHOD_3 ( ) . METHOD_5 ( ) ; default : return METHOD_3 ( ) . METHOD_5 ( ) ; } } 
private boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; if ( TYPE_1 . equals ( vm . getStatus ( ) ) ) { return true ; } java.util.List < TYPE_2 > VAR_1 = ( ( METHOD_2 ( ) ) != null ) ? METHOD_2 ( ) : new java.util.ArrayList < TYPE_2 > ( ) ; for ( TYPE_2 nic : VAR_1 ) { if ( nic . METHOD_4 ( ) ) { return false ; } } return true ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 , VAR_2 , VAR_3 , INT_1 , 0 ) ; java.util.List < TYPE_1 > VAR_4 = new java.util.ArrayList < > ( ) ; VAR_4 . add ( VAR_1 ) ; org.mockito.Mockito.when ( VAR_6 . METHOD_3 ( VAR_1 . METHOD_4 ( ) ) ) . thenReturn ( VAR_4 ) ; boolean VAR_7 = command . METHOD_5 ( VAR_1 , null ) ; TYPE_2 . METHOD_6 ( VAR_7 ) ; } 
protected TYPE_1 METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { VAR_1 = new TYPE_1 ( ( ( java.lang.String ) ( TYPE_2 . getInstance ( ) . METHOD_2 ( VAR_2 ) ) ) , METHOD_3 ( ) . METHOD_4 ( ) ) ; } return VAR_1 ; } 
protected void METHOD_1 ( ) { boolean VAR_2 = ( METHOD_3 ( ) . getSelectedItem ( ) ) == null ; if ( VAR_2 ) { METHOD_4 ( ) . setIsChangable ( false ) ; return ; } if ( ! ( VAR_3 ) ) { METHOD_4 ( ) . setIsChangable ( false ) ; return ; } METHOD_4 ( ) . setIsChangable ( true ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( VAR_2 , cmd . METHOD_7 ( ) ) ; } 
protected org.ovirt.engine.core.compat.Guid METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 VAR_2 , org.ovirt.engine.core.compat.Guid VAR_3 ) { java.lang.String VAR_4 = TYPE_2 . METHOD_2 ( VAR_5 , TYPE_3 . METHOD_3 ( ) ) ; return super . METHOD_1 ( VAR_1 , VAR_2 . METHOD_4 ( ) , TYPE_3 . getParameters ( ) . METHOD_5 ( ) , VAR_4 , VAR_6 , VAR_3 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat . Version version ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < TYPE_1 > ) ( source ) ) : new java.util.ArrayList < TYPE_1 > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_2 ( version ) , aQuery ) ; } 
private TYPE_1 METHOD_1 ( final TYPE_2 < ? > command , final TYPE_3 VAR_1 ) { TYPE_1 result = TYPE_5 . METHOD_3 ( VAR_3 . log ) . METHOD_4 ( command , ( VAR_1 != null ? VAR_1 . METHOD_5 ( ) : null ) ) ; METHOD_6 ( command , result ) ; return result ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { TYPE_1 model = ( ( TYPE_1 ) ( target ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_1 = ( ( java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( returnValue ) ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VDSGroup > VAR_2 = TYPE_2 . getInstance ( ) . METHOD_1 ( VAR_1 , vm . METHOD_2 ( ) ) ; model . METHOD_3 ( model , VAR_3 , VAR_2 , vm . METHOD_4 ( ) ) ; METHOD_5 ( ) ; METHOD_6 ( ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 < org.ovirt.engine.core.compat.Guid , TYPE_2 < java.lang.Boolean , java.lang.Integer > > VAR_1 , org.ovirt.engine.core.compat.Guid VAR_2 ) { return METHOD_2 ( ) . addValue ( STRING_1 , org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) . addValue ( STRING_2 , VAR_2 ) . addValue ( STRING_3 , VAR_1 . METHOD_4 ( ) ) . addValue ( STRING_4 , VAR_1 . METHOD_5 ( ) . METHOD_5 ( ) ) . addValue ( STRING_5 , VAR_1 . METHOD_5 ( ) . METHOD_4 ( ) ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { if ( ( TYPE_2 . getVm ( ) . METHOD_2 ( ) ) != null ) { TYPE_3 . getInstance ( ) . METHOD_3 ( ) . METHOD_4 ( VAR_2 , new TYPE_4 ( TYPE_2 . getVm ( ) . METHOD_2 ( ) , VAR_1 ) ) ; } else { org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_5 ( ) . METHOD_6 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = TYPE_2 . METHOD_1 ( STRING_1 ) ; METHOD_2 ( VAR_1 ) ; METHOD_2 ( VAR_1 . METHOD_3 ( ) ) ; assertEquals ( 1 , VAR_1 . METHOD_3 ( ) . size ( ) ) ; assertEquals ( 0 , ( ( int ) ( VAR_1 . METHOD_3 ( ) . get ( 0 ) . METHOD_4 ( ) ) ) ) ; assertEquals ( STRING_2 , VAR_1 . METHOD_3 ( ) . get ( 0 ) . METHOD_5 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( STRING_1 ) ; VAR_1 . append ( STRING_2 ) ; VAR_1 . append ( STRING_3 ) ; VAR_1 . append ( STRING_4 ) ; java.util.Map < java.lang.String , TYPE_2 > VAR_2 = new TYPE_3 ( ) . METHOD_2 ( VAR_1 . toString ( ) , VAR_3 . HashMap class ) ; TYPE_4 . METHOD_3 ( VAR_2 ) ; TYPE_4 . assertEquals ( VAR_4 , VAR_2 . get ( STRING_5 ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , TYPE_1 VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_2 , new TYPE_2 ( VAR_1 ) , aQuery ) ; } 
private void METHOD_1 ( TYPE_1 id ) { try ( TYPE_2 VAR_1 = new TYPE_2 ( this . VAR_2 ) ) { this . VAR_3 . METHOD_2 ( id ) ; TYPE_3 VAR_4 = this . map . METHOD_2 ( id ) ; java.util.List < TYPE_1 > VAR_5 = this . VAR_6 . get ( VAR_4 . METHOD_3 ( ) . METHOD_4 ( ) ) ; if ( VAR_5 != null ) { VAR_5 . METHOD_2 ( id ) ; } } } 
private void METHOD_1 ( TYPE_1 e ) { switch ( VAR_1 . getStatus ( ) ) { case VAR_2 : break ; case VAR_3 : VAR_4 . METHOD_2 ( STRING_1 , VAR_1 . getId ( ) , VAR_1 . getName ( ) , e . METHOD_4 ( ) ) ; break ; default : VAR_4 . METHOD_5 ( STRING_1 , VAR_1 . getId ( ) , VAR_1 . getName ( ) , e . METHOD_4 ( ) ) ; } } 
public static java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > METHOD_1 ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 , TYPE_2 status ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_2 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain i : VAR_1 ) { if ( ( i . METHOD_2 ( ) ) == status ) { VAR_2 . add ( i ) ; } } return VAR_2 ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = ( ( TYPE_1 ) ( TYPE_2 . METHOD_2 ( ) ) ) ; TYPE_2 . METHOD_3 ( ) . METHOD_4 ( VAR_1 , ( ( int ) ( TYPE_2 . METHOD_5 ( ) ) ) ) ; METHOD_6 ( TYPE_2 . getParameters ( ) . METHOD_7 ( ) , true ) ; TYPE_2 . getReturnValue ( ) . METHOD_8 ( VAR_1 . getId ( ) ) ; TYPE_2 . METHOD_9 ( true ) ; } 
public void METHOD_1 ( ) { TYPE_1 < java.lang.Boolean , java.lang.String > VAR_1 = new TYPE_1 ( true , STRING_1 ) ; TYPE_1 < java.lang.Boolean , java.lang.String > VAR_2 = new TYPE_1 ( true , STRING_1 ) ; TYPE_1 < java.lang.Boolean , java.lang.String > VAR_3 = new TYPE_1 ( false , STRING_1 ) ; TYPE_2 . METHOD_2 ( VAR_1 . equals ( VAR_2 ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . equals ( VAR_3 ) ) ; } 
protected void METHOD_1 ( ) { org.ovirt.engine.core.compat.Guid id = TYPE_1 . getParameters ( ) . getId ( ) ; for ( TYPE_2 VAR_1 : org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . METHOD_3 ( id ) ) { TYPE_3 tempVar = new TYPE_3 ( VAR_1 ) ; tempVar . METHOD_4 ( false ) ; METHOD_5 ( VAR_2 , tempVar , TYPE_5 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) ) ) ; } TYPE_1 . METHOD_8 ( ) . METHOD_9 ( id ) ; TYPE_1 . METHOD_10 ( true ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.lang.Integer ) ( source ) ) . METHOD_2 ( ) : 1 ; } } ; METHOD_3 ( new TYPE_2 ( VAR_1 , METHOD_4 ( ) ) , aQuery ) ; } 
protected void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( VAR_3 ) ) . METHOD_5 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , ( ! ( iface . METHOD_5 ( ) ) ) , 0 , TYPE_1 . instance ( ) . METHOD_6 ( ) , METHOD_7 ( ) ) ; } 
private void METHOD_1 ( ) { java.util.ArrayList < TYPE_1 . VdcActionParametersBase > list = new java.util.ArrayList < TYPE_1 . VdcActionParametersBase > ( ) ; for ( org.ovirt.engine.core.common.businessentities.VDS vds : METHOD_2 ( ) ) { list . add ( new TYPE_2 ( vds . getId ( ) ) ) ; } org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_3 ( VAR_1 , list , new TYPE_3 ( ) { public void METHOD_4 ( TYPE_4 result ) { } } , null ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = new TYPE_1 ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.when ( VAR_5 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( TYPE_4 . METHOD_5 ( VAR_1 ) ) ; TYPE_5 . METHOD_6 ( cmd ) ; } 
private void METHOD_1 ( java.util.List < org.ovirt.engine.core.common.businessentities.StorageDomain > VAR_1 ) { org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_2 ( ) ; for ( org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain : VAR_1 ) { org.mockito.Mockito.when ( VAR_2 . METHOD_3 ( storageDomain . getId ( ) , VAR_3 ) ) . thenReturn ( storageDomain ) ; } } 
public void METHOD_1 ( ) { org.mockito.Mockito.when ( VAR_1 . METHOD_2 ( ) ) . thenReturn ( new java.util.HashMap < java.lang.Integer , TYPE_1 > ( ) { { put ( 0 , new TYPE_1 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_1 ) , org.ovirt.engine.core.compat.Guid . METHOD_3 ( STRING_2 ) ) ) ; } } ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( TYPE_2 . any ( ) , TYPE_2 . METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { TYPE_1 vds = VAR_1 . METHOD_2 ( ) . get ( VAR_2 ) ; TYPE_2 . METHOD_3 ( vds ) ; java.lang.String name = vds . getName ( ) ; TYPE_2 . METHOD_5 ( name . equals ( VAR_1 . METHOD_6 ( VAR_2 , VAR_3 . VDS ) ) ) ; } 
public void METHOD_1 ( ) { if ( VAR_8 . METHOD_3 ( ) . getValue ( ) ) { METHOD_4 ( VAR_9 ) ; METHOD_5 ( ) ; } else if ( VAR_10 . METHOD_3 ( ) . getValue ( ) ) { METHOD_4 ( VAR_11 ) ; } else if ( VAR_12 . METHOD_3 ( ) . getValue ( ) ) { METHOD_4 ( VAR_13 ) ; } METHOD_2 ( VAR_1 , VAR_2 , VAR_3 , VAR_4 , VAR_5 , VAR_6 , VAR_7 ) ; } 
private void METHOD_1 ( java.lang.String VAR_1 ) { if ( ! ( VAR_2 . METHOD_2 ( VAR_1 ) ) ) { org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > VAR_3 = new org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > ( ) ; VAR_3 . setEntity ( VAR_1 ) ; TYPE_1 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > > VAR_4 = new TYPE_2 < java.lang.String , org.ovirt.engine.ui.uicommonweb.models.EntityModel < java.lang.String > > ( STRING_1 , VAR_3 ) ; VAR_5 . add ( VAR_4 ) ; VAR_2 . put ( VAR_1 , VAR_4 ) ; } } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ) ( source ) ) : new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.StorageDomain > ( ) ; } } ; TYPE_2 VAR_1 = new TYPE_2 ( STRING_1 , VAR_2 . StorageDomain ) ; VAR_1 . METHOD_2 ( INT_1 ) ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_3 , VAR_1 , aQuery ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_7 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_8 ( TYPE_4 . METHOD_9 ( VAR_2 class ) ) ; } 
protected java.util.List < java.lang.String > METHOD_1 ( TYPE_1 object ) { java.util.List < java.lang.String > VAR_1 = super . METHOD_1 ( object ) ; java.lang.String VAR_2 = METHOD_2 ( ) . getEntity ( ) . getName ( ) ; for ( int i = 0 ; i < ( VAR_1 . size ( ) ) ; i ++ ) { if ( VAR_1 . get ( i ) . equals ( VAR_2 ) ) { VAR_1 . METHOD_4 ( i ) ; break ; } } return VAR_1 ; } 
private void METHOD_1 ( TYPE_2 VAR_1 ) { final TYPE_3 dao = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; final TYPE_4 domain = new TYPE_4 ( ) ; domain . METHOD_3 ( VAR_1 ) ; org.mockito.Mockito.when ( dao . get ( TYPE_5 . any ( VAR_3 . Guid class ) ) ) . thenReturn ( domain ) ; org.mockito.Mockito.doReturn ( dao ) . when ( command ) . METHOD_4 ( ) ; } 
public void METHOD_1 ( ) { VAR_1 . METHOD_2 ( VAR_2 ) ; VAR_3 . METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 ) . METHOD_5 ( VAR_4 ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 1 ) ) . METHOD_5 ( TYPE_1 . any ( ) ) ; org.mockito.Mockito . METHOD_4 ( VAR_3 , org.mockito.Mockito . METHOD_6 ( 0 ) ) . METHOD_5 ( TYPE_1 . METHOD_7 ( VAR_6 ) ) ; } 
public void onSuccess ( java.lang.Object model , java.lang.Object VAR_1 ) { java.util.HashMap < java.lang.Boolean , org.ovirt.engine.core.common.businessentities.VmTemplate > map = ( ( TYPE_2 . VdcQueryReturnValue ) ( VAR_1 ) ) . getReturnValue ( ) ; java.util.List < org.ovirt.engine.core.common.businessentities.VmTemplate > VAR_3 = new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VmTemplate > ( ) ; VAR_3 . add ( map . get ( true ) ) ; setItems ( VAR_3 ) ; } 
private TYPE_1 . AsyncQuery < TYPE_4 . VdcQueryReturnValue > METHOD_1 ( ) { return new TYPE_1 . AsyncQuery ( new TYPE_2 < TYPE_4 . VdcQueryReturnValue > ( ) { public void onSuccess ( TYPE_4 . VdcQueryReturnValue returnValue ) { METHOD_2 ( ( ( TYPE_3 ) ( returnValue . getReturnValue ( ) ) ) ) ; } } ) ; } 
public boolean METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 status ) { if ( ( ( VAR_1 . METHOD_2 ( ) ) != null ) && ( ( VAR_1 . METHOD_2 ( ) . getStatus ( ) ) == status ) ) { return true ; } return false ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( command == ( METHOD_2 ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_1 . METHOD_6 ( command . getName ( ) , STRING_1 ) ) { METHOD_7 ( ) ; } } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = org.mockito.Mockito . METHOD_2 ( VAR_2 class ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( validator ) . METHOD_3 ( TYPE_2 . any ( ) ) ; TYPE_3 . METHOD_4 ( validator . METHOD_5 ( TYPE_2 . METHOD_6 ( ) , TYPE_2 . any ( ) ) . METHOD_7 ( ) ) ; org.mockito.Mockito . METHOD_8 ( VAR_1 , org.mockito.Mockito . METHOD_9 ( VAR_4 ) ) . METHOD_10 ( TYPE_2 . any ( ) , TYPE_2 . any ( ) ) ; } 
public void METHOD_1 ( ) { if ( VAR_1 . METHOD_2 ( ) ) { TYPE_1 VAR_2 = METHOD_3 ( ) ; long VAR_3 = TYPE_2 . METHOD_4 ( ) ; if ( VAR_2 . METHOD_5 ( ) ) { METHOD_6 ( ) . METHOD_7 ( VAR_2 . METHOD_8 ( ) , VAR_3 ) ; METHOD_9 ( VAR_2 . METHOD_10 ( ) . METHOD_11 ( ) . map ( TYPE_3 : : METHOD_12 ) , VAR_3 ) ; } else { VAR_4 . METHOD_13 ( STRING_1 , VAR_1 . METHOD_14 ( ) ) ; } } } 
public void METHOD_1 ( final TYPE_1 object ) { super . METHOD_1 ( object ) ; VAR_2 . METHOD_3 ( true ) ; VAR_3 . METHOD_3 ( false ) ; VAR_4 . METHOD_3 ( false ) ; VAR_5 . METHOD_3 ( false ) ; VAR_6 . METHOD_4 ( VAR_7 ) ; VAR_6 . METHOD_5 ( ) . METHOD_6 ( ) . METHOD_7 ( VAR_8 ) ; METHOD_8 ( ) . METHOD_9 ( INT_1 , INT_2 ) ; } 
public void METHOD_1 ( TYPE_1 returnValue ) { TYPE_2 VAR_1 = ( ( TYPE_2 ) ( getWindow ( ) ) ) ; if ( ( returnValue != null ) && ( returnValue . getSucceeded ( ) ) ) { VAR_1 . METHOD_2 ( ) . METHOD_3 ( ( ( org.ovirt.engine.core.compat.Guid ) ( returnValue . METHOD_4 ( ) ) ) ) ; METHOD_5 ( VAR_1 ) ; } } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_2 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_2 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_3 . METHOD_3 ( ) ) ; METHOD_6 ( ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( VAR_3 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; VAR_1 . METHOD_3 ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( command ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( command . METHOD_8 ( VAR_1 . METHOD_9 ( ) ) ) ; TYPE_3 . METHOD_10 ( STRING_1 , command , VAR_4 ) ; } 
private void METHOD_1 ( boolean VAR_1 , TYPE_1 VAR_2 ) { TYPE_2 VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_3 ( VAR_1 ) ; if ( ! VAR_1 ) { VAR_4 . METHOD_4 ( new TYPE_3 ( VAR_2 , STRING_1 ) ) ; } org.mockito.Mockito.when ( VAR_5 . METHOD_5 ( TYPE_4 . METHOD_6 ( VAR_6 ) , TYPE_4 . any ( ) ) ) . thenReturn ( VAR_4 ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( METHOD_2 ( ) ) . when ( VAR_1 ) . METHOD_3 ( VAR_2 [ 1 ] ) ; METHOD_4 ( ) ; VAR_3 . METHOD_5 ( ) ; org.mockito.Mockito . METHOD_6 ( VAR_4 , org.mockito.Mockito . METHOD_7 ( 2 ) ) . METHOD_8 ( TYPE_1 . any ( ) , TYPE_1 . any ( ) , TYPE_1 . METHOD_9 ( ) ) ; } 
public void METHOD_1 ( TYPE_2 VAR_2 , TYPE_3 VAR_3 ) { org.mockito.Mockito.doReturn ( METHOD_3 ( ) ) . when ( VAR_2 ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_4 , VAR_5 ) ) . when ( VAR_3 ) . get ( VAR_4 ) ; org.mockito.Mockito.doReturn ( METHOD_6 ( VAR_6 , VAR_5 ) ) . when ( VAR_3 ) . get ( VAR_6 ) ; } 
private java.util.List < org.ovirt.engine.core.compat.Guid > METHOD_1 ( java.lang.Object result ) { if ( ! ( result instanceof java.lang.Object [ ] ) ) { VAR_1 . error ( STRING_1 ) ; return null ; } java.util.List < org.ovirt.engine.core.compat.Guid > VAR_2 = new TYPE_1 < org.ovirt.engine.core.compat.Guid > ( ) ; for ( java.lang.Object VAR_3 : ( ( java.lang.Object [ ] ) ( result ) ) ) { VAR_2 . add ( new org.ovirt.engine.core.compat.Guid ( VAR_3 . toString ( ) ) ) ; } return VAR_2 ; } 
public static TYPE_1 map ( TYPE_2 VAR_1 , TYPE_1 template ) { if ( template != null ) { return template ; } switch ( VAR_1 . METHOD_1 ( ) ) { case VAR_2 : return new TYPE_1 ( VAR_3 ) ; case VAR_4 : return new TYPE_1 ( VAR_5 ) ; default : return template ; } } 
public void METHOD_1 ( ) { super . METHOD_1 ( ) ; java.util.ArrayList < TYPE_1 . VdcQueryType > VAR_1 = new java.util.ArrayList < TYPE_1 . VdcQueryType > ( ) ; VAR_1 . add ( VAR_2 ) ; TYPE_2 VAR_3 = new TYPE_2 ( ) ; VAR_3 . METHOD_2 ( VAR_4 ) ; java.util.ArrayList < TYPE_3 > VAR_5 = new java.util.ArrayList < TYPE_3 > ( TYPE_4 . METHOD_3 ( new TYPE_3 [ ] { VAR_3 } ) ) ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_1 , VAR_5 , this , getModel ( ) ) ; } 
private void METHOD_1 ( ) { TYPE_1 model = new TYPE_1 ( this , VAR_1 ) ; model . setTitle ( org.ovirt.engine.ui.uicompat.ConstantsManager.getInstance ( ) . getConstants ( ) . METHOD_2 ( ) ) ; model . METHOD_3 ( STRING_1 ) ; model . METHOD_4 ( VAR_2 ) ; model . setEntity ( ( ( TYPE_2 ) ( getSelectedItem ( ) ) ) ) ; METHOD_5 ( model ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { METHOD_2 ( 1 ) ; METHOD_3 ( METHOD_4 ( VAR_1 , VAR_2 class , new java.lang.String [ ] { STRING_1 } , new java.lang.Object [ ] { VAR_3 [ 0 ] } , VAR_3 [ 0 ] ) ) ; METHOD_5 ( resource . METHOD_6 ( new TYPE_1 ( ) ) ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 model , org.ovirt.engine.core.common.businessentities.StoragePool entity ) { org.ovirt.engine.core.common.queries.IdQueryParameters parameters = new org.ovirt.engine.core.common.queries.IdQueryParameters ( new org.ovirt.engine.core.compat.Guid ( model . getId ( ) ) ) ; model . METHOD_3 ( METHOD_4 ( VAR_1 . List class , VAR_2 class ) . map ( getEntity ( VAR_1 . ArrayList class , VAR_3 , parameters , model . getId ( ) ) , null ) ) ; return model ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > result = dao . METHOD_2 ( java.lang.String . METHOD_3 ( STRING_1 , VAR_1 ) ) ; TYPE_2 . METHOD_4 ( result . isEmpty ( ) ) ; TYPE_2 . assertEquals ( VAR_1 , result . get ( 0 ) . getId ( ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId , org.ovirt.engine.core.compat.Guid VAR_1 , boolean VAR_2 , boolean VAR_3 , java.lang.String VAR_4 ) { return METHOD_2 ( new TYPE_3 ( VAR_1 , vmId ) , VAR_5 , ( VAR_3 ? VAR_6 : VAR_7 ) , VAR_8 , VAR_2 , false , VAR_4 , null , false ) ; } 
private void METHOD_1 ( final int VAR_1 ) { org.mockito.Mockito . METHOD_2 ( new TYPE_2 < TYPE_3 > ( ) { public TYPE_3 METHOD_3 ( TYPE_4 VAR_2 ) throws TYPE_5 { TYPE_3 result = METHOD_4 ( VAR_1 ) ; result . setId ( ( ( org.ovirt.engine.core.compat.Guid ) ( VAR_2 . METHOD_5 ( ) [ 0 ] ) ) ) ; return result ; } } ) . when ( VAR_3 ) . get ( TYPE_6 . any ( VAR_4 . Guid class ) ) ; } 
protected boolean METHOD_1 ( ) { boolean VAR_1 = true ; if ( VAR_2 . isEmpty ( ) ) { VAR_1 = METHOD_2 ( ) ; } else { VAR_1 = METHOD_3 ( ) ; } if ( VAR_1 && ( ( METHOD_4 ( ) . size ( ) ) != ( VAR_2 . size ( ) ) ) ) { log . error ( STRING_1 , VAR_3 . getId ( ) ) ; addCanDoActionMessage ( VAR_4 ) ; VAR_1 = false ; } return VAR_1 && ( METHOD_6 ( ) ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; params = new TYPE_1 ( quota ) ; command = org.mockito.Mockito . METHOD_3 ( new TYPE_2 ( params , null ) ) ; org.mockito.Mockito.doReturn ( VAR_1 ) . when ( command ) . METHOD_4 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_6 ( ) ; org.mockito.Mockito . METHOD_5 ( ) . when ( command ) . METHOD_7 ( ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = new org.ovirt.engine.core.common.businessentities.StorageDomain ( ) ; VAR_1 . METHOD_2 ( VAR_2 ) ; org.mockito.Mockito.doReturn ( VAR_3 ) . when ( command ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_3 . METHOD_4 ( TYPE_2 . any ( VAR_4 . Guid class ) , TYPE_2 . any ( VAR_4 . Guid class ) ) ) . thenReturn ( VAR_1 ) ; } 
private java.lang.String METHOD_1 ( java.lang.String VAR_1 , java.lang.String VAR_2 , java.lang.String value , java.lang.String VAR_3 ) { java.lang.String VAR_4 = TYPE_2 . METHOD_2 ( VAR_1 , VAR_2 , value ) ; TYPE_3 . METHOD_3 ( VAR_4 , TYPE_4 . METHOD_4 ( TYPE_5 . METHOD_5 ( VAR_3 ) ) ) ; return VAR_4 ; } 
public java.util.List < TYPE_1 > METHOD_1 ( ) { java.lang.Integer VAR_1 = VAR_2 < java.lang.Integer > METHOD_2 ( VAR_3 ) ; TYPE_2 VAR_4 = METHOD_3 ( ) . addValue ( STRING_1 , VAR_1 ) ; return METHOD_5 ( ) . METHOD_6 ( STRING_2 , VAR_5 . instance , VAR_4 ) ; } 
public org.ovirt.engine.core.compat.Guid METHOD_1 ( ) { if ( ( VAR_1 ) == null ) { java.util.List < TYPE_1 . DiskImage > VAR_2 = TYPE_2 . METHOD_2 ( TYPE_3 . getVm ( ) . METHOD_3 ( ) , VAR_3 ) ; org.ovirt.engine.core.common.businessentities.StorageDomain storageDomain = TYPE_4 . getInstance ( ) . METHOD_4 ( TYPE_3 . getStoragePoolId ( ) , VAR_2 ) ; if ( storageDomain != null ) { VAR_1 = storageDomain . getId ( ) ; } } return VAR_1 ; } 
public static java.util.List < TYPE_1 > METHOD_1 ( java.util.List < TYPE_2 > model ) { java.util.List < TYPE_1 > result = new java.util.ArrayList ( ( model != null ? model . size ( ) : 0 ) ) ; if ( model != null ) { for ( TYPE_2 source : model ) { result . add ( TYPE_3 . map ( source , null ) ) ; } } return result ; } 
public void METHOD_1 ( ) { diskImage . METHOD_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_2 . METHOD_6 ( ) ) . thenReturn ( VAR_3 ) ; VAR_4 = new TYPE_3 ( ) ; VAR_4 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ; VAR_5 = new TYPE_4 ( ) ; } 
public void METHOD_1 ( org.ovirt.engine.core.compat.Guid vmId ) { java.util.List < TYPE_1 > VAR_2 = METHOD_2 ( ) . METHOD_3 ( vmId ) ; if ( VAR_2 != null ) { for ( TYPE_1 iface : VAR_2 ) { METHOD_4 ( ) . METHOD_5 ( iface . METHOD_6 ( ) ) ; METHOD_2 ( ) . METHOD_7 ( iface . getId ( ) ) ; METHOD_8 ( ) . METHOD_7 ( iface . getId ( ) ) ; } } } 
public void METHOD_1 ( ) { TYPE_1 . DiskImage image = TYPE_2 . METHOD_2 ( ) ; image . METHOD_3 ( VAR_1 ) ; TYPE_3 parameters = TYPE_2 . METHOD_4 ( ) ; parameters . METHOD_5 ( image ) ; org.ovirt.engine.core.compat.Guid VAR_2 = org.ovirt.engine.core.compat.Guid . METHOD_6 ( ) ; METHOD_7 ( VAR_2 , parameters ) ; METHOD_8 ( ) ; METHOD_9 ( VAR_2 ) ; METHOD_10 ( ) ; METHOD_11 ( ) ; METHOD_12 ( ) ; METHOD_13 ( ) ; } 
private TYPE_1 METHOD_1 ( java.lang.String VAR_1 ) { TYPE_2 parameters = new TYPE_2 ( VAR_2 , VAR_3 ) ; parameters . METHOD_2 ( VAR_1 ) ; TYPE_3 . VdcQueryReturnValue result = VAR_4 . METHOD_3 ( VAR_5 , parameters ) ; return TYPE_1 . from ( result . getReturnValue ( ) ) ; } 
public void METHOD_1 ( ) { java.util.List < java.lang.String > VAR_2 = TYPE_3 . METHOD_2 ( VAR_1 . METHOD_3 ( STRING_1 ) ) ; TYPE_4 . METHOD_4 ( STRING_2 , VAR_2 . METHOD_5 ( STRING_2 ) ) ; TYPE_4 . METHOD_4 ( STRING_3 , VAR_2 . METHOD_5 ( STRING_3 ) ) ; TYPE_4 . METHOD_4 ( STRING_4 , ( ! ( VAR_2 . METHOD_5 ( STRING_4 ) ) ) ) ; } 
private TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { if ( VAR_2 . METHOD_2 ( VAR_1 . getId ( ) ) ) { throw new TYPE_3 ( VAR_3 ) ; } TYPE_1 VAR_4 = new TYPE_4 ( METHOD_3 ( VAR_1 ) , VAR_1 . METHOD_4 ( ) ) ; VAR_2 . put ( VAR_1 . getId ( ) , VAR_4 ) ; return VAR_4 ; } 
public void METHOD_1 ( java.lang.String VAR_1 , TYPE_1 < java.lang.String > VAR_2 , TYPE_1 < java.lang.String > value , boolean VAR_3 ) { if ( STRING_1 . equals ( VAR_1 ) ) { TYPE_3 VAR_4 = new TYPE_3 ( TYPE_3 . METHOD_3 ( TYPE_2 . METHOD_4 ( VAR_5 , CHAR_1 ) ) ) ; VAR_5 = TYPE_4 . METHOD_5 ( STRING_2 , VAR_4 ) ; } else { super . METHOD_1 ( VAR_1 , VAR_2 , value , VAR_3 ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.ui.frontend.AsyncQuery VAR_1 = new org.ovirt.engine.ui.frontend.AsyncQuery ( ) ; VAR_1 . METHOD_2 ( true ) ; VAR_2 = new org.ovirt.engine.ui.frontend.INewAsyncCallback ( ) { public void onSuccess ( java.lang.Object model , java.lang.Object VAR_3 ) { TYPE_1 . METHOD_3 ( ) ; } } ; frontend . METHOD_4 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = METHOD_2 ( STRING_1 ) ; TYPE_1 VAR_2 = METHOD_2 ( STRING_2 ) ; VAR_2 . METHOD_3 ( STRING_3 ) ; org.mockito.Mockito.doReturn ( new TYPE_3 ( VAR_3 , STRING_4 , STRING_5 , VAR_4 , null , null , TYPE_4 . METHOD_5 ( VAR_1 , VAR_2 ) ) ) . when ( cmd ) . getParameters ( ) ; METHOD_6 ( VAR_5 ) ; TYPE_5 . METHOD_7 ( cmd . validate ( ) ) ; } 
public static synchronized TYPE_1 getInstance ( ) { if ( ( TYPE_1 . instance ) == null ) { synchronized ( VAR_1 class ) { if ( ( TYPE_1 . instance ) == null ) { TYPE_1 . instance = new TYPE_1 ( ) ; } } } return TYPE_1 . instance ; } 
public void METHOD_1 ( ) throws java.lang.Exception { org.ovirt.engine.core.common.businessentities.network.VdsNetworkInterface iface = METHOD_2 ( ) ; METHOD_3 ( iface , false , iface . METHOD_4 ( ) , iface . METHOD_5 ( ) , iface . METHOD_6 ( ) , ( ( iface . METHOD_7 ( ) ) + 1 ) ) ; } 
public void METHOD_1 ( ) { cmd = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( VAR_1 ) , null ) ) ; METHOD_3 ( cmd ) ; METHOD_4 ( cmd , false ) ; cmd . METHOD_5 ( ) ; TYPE_3 . METHOD_6 ( cmd . getReturnValue ( ) . getSucceeded ( ) ) ; TYPE_3 . assertEquals ( cmd . METHOD_7 ( ) , VAR_2 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { if ( source != null ) { java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > list = ( ( java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ) ( source ) ) ; TYPE_1 . METHOD_2 ( list , new TYPE_2 ( ) ) ; return list ; } return new java.util.ArrayList < org.ovirt.engine.core.common.businessentities.VDSGroup > ( ) ; } } ; org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . runQuery ( VAR_1 , new TYPE_3 ( ) , aQuery ) ; } 
public boolean METHOD_1 ( ) { final int VAR_1 = ( VAR_2 ) / ( VAR_3 < java.lang.Integer > getValue ( VAR_4 ) ) ; for ( int i = 0 ; i < VAR_1 ; i ++ ) { if ( METHOD_3 ( ) ) { VAR_5 . METHOD_4 ( STRING_1 , host . getName ( ) , host . getId ( ) ) ; return true ; } else { METHOD_5 ( ) ; } } return false ; } 
public java.util.List < org.ovirt.engine.core.common.businessentities.VDS > METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , TYPE_1 status ) { java.util.List < org.ovirt.engine.core.common.businessentities.VDS > VAR_2 = METHOD_2 ( ) . METHOD_3 ( STRING_1 , VAR_3 . instance , METHOD_4 ( ) . addValue ( STRING_2 , VAR_1 ) . addValue ( STRING_3 , ( status != null ? status . getValue ( ) : null ) ) ) ; return METHOD_5 ( VAR_2 ) ; } 
public void METHOD_1 ( ) { METHOD_2 ( ) ; org.mockito.Mockito.when ( VAR_1 . get ( TYPE_1 . any ( VAR_2 . Guid class ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; org.mockito.Mockito.when ( VAR_1 . METHOD_4 ( TYPE_1 . METHOD_5 ( ) ) ) . thenReturn ( TYPE_2 . METHOD_3 ( ) ) ; METHOD_7 ( ) ; METHOD_8 ( ) ; METHOD_9 ( ) ; METHOD_10 ( ) ; METHOD_11 ( VAR_6 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = METHOD_2 ( INT_1 , 2 , 2 , 2 , 2 ) ; TYPE_2 . assertEquals ( INT_1 , VAR_1 . size ( ) ) ; TYPE_2 . METHOD_3 ( VAR_1 . METHOD_4 ( VAR_2 . METHOD_5 ( nic , null ) ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { java.util.List < java.lang.String > VAR_1 = new java.util.ArrayList < java.lang.String > ( ) ; VAR_1 . add ( STRING_1 ) ; TYPE_1 . METHOD_2 ( VAR_2 ) ; TYPE_1 . METHOD_3 ( VAR_2 . METHOD_4 ( STRING_2 ) ) . METHOD_5 ( VAR_1 ) ; resource . METHOD_6 ( METHOD_7 ( ) ) ; METHOD_8 ( true , true ) ; VAR_3 . METHOD_9 ( ) ; resource . get ( ) ; } 
private void METHOD_1 ( final TYPE_1 < TYPE_2 > . VAR_1 context ) { log . error ( STRING_1 , METHOD_2 ( ) ) ; METHOD_3 ( context . entity ) ; if ( ! ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( TYPE_1 . getParameters ( ) . METHOD_5 ( ) ) ) ) { METHOD_6 ( ( ( TYPE_1 . getParameters ( ) . METHOD_7 ( ) ) == ( VAR_2 ) ? VAR_3 : VAR_4 ) ) ; } METHOD_8 ( VAR_5 ) ; METHOD_9 ( VAR_5 ) ; } 
private boolean METHOD_1 ( TYPE_1 VAR_1 ) { org.ovirt.engine.core.compat.Guid VAR_2 = TYPE_2 . getParameters ( ) . METHOD_2 ( ) ; if ( VAR_2 == null ) { return ! ( TYPE_3 . METHOD_3 ( VAR_1 , TYPE_2 . getReturnValue ( ) . METHOD_5 ( ) ) ) ; } return ! ( TYPE_3 . METHOD_6 ( VAR_1 , TYPE_2 . getReturnValue ( ) . METHOD_5 ( ) , VAR_2 ) ) ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { if ( org.ovirt.engine.ui.frontend.Frontend . METHOD_2 ( VAR_1 ) ) { return ; } VAR_2 . log ( VAR_3 , ( STRING_1 + VAR_1 ) , VAR_1 ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_3 ( ) . METHOD_4 ( null ) ; org.ovirt.engine.ui.frontend.Frontend . METHOD_5 ( VAR_1 ) ; if ( VAR_4 . METHOD_6 ( ) ) { org.ovirt.engine.ui.frontend.Frontend . METHOD_7 ( null ) ; VAR_5 . onSuccess ( VAR_4 . getModel ( ) , null ) ; } } 
public void METHOD_1 ( ) { TYPE_1 cmd = dao . get ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_4 ( cmd ) ; dao . METHOD_5 ( METHOD_3 ( ) ) ; TYPE_1 VAR_2 = dao . get ( METHOD_3 ( ) ) ; TYPE_2 . METHOD_6 ( VAR_2 ) ; } 
protected void METHOD_1 ( TYPE_1 VAR_1 , java.lang.String VAR_2 , java.lang.String VAR_3 , int status ) { METHOD_1 ( VAR_1 , status ) ; TYPE_2 VAR_4 = ( ( TYPE_2 ) ( VAR_1 . METHOD_2 ( ) . getEntity ( ) ) ) ; assertEquals ( VAR_2 , VAR_4 . METHOD_4 ( ) ) ; assertEquals ( VAR_3 , VAR_4 . METHOD_5 ( ) ) ; } 
public static void METHOD_1 ( org.ovirt.engine.ui.frontend.AsyncQuery aQuery , org.ovirt.engine.core.compat.Guid VAR_1 ) { aQuery.converterCallback = new org.ovirt.engine.ui.frontend.IAsyncConverter ( ) { public java.lang.Object Convert ( java.lang.Object source , org.ovirt.engine.ui.frontend.AsyncQuery _asyncQuery ) { return source != null ? ( ( org.ovirt.engine.core.common.businessentities.VM ) ( source ) ) : null ; } } ; org.ovirt.engine.ui.frontend.Frontend . RunQuery ( VAR_2 , new org.ovirt.engine.core.common.queries.IdQueryParameters ( VAR_1 ) , aQuery ) ; } 
public void METHOD_1 ( ) { METHOD_3 ( ) ; org.mockito.Mockito . METHOD_4 ( ) . when ( VAR_2 ) . METHOD_5 ( METHOD_6 ( ) , true ) ; cmd . METHOD_1 ( ) ; TYPE_3 . assertEquals ( VAR_3 , cmd . METHOD_7 ( ) ) ; } 
protected void METHOD_1 ( ) { if ( ( getEntity ( ) ) != null ) { org.ovirt.engine.core.common.businessentities.VM vm = ( ( org.ovirt.engine.core.common.businessentities.VM ) ( getEntity ( ) ) ) ; setItems ( vm . METHOD_2 ( ) ) ; } else { setItems ( null ) ; } } 
public void METHOD_1 ( ) throws java.lang.Exception { TYPE_1 . Network model = new TYPE_1 . Network ( ) ; model . setId ( VAR_1 [ 0 ] . toString ( ) ) ; model . METHOD_2 ( VAR_2 [ 0 ] ) ; METHOD_3 ( METHOD_4 ( ) ) ; VAR_3 . METHOD_5 ( ) ; try { VAR_4 . add ( model ) ; METHOD_6 ( STRING_1 ) ; } catch ( TYPE_3 VAR_5 ) { METHOD_7 ( VAR_5 , STRING_2 , STRING_3 , STRING_4 ) ; } } 
public static TYPE_1 < java.lang.String > METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 < java.lang.String > VAR_2 = new TYPE_3 < > ( ) ; if ( VAR_1 == null ) { return VAR_2 ; } for ( java.lang.String VAR_3 : VAR_4 ) { java.util.List < java.lang.String > VAR_5 = VAR_1 . METHOD_2 ( VAR_3 ) ; if ( VAR_5 != null ) { VAR_2 . METHOD_3 ( VAR_5 ) ; } } return VAR_2 ; } 
private void METHOD_1 ( ) { for ( org.ovirt.engine.core.common.businessentities . VdsNetworkInterface iface : METHOD_2 ( ) . METHOD_3 ( ) ) { java.lang.String VAR_1 = iface . METHOD_4 ( ) ; if ( ( TYPE_1 . METHOD_5 ( VAR_1 ) ) && ( ! ( VAR_2 . METHOD_6 ( VAR_1 ) ) ) ) { VAR_3 . add ( VAR_1 ) ; } } } 
public TYPE_1 METHOD_1 ( TYPE_2 VAR_1 ) { TYPE_1 VAR_2 = VAR_1 . METHOD_2 ( ) ; if ( VAR_2 == ( VAR_3 ) ) { METHOD_3 ( VAR_1 ) ; } else if ( VAR_2 == ( VAR_4 ) ) { METHOD_4 ( VAR_1 . METHOD_5 ( ) ) ; } else { VAR_5 . error ( STRING_1 , VAR_1 . METHOD_6 ( ) , VAR_1 . METHOD_5 ( ) ) ; } return VAR_2 ; } 
public void METHOD_1 ( ) { METHOD_3 ( VAR_2 ) ; org.mockito.Mockito.when ( host . METHOD_4 ( ) ) . thenReturn ( VAR_3 ) ; TYPE_1 VAR_4 = new TYPE_1 ( VAR_5 ) ; TYPE_2 . METHOD_5 ( validator . METHOD_6 ( VAR_4 ) , TYPE_3 . METHOD_7 ( ) ) ; } 
protected TYPE_1 METHOD_1 ( ) { return super . METHOD_1 ( ) . METHOD_4 ( METHOD_5 ( ) , TYPE_2 . METHOD_3 ( ) ) . METHOD_6 ( VAR_2 , TYPE_2 . METHOD_3 ( ) ) . METHOD_2 ( VAR_3 , TYPE_2 . METHOD_7 ( ) . METHOD_8 ( ) ) . METHOD_6 ( VAR_4 , TYPE_2 . METHOD_3 ( ) ) ; } 
public void METHOD_1 ( TYPE_1 . DiskImage image , boolean VAR_1 , TYPE_2 VAR_2 ) { try { METHOD_2 ( image , VAR_1 , VAR_2 ) ; METHOD_3 ( image ) ; } catch ( TYPE_4 VAR_3 ) { VAR_4 . error ( STRING_1 , VAR_3 . METHOD_4 ( ) ) ; VAR_4 . METHOD_5 ( STRING_2 , VAR_3 ) ; throw new TYPE_5 ( VAR_5 , VAR_3 ) ; } } 
public void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.StorageDomain VAR_1 = METHOD_2 ( true ) ; VAR_1 . METHOD_3 ( VAR_2 ) ; VAR_1 . setId ( VAR_3 ) ; cmd . METHOD_4 ( ) ; TYPE_1 . METHOD_5 ( STRING_1 , cmd , VAR_4 ) ; org.mockito.Mockito . METHOD_6 ( VAR_5 , org.mockito.Mockito . METHOD_7 ( 1 ) ) . METHOD_8 ( TYPE_2 . METHOD_9 ( VAR_6 ) , TYPE_2 . any ( ) ) ; org.mockito.Mockito . METHOD_6 ( cmd , org.mockito.Mockito . METHOD_7 ( 0 ) ) . METHOD_10 ( ) ; } 
public void METHOD_1 ( ) { org.mockito.Mockito.doReturn ( true ) . when ( cmd ) . METHOD_4 ( ) ; org.mockito.Mockito.doReturn ( TYPE_1 . METHOD_5 ( ) ) . when ( cmd ) . METHOD_6 ( ) ; TYPE_2 . METHOD_7 ( cmd . validate ( ) ) ; TYPE_2 . METHOD_7 ( cmd . getReturnValue ( ) . METHOD_8 ( ) . isEmpty ( ) ) ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = new org.ovirt.engine.core.common.businessentities . Network ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 < java.lang.String > METHOD_4 ( VAR_3 ) ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) . getId ( ) ) ; VAR_1 . METHOD_8 ( true ) ; TYPE_1 . METHOD_9 ( ) . METHOD_10 ( VAR_1 ) ; } 
public void METHOD_1 ( ) { TYPE_1 VAR_1 = command . METHOD_2 ( ) . METHOD_3 ( ) ; org.mockito.Mockito.doReturn ( new TYPE_2 ( VAR_1 , VAR_1 . getId ( ) ) ) . when ( command ) . METHOD_4 ( TYPE_3 . any ( ) ) ; TYPE_4 . METHOD_5 ( command ) ; } 
public void METHOD_1 ( TYPE_1 context , TYPE_2 VAR_1 , final TYPE_3 model , TYPE_5 event , TYPE_6 < TYPE_3 > VAR_3 ) { VAR_4 . METHOD_1 ( context , VAR_1 , VAR_5 . METHOD_2 ( ( ( TYPE_7 ) ( model . getSelectedItem ( ) ) ) ) , event , new TYPE_6 < java.lang.String > ( ) { public void METHOD_3 ( java.lang.String value ) { if ( value != null ) { model . setSelectedItem ( VAR_6 . get ( value ) ) ; } } } ) ; } 
protected TYPE_1 METHOD_1 ( TYPE_1 VAR_1 ) { return super . METHOD_1 ( VAR_1 ) . append ( STRING_2 , METHOD_3 ( ) ) . append ( STRING_3 , METHOD_4 ( ) ) . append ( STRING_4 , METHOD_5 ( ) ) . append ( STRING_5 , METHOD_6 ( ) ) ; } 
public boolean METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities.VM vm = getEntity ( ) ; boolean VAR_1 = ( vm != null ) && ( ( ( ( vm . getStatus ( ) ) == ( VAR_2 ) ) || ( ( ( vm . getStatus ( ) ) == ( VAR_3 ) ) | ( ( vm . getStatus ( ) ) == ( VAR_4 ) ) ) ) || ( ( vm . getStatus ( ) ) == ( VAR_5 ) ) ) ; return ( VAR_6 ) && VAR_1 ; } 
private void METHOD_1 ( ) { org.ovirt.engine.core.common.businessentities . Network VAR_1 = new org.ovirt.engine.core.common.businessentities . Network ( ) ; VAR_1 . setId ( org.ovirt.engine.core.compat.Guid . METHOD_2 ( ) ) ; VAR_1 . METHOD_3 ( VAR_2 < java.lang.String > METHOD_4 ( VAR_3 ) ) ; VAR_1 . METHOD_5 ( VAR_4 ) ; VAR_1 . METHOD_6 ( TYPE_1 . METHOD_7 ( ) . getId ( ) ) ; VAR_1 . METHOD_8 ( true ) ; METHOD_9 ( ) . METHOD_10 ( VAR_1 ) ; } 
public void METHOD_1 ( ) throws TYPE_1 , TYPE_2 { org.mockito.Mockito.doReturn ( VAR_1 ) . when ( VAR_2 ) . METHOD_2 ( TYPE_3 . METHOD_3 ( VAR_3 . Integer class ) ) ; org.mockito.Mockito.doReturn ( VAR_4 ) . when ( VAR_2 ) . METHOD_4 ( TYPE_3 . METHOD_5 ( VAR_5 class ) ) ; VAR_2 . METHOD_6 ( VAR_6 , VAR_7 ) ; org.mockito.Mockito . METHOD_7 ( VAR_6 ) . METHOD_8 ( VAR_8 , VAR_1 ) ; org.mockito.Mockito . METHOD_7 ( VAR_6 ) . METHOD_8 ( VAR_9 , VAR_4 ) ; } 
public void METHOD_1 ( ) { command = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , new TYPE_3 ( TYPE_4 . METHOD_4 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) ) ) , null , null ) , null ) ) ; org.mockito.Mockito.doReturn ( vds ) . when ( command ) . METHOD_5 ( ) ; org.mockito.Mockito.doReturn ( null ) . when ( command ) . METHOD_6 ( ) ; TYPE_5 . METHOD_7 ( command . validate ( ) ) ; } 
private static void METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 . METHOD_2 ( new TYPE_2 ( org.ovirt.engine.core.compat.Guid . METHOD_3 ( ) , VAR_1 ) , VAR_2 , VAR_3 , VAR_4 . Collections < java.lang.String , java.lang.Object > METHOD_4 ( VAR_5 , STRING_1 ) , true , true , null , false ) ; } 
public void METHOD_1 ( ) throws TYPE_1 { TYPE_2 VAR_1 = new TYPE_2 ( this . METHOD_2 ( ) . METHOD_3 ( ) . METHOD_4 ( STRING_1 ) . METHOD_5 ( ) . METHOD_6 ( ) ) ; TYPE_2 VAR_2 = new TYPE_2 ( VAR_1 . METHOD_7 ( ) , STRING_2 ) ; TYPE_3 VAR_3 = new TYPE_3 ( VAR_2 . METHOD_8 ( ) , VAR_1 , 2 ) ; TYPE_4 . METHOD_9 ( STRING_3 , VAR_3 . METHOD_10 ( ) ) ; TYPE_4 . METHOD_11 ( STRING_4 , VAR_3 . METHOD_12 ( ) ) ; } 
public void onSuccess ( java.lang.Object target , java.lang.Object returnValue ) { java.lang.Object [ ] VAR_1 = ( ( java.lang.Object [ ] ) ( target ) ) ; TYPE_1 VAR_2 = ( ( TYPE_1 ) ( VAR_1 [ 0 ] ) ) ; TYPE_2 VAR_3 = ( ( TYPE_2 ) ( VAR_1 [ 1 ] ) ) ; VAR_2 . METHOD_2 ( VAR_3 , ( returnValue == null ) ) ; } 
public void METHOD_1 ( ) throws java.lang.Exception { super . METHOD_1 ( ) ; dao = VAR_1 . METHOD_3 ( ) ; VAR_2 = dao . get ( STRING_1 ) ; VAR_3 = dao . get ( TYPE_1 . toString ( ) ) ; VAR_4 = new TYPE_2 ( ) ; VAR_4 . METHOD_4 ( STRING_2 ) ; VAR_4 . METHOD_5 ( VAR_5 ) ; } 
public TYPE_1 . VdcActionParametersBase getParameters ( TYPE_2 model , TYPE_3 entity ) { TYPE_4 parameters = new TYPE_4 ( ) ; parameters . METHOD_1 ( TYPE_5 . map ( model . METHOD_3 ( ) ) ) ; parameters . METHOD_4 ( TYPE_5 . map ( model . getModel ( ) ) ) ; parameters . setId ( vmId ) ; parameters . METHOD_5 ( true ) ; return parameters ; } 
protected TYPE_1 METHOD_1 ( TYPE_2 VAR_1 , java.lang.String VAR_3 ) { TYPE_1 obj = METHOD_2 ( ) ; obj . put ( STRING_1 , VAR_1 . getId ( ) . toString ( ) ) ; obj . put ( STRING_2 , VAR_1 . METHOD_3 ( ) ) ; obj . put ( STRING_3 , VAR_1 . METHOD_4 ( ) ) ; obj . put ( STRING_4 , VAR_1 . METHOD_5 ( ) ) ; obj . put ( STRING_6 , VAR_3 ) ; return obj ; } 
public void METHOD_1 ( TYPE_1 VAR_1 ) { VAR_2 . add ( new TYPE_2 < TYPE_1 , java.lang.Integer > ( VAR_1 , 1 ) ) ; for ( int i = 0 ; i < ( VAR_3 . size ( ) ) ; i ++ ) { if ( VAR_3 . get ( i ) . getId ( ) . equals ( VAR_1 . getId ( ) ) ) { VAR_3 . METHOD_2 ( VAR_1 ) ; break ; } } METHOD_3 ( null , false ) ; METHOD_4 ( ) . METHOD_5 ( this , VAR_4 ) ; } 
public void METHOD_1 ( org.ovirt.engine.ui.uicommonweb.UICommand command ) { super . METHOD_1 ( command ) ; if ( TYPE_2 . equals ( command . getName ( ) ) ) { METHOD_3 ( ) ; } else if ( TYPE_3 . equals ( command . getName ( ) ) ) { METHOD_4 ( ) ; } } 
private void METHOD_1 ( TYPE_1 VAR_1 , TYPE_2 . VdcBllMessages VAR_2 ) { java.util.List < java.lang.String > VAR_3 = VAR_1 . validate ( ) ; TYPE_3 . METHOD_2 ( TYPE_4 . METHOD_3 ( STRING_1 , VAR_2 , VAR_3 ) , VAR_3 . METHOD_4 ( VAR_2 . name ( ) ) ) ; } 
private void METHOD_1 ( ) { METHOD_2 ( ) ; getWindow ( ) . METHOD_3 ( ) ; if ( ( VAR_1 ) != null ) { org.ovirt.engine.ui.frontend.Frontend.getInstance ( ) . METHOD_4 ( VAR_2 , new TYPE_1 ( VAR_1 , VAR_3 , false ) , new TYPE_2 ( ) { public void METHOD_5 ( TYPE_3 result ) { TYPE_4 VAR_4 = ( ( TYPE_4 ) ( result . METHOD_6 ( ) ) ) ; METHOD_7 ( VAR_5 , VAR_6 ) ; VAR_5 = null ; } } , this ) ; } } 
public static java.util.List < TYPE_1 > METHOD_1 ( final TYPE_2 VAR_1 , final java.util.List < java.lang.String > VAR_2 ) { java.util.List < TYPE_1 > VAR_3 = new java.util.ArrayList < > ( ) ; for ( java.util.List < java.lang.String > VAR_4 : TYPE_4 . METHOD_2 ( VAR_1 , VAR_2 ) ) { VAR_3 . METHOD_3 ( TYPE_3 . METHOD_4 ( VAR_1 , TYPE_4 . METHOD_5 ( VAR_4 , VAR_5 ) , true ) ) ; } return VAR_3 ; } 
private TYPE_1 METHOD_1 ( int VAR_1 ) { TYPE_1 cluster = new TYPE_1 ( ) ; cluster . setId ( VAR_2 [ VAR_1 ] ) ; cluster . METHOD_2 ( STRING_1 ) ; cluster . METHOD_3 ( true ) ; cluster . METHOD_4 ( false ) ; return cluster ; } 
public TYPE_1 addValue ( java.lang.String VAR_1 , java.lang.Object value ) { java.lang.Object VAR_2 = value ; if ( VAR_2 != null ) { if ( VAR_2 . METHOD_1 ( ) . METHOD_2 ( ) ) { VAR_2 = TYPE_2 . METHOD_3 ( VAR_2 ) ; } else if ( ( VAR_2 instanceof org.ovirt.engine.core.compat.Guid ) || ( VAR_2 instanceof org.ovirt.engine.core.compat . Version ) ) { VAR_2 = value . toString ( ) ; } } return super . addValue ( ( ( VAR_3 . METHOD_4 ( ) ) + VAR_1 ) , VAR_2 ) ; } 
private void METHOD_1 ( ) throws java.lang.Exception { VAR_1 = org.mockito.Mockito . METHOD_2 ( new TYPE_1 ( parameters , null ) ) ; org.mockito.Mockito.when ( VAR_1 . getParameters ( ) ) . thenReturn ( parameters ) ; org.mockito.Mockito.doReturn ( VAR_2 ) . when ( VAR_1 ) . METHOD_3 ( ) ; org.mockito.Mockito.when ( VAR_2 . get ( VAR_3 ) ) . thenReturn ( METHOD_4 ( VAR_3 ) ) ; } 
public TYPE_1 METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 ) { TYPE_1 VAR_2 = VAR_3 . get ( VAR_1 ) ; if ( VAR_2 != null ) { if ( ( storage . getSelectedItem ( ) ) == null ) { VAR_2 . METHOD_2 ( ( ( org.ovirt.engine.core.common.businessentities.StorageDomain ) ( storage . getSelectedItem ( ) ) ) ) ; } } return VAR_2 ; } 
protected TYPE_1 < TYPE_2 > METHOD_1 ( ) { TYPE_2 VAR_1 = new TYPE_2 ( VAR_2 , VAR_3 , VAR_4 , VAR_5 ) ; VAR_1 . METHOD_2 ( VAR_6 ) ; TYPE_1 < TYPE_2 > command = org.mockito.Mockito . METHOD_3 ( new TYPE_1 < TYPE_2 > ( VAR_1 ) { protected void METHOD_4 ( ) { } } ) ; return command ; } 
protected static boolean METHOD_1 ( org.ovirt.engine.core.compat.Guid VAR_1 , java.util.List < java.lang.String > VAR_2 ) { org.ovirt.engine.core.common.businessentities.VDSGroup VAR_3 = org.ovirt.engine.core.dal.dbbroker.DbFacade.getInstance ( ) . METHOD_2 ( ) . get ( VAR_1 ) ; boolean VAR_4 = VAR_3 != null ; if ( ! VAR_4 ) { VAR_2 . add ( TYPE_1 . toString ( ) ) ; } return VAR_4 ; } 
private void METHOD_1 ( ) { VAR_1 = false ; VAR_2 = false ; VAR_3 = false ; VAR_4 = false ; VAR_5 = false ; VAR_6 = STRING_1 ; VAR_7 = STRING_1 ; VAR_8 = false ; VAR_9 = new java.util.HashMap < > ( ) ; VAR_10 = new java.util.HashMap < > ( ) ; VAR_11 = new TYPE_3 ( STRING_2 , VAR_12 class ) ; VAR_13 = 0 ; } 
public static java.lang.String METHOD_1 ( java.util.List < TYPE_1 . Disk > VAR_1 ) { if ( VAR_1 . isEmpty ( ) ) { return null ; } final java.util.List < java.lang.String > VAR_2 = new java.util.ArrayList < > ( ) ; for ( TYPE_1 . Disk disk : VAR_1 ) { VAR_2 . add ( disk . METHOD_2 ( ) ) ; } return java.lang.String . METHOD_3 ( STRING_1 , VAR_2 ) ; } 
private void METHOD_1 ( TYPE_1 VAR_1 ) { java.util.Map < java.lang.String , java.lang.Object > VAR_2 = new java.util.HashMap < java.lang.String , java.lang.Object > ( ) ; VAR_2 . put ( VAR_3 , TYPE_3 . getName ( ) ) ; VAR_2 . put ( VAR_4 , VAR_1 . METHOD_2 ( ) . getName ( ) ) ; VAR_2 . put ( VAR_5 , TYPE_4 . METHOD_3 ( ) ) ; VAR_2 . put ( VAR_6 , java.lang.String.valueOf ( org.ovirt.engine.core.compat.Guid . METHOD_4 ( ) ) ) ; VAR_7 . add ( VAR_2 ) ; } 
public void METHOD_1 ( ) { java.util.List < TYPE_1 > VAR_1 = dao . METHOD_2 ( VAR_2 , VAR_3 , TYPE_2 . METHOD_3 ( VAR_4 ) ) ; TYPE_3 . METHOD_4 ( VAR_1 ) ; TYPE_3 . METHOD_5 ( VAR_1 . METHOD_6 ( VAR_5 ) ) ; for ( TYPE_1 VAR_6 : VAR_1 ) { TYPE_3 . assertEquals ( VAR_4 , VAR_6 . METHOD_8 ( ) ) ; } } 
